/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_dwv_dist_dwv_min_js"],{

/***/ "(app-pages-browser)/./node_modules/dwv/dist/dwv.min.js":
/*!******************************************!*\
  !*** ./node_modules/dwv/dist/dwv.min.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("!function(e,t){ true?module.exports=t(__webpack_require__(/*! konva */ \"(app-pages-browser)/./node_modules/konva/lib/index.js\"),__webpack_require__(/*! magic-wand-tool */ \"(app-pages-browser)/./node_modules/magic-wand-tool/dist/magic-wand.js\"),__webpack_require__(/*! jszip */ \"(app-pages-browser)/./node_modules/jszip/dist/jszip.min.js\")):0}(this,(function(e,t,n){return function(){\"use strict\";var i={654:function(e){e.exports=n},944:function(t){t.exports=e},324:function(e){e.exports=t}},r={};function o(e){var t=r[e];if(void 0!==t)return t.exports;var n=r[e]={exports:{}};return i[e](n,n.exports,o),n.exports}o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,{a:t}),t},o.d=function(e,t){for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var a={};o.r(a),o.d(a,{Annotation:function(){return Bi},AnnotationGroup:function(){return Jn},AnnotationGroupFactory:function(){return to},App:function(){return Io},AppOptions:function(){return vo},BLACK:function(){return C},ChangeSegmentColourCommand:function(){return Po},Circle:function(){return pi},ColourMap:function(){return f},DataElement:function(){return Ie},DeleteSegmentCommand:function(){return Lo},DicomCode:function(){return kt},DicomData:function(){return no},DicomParser:function(){return ke},DicomSRContent:function(){return Kr},DicomWriter:function(){return Qt},DrawController:function(){return $n},DrawLayer:function(){return yi},DrawShapeHandler:function(){return Di},Ellipse:function(){return Si},Geometry:function(){return it},Image:function(){return Un},Index:function(){return s},LayerGroup:function(){return Ki},MaskFactory:function(){return Fn},MaskSegment:function(){return pn},MaskSegmentHelper:function(){return To},MaskSegmentViewHelper:function(){return wo},Matrix33:function(){return b},NumberRange:function(){return tt},Orientation:function(){return gt},OverlayData:function(){return Do},PlaneHelper:function(){return Bn},Point:function(){return q},Point2D:function(){return F},Point3D:function(){return E},Protractor:function(){return hi},RGB:function(){return y},ROI:function(){return di},Rectangle:function(){return ci},RescaleSlopeAndIntercept:function(){return je},Scalar2D:function(){return Oo},Scalar3D:function(){return Ao},ScrollWheel:function(){return Hn},Size:function(){return Ze},Spacing:function(){return nt},Tag:function(){return he},TagValueExtractor:function(){return Lt},ToolConfig:function(){return Co},ToolboxController:function(){return lr},Vector3D:function(){return w},View:function(){return Nn},ViewConfig:function(){return yo},ViewController:function(){return Gn},ViewLayer:function(){return Xi},WindowLevel:function(){return u},WriterRule:function(){return At},addTagsToDictionary:function(){return _},buildMultipart:function(){return j},createImage:function(){return En},createMaskImage:function(){return qn},createView:function(){return Vn},customUI:function(){return ki},decoderScripts:function(){return fr},defaultPresets:function(){return d},defaults:function(){return xi},getDefaultDicomSegJson:function(){return Rn},getDicomSRContentItem:function(){return $r},getDwvVersion:function(){return Pe},getElementsFromJSONTags:function(){return Bt},getEllipseIndices:function(){return gi},getLayerDetailsFromEvent:function(){return Zi},getMousePoint:function(){return Wi},getOrientationName:function(){return Dt},getPixelDataTag:function(){return ye},getRectangleIndices:function(){return ui},getReverseOrientation:function(){return be},getSRContent:function(){return Jr},getTagFromKey:function(){return ge},getTouchPoints:function(){return zi},getTypedArray:function(){return Me},getUID:function(){return xt},hasDicomPrefix:function(){return we},i18n:function(){return U},isEqualRgb:function(){return v},labToUintLab:function(){return I},logger:function(){return c},luts:function(){return D},precisionRound:function(){return G},srgbToCielab:function(){return L},toolList:function(){return Mi},toolOptions:function(){return Qi}});class s{#e;constructor(e){if(!e||void 0===e)throw new Error(\"Cannot create index with no values.\");if(0===e.length)throw new Error(\"Cannot create index with empty values.\");if(!e.every((function(e){return!isNaN(e)})))throw new Error(\"Cannot create index with non number values.\");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return\"(\"+this.#e.toString()+\")\"}getValues(){return this.#e.slice()}canCompare(e){return!!e&&this.length()===e.length()}equals(e){if(!this.canCompare(e))return!1;for(let t=0,n=this.length();t<n;++t)if(this.get(t)!==e.get(t))return!1;return!0}compare(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)this.get(n)!==e.get(n)&&t.push(n);return t}add(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)t.push(this.get(n)+e.get(n));return new s(t)}getWithNew2D(e,t){const n=[e,t];for(let e=2,t=this.length();e<t;++e)n.push(this.get(e));return new s(n)}}class l{#t;#n;#i;#r;constructor(e,t){if(this.#t=e,this.#n=e.isID(),this.#i=Math.pow(2,t),!this.#n){this.#r=new Float32Array(this.#i);for(let e=0;e<this.#i;++e)this.#r[e]=this.#t.apply(e)}}getRSI(){return this.#t}getLength(){return this.#i}getValue(e){return this.#n?e:this.#r[e]}}const c={levels:{TRACE:0,DEBUG:1,INFO:2,WARN:3,ERROR:4},level:3,trace:function(e){this.level<=this.levels.TRACE&&console.trace(e)},debug:function(e){this.level<=this.levels.DEBUG&&console.debug(e)},info:function(e){this.level<=this.levels.INFO&&console.info(e)},warn:function(e){this.level<=this.levels.WARN&&console.warn(e)},error:function(e){this.level<=this.levels.ERROR&&console.error(e)}};class u{center;width;constructor(e,t){t<1&&(c.warn(\"Using minimum window width since input is not valid: \"+t),t=1),this.center=e,this.width=t}equals(e){return null!=e&&this.center===e.center&&this.width===e.width}}const d={CT:{mediastinum:new u(40,400),lung:new u(-500,1500),bone:new u(500,2e3),brain:new u(40,80),head:new u(90,350)}};class h{#o;#a=0;#s=0;#l=255;#c=null;#u=null;#d=null;#h=null;constructor(e){this.#o=e,this.#S()}getWindowLevel(){return this.#o}#S(){const e=this.#o.center,t=this.#o.width,n=e+this.#a;this.#c=n-.5-(t-1)/2,this.#u=n-.5+(t-1)/2,this.#d=(this.#l-this.#s)/(t-1),this.#h=(-(n-.5)/(t-1)+.5)*(this.#l-this.#s)+this.#s}setSignedOffset(e){this.#a=e,this.#S()}apply(e){return e<=this.#c?this.#s:e>this.#u?this.#l:e*this.#d+this.#h}}class S{#g;#p;#r;#m=0;#f=!0;constructor(e,t,n){if(this.#g=e,t){const e=this.#g.getLength();this.#m=e/2}else this.#m=0;this.#f=n}getVoiLut(){return this.#p}getModalityLut(){return this.#g}setVoiLut(e){if(this.#p=e,this.#p.setSignedOffset(this.#g.getRSI().getSlope()*this.#m),this.#f){const e=this.#g.getLength();this.#r=new Uint8ClampedArray(e);for(let t=0;t<e;++t)this.#r[t]=this.#p.apply(this.#g.getValue(t))}}getValue(e){return this.#f?this.#r[e+this.#m]:Math.floor(this.#p.apply(e+this.#m))}}function g(e){const t=[];for(let n=0;n<256;++n)t.push(e(n));return t}function p(e){return e}function m(e){return 255-e}class f{red;green;blue;constructor(e,t,n){this.red=e,this.green=t,this.blue=n}}const D={plain:{red:g(p),green:g(p),blue:g(p)},invPlain:{red:g(m),green:g(m),blue:g(m)},rainbow:{blue:[0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255,247,239,231,223,215,207,199,191,183,175,167,159,151,143,135,127,119,111,103,95,87,79,71,63,55,47,39,31,23,15,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,16,24,32,40,48,56,64,72,80,88,96,104,112,120,128,136,144,152,160,168,176,184,192,200,208,216,224,232,240,248,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,251,249,247,245,243,241,239,237,235,233,231,229,227,225,223,221,219,217,215,213,211,209,207,205,203,201,199,197,195,193,192,189,186,183,180,177,174,171,168,165,162,159,156,153,150,147,144,141,138,135,132,129,126,123,120,117,114,111,108,105,102,99,96,93,90,87,84,81,78,75,72,69,66,63,60,57,54,51,48,45,42,39,36,33,30,27,24,21,18,15,12,9,6,3],red:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,62,60,58,56,54,52,50,48,46,44,42,40,38,36,34,32,30,28,26,24,22,20,18,16,14,12,10,8,6,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255]},hot:{red:g((function(e){const t=3*e;return t>255?255:t})),green:g((function(e){const t=256/3;let n=0;return e>=t&&(n=3*(e-t),n>255)?255:n})),blue:g((function(e){const t=256/3;let n=0;return e>=2*t&&(n=3*(e-2*t),n>255)?255:n}))},hot_iron:{red:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,255],blue:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156,160,164,168,172,176,180,184,188,192,196,200,204,208,212,216,220,224,228,232,236,240,244,248,252,255]},pet:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,128,126,124,122,120,118,116,114,112,110,108,106,104,102,100,98,96,94,92,90,88,86,84,82,80,78,76,74,72,70,68,66,64,63,61,59,57,55,53,51,49,47,45,43,41,39,37,35,33,31,29,27,25,23,21,19,17,15,13,11,9,7,5,3,1,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,252,255],blue:[0,1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,255,252,248,244,240,236,232,228,224,220,216,212,208,204,200,196,192,188,184,180,176,172,168,164,160,156,152,148,144,140,136,132,128,124,120,116,112,108,104,100,96,92,88,84,80,76,72,68,64,60,56,52,48,44,40,36,32,28,24,20,16,12,8,4,0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,85,89,93,97,101,105,109,113,117,121,125,129,133,137,141,145,149,153,157,161,165,170,174,178,182,186,190,194,198,202,206,210,214,218,222,226,230,234,238,242,246,250,255]},hot_metal_blue:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,9,12,15,18,21,24,26,29,32,35,38,41,44,47,50,52,55,57,59,62,64,66,69,71,74,76,78,81,83,85,88,90,93,96,99,102,105,108,111,114,116,119,122,125,128,131,134,137,140,143,146,149,152,155,158,161,164,166,169,172,175,178,181,184,187,190,194,198,201,205,209,213,217,221,224,228,232,236,240,244,247,251,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,6,8,9,11,13,15,17,19,21,23,24,26,28,30,32,34,36,38,40,41,43,45,47,49,51,53,55,56,58,60,62,64,66,68,70,72,73,75,77,79,81,83,85,87,88,90,92,94,96,98,100,102,104,105,107,109,111,113,115,117,119,120,122,124,126,128,130,132,134,136,137,139,141,143,145,147,149,151,152,154,156,158,160,162,164,166,168,169,171,173,175,177,179,181,183,184,186,188,190,192,194,196,198,200,201,203,205,207,209,211,213,215,216,218,220,222,224,226,228,229,231,233,235,237,239,240,242,244,246,248,250,251,253,255],blue:[0,2,4,6,8,10,12,14,16,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,79,81,83,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,117,119,121,123,125,127,129,131,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,184,186,188,190,192,194,196,198,200,197,194,191,188,185,182,179,176,174,171,168,165,162,159,156,153,150,144,138,132,126,121,115,109,103,97,91,85,79,74,68,62,56,50,47,44,41,38,35,32,29,26,24,21,18,15,12,9,6,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,9,12,15,18,21,24,26,29,32,35,38,41,44,47,50,53,56,59,62,65,68,71,74,76,79,82,85,88,91,94,97,100,103,106,109,112,115,118,121,124,126,129,132,135,138,141,144,147,150,153,156,159,162,165,168,171,174,176,179,182,185,188,191,194,197,200,203,206,210,213,216,219,223,226,229,232,236,239,242,245,249,252,255]},pet_20step:{red:[0,0,0,0,0,0,0,0,0,0,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,112,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,64,64,64,64,64,64,64,64,64,64,64,64,224,224,224,224,224,224,224,224,224,224,224,224,224,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,192,192,192,192,192,192,192,192,192,192,192,192,192,176,176,176,176,176,176,176,176,176,176,176,176,176,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255],green:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,112,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,96,96,96,96,96,96,96,96,96,96,96,96,96,144,144,144,144,144,144,144,144,144,144,144,144,144,192,192,192,192,192,192,192,192,192,192,192,192,192,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,208,208,208,208,208,208,208,208,208,208,208,208,208,176,176,176,176,176,176,176,176,176,176,176,176,176,144,144,144,144,144,144,144,144,144,144,144,144,96,96,96,96,96,96,96,96,96,96,96,96,96,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255],blue:[0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,112,112,112,112,112,112,112,112,112,112,112,112,128,128,128,128,128,128,128,128,128,128,128,128,128,176,176,176,176,176,176,176,176,176,176,176,176,176,192,192,192,192,192,192,192,192,192,192,192,192,192,224,224,224,224,224,224,224,224,224,224,224,224,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,80,80,80,80,80,80,80,80,80,80,80,80,80,64,64,64,64,64,64,64,64,64,64,64,64,80,80,80,80,80,80,80,80,80,80,80,80,80,96,96,96,96,96,96,96,96,96,96,96,96,96,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255]}};class y{r;g;b;constructor(e,t,n){this.r=e,this.g=t,this.b=n}}const C={r:0,g:0,b:0};function v(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&e.r===t.r&&e.g===t.g&&e.b===t.b}function I(e){return{l:655.35*e.l,a:257*e.a+32896,b:257*e.b+32896}}const T={x:95.0489,y:100,z:108.884};function L(e){return function(e){function t(e){let t=null;return t=e>.008856452?Math.pow(e,.333333333):7.787037037*e+.137931034,t}const n=T,i=t(e.y/n.y);return{l:116*i-16,a:500*(t(e.x/n.x)-i),b:200*(i-t(e.z/n.z))}}(function(e){function t(e){let t=null;return t=e<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4),t}const n=t(e.r/255),i=t(e.g/255),r=t(e.b/255);return{x:100*(.4124*n+.3576*i+.1805*r),y:100*(.2126*n+.7152*i+.0722*r),z:100*(.0193*n+.1192*i+.9505*r)}}(e))}function P(e){const t={Yellow:\"#ffff00\",Red:\"#ff0000\",White:\"#ffffff\",Green:\"#008000\",Blue:\"#0000ff\",Lime:\"#00ff00\",Fuchsia:\"#ff00ff\",Black:\"#000000\"};let n=\"#ffff00\";return void 0!==t[e]&&(n=t[e]),n}class w{#D;#y;#C;constructor(e,t,n){this.#D=e,this.#y=t,this.#C=n}getX(){return this.#D}getY(){return this.#y}getZ(){return this.#C}equals(e){return null!==e&&this.#D===e.getX()&&this.#y===e.getY()&&this.#C===e.getZ()}toString(){return\"(\"+this.#D+\", \"+this.#y+\", \"+this.#C+\")\"}norm(){return Math.sqrt(this.#D*this.#D+this.#y*this.#y+this.#C*this.#C)}crossProduct(e){return new w(this.#y*e.getZ()-e.getY()*this.#C,this.#C*e.getX()-e.getZ()*this.#D,this.#D*e.getY()-e.getX()*this.#y)}dotProduct(e){return this.#D*e.getX()+this.#y*e.getY()+this.#C*e.getZ()}isCodirectional(e){return this.dotProduct(e)>0}}Number.EPSILON;const O=1e-4;function A(e,t,n){return void 0===n&&(n=Number.EPSILON),Math.abs(e-t)<n}class b{#e;#v;constructor(e){this.#e=e}get(e,t){return this.#e[3*e+t]}getInverse(){return void 0===this.#v&&(this.#v=function(e){const t=e.get(0,0),n=e.get(0,1),i=e.get(0,2),r=e.get(1,0),o=e.get(1,1),a=e.get(1,2),s=e.get(2,0),l=e.get(2,1),u=e.get(2,2),d=o*u-a*l,h=a*s-r*u,S=r*l-o*s;let g=t*d+n*h+i*S;if(0!==g)return g=1/g,new b([g*d,g*(i*l-n*u),g*(n*a-i*o),g*h,g*(t*u-i*s),g*(i*r-t*a),g*S,g*(n*s-t*l),g*(t*o-n*r)]);c.warn(\"Cannot invert 3*3 matrix with zero determinant.\")}(this)),this.#v}equals(e,t){for(let n=0;n<3;++n)for(let i=0;i<3;++i)if(!A(this.get(n,i),e.get(n,i),t))return!1;return!0}toString(){let e=\"[\";for(let t=0;t<3;++t){0!==t&&(e+=\", \\n \");for(let n=0;n<3;++n)0!==n&&(e+=\", \"),e+=this.get(t,n)}return e+=\"]\",e}multiply(e){const t=[];for(let n=0;n<3;++n)for(let i=0;i<3;++i){let r=0;for(let t=0;t<3;++t)r+=this.get(n,t)*e.get(t,i);t.push(r)}return new b(t)}getAbs(){const e=[];for(let t=0;t<3;++t)for(let n=0;n<3;++n)e.push(Math.abs(this.get(t,n)));return new b(e)}multiplyArray3D(e){if(3!==e.length)throw new Error(\"Cannot multiply 3x3 matrix with non 3D array: \"+e.length);const t=[];for(let n=0;n<3;++n){let i=0;for(let t=0;t<3;++t)i+=this.get(n,t)*e[t];t.push(i)}return t}multiplyVector3D(e){const t=this.multiplyArray3D([e.getX(),e.getY(),e.getZ()]);return new w(t[0],t[1],t[2])}multiplyPoint3D(e){const t=this.multiplyArray3D([e.getX(),e.getY(),e.getZ()]);return new E(t[0],t[1],t[2])}multiplyIndex3D(e){const t=this.multiplyArray3D(e.getValues());return new s(t)}getRowAbsMax(e){const t=[Math.abs(this.get(e,0)),Math.abs(this.get(e,1)),Math.abs(this.get(e,2))],n=Math.max.apply(null,t),i=t.indexOf(n);return{value:this.get(e,i),index:i}}getColAbsMax(e){const t=[Math.abs(this.get(0,e)),Math.abs(this.get(1,e)),Math.abs(this.get(2,e))],n=Math.max.apply(null,t),i=t.indexOf(n);return{value:this.get(i,e),index:i}}asOneAndZeros(){const e=[];for(let t=0;t<3;++t){const n=this.getRowAbsMax(t),i=n.value>0?1:-1;for(let t=0;t<3;++t)t===n.index?e.push(1*i):e.push(0)}return new b(e)}getThirdColMajorDirection(){return this.getColAbsMax(2).index}}function x(){return new b([1,0,0,0,1,0,0,0,1])}function R(e){return e.equals(x())}class F{#D;#y;constructor(e,t){this.#D=e,this.#y=t}getX(){return this.#D}getY(){return this.#y}getValues(){return[this.#D,this.#y]}getCentroid(){return this}equals(e){return null!=e&&this.#D===e.getX()&&this.#y===e.getY()}toString(){return\"(\"+this.#D+\", \"+this.#y+\")\"}getDistance(e){const t=this.#D-e.getX(),n=this.#y-e.getY();return Math.sqrt(t*t+n*n)}}class E{#D;#y;#C;constructor(e,t,n){this.#D=e,this.#y=t,this.#C=n}getX(){return this.#D}getY(){return this.#y}getZ(){return this.#C}getValues(){return[this.#D,this.#y,this.#C]}equals(e){return null!==e&&this.#D===e.getX()&&this.#y===e.getY()&&this.#C===e.getZ()}isSimilar(e,t){return null!==e&&A(this.#D,e.getX(),t)&&A(this.#y,e.getY(),t)&&A(this.#C,e.getZ(),t)}toString(){return\"(\"+this.#D+\", \"+this.#y+\", \"+this.#C+\")\"}getDistance(e){return Math.sqrt(this.#I(e))}#I(e){const t=this.#D-e.getX(),n=this.#y-e.getY(),i=this.#C-e.getZ();return t*t+n*n+i*i}getClosest(e){let t=0,n=this.#I(e[t]);for(let i=0;i<e.length;++i){const r=this.#I(e[i]);r<n&&(t=i,n=r)}return t}minus(e){return new w(this.#D-e.getX(),this.#y-e.getY(),this.#C-e.getZ())}}class q{#e;constructor(e){if(!e||void 0===e)throw new Error(\"Cannot create point with no values.\");if(0===e.length)throw new Error(\"Cannot create point with empty values.\");if(!e.every((function(e){return!isNaN(e)})))throw new Error(\"Cannot create point with non number values.\");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return\"(\"+this.#e.toString()+\")\"}getValues(){return this.#e.slice()}canCompare(e){return!!e&&this.length()===e.length()}equals(e){if(!this.canCompare(e))return!1;for(let t=0,n=this.length();t<n;++t)if(this.get(t)!==e.get(t))return!1;return!0}compare(e){if(!this.canCompare(e))return null;const t=[];for(let n=0,i=this.length();n<i;++n)this.get(n)!==e.get(n)&&t.push(n);return t}get3D(){return new E(this.get(0),this.get(1),this.get(2))}add(e){if(!this.canCompare(e))return null;const t=[],n=this.getValues(),i=e.getValues();for(let e=0;e<n.length;++e)t.push(n[e]+i[e]);return new q(t)}mergeWith3D(e){const t=this.getValues();return t[0]=e.getX(),t[1]=e.getY(),t[2]=e.getZ(),new q(t)}}const U={t(e){let t=e;const n=e.split(\".\");return 2===n.length&&\"unit\"===n[0]&&(t={mm:\"mm\",cm2:\"cm²\",degree:\"°\"}[n[1]]),t}};function M(e,t,n){if(null==e||null==t)return!1;const i=n>0?0|n:0;return e.substring(i,i+t.length)===t}function Q(e,t){return null!=e&&null!=t&&e.substring(e.length-t.length)===t}function V(e){const t=[];if(null==e)return t;const n=/{(\\w+)}/g;let i=n.exec(e);for(;i;)t.push(i[1]),i=n.exec(e);return t}function N(e){let t=null;if(null!=e&&\".\"!==e[0]){const n=e.toLowerCase().split(\".\");1!==n.length&&(t=n.pop(),/[a-z]/.test(t)&&!t.includes(\"/\")||(t=null))}return t}function B(e){const t=new Uint8Array(e.length);for(let n=0,i=e.length;n<i;n++)t[n]=e.charCodeAt(n);return t}function G(e,t){const n=Math.pow(10,t),i=.01/n;return Math.round(e*n+i)/n}function k(e,t){if(void 0===t){t=[];for(let n=0;n<e.length;++n)t.push(n)}for(let n=0;n<t.length;++n)if(t[n]>=e.length)throw new Error(\"Non valid dimension for toStringId\");let n=\"\";for(let i=0;i<t.length;++i)0!==i&&(n+=\"_\"),n+=\"#\"+t[i]+\"-\"+e[t[i]];return n}function H(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&z(e.slice().sort(),t.slice().sort())}function z(e,t){return null!==e&&null!==t&&void 0!==e&&void 0!==t&&e.length===t.length&&e.every((function(e,n){return e===t[n]}))}function W(e){return String.fromCharCode.apply(String,e)}function Y(e,t,n,i){(void 0===n||n<0||n>=e.length)&&(n=0),(void 0===i||i<=n||i>e.length)&&(i=e.length);for(let r=n;r<i;++r)if(t(e[r],r,e))return r}function X(e){return function(t,n,i){for(let t=0;t<e.length;++t)if(i[n+t]!==e[t])return!1;return!0}}function j(e,t){const n=\"\\r\\n\";let i=0;const r=[];for(let o=0;o<e.length;++o){let a=\"\";0!==o&&(a+=n),a+=\"--\"+t+n;const s=Object.keys(e[o]);for(let t=0;t<s.length;++t){const i=s[t];\"data\"!==i&&(a+=i+\": \"+e[o][i]+n)}a+=n;const l=B(a);r.push(l),i+=l.byteLength+e[o].data.byteLength}const o=B(\"\\r\\n--\"+t+\"--\"+n),a=new Uint8Array(i+o.byteLength);let s=0;for(let t=0;t<e.length;++t)a.set(r[t],s),s+=r[t].byteLength,a.set(new Uint8Array(e[t].data),s),s+=e[t].data.byteLength;return a.set(o,s),a}const Z={\"0000\":{\"0000\":[\"UL\",\"1\",\"CommandGroupLength\"],\"0001\":[\"UL\",\"1\",\"CommandLengthToEnd\"],\"0002\":[\"UI\",\"1\",\"AffectedSOPClassUID\"],\"0003\":[\"UI\",\"1\",\"RequestedSOPClassUID\"],\"0010\":[\"SH\",\"1\",\"CommandRecognitionCode\"],\"0100\":[\"US\",\"1\",\"CommandField\"],\"0110\":[\"US\",\"1\",\"MessageID\"],\"0120\":[\"US\",\"1\",\"MessageIDBeingRespondedTo\"],\"0200\":[\"AE\",\"1\",\"Initiator\"],\"0300\":[\"AE\",\"1\",\"Receiver\"],\"0400\":[\"AE\",\"1\",\"FindLocation\"],\"0600\":[\"AE\",\"1\",\"MoveDestination\"],\"0700\":[\"US\",\"1\",\"Priority\"],\"0800\":[\"US\",\"1\",\"CommandDataSetType\"],\"0850\":[\"US\",\"1\",\"NumberOfMatches\"],\"0860\":[\"US\",\"1\",\"ResponseSequenceNumber\"],\"0900\":[\"US\",\"1\",\"Status\"],\"0901\":[\"AT\",\"1-n\",\"OffendingElement\"],\"0902\":[\"LO\",\"1\",\"ErrorComment\"],\"0903\":[\"US\",\"1\",\"ErrorID\"],1e3:[\"UI\",\"1\",\"AffectedSOPInstanceUID\"],1001:[\"UI\",\"1\",\"RequestedSOPInstanceUID\"],1002:[\"US\",\"1\",\"EventTypeID\"],1005:[\"AT\",\"1-n\",\"AttributeIdentifierList\"],1008:[\"US\",\"1\",\"ActionTypeID\"],1020:[\"US\",\"1\",\"NumberOfRemainingSuboperations\"],1021:[\"US\",\"1\",\"NumberOfCompletedSuboperations\"],1022:[\"US\",\"1\",\"NumberOfFailedSuboperations\"],1023:[\"US\",\"1\",\"NumberOfWarningSuboperations\"],1030:[\"AE\",\"1\",\"MoveOriginatorApplicationEntityTitle\"],1031:[\"US\",\"1\",\"MoveOriginatorMessageID\"],4e3:[\"LT\",\"1\",\"DialogReceiver\"],4010:[\"LT\",\"1\",\"TerminalType\"],5010:[\"SH\",\"1\",\"MessageSetID\"],5020:[\"SH\",\"1\",\"EndMessageID\"],5110:[\"LT\",\"1\",\"DisplayFormat\"],5120:[\"LT\",\"1\",\"PagePositionID\"],5130:[\"CS\",\"1\",\"TextFormatID\"],5140:[\"CS\",\"1\",\"NormalReverse\"],5150:[\"CS\",\"1\",\"AddGrayScale\"],5160:[\"CS\",\"1\",\"Borders\"],5170:[\"IS\",\"1\",\"Copies\"],5180:[\"CS\",\"1\",\"CommandMagnificationType\"],5190:[\"CS\",\"1\",\"Erase\"],\"51A0\":[\"CS\",\"1\",\"Print\"],\"51B0\":[\"US\",\"1-n\",\"Overlays\"]},\"0002\":{\"0000\":[\"UL\",\"1\",\"FileMetaInformationGroupLength\"],\"0001\":[\"OB\",\"1\",\"FileMetaInformationVersion\"],\"0002\":[\"UI\",\"1\",\"MediaStorageSOPClassUID\"],\"0003\":[\"UI\",\"1\",\"MediaStorageSOPInstanceUID\"],\"0010\":[\"UI\",\"1\",\"TransferSyntaxUID\"],\"0012\":[\"UI\",\"1\",\"ImplementationClassUID\"],\"0013\":[\"SH\",\"1\",\"ImplementationVersionName\"],\"0016\":[\"AE\",\"1\",\"SourceApplicationEntityTitle\"],\"0017\":[\"AE\",\"1\",\"SendingApplicationEntityTitle\"],\"0018\":[\"AE\",\"1\",\"ReceivingApplicationEntityTitle\"],\"0026\":[\"UR\",\"1\",\"SourcePresentationAddress\"],\"0027\":[\"UR\",\"1\",\"SendingPresentationAddress\"],\"0028\":[\"UR\",\"1\",\"ReceivingPresentationAddress\"],\"0031\":[\"OB\",\"1\",\"RTVMetaInformationVersion\"],\"0032\":[\"UI\",\"1\",\"RTVCommunicationSOPClassUID\"],\"0033\":[\"UI\",\"1\",\"RTVCommunicationSOPInstanceUID\"],\"0035\":[\"OB\",\"1\",\"RTVSourceIdentifier\"],\"0036\":[\"OB\",\"1\",\"RTVFlowIdentifier\"],\"0037\":[\"UL\",\"1\",\"RTVFlowRTPSamplingRate\"],\"0038\":[\"FD\",\"1\",\"RTVFlowActualFrameDuration\"],\"0100\":[\"UI\",\"1\",\"PrivateInformationCreatorUID\"],\"0102\":[\"OB\",\"1\",\"PrivateInformation\"]},\"0004\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],1130:[\"CS\",\"1\",\"FileSetID\"],1141:[\"CS\",\"1-8\",\"FileSetDescriptorFileID\"],1142:[\"CS\",\"1\",\"SpecificCharacterSetOfFileSetDescriptorFile\"],1200:[\"UL\",\"1\",\"OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity\"],1202:[\"UL\",\"1\",\"OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity\"],1212:[\"US\",\"1\",\"FileSetConsistencyFlag\"],1220:[\"SQ\",\"1\",\"DirectoryRecordSequence\"],1400:[\"UL\",\"1\",\"OffsetOfTheNextDirectoryRecord\"],1410:[\"US\",\"1\",\"RecordInUseFlag\"],1420:[\"UL\",\"1\",\"OffsetOfReferencedLowerLevelDirectoryEntity\"],1430:[\"CS\",\"1\",\"DirectoryRecordType\"],1432:[\"UI\",\"1\",\"PrivateRecordUID\"],1500:[\"CS\",\"1-8\",\"ReferencedFileID\"],1504:[\"UL\",\"1\",\"MRDRDirectoryRecordOffset\"],1510:[\"UI\",\"1\",\"ReferencedSOPClassUIDInFile\"],1511:[\"UI\",\"1\",\"ReferencedSOPInstanceUIDInFile\"],1512:[\"UI\",\"1\",\"ReferencedTransferSyntaxUIDInFile\"],\"151A\":[\"UI\",\"1-n\",\"ReferencedRelatedGeneralSOPClassUIDInFile\"],1600:[\"UL\",\"1\",\"NumberOfReferences\"]},\"0008\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"UL\",\"1\",\"LengthToEnd\"],\"0005\":[\"CS\",\"1-n\",\"SpecificCharacterSet\"],\"0006\":[\"SQ\",\"1\",\"LanguageCodeSequence\"],\"0008\":[\"CS\",\"2-n\",\"ImageType\"],\"0010\":[\"SH\",\"1\",\"RecognitionCode\"],\"0012\":[\"DA\",\"1\",\"InstanceCreationDate\"],\"0013\":[\"TM\",\"1\",\"InstanceCreationTime\"],\"0014\":[\"UI\",\"1\",\"InstanceCreatorUID\"],\"0015\":[\"DT\",\"1\",\"InstanceCoercionDateTime\"],\"0016\":[\"UI\",\"1\",\"SOPClassUID\"],\"0018\":[\"UI\",\"1\",\"SOPInstanceUID\"],\"001A\":[\"UI\",\"1-n\",\"RelatedGeneralSOPClassUID\"],\"001B\":[\"UI\",\"1\",\"OriginalSpecializedSOPClassUID\"],\"0020\":[\"DA\",\"1\",\"StudyDate\"],\"0021\":[\"DA\",\"1\",\"SeriesDate\"],\"0022\":[\"DA\",\"1\",\"AcquisitionDate\"],\"0023\":[\"DA\",\"1\",\"ContentDate\"],\"0024\":[\"DA\",\"1\",\"OverlayDate\"],\"0025\":[\"DA\",\"1\",\"CurveDate\"],\"002A\":[\"DT\",\"1\",\"AcquisitionDateTime\"],\"0030\":[\"TM\",\"1\",\"StudyTime\"],\"0031\":[\"TM\",\"1\",\"SeriesTime\"],\"0032\":[\"TM\",\"1\",\"AcquisitionTime\"],\"0033\":[\"TM\",\"1\",\"ContentTime\"],\"0034\":[\"TM\",\"1\",\"OverlayTime\"],\"0035\":[\"TM\",\"1\",\"CurveTime\"],\"0040\":[\"US\",\"1\",\"DataSetType\"],\"0041\":[\"LO\",\"1\",\"DataSetSubtype\"],\"0042\":[\"CS\",\"1\",\"NuclearMedicineSeriesType\"],\"0050\":[\"SH\",\"1\",\"AccessionNumber\"],\"0051\":[\"SQ\",\"1\",\"IssuerOfAccessionNumberSequence\"],\"0052\":[\"CS\",\"1\",\"QueryRetrieveLevel\"],\"0053\":[\"CS\",\"1\",\"QueryRetrieveView\"],\"0054\":[\"AE\",\"1-n\",\"RetrieveAETitle\"],\"0055\":[\"AE\",\"1\",\"StationAETitle\"],\"0056\":[\"CS\",\"1\",\"InstanceAvailability\"],\"0058\":[\"UI\",\"1-n\",\"FailedSOPInstanceUIDList\"],\"0060\":[\"CS\",\"1\",\"Modality\"],\"0061\":[\"CS\",\"1-n\",\"ModalitiesInStudy\"],\"0062\":[\"UI\",\"1-n\",\"SOPClassesInStudy\"],\"0063\":[\"SQ\",\"1\",\"AnatomicRegionsInStudyCodeSequence\"],\"0064\":[\"CS\",\"1\",\"ConversionType\"],\"0068\":[\"CS\",\"1\",\"PresentationIntentType\"],\"0070\":[\"LO\",\"1\",\"Manufacturer\"],\"0080\":[\"LO\",\"1\",\"InstitutionName\"],\"0081\":[\"ST\",\"1\",\"InstitutionAddress\"],\"0082\":[\"SQ\",\"1\",\"InstitutionCodeSequence\"],\"0090\":[\"PN\",\"1\",\"ReferringPhysicianName\"],\"0092\":[\"ST\",\"1\",\"ReferringPhysicianAddress\"],\"0094\":[\"SH\",\"1-n\",\"ReferringPhysicianTelephoneNumbers\"],\"0096\":[\"SQ\",\"1\",\"ReferringPhysicianIdentificationSequence\"],\"009C\":[\"PN\",\"1-n\",\"ConsultingPhysicianName\"],\"009D\":[\"SQ\",\"1\",\"ConsultingPhysicianIdentificationSequence\"],\"0100\":[\"SH\",\"1\",\"CodeValue\"],\"0101\":[\"LO\",\"1\",\"ExtendedCodeValue\"],\"0102\":[\"SH\",\"1\",\"CodingSchemeDesignator\"],\"0103\":[\"SH\",\"1\",\"CodingSchemeVersion\"],\"0104\":[\"LO\",\"1\",\"CodeMeaning\"],\"0105\":[\"CS\",\"1\",\"MappingResource\"],\"0106\":[\"DT\",\"1\",\"ContextGroupVersion\"],\"0107\":[\"DT\",\"1\",\"ContextGroupLocalVersion\"],\"0108\":[\"LT\",\"1\",\"ExtendedCodeMeaning\"],\"0109\":[\"SQ\",\"1\",\"CodingSchemeResourcesSequence\"],\"010A\":[\"CS\",\"1\",\"CodingSchemeURLType\"],\"010B\":[\"CS\",\"1\",\"ContextGroupExtensionFlag\"],\"010C\":[\"UI\",\"1\",\"CodingSchemeUID\"],\"010D\":[\"UI\",\"1\",\"ContextGroupExtensionCreatorUID\"],\"010E\":[\"UR\",\"1\",\"CodingSchemeURL\"],\"010F\":[\"CS\",\"1\",\"ContextIdentifier\"],\"0110\":[\"SQ\",\"1\",\"CodingSchemeIdentificationSequence\"],\"0112\":[\"LO\",\"1\",\"CodingSchemeRegistry\"],\"0114\":[\"ST\",\"1\",\"CodingSchemeExternalID\"],\"0115\":[\"ST\",\"1\",\"CodingSchemeName\"],\"0116\":[\"ST\",\"1\",\"CodingSchemeResponsibleOrganization\"],\"0117\":[\"UI\",\"1\",\"ContextUID\"],\"0118\":[\"UI\",\"1\",\"MappingResourceUID\"],\"0119\":[\"UC\",\"1\",\"LongCodeValue\"],\"0120\":[\"UR\",\"1\",\"URNCodeValue\"],\"0121\":[\"SQ\",\"1\",\"EquivalentCodeSequence\"],\"0122\":[\"LO\",\"1\",\"MappingResourceName\"],\"0123\":[\"SQ\",\"1\",\"ContextGroupIdentificationSequence\"],\"0124\":[\"SQ\",\"1\",\"MappingResourceIdentificationSequence\"],\"0201\":[\"SH\",\"1\",\"TimezoneOffsetFromUTC\"],\"0202\":[\"\",\"\",\"\"],\"0220\":[\"SQ\",\"1\",\"ResponsibleGroupCodeSequence\"],\"0221\":[\"CS\",\"1\",\"EquipmentModality\"],\"0222\":[\"LO\",\"1\",\"ManufacturerRelatedModelGroup\"],\"0300\":[\"SQ\",\"1\",\"PrivateDataElementCharacteristicsSequence\"],\"0301\":[\"US\",\"1\",\"PrivateGroupReference\"],\"0302\":[\"LO\",\"1\",\"PrivateCreatorReference\"],\"0303\":[\"CS\",\"1\",\"BlockIdentifyingInformationStatus\"],\"0304\":[\"US\",\"1-n\",\"NonidentifyingPrivateElements\"],\"0305\":[\"SQ\",\"1\",\"DeidentificationActionSequence\"],\"0306\":[\"US\",\"1-n\",\"IdentifyingPrivateElements\"],\"0307\":[\"CS\",\"1\",\"DeidentificationAction\"],\"0308\":[\"US\",\"1\",\"PrivateDataElement\"],\"0309\":[\"UL\",\"1-3\",\"PrivateDataElementValueMultiplicity\"],\"030A\":[\"CS\",\"1\",\"PrivateDataElementValueRepresentation\"],\"030B\":[\"UL\",\"1-2\",\"PrivateDataElementNumberOfItems\"],\"030C\":[\"UC\",\"1\",\"PrivateDataElementName\"],\"030D\":[\"UC\",\"1\",\"PrivateDataElementKeyword\"],\"030E\":[\"UT\",\"1\",\"PrivateDataElementDescription\"],\"030F\":[\"UT\",\"1\",\"PrivateDataElementEncoding\"],\"0310\":[\"SQ\",\"1\",\"PrivateDataElementDefinitionSequence\"],1e3:[\"AE\",\"1\",\"NetworkID\"],1010:[\"SH\",\"1\",\"StationName\"],1030:[\"LO\",\"1\",\"StudyDescription\"],1032:[\"SQ\",\"1\",\"ProcedureCodeSequence\"],\"103E\":[\"LO\",\"1\",\"SeriesDescription\"],\"103F\":[\"SQ\",\"1\",\"SeriesDescriptionCodeSequence\"],1040:[\"LO\",\"1\",\"InstitutionalDepartmentName\"],1041:[\"SQ\",\"1\",\"InstitutionalDepartmentTypeCodeSequence\"],1048:[\"PN\",\"1-n\",\"PhysiciansOfRecord\"],1049:[\"SQ\",\"1\",\"PhysiciansOfRecordIdentificationSequence\"],1050:[\"PN\",\"1-n\",\"PerformingPhysicianName\"],1052:[\"SQ\",\"1\",\"PerformingPhysicianIdentificationSequence\"],1060:[\"PN\",\"1-n\",\"NameOfPhysiciansReadingStudy\"],1062:[\"SQ\",\"1\",\"PhysiciansReadingStudyIdentificationSequence\"],1070:[\"PN\",\"1-n\",\"OperatorsName\"],1072:[\"SQ\",\"1\",\"OperatorIdentificationSequence\"],1080:[\"LO\",\"1-n\",\"AdmittingDiagnosesDescription\"],1084:[\"SQ\",\"1\",\"AdmittingDiagnosesCodeSequence\"],1090:[\"LO\",\"1\",\"ManufacturerModelName\"],1100:[\"SQ\",\"1\",\"ReferencedResultsSequence\"],1110:[\"SQ\",\"1\",\"ReferencedStudySequence\"],1111:[\"SQ\",\"1\",\"ReferencedPerformedProcedureStepSequence\"],1115:[\"SQ\",\"1\",\"ReferencedSeriesSequence\"],1120:[\"SQ\",\"1\",\"ReferencedPatientSequence\"],1125:[\"SQ\",\"1\",\"ReferencedVisitSequence\"],1130:[\"SQ\",\"1\",\"ReferencedOverlaySequence\"],1134:[\"SQ\",\"1\",\"ReferencedStereometricInstanceSequence\"],\"113A\":[\"SQ\",\"1\",\"ReferencedWaveformSequence\"],1140:[\"SQ\",\"1\",\"ReferencedImageSequence\"],1145:[\"SQ\",\"1\",\"ReferencedCurveSequence\"],\"114A\":[\"SQ\",\"1\",\"ReferencedInstanceSequence\"],\"114B\":[\"SQ\",\"1\",\"ReferencedRealWorldValueMappingInstanceSequence\"],1150:[\"UI\",\"1\",\"ReferencedSOPClassUID\"],1155:[\"UI\",\"1\",\"ReferencedSOPInstanceUID\"],1156:[\"SQ\",\"1\",\"DefinitionSourceSequence\"],\"115A\":[\"UI\",\"1-n\",\"SOPClassesSupported\"],1160:[\"IS\",\"1-n\",\"ReferencedFrameNumber\"],1161:[\"UL\",\"1-n\",\"SimpleFrameList\"],1162:[\"UL\",\"3-3n\",\"CalculatedFrameList\"],1163:[\"FD\",\"2\",\"TimeRange\"],1164:[\"SQ\",\"1\",\"FrameExtractionSequence\"],1167:[\"UI\",\"1\",\"MultiFrameSourceSOPInstanceUID\"],1190:[\"UR\",\"1\",\"RetrieveURL\"],1195:[\"UI\",\"1\",\"TransactionUID\"],1196:[\"US\",\"1\",\"WarningReason\"],1197:[\"US\",\"1\",\"FailureReason\"],1198:[\"SQ\",\"1\",\"FailedSOPSequence\"],1199:[\"SQ\",\"1\",\"ReferencedSOPSequence\"],\"119A\":[\"SQ\",\"1\",\"OtherFailuresSequence\"],1200:[\"SQ\",\"1\",\"StudiesContainingOtherReferencedInstancesSequence\"],1250:[\"SQ\",\"1\",\"RelatedSeriesSequence\"],2110:[\"CS\",\"1\",\"LossyImageCompressionRetired\"],2111:[\"ST\",\"1\",\"DerivationDescription\"],2112:[\"SQ\",\"1\",\"SourceImageSequence\"],2120:[\"SH\",\"1\",\"StageName\"],2122:[\"IS\",\"1\",\"StageNumber\"],2124:[\"IS\",\"1\",\"NumberOfStages\"],2127:[\"SH\",\"1\",\"ViewName\"],2128:[\"IS\",\"1\",\"ViewNumber\"],2129:[\"IS\",\"1\",\"NumberOfEventTimers\"],\"212A\":[\"IS\",\"1\",\"NumberOfViewsInStage\"],2130:[\"DS\",\"1-n\",\"EventElapsedTimes\"],2132:[\"LO\",\"1-n\",\"EventTimerNames\"],2133:[\"SQ\",\"1\",\"EventTimerSequence\"],2134:[\"FD\",\"1\",\"EventTimeOffset\"],2135:[\"SQ\",\"1\",\"EventCodeSequence\"],2142:[\"IS\",\"1\",\"StartTrim\"],2143:[\"IS\",\"1\",\"StopTrim\"],2144:[\"IS\",\"1\",\"RecommendedDisplayFrameRate\"],2200:[\"CS\",\"1\",\"TransducerPosition\"],2204:[\"CS\",\"1\",\"TransducerOrientation\"],2208:[\"CS\",\"1\",\"AnatomicStructure\"],2218:[\"SQ\",\"1\",\"AnatomicRegionSequence\"],2220:[\"SQ\",\"1\",\"AnatomicRegionModifierSequence\"],2228:[\"SQ\",\"1\",\"PrimaryAnatomicStructureSequence\"],2229:[\"SQ\",\"1\",\"AnatomicStructureSpaceOrRegionSequence\"],2230:[\"SQ\",\"1\",\"PrimaryAnatomicStructureModifierSequence\"],2240:[\"SQ\",\"1\",\"TransducerPositionSequence\"],2242:[\"SQ\",\"1\",\"TransducerPositionModifierSequence\"],2244:[\"SQ\",\"1\",\"TransducerOrientationSequence\"],2246:[\"SQ\",\"1\",\"TransducerOrientationModifierSequence\"],2251:[\"SQ\",\"1\",\"AnatomicStructureSpaceOrRegionCodeSequenceTrial\"],2253:[\"SQ\",\"1\",\"AnatomicPortalOfEntranceCodeSequenceTrial\"],2255:[\"SQ\",\"1\",\"AnatomicApproachDirectionCodeSequenceTrial\"],2256:[\"ST\",\"1\",\"AnatomicPerspectiveDescriptionTrial\"],2257:[\"SQ\",\"1\",\"AnatomicPerspectiveCodeSequenceTrial\"],2258:[\"ST\",\"1\",\"AnatomicLocationOfExaminingInstrumentDescriptionTrial\"],2259:[\"SQ\",\"1\",\"AnatomicLocationOfExaminingInstrumentCodeSequenceTrial\"],\"225A\":[\"SQ\",\"1\",\"AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial\"],\"225C\":[\"SQ\",\"1\",\"OnAxisBackgroundAnatomicStructureCodeSequenceTrial\"],3001:[\"SQ\",\"1\",\"AlternateRepresentationSequence\"],3002:[\"UI\",\"1-n\",\"AvailableTransferSyntaxUID\"],3010:[\"UI\",\"1-n\",\"IrradiationEventUID\"],3011:[\"SQ\",\"1\",\"SourceIrradiationEventSequence\"],3012:[\"UI\",\"1\",\"RadiopharmaceuticalAdministrationEventUID\"],4e3:[\"LT\",\"1\",\"IdentifyingComments\"],9007:[\"CS\",\"4\",\"FrameType\"],9092:[\"SQ\",\"1\",\"ReferencedImageEvidenceSequence\"],9121:[\"SQ\",\"1\",\"ReferencedRawDataSequence\"],9123:[\"UI\",\"1\",\"CreatorVersionUID\"],9124:[\"SQ\",\"1\",\"DerivationImageSequence\"],9154:[\"SQ\",\"1\",\"SourceImageEvidenceSequence\"],9205:[\"CS\",\"1\",\"PixelPresentation\"],9206:[\"CS\",\"1\",\"VolumetricProperties\"],9207:[\"CS\",\"1\",\"VolumeBasedCalculationTechnique\"],9208:[\"CS\",\"1\",\"ComplexImageComponent\"],9209:[\"CS\",\"1\",\"AcquisitionContrast\"],9215:[\"SQ\",\"1\",\"DerivationCodeSequence\"],9237:[\"SQ\",\"1\",\"ReferencedPresentationStateSequence\"],9410:[\"SQ\",\"1\",\"ReferencedOtherPlaneSequence\"],9458:[\"SQ\",\"1\",\"FrameDisplaySequence\"],9459:[\"FL\",\"1\",\"RecommendedDisplayFrameRateInFloat\"],9460:[\"CS\",\"1\",\"SkipFrameRangeFlag\"]},\"0010\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"PN\",\"1\",\"PatientName\"],\"0020\":[\"LO\",\"1\",\"PatientID\"],\"0021\":[\"LO\",\"1\",\"IssuerOfPatientID\"],\"0022\":[\"CS\",\"1\",\"TypeOfPatientID\"],\"0024\":[\"SQ\",\"1\",\"IssuerOfPatientIDQualifiersSequence\"],\"0026\":[\"SQ\",\"1\",\"SourcePatientGroupIdentificationSequence\"],\"0027\":[\"SQ\",\"1\",\"GroupOfPatientsIdentificationSequence\"],\"0028\":[\"US\",\"3\",\"SubjectRelativePositionInImage\"],\"0030\":[\"DA\",\"1\",\"PatientBirthDate\"],\"0032\":[\"TM\",\"1\",\"PatientBirthTime\"],\"0033\":[\"LO\",\"1\",\"PatientBirthDateInAlternativeCalendar\"],\"0034\":[\"LO\",\"1\",\"PatientDeathDateInAlternativeCalendar\"],\"0035\":[\"CS\",\"1\",\"PatientAlternativeCalendar\"],\"0040\":[\"CS\",\"1\",\"PatientSex\"],\"0050\":[\"SQ\",\"1\",\"PatientInsurancePlanCodeSequence\"],\"0101\":[\"SQ\",\"1\",\"PatientPrimaryLanguageCodeSequence\"],\"0102\":[\"SQ\",\"1\",\"PatientPrimaryLanguageModifierCodeSequence\"],\"0200\":[\"CS\",\"1\",\"QualityControlSubject\"],\"0201\":[\"SQ\",\"1\",\"QualityControlSubjectTypeCodeSequence\"],\"0212\":[\"UC\",\"1\",\"StrainDescription\"],\"0213\":[\"LO\",\"1\",\"StrainNomenclature\"],\"0214\":[\"LO\",\"1\",\"StrainStockNumber\"],\"0215\":[\"SQ\",\"1\",\"StrainSourceRegistryCodeSequence\"],\"0216\":[\"SQ\",\"1\",\"StrainStockSequence\"],\"0217\":[\"LO\",\"1\",\"StrainSource\"],\"0218\":[\"UT\",\"1\",\"StrainAdditionalInformation\"],\"0219\":[\"SQ\",\"1\",\"StrainCodeSequence\"],\"0221\":[\"SQ\",\"1\",\"GeneticModificationsSequence\"],\"0222\":[\"UC\",\"1\",\"GeneticModificationsDescription\"],\"0223\":[\"LO\",\"1\",\"GeneticModificationsNomenclature\"],\"0229\":[\"SQ\",\"1\",\"GeneticModificationsCodeSequence\"],1e3:[\"LO\",\"1-n\",\"OtherPatientIDs\"],1001:[\"PN\",\"1-n\",\"OtherPatientNames\"],1002:[\"SQ\",\"1\",\"OtherPatientIDsSequence\"],1005:[\"PN\",\"1\",\"PatientBirthName\"],1010:[\"AS\",\"1\",\"PatientAge\"],1020:[\"DS\",\"1\",\"PatientSize\"],1021:[\"SQ\",\"1\",\"PatientSizeCodeSequence\"],1022:[\"DS\",\"1\",\"PatientBodyMassIndex\"],1023:[\"DS\",\"1\",\"MeasuredAPDimension\"],1024:[\"DS\",\"1\",\"MeasuredLateralDimension\"],1030:[\"DS\",\"1\",\"PatientWeight\"],1040:[\"LO\",\"1\",\"PatientAddress\"],1050:[\"LO\",\"1-n\",\"InsurancePlanIdentification\"],1060:[\"PN\",\"1\",\"PatientMotherBirthName\"],1080:[\"LO\",\"1\",\"MilitaryRank\"],1081:[\"LO\",\"1\",\"BranchOfService\"],1090:[\"LO\",\"1\",\"MedicalRecordLocator\"],1100:[\"SQ\",\"1\",\"ReferencedPatientPhotoSequence\"],2e3:[\"LO\",\"1-n\",\"MedicalAlerts\"],2110:[\"LO\",\"1-n\",\"Allergies\"],2150:[\"LO\",\"1\",\"CountryOfResidence\"],2152:[\"LO\",\"1\",\"RegionOfResidence\"],2154:[\"SH\",\"1-n\",\"PatientTelephoneNumbers\"],2155:[\"LT\",\"1\",\"PatientTelecomInformation\"],2160:[\"SH\",\"1\",\"EthnicGroup\"],2180:[\"SH\",\"1\",\"Occupation\"],\"21A0\":[\"CS\",\"1\",\"SmokingStatus\"],\"21B0\":[\"LT\",\"1\",\"AdditionalPatientHistory\"],\"21C0\":[\"US\",\"1\",\"PregnancyStatus\"],\"21D0\":[\"DA\",\"1\",\"LastMenstrualDate\"],\"21F0\":[\"LO\",\"1\",\"PatientReligiousPreference\"],2201:[\"LO\",\"1\",\"PatientSpeciesDescription\"],2202:[\"SQ\",\"1\",\"PatientSpeciesCodeSequence\"],2203:[\"CS\",\"1\",\"PatientSexNeutered\"],2210:[\"CS\",\"1\",\"AnatomicalOrientationType\"],2292:[\"LO\",\"1\",\"PatientBreedDescription\"],2293:[\"SQ\",\"1\",\"PatientBreedCodeSequence\"],2294:[\"SQ\",\"1\",\"BreedRegistrationSequence\"],2295:[\"LO\",\"1\",\"BreedRegistrationNumber\"],2296:[\"SQ\",\"1\",\"BreedRegistryCodeSequence\"],2297:[\"PN\",\"1\",\"ResponsiblePerson\"],2298:[\"CS\",\"1\",\"ResponsiblePersonRole\"],2299:[\"LO\",\"1\",\"ResponsibleOrganization\"],4e3:[\"LT\",\"1\",\"PatientComments\"],9431:[\"FL\",\"1\",\"ExaminedBodyThickness\"]},\"0012\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"LO\",\"1\",\"ClinicalTrialSponsorName\"],\"0020\":[\"LO\",\"1\",\"ClinicalTrialProtocolID\"],\"0021\":[\"LO\",\"1\",\"ClinicalTrialProtocolName\"],\"0030\":[\"LO\",\"1\",\"ClinicalTrialSiteID\"],\"0031\":[\"LO\",\"1\",\"ClinicalTrialSiteName\"],\"0040\":[\"LO\",\"1\",\"ClinicalTrialSubjectID\"],\"0042\":[\"LO\",\"1\",\"ClinicalTrialSubjectReadingID\"],\"0050\":[\"LO\",\"1\",\"ClinicalTrialTimePointID\"],\"0051\":[\"ST\",\"1\",\"ClinicalTrialTimePointDescription\"],\"0052\":[\"FD\",\"1\",\"LongitudinalTemporalOffsetFromEvent\"],\"0053\":[\"CS\",\"1\",\"LongitudinalTemporalEventType\"],\"0060\":[\"LO\",\"1\",\"ClinicalTrialCoordinatingCenterName\"],\"0062\":[\"CS\",\"1\",\"PatientIdentityRemoved\"],\"0063\":[\"LO\",\"1-n\",\"DeidentificationMethod\"],\"0064\":[\"SQ\",\"1\",\"DeidentificationMethodCodeSequence\"],\"0071\":[\"LO\",\"1\",\"ClinicalTrialSeriesID\"],\"0072\":[\"LO\",\"1\",\"ClinicalTrialSeriesDescription\"],\"0081\":[\"LO\",\"1\",\"ClinicalTrialProtocolEthicsCommitteeName\"],\"0082\":[\"LO\",\"1\",\"ClinicalTrialProtocolEthicsCommitteeApprovalNumber\"],\"0083\":[\"SQ\",\"1\",\"ConsentForClinicalTrialUseSequence\"],\"0084\":[\"CS\",\"1\",\"DistributionType\"],\"0085\":[\"CS\",\"1\",\"ConsentForDistributionFlag\"],\"0086\":[\"DA\",\"1\",\"EthicsCommitteeApprovalEffectivenessStartDate\"],\"0087\":[\"DA\",\"1\",\"EthicsCommitteeApprovalEffectivenessEndDate\"]},\"0014\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0023\":[\"ST\",\"1\",\"CADFileFormat\"],\"0024\":[\"ST\",\"1\",\"ComponentReferenceSystem\"],\"0025\":[\"ST\",\"1\",\"ComponentManufacturingProcedure\"],\"0028\":[\"ST\",\"1\",\"ComponentManufacturer\"],\"0030\":[\"DS\",\"1-n\",\"MaterialThickness\"],\"0032\":[\"DS\",\"1-n\",\"MaterialPipeDiameter\"],\"0034\":[\"DS\",\"1-n\",\"MaterialIsolationDiameter\"],\"0042\":[\"ST\",\"1\",\"MaterialGrade\"],\"0044\":[\"ST\",\"1\",\"MaterialPropertiesDescription\"],\"0045\":[\"ST\",\"1\",\"MaterialPropertiesFileFormatRetired\"],\"0046\":[\"LT\",\"1\",\"MaterialNotes\"],\"0050\":[\"CS\",\"1\",\"ComponentShape\"],\"0052\":[\"CS\",\"1\",\"CurvatureType\"],\"0054\":[\"DS\",\"1\",\"OuterDiameter\"],\"0056\":[\"DS\",\"1\",\"InnerDiameter\"],\"0100\":[\"LO\",\"1-n\",\"ComponentWelderIDs\"],\"0101\":[\"CS\",\"1\",\"SecondaryApprovalStatus\"],\"0102\":[\"DA\",\"1\",\"SecondaryReviewDate\"],\"0103\":[\"TM\",\"1\",\"SecondaryReviewTime\"],\"0104\":[\"PN\",\"1\",\"SecondaryReviewerName\"],\"0105\":[\"ST\",\"1\",\"RepairID\"],\"0106\":[\"SQ\",\"1\",\"MultipleComponentApprovalSequence\"],\"0107\":[\"CS\",\"1-n\",\"OtherApprovalStatus\"],\"0108\":[\"CS\",\"1-n\",\"OtherSecondaryApprovalStatus\"],1010:[\"ST\",\"1\",\"ActualEnvironmentalConditions\"],1020:[\"DA\",\"1\",\"ExpiryDate\"],1040:[\"ST\",\"1\",\"EnvironmentalConditions\"],2002:[\"SQ\",\"1\",\"EvaluatorSequence\"],2004:[\"IS\",\"1\",\"EvaluatorNumber\"],2006:[\"PN\",\"1\",\"EvaluatorName\"],2008:[\"IS\",\"1\",\"EvaluationAttempt\"],2012:[\"SQ\",\"1\",\"IndicationSequence\"],2014:[\"IS\",\"1\",\"IndicationNumber\"],2016:[\"SH\",\"1\",\"IndicationLabel\"],2018:[\"ST\",\"1\",\"IndicationDescription\"],\"201A\":[\"CS\",\"1-n\",\"IndicationType\"],\"201C\":[\"CS\",\"1\",\"IndicationDisposition\"],\"201E\":[\"SQ\",\"1\",\"IndicationROISequence\"],2030:[\"SQ\",\"1\",\"IndicationPhysicalPropertySequence\"],2032:[\"SH\",\"1\",\"PropertyLabel\"],2202:[\"IS\",\"1\",\"CoordinateSystemNumberOfAxes\"],2204:[\"SQ\",\"1\",\"CoordinateSystemAxesSequence\"],2206:[\"ST\",\"1\",\"CoordinateSystemAxisDescription\"],2208:[\"CS\",\"1\",\"CoordinateSystemDataSetMapping\"],\"220A\":[\"IS\",\"1\",\"CoordinateSystemAxisNumber\"],\"220C\":[\"CS\",\"1\",\"CoordinateSystemAxisType\"],\"220E\":[\"CS\",\"1\",\"CoordinateSystemAxisUnits\"],2210:[\"OB\",\"1\",\"CoordinateSystemAxisValues\"],2220:[\"SQ\",\"1\",\"CoordinateSystemTransformSequence\"],2222:[\"ST\",\"1\",\"TransformDescription\"],2224:[\"IS\",\"1\",\"TransformNumberOfAxes\"],2226:[\"IS\",\"1-n\",\"TransformOrderOfAxes\"],2228:[\"CS\",\"1\",\"TransformedAxisUnits\"],\"222A\":[\"DS\",\"1-n\",\"CoordinateSystemTransformRotationAndScaleMatrix\"],\"222C\":[\"DS\",\"1-n\",\"CoordinateSystemTransformTranslationMatrix\"],3011:[\"DS\",\"1\",\"InternalDetectorFrameTime\"],3012:[\"DS\",\"1\",\"NumberOfFramesIntegrated\"],3020:[\"SQ\",\"1\",\"DetectorTemperatureSequence\"],3022:[\"ST\",\"1\",\"SensorName\"],3024:[\"DS\",\"1\",\"HorizontalOffsetOfSensor\"],3026:[\"DS\",\"1\",\"VerticalOffsetOfSensor\"],3028:[\"DS\",\"1\",\"SensorTemperature\"],3040:[\"SQ\",\"1\",\"DarkCurrentSequence\"],3050:[\"ox\",\"1\",\"DarkCurrentCounts\"],3060:[\"SQ\",\"1\",\"GainCorrectionReferenceSequence\"],3070:[\"ox\",\"1\",\"AirCounts\"],3071:[\"DS\",\"1\",\"KVUsedInGainCalibration\"],3072:[\"DS\",\"1\",\"MAUsedInGainCalibration\"],3073:[\"DS\",\"1\",\"NumberOfFramesUsedForIntegration\"],3074:[\"LO\",\"1\",\"FilterMaterialUsedInGainCalibration\"],3075:[\"DS\",\"1\",\"FilterThicknessUsedInGainCalibration\"],3076:[\"DA\",\"1\",\"DateOfGainCalibration\"],3077:[\"TM\",\"1\",\"TimeOfGainCalibration\"],3080:[\"OB\",\"1\",\"BadPixelImage\"],3099:[\"LT\",\"1\",\"CalibrationNotes\"],3100:[\"LT\",\"1\",\"LinearityCorrectionTechnique\"],3101:[\"LT\",\"1\",\"BeamHardeningCorrectionTechnique\"],4002:[\"SQ\",\"1\",\"PulserEquipmentSequence\"],4004:[\"CS\",\"1\",\"PulserType\"],4006:[\"LT\",\"1\",\"PulserNotes\"],4008:[\"SQ\",\"1\",\"ReceiverEquipmentSequence\"],\"400A\":[\"CS\",\"1\",\"AmplifierType\"],\"400C\":[\"LT\",\"1\",\"ReceiverNotes\"],\"400E\":[\"SQ\",\"1\",\"PreAmplifierEquipmentSequence\"],\"400F\":[\"LT\",\"1\",\"PreAmplifierNotes\"],4010:[\"SQ\",\"1\",\"TransmitTransducerSequence\"],4011:[\"SQ\",\"1\",\"ReceiveTransducerSequence\"],4012:[\"US\",\"1\",\"NumberOfElements\"],4013:[\"CS\",\"1\",\"ElementShape\"],4014:[\"DS\",\"1\",\"ElementDimensionA\"],4015:[\"DS\",\"1\",\"ElementDimensionB\"],4016:[\"DS\",\"1\",\"ElementPitchA\"],4017:[\"DS\",\"1\",\"MeasuredBeamDimensionA\"],4018:[\"DS\",\"1\",\"MeasuredBeamDimensionB\"],4019:[\"DS\",\"1\",\"LocationOfMeasuredBeamDiameter\"],\"401A\":[\"DS\",\"1\",\"NominalFrequency\"],\"401B\":[\"DS\",\"1\",\"MeasuredCenterFrequency\"],\"401C\":[\"DS\",\"1\",\"MeasuredBandwidth\"],\"401D\":[\"DS\",\"1\",\"ElementPitchB\"],4020:[\"SQ\",\"1\",\"PulserSettingsSequence\"],4022:[\"DS\",\"1\",\"PulseWidth\"],4024:[\"DS\",\"1\",\"ExcitationFrequency\"],4026:[\"CS\",\"1\",\"ModulationType\"],4028:[\"DS\",\"1\",\"Damping\"],4030:[\"SQ\",\"1\",\"ReceiverSettingsSequence\"],4031:[\"DS\",\"1\",\"AcquiredSoundpathLength\"],4032:[\"CS\",\"1\",\"AcquisitionCompressionType\"],4033:[\"IS\",\"1\",\"AcquisitionSampleSize\"],4034:[\"DS\",\"1\",\"RectifierSmoothing\"],4035:[\"SQ\",\"1\",\"DACSequence\"],4036:[\"CS\",\"1\",\"DACType\"],4038:[\"DS\",\"1-n\",\"DACGainPoints\"],\"403A\":[\"DS\",\"1-n\",\"DACTimePoints\"],\"403C\":[\"DS\",\"1-n\",\"DACAmplitude\"],4040:[\"SQ\",\"1\",\"PreAmplifierSettingsSequence\"],4050:[\"SQ\",\"1\",\"TransmitTransducerSettingsSequence\"],4051:[\"SQ\",\"1\",\"ReceiveTransducerSettingsSequence\"],4052:[\"DS\",\"1\",\"IncidentAngle\"],4054:[\"ST\",\"1\",\"CouplingTechnique\"],4056:[\"ST\",\"1\",\"CouplingMedium\"],4057:[\"DS\",\"1\",\"CouplingVelocity\"],4058:[\"DS\",\"1\",\"ProbeCenterLocationX\"],4059:[\"DS\",\"1\",\"ProbeCenterLocationZ\"],\"405A\":[\"DS\",\"1\",\"SoundPathLength\"],\"405C\":[\"ST\",\"1\",\"DelayLawIdentifier\"],4060:[\"SQ\",\"1\",\"GateSettingsSequence\"],4062:[\"DS\",\"1\",\"GateThreshold\"],4064:[\"DS\",\"1\",\"VelocityOfSound\"],4070:[\"SQ\",\"1\",\"CalibrationSettingsSequence\"],4072:[\"ST\",\"1\",\"CalibrationProcedure\"],4074:[\"SH\",\"1\",\"ProcedureVersion\"],4076:[\"DA\",\"1\",\"ProcedureCreationDate\"],4078:[\"DA\",\"1\",\"ProcedureExpirationDate\"],\"407A\":[\"DA\",\"1\",\"ProcedureLastModifiedDate\"],\"407C\":[\"TM\",\"1-n\",\"CalibrationTime\"],\"407E\":[\"DA\",\"1-n\",\"CalibrationDate\"],4080:[\"SQ\",\"1\",\"ProbeDriveEquipmentSequence\"],4081:[\"CS\",\"1\",\"DriveType\"],4082:[\"LT\",\"1\",\"ProbeDriveNotes\"],4083:[\"SQ\",\"1\",\"DriveProbeSequence\"],4084:[\"DS\",\"1\",\"ProbeInductance\"],4085:[\"DS\",\"1\",\"ProbeResistance\"],4086:[\"SQ\",\"1\",\"ReceiveProbeSequence\"],4087:[\"SQ\",\"1\",\"ProbeDriveSettingsSequence\"],4088:[\"DS\",\"1\",\"BridgeResistors\"],4089:[\"DS\",\"1\",\"ProbeOrientationAngle\"],\"408B\":[\"DS\",\"1\",\"UserSelectedGainY\"],\"408C\":[\"DS\",\"1\",\"UserSelectedPhase\"],\"408D\":[\"DS\",\"1\",\"UserSelectedOffsetX\"],\"408E\":[\"DS\",\"1\",\"UserSelectedOffsetY\"],4091:[\"SQ\",\"1\",\"ChannelSettingsSequence\"],4092:[\"DS\",\"1\",\"ChannelThreshold\"],\"409A\":[\"SQ\",\"1\",\"ScannerSettingsSequence\"],\"409B\":[\"ST\",\"1\",\"ScanProcedure\"],\"409C\":[\"DS\",\"1\",\"TranslationRateX\"],\"409D\":[\"DS\",\"1\",\"TranslationRateY\"],\"409F\":[\"DS\",\"1\",\"ChannelOverlap\"],\"40A0\":[\"LO\",\"1-n\",\"ImageQualityIndicatorType\"],\"40A1\":[\"LO\",\"1-n\",\"ImageQualityIndicatorMaterial\"],\"40A2\":[\"LO\",\"1-n\",\"ImageQualityIndicatorSize\"],5002:[\"IS\",\"1\",\"LINACEnergy\"],5004:[\"IS\",\"1\",\"LINACOutput\"],5100:[\"US\",\"1\",\"ActiveAperture\"],5101:[\"DS\",\"1\",\"TotalAperture\"],5102:[\"DS\",\"1\",\"ApertureElevation\"],5103:[\"DS\",\"1\",\"MainLobeAngle\"],5104:[\"DS\",\"1\",\"MainRoofAngle\"],5105:[\"CS\",\"1\",\"ConnectorType\"],5106:[\"SH\",\"1\",\"WedgeModelNumber\"],5107:[\"DS\",\"1\",\"WedgeAngleFloat\"],5108:[\"DS\",\"1\",\"WedgeRoofAngle\"],5109:[\"CS\",\"1\",\"WedgeElement1Position\"],\"510A\":[\"DS\",\"1\",\"WedgeMaterialVelocity\"],\"510B\":[\"SH\",\"1\",\"WedgeMaterial\"],\"510C\":[\"DS\",\"1\",\"WedgeOffsetZ\"],\"510D\":[\"DS\",\"1\",\"WedgeOriginOffsetX\"],\"510E\":[\"DS\",\"1\",\"WedgeTimeDelay\"],\"510F\":[\"SH\",\"1\",\"WedgeName\"],5110:[\"SH\",\"1\",\"WedgeManufacturerName\"],5111:[\"LO\",\"1\",\"WedgeDescription\"],5112:[\"DS\",\"1\",\"NominalBeamAngle\"],5113:[\"DS\",\"1\",\"WedgeOffsetX\"],5114:[\"DS\",\"1\",\"WedgeOffsetY\"],5115:[\"DS\",\"1\",\"WedgeTotalLength\"],5116:[\"DS\",\"1\",\"WedgeInContactLength\"],5117:[\"DS\",\"1\",\"WedgeFrontGap\"],5118:[\"DS\",\"1\",\"WedgeTotalHeight\"],5119:[\"DS\",\"1\",\"WedgeFrontHeight\"],\"511A\":[\"DS\",\"1\",\"WedgeRearHeight\"],\"511B\":[\"DS\",\"1\",\"WedgeTotalWidth\"],\"511C\":[\"DS\",\"1\",\"WedgeInContactWidth\"],\"511D\":[\"DS\",\"1\",\"WedgeChamferHeight\"],\"511E\":[\"CS\",\"1\",\"WedgeCurve\"],\"511F\":[\"DS\",\"1\",\"RadiusAlongWedge\"]},\"0016\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"DS\",\"1\",\"WhitePoint\"],\"0002\":[\"DS\",\"3\",\"PrimaryChromaticities\"],\"0003\":[\"UT\",\"1\",\"BatteryLevel\"],\"0004\":[\"DS\",\"1\",\"ExposureTimeInSeconds\"],\"0005\":[\"DS\",\"1\",\"FNumber\"],\"0006\":[\"IS\",\"1\",\"OECFRows\"],\"0007\":[\"IS\",\"1\",\"OECFColumns\"],\"0008\":[\"UC\",\"1-n\",\"OECFColumnNames\"],\"0009\":[\"DS\",\"1-n\",\"OECFValues\"],\"000A\":[\"IS\",\"1\",\"SpatialFrequencyResponseRows\"],\"000B\":[\"IS\",\"1\",\"SpatialFrequencyResponseColumns\"],\"000C\":[\"UC\",\"1-n\",\"SpatialFrequencyResponseColumnNames\"],\"000D\":[\"DS\",\"1-n\",\"SpatialFrequencyResponseValues\"],\"000E\":[\"IS\",\"1\",\"ColorFilterArrayPatternRows\"],\"000F\":[\"IS\",\"1\",\"ColorFilterArrayPatternColumns\"],\"0010\":[\"DS\",\"1-n\",\"ColorFilterArrayPatternValues\"],\"0011\":[\"US\",\"1\",\"FlashFiringStatus\"],\"0012\":[\"US\",\"1\",\"FlashReturnStatus\"],\"0013\":[\"US\",\"1\",\"FlashMode\"],\"0014\":[\"US\",\"1\",\"FlashFunctionPresent\"],\"0015\":[\"US\",\"1\",\"FlashRedEyeMode\"],\"0016\":[\"US\",\"1\",\"ExposureProgram\"],\"0017\":[\"UT\",\"1\",\"SpectralSensitivity\"],\"0018\":[\"IS\",\"1\",\"PhotographicSensitivity\"],\"0019\":[\"IS\",\"1\",\"SelfTimerMode\"],\"001A\":[\"US\",\"1\",\"SensitivityType\"],\"001B\":[\"IS\",\"1\",\"StandardOutputSensitivity\"],\"001C\":[\"IS\",\"1\",\"RecommendedExposureIndex\"],\"001D\":[\"IS\",\"1\",\"ISOSpeed\"],\"001E\":[\"IS\",\"1\",\"ISOSpeedLatitudeyyy\"],\"001F\":[\"IS\",\"1\",\"ISOSpeedLatitudezzz\"],\"0020\":[\"UT\",\"1\",\"EXIFVersion\"],\"0021\":[\"DS\",\"1\",\"ShutterSpeedValue\"],\"0022\":[\"DS\",\"1\",\"ApertureValue\"],\"0023\":[\"DS\",\"1\",\"BrightnessValue\"],\"0024\":[\"DS\",\"1\",\"ExposureBiasValue\"],\"0025\":[\"DS\",\"1\",\"MaxApertureValue\"],\"0026\":[\"DS\",\"1\",\"SubjectDistance\"],\"0027\":[\"US\",\"1\",\"MeteringMode\"],\"0028\":[\"US\",\"1\",\"LightSource\"],\"0029\":[\"DS\",\"1\",\"FocalLength\"],\"002A\":[\"IS\",\"2-4\",\"SubjectArea\"],\"002B\":[\"OB\",\"1\",\"MakerNote\"],\"0030\":[\"DS\",\"1\",\"Temperature\"],\"0031\":[\"DS\",\"1\",\"Humidity\"],\"0032\":[\"DS\",\"1\",\"Pressure\"],\"0033\":[\"DS\",\"1\",\"WaterDepth\"],\"0034\":[\"DS\",\"1\",\"Acceleration\"],\"0035\":[\"DS\",\"1\",\"CameraElevationAngle\"],\"0036\":[\"DS\",\"1-2\",\"FlashEnergy\"],\"0037\":[\"IS\",\"2\",\"SubjectLocation\"],\"0038\":[\"DS\",\"1\",\"PhotographicExposureIndex\"],\"0039\":[\"US\",\"1\",\"SensingMethod\"],\"003A\":[\"US\",\"1\",\"FileSource\"],\"003B\":[\"US\",\"1\",\"SceneType\"],\"0041\":[\"US\",\"1\",\"CustomRendered\"],\"0042\":[\"US\",\"1\",\"ExposureMode\"],\"0043\":[\"US\",\"1\",\"WhiteBalance\"],\"0044\":[\"DS\",\"1\",\"DigitalZoomRatio\"],\"0045\":[\"IS\",\"1\",\"FocalLengthIn35mmFilm\"],\"0046\":[\"US\",\"1\",\"SceneCaptureType\"],\"0047\":[\"US\",\"1\",\"GainControl\"],\"0048\":[\"US\",\"1\",\"Contrast\"],\"0049\":[\"US\",\"1\",\"Saturation\"],\"004A\":[\"US\",\"1\",\"Sharpness\"],\"004B\":[\"OB\",\"1\",\"DeviceSettingDescription\"],\"004C\":[\"US\",\"1\",\"SubjectDistanceRange\"],\"004D\":[\"UT\",\"1\",\"CameraOwnerName\"],\"004E\":[\"DS\",\"4\",\"LensSpecification\"],\"004F\":[\"UT\",\"1\",\"LensMake\"],\"0050\":[\"UT\",\"1\",\"LensModel\"],\"0051\":[\"UT\",\"1\",\"LensSerialNumber\"],\"0061\":[\"CS\",\"1\",\"InteroperabilityIndex\"],\"0062\":[\"OB\",\"1\",\"InteroperabilityVersion\"],\"0070\":[\"OB\",\"1\",\"GPSVersionID\"],\"0071\":[\"CS\",\"1\",\"GPSLatitudeRef\"],\"0072\":[\"DS\",\"3\",\"GPSLatitude\"],\"0073\":[\"CS\",\"1\",\"GPSLongitudeRef\"],\"0074\":[\"DS\",\"3\",\"GPSLongitude\"],\"0075\":[\"US\",\"1\",\"GPSAltitudeRef\"],\"0076\":[\"DS\",\"1\",\"GPSAltitude\"],\"0077\":[\"DT\",\"1\",\"GPSTimeStamp\"],\"0078\":[\"UT\",\"1\",\"GPSSatellites\"],\"0079\":[\"CS\",\"1\",\"GPSStatus\"],\"007A\":[\"CS\",\"1\",\"GPSMeasureMode\"],\"007B\":[\"DS\",\"1\",\"GPSDOP\"],\"007C\":[\"CS\",\"1\",\"GPSSpeedRef\"],\"007D\":[\"DS\",\"1\",\"GPSSpeed\"],\"007E\":[\"CS\",\"1\",\"GPSTrackRef\"],\"007F\":[\"DS\",\"1\",\"GPSTrack\"],\"0080\":[\"CS\",\"1\",\"GPSImgDirectionRef\"],\"0081\":[\"DS\",\"1\",\"GPSImgDirection\"],\"0082\":[\"UT\",\"1\",\"GPSMapDatum\"],\"0083\":[\"CS\",\"1\",\"GPSDestLatitudeRef\"],\"0084\":[\"DS\",\"3\",\"GPSDestLatitude\"],\"0085\":[\"CS\",\"1\",\"GPSDestLongitudeRef\"],\"0086\":[\"DS\",\"3\",\"GPSDestLongitude\"],\"0087\":[\"CS\",\"1\",\"GPSDestBearingRef\"],\"0088\":[\"DS\",\"1\",\"GPSDestBearing\"],\"0089\":[\"CS\",\"1\",\"GPSDestDistanceRef\"],\"008A\":[\"DS\",\"1\",\"GPSDestDistance\"],\"008B\":[\"OB\",\"1\",\"GPSProcessingMethod\"],\"008C\":[\"OB\",\"1\",\"GPSAreaInformation\"],\"008D\":[\"DT\",\"1\",\"GPSDateStamp\"],\"008E\":[\"IS\",\"1\",\"GPSDifferential\"],1001:[\"CS\",\"1\",\"LightSourcePolarization\"],1002:[\"DS\",\"1\",\"EmitterColorTemperature\"],1003:[\"CS\",\"1\",\"ContactMethod\"],1004:[\"CS\",\"1-n\",\"ImmersionMedia\"],1005:[\"DS\",\"1\",\"OpticalMagnificationFactor\"]},\"0018\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"LO\",\"1\",\"ContrastBolusAgent\"],\"0012\":[\"SQ\",\"1\",\"ContrastBolusAgentSequence\"],\"0013\":[\"FL\",\"1\",\"ContrastBolusT1Relaxivity\"],\"0014\":[\"SQ\",\"1\",\"ContrastBolusAdministrationRouteSequence\"],\"0015\":[\"CS\",\"1\",\"BodyPartExamined\"],\"0020\":[\"CS\",\"1-n\",\"ScanningSequence\"],\"0021\":[\"CS\",\"1-n\",\"SequenceVariant\"],\"0022\":[\"CS\",\"1-n\",\"ScanOptions\"],\"0023\":[\"CS\",\"1\",\"MRAcquisitionType\"],\"0024\":[\"SH\",\"1\",\"SequenceName\"],\"0025\":[\"CS\",\"1\",\"AngioFlag\"],\"0026\":[\"SQ\",\"1\",\"InterventionDrugInformationSequence\"],\"0027\":[\"TM\",\"1\",\"InterventionDrugStopTime\"],\"0028\":[\"DS\",\"1\",\"InterventionDrugDose\"],\"0029\":[\"SQ\",\"1\",\"InterventionDrugCodeSequence\"],\"002A\":[\"SQ\",\"1\",\"AdditionalDrugSequence\"],\"0030\":[\"LO\",\"1-n\",\"Radionuclide\"],\"0031\":[\"LO\",\"1\",\"Radiopharmaceutical\"],\"0032\":[\"DS\",\"1\",\"EnergyWindowCenterline\"],\"0033\":[\"DS\",\"1-n\",\"EnergyWindowTotalWidth\"],\"0034\":[\"LO\",\"1\",\"InterventionDrugName\"],\"0035\":[\"TM\",\"1\",\"InterventionDrugStartTime\"],\"0036\":[\"SQ\",\"1\",\"InterventionSequence\"],\"0037\":[\"CS\",\"1\",\"TherapyType\"],\"0038\":[\"CS\",\"1\",\"InterventionStatus\"],\"0039\":[\"CS\",\"1\",\"TherapyDescription\"],\"003A\":[\"ST\",\"1\",\"InterventionDescription\"],\"0040\":[\"IS\",\"1\",\"CineRate\"],\"0042\":[\"CS\",\"1\",\"InitialCineRunState\"],\"0050\":[\"DS\",\"1\",\"SliceThickness\"],\"0060\":[\"DS\",\"1\",\"KVP\"],\"0061\":[\"DS\",\"1\",\"\"],\"0070\":[\"IS\",\"1\",\"CountsAccumulated\"],\"0071\":[\"CS\",\"1\",\"AcquisitionTerminationCondition\"],\"0072\":[\"DS\",\"1\",\"EffectiveDuration\"],\"0073\":[\"CS\",\"1\",\"AcquisitionStartCondition\"],\"0074\":[\"IS\",\"1\",\"AcquisitionStartConditionData\"],\"0075\":[\"IS\",\"1\",\"AcquisitionTerminationConditionData\"],\"0080\":[\"DS\",\"1\",\"RepetitionTime\"],\"0081\":[\"DS\",\"1\",\"EchoTime\"],\"0082\":[\"DS\",\"1\",\"InversionTime\"],\"0083\":[\"DS\",\"1\",\"NumberOfAverages\"],\"0084\":[\"DS\",\"1\",\"ImagingFrequency\"],\"0085\":[\"SH\",\"1\",\"ImagedNucleus\"],\"0086\":[\"IS\",\"1-n\",\"EchoNumbers\"],\"0087\":[\"DS\",\"1\",\"MagneticFieldStrength\"],\"0088\":[\"DS\",\"1\",\"SpacingBetweenSlices\"],\"0089\":[\"IS\",\"1\",\"NumberOfPhaseEncodingSteps\"],\"0090\":[\"DS\",\"1\",\"DataCollectionDiameter\"],\"0091\":[\"IS\",\"1\",\"EchoTrainLength\"],\"0093\":[\"DS\",\"1\",\"PercentSampling\"],\"0094\":[\"DS\",\"1\",\"PercentPhaseFieldOfView\"],\"0095\":[\"DS\",\"1\",\"PixelBandwidth\"],1e3:[\"LO\",\"1\",\"DeviceSerialNumber\"],1002:[\"UI\",\"1\",\"DeviceUID\"],1003:[\"LO\",\"1\",\"DeviceID\"],1004:[\"LO\",\"1\",\"PlateID\"],1005:[\"LO\",\"1\",\"GeneratorID\"],1006:[\"LO\",\"1\",\"GridID\"],1007:[\"LO\",\"1\",\"CassetteID\"],1008:[\"LO\",\"1\",\"GantryID\"],1009:[\"UT\",\"1\",\"UniqueDeviceIdentifier\"],\"100A\":[\"SQ\",\"1\",\"UDISequence\"],\"100B\":[\"UI\",\"1-n\",\"ManufacturerDeviceClassUID\"],1010:[\"LO\",\"1\",\"SecondaryCaptureDeviceID\"],1011:[\"LO\",\"1\",\"HardcopyCreationDeviceID\"],1012:[\"DA\",\"1\",\"DateOfSecondaryCapture\"],1014:[\"TM\",\"1\",\"TimeOfSecondaryCapture\"],1016:[\"LO\",\"1\",\"SecondaryCaptureDeviceManufacturer\"],1017:[\"LO\",\"1\",\"HardcopyDeviceManufacturer\"],1018:[\"LO\",\"1\",\"SecondaryCaptureDeviceManufacturerModelName\"],1019:[\"LO\",\"1-n\",\"SecondaryCaptureDeviceSoftwareVersions\"],\"101A\":[\"LO\",\"1-n\",\"HardcopyDeviceSoftwareVersion\"],\"101B\":[\"LO\",\"1\",\"HardcopyDeviceManufacturerModelName\"],1020:[\"LO\",\"1-n\",\"SoftwareVersions\"],1022:[\"SH\",\"1\",\"VideoImageFormatAcquired\"],1023:[\"LO\",\"1\",\"DigitalImageFormatAcquired\"],1030:[\"LO\",\"1\",\"ProtocolName\"],1040:[\"LO\",\"1\",\"ContrastBolusRoute\"],1041:[\"DS\",\"1\",\"ContrastBolusVolume\"],1042:[\"TM\",\"1\",\"ContrastBolusStartTime\"],1043:[\"TM\",\"1\",\"ContrastBolusStopTime\"],1044:[\"DS\",\"1\",\"ContrastBolusTotalDose\"],1045:[\"IS\",\"1\",\"SyringeCounts\"],1046:[\"DS\",\"1-n\",\"ContrastFlowRate\"],1047:[\"DS\",\"1-n\",\"ContrastFlowDuration\"],1048:[\"CS\",\"1\",\"ContrastBolusIngredient\"],1049:[\"DS\",\"1\",\"ContrastBolusIngredientConcentration\"],1050:[\"DS\",\"1\",\"SpatialResolution\"],1060:[\"DS\",\"1\",\"TriggerTime\"],1061:[\"LO\",\"1\",\"TriggerSourceOrType\"],1062:[\"IS\",\"1\",\"NominalInterval\"],1063:[\"DS\",\"1\",\"FrameTime\"],1064:[\"LO\",\"1\",\"CardiacFramingType\"],1065:[\"DS\",\"1-n\",\"FrameTimeVector\"],1066:[\"DS\",\"1\",\"FrameDelay\"],1067:[\"DS\",\"1\",\"ImageTriggerDelay\"],1068:[\"DS\",\"1\",\"MultiplexGroupTimeOffset\"],1069:[\"DS\",\"1\",\"TriggerTimeOffset\"],\"106A\":[\"CS\",\"1\",\"SynchronizationTrigger\"],\"106C\":[\"US\",\"2\",\"SynchronizationChannel\"],\"106E\":[\"UL\",\"1\",\"TriggerSamplePosition\"],1070:[\"LO\",\"1\",\"RadiopharmaceuticalRoute\"],1071:[\"DS\",\"1\",\"RadiopharmaceuticalVolume\"],1072:[\"TM\",\"1\",\"RadiopharmaceuticalStartTime\"],1073:[\"TM\",\"1\",\"RadiopharmaceuticalStopTime\"],1074:[\"DS\",\"1\",\"RadionuclideTotalDose\"],1075:[\"DS\",\"1\",\"RadionuclideHalfLife\"],1076:[\"DS\",\"1\",\"RadionuclidePositronFraction\"],1077:[\"DS\",\"1\",\"RadiopharmaceuticalSpecificActivity\"],1078:[\"DT\",\"1\",\"RadiopharmaceuticalStartDateTime\"],1079:[\"DT\",\"1\",\"RadiopharmaceuticalStopDateTime\"],1080:[\"CS\",\"1\",\"BeatRejectionFlag\"],1081:[\"IS\",\"1\",\"LowRRValue\"],1082:[\"IS\",\"1\",\"HighRRValue\"],1083:[\"IS\",\"1\",\"IntervalsAcquired\"],1084:[\"IS\",\"1\",\"IntervalsRejected\"],1085:[\"LO\",\"1\",\"PVCRejection\"],1086:[\"IS\",\"1\",\"SkipBeats\"],1088:[\"IS\",\"1\",\"HeartRate\"],1090:[\"IS\",\"1\",\"CardiacNumberOfImages\"],1094:[\"IS\",\"1\",\"TriggerWindow\"],1100:[\"DS\",\"1\",\"ReconstructionDiameter\"],1110:[\"DS\",\"1\",\"DistanceSourceToDetector\"],1111:[\"DS\",\"1\",\"DistanceSourceToPatient\"],1114:[\"DS\",\"1\",\"EstimatedRadiographicMagnificationFactor\"],1120:[\"DS\",\"1\",\"GantryDetectorTilt\"],1121:[\"DS\",\"1\",\"GantryDetectorSlew\"],1130:[\"DS\",\"1\",\"TableHeight\"],1131:[\"DS\",\"1\",\"TableTraverse\"],1134:[\"CS\",\"1\",\"TableMotion\"],1135:[\"DS\",\"1-n\",\"TableVerticalIncrement\"],1136:[\"DS\",\"1-n\",\"TableLateralIncrement\"],1137:[\"DS\",\"1-n\",\"TableLongitudinalIncrement\"],1138:[\"DS\",\"1\",\"TableAngle\"],\"113A\":[\"CS\",\"1\",\"TableType\"],1140:[\"CS\",\"1\",\"RotationDirection\"],1141:[\"DS\",\"1\",\"AngularPosition\"],1142:[\"DS\",\"1-n\",\"RadialPosition\"],1143:[\"DS\",\"1\",\"ScanArc\"],1144:[\"DS\",\"1\",\"AngularStep\"],1145:[\"DS\",\"1\",\"CenterOfRotationOffset\"],1146:[\"DS\",\"1-n\",\"RotationOffset\"],1147:[\"CS\",\"1\",\"FieldOfViewShape\"],1149:[\"IS\",\"1-2\",\"FieldOfViewDimensions\"],1150:[\"IS\",\"1\",\"ExposureTime\"],1151:[\"IS\",\"1\",\"XRayTubeCurrent\"],1152:[\"IS\",\"1\",\"Exposure\"],1153:[\"IS\",\"1\",\"ExposureInuAs\"],1154:[\"DS\",\"1\",\"AveragePulseWidth\"],1155:[\"CS\",\"1\",\"RadiationSetting\"],1156:[\"CS\",\"1\",\"RectificationType\"],\"115A\":[\"CS\",\"1\",\"RadiationMode\"],\"115E\":[\"DS\",\"1\",\"ImageAndFluoroscopyAreaDoseProduct\"],1160:[\"SH\",\"1\",\"FilterType\"],1161:[\"LO\",\"1-n\",\"TypeOfFilters\"],1162:[\"DS\",\"1\",\"IntensifierSize\"],1164:[\"DS\",\"2\",\"ImagerPixelSpacing\"],1166:[\"CS\",\"1-n\",\"Grid\"],1170:[\"IS\",\"1\",\"GeneratorPower\"],1180:[\"SH\",\"1\",\"CollimatorGridName\"],1181:[\"CS\",\"1\",\"CollimatorType\"],1182:[\"IS\",\"1-2\",\"FocalDistance\"],1183:[\"DS\",\"1-2\",\"XFocusCenter\"],1184:[\"DS\",\"1-2\",\"YFocusCenter\"],1190:[\"DS\",\"1-n\",\"FocalSpots\"],1191:[\"CS\",\"1\",\"AnodeTargetMaterial\"],\"11A0\":[\"DS\",\"1\",\"BodyPartThickness\"],\"11A2\":[\"DS\",\"1\",\"CompressionForce\"],\"11A3\":[\"DS\",\"1\",\"CompressionPressure\"],\"11A4\":[\"LO\",\"1\",\"PaddleDescription\"],\"11A5\":[\"DS\",\"1\",\"CompressionContactArea\"],\"11B0\":[\"LO\",\"1\",\"AcquisitionMode\"],\"11B1\":[\"LO\",\"1\",\"DoseModeName\"],\"11B2\":[\"CS\",\"1\",\"AcquiredSubtractionMaskFlag\"],\"11B3\":[\"CS\",\"1\",\"FluoroscopyPersistenceFlag\"],\"11B4\":[\"CS\",\"1\",\"FluoroscopyLastImageHoldPersistenceFlag\"],\"11B5\":[\"IS\",\"1\",\"UpperLimitNumberOfPersistentFluoroscopyFrames\"],\"11B6\":[\"CS\",\"1\",\"ContrastBolusAutoInjectionTriggerFlag\"],\"11B7\":[\"FD\",\"1\",\"ContrastBolusInjectionDelay\"],\"11B8\":[\"SQ\",\"1\",\"XAAcquisitionPhaseDetailsSequence\"],\"11B9\":[\"FD\",\"1\",\"XAAcquisitionFrameRate\"],\"11BA\":[\"SQ\",\"1\",\"XAPlaneDetailsSequence\"],\"11BB\":[\"LO\",\"1\",\"AcquisitionFieldOfViewLabel\"],\"11BC\":[\"SQ\",\"1\",\"XRayFilterDetailsSequence\"],\"11BD\":[\"FD\",\"1\",\"XAAcquisitionDuration\"],\"11BE\":[\"CS\",\"1\",\"ReconstructionPipelineType\"],\"11BF\":[\"SQ\",\"1\",\"ImageFilterDetailsSequence\"],\"11C0\":[\"CS\",\"1\",\"AppliedMaskSubtractionFlag\"],\"11C1\":[\"SQ\",\"1\",\"RequestedSeriesDescriptionCodeSequence\"],1200:[\"DA\",\"1-n\",\"DateOfLastCalibration\"],1201:[\"TM\",\"1-n\",\"TimeOfLastCalibration\"],1202:[\"DT\",\"1\",\"DateTimeOfLastCalibration\"],1203:[\"DT\",\"1\",\"CalibrationDateTime\"],1210:[\"SH\",\"1-n\",\"ConvolutionKernel\"],1240:[\"IS\",\"1-n\",\"UpperLowerPixelValues\"],1242:[\"IS\",\"1\",\"ActualFrameDuration\"],1243:[\"IS\",\"1\",\"CountRate\"],1244:[\"US\",\"1\",\"PreferredPlaybackSequencing\"],1250:[\"SH\",\"1\",\"ReceiveCoilName\"],1251:[\"SH\",\"1\",\"TransmitCoilName\"],1260:[\"SH\",\"1\",\"PlateType\"],1261:[\"LO\",\"1\",\"PhosphorType\"],1271:[\"FD\",\"1\",\"WaterEquivalentDiameter\"],1272:[\"SQ\",\"1\",\"WaterEquivalentDiameterCalculationMethodCodeSequence\"],1300:[\"DS\",\"1\",\"ScanVelocity\"],1301:[\"CS\",\"1-n\",\"WholeBodyTechnique\"],1302:[\"IS\",\"1\",\"ScanLength\"],1310:[\"US\",\"4\",\"AcquisitionMatrix\"],1312:[\"CS\",\"1\",\"InPlanePhaseEncodingDirection\"],1314:[\"DS\",\"1\",\"FlipAngle\"],1315:[\"CS\",\"1\",\"VariableFlipAngleFlag\"],1316:[\"DS\",\"1\",\"SAR\"],1318:[\"DS\",\"1\",\"dBdt\"],1320:[\"FL\",\"1\",\"B1rms\"],1400:[\"LO\",\"1\",\"AcquisitionDeviceProcessingDescription\"],1401:[\"LO\",\"1\",\"AcquisitionDeviceProcessingCode\"],1402:[\"CS\",\"1\",\"CassetteOrientation\"],1403:[\"CS\",\"1\",\"CassetteSize\"],1404:[\"US\",\"1\",\"ExposuresOnPlate\"],1405:[\"IS\",\"1\",\"RelativeXRayExposure\"],1411:[\"DS\",\"1\",\"ExposureIndex\"],1412:[\"DS\",\"1\",\"TargetExposureIndex\"],1413:[\"DS\",\"1\",\"DeviationIndex\"],1450:[\"DS\",\"1\",\"ColumnAngulation\"],1460:[\"DS\",\"1\",\"TomoLayerHeight\"],1470:[\"DS\",\"1\",\"TomoAngle\"],1480:[\"DS\",\"1\",\"TomoTime\"],1490:[\"CS\",\"1\",\"TomoType\"],1491:[\"CS\",\"1\",\"TomoClass\"],1495:[\"IS\",\"1\",\"NumberOfTomosynthesisSourceImages\"],1500:[\"CS\",\"1\",\"PositionerMotion\"],1508:[\"CS\",\"1\",\"PositionerType\"],1510:[\"DS\",\"1\",\"PositionerPrimaryAngle\"],1511:[\"DS\",\"1\",\"PositionerSecondaryAngle\"],1520:[\"DS\",\"1-n\",\"PositionerPrimaryAngleIncrement\"],1521:[\"DS\",\"1-n\",\"PositionerSecondaryAngleIncrement\"],1530:[\"DS\",\"1\",\"DetectorPrimaryAngle\"],1531:[\"DS\",\"1\",\"DetectorSecondaryAngle\"],1600:[\"CS\",\"1-3\",\"ShutterShape\"],1602:[\"IS\",\"1\",\"ShutterLeftVerticalEdge\"],1604:[\"IS\",\"1\",\"ShutterRightVerticalEdge\"],1606:[\"IS\",\"1\",\"ShutterUpperHorizontalEdge\"],1608:[\"IS\",\"1\",\"ShutterLowerHorizontalEdge\"],1610:[\"IS\",\"2\",\"CenterOfCircularShutter\"],1612:[\"IS\",\"1\",\"RadiusOfCircularShutter\"],1620:[\"IS\",\"2-2n\",\"VerticesOfThePolygonalShutter\"],1622:[\"US\",\"1\",\"ShutterPresentationValue\"],1623:[\"US\",\"1\",\"ShutterOverlayGroup\"],1624:[\"US\",\"3\",\"ShutterPresentationColorCIELabValue\"],1630:[\"CS\",\"1\",\"OutlineShapeType\"],1631:[\"FD\",\"1\",\"OutlineLeftVerticalEdge\"],1632:[\"FD\",\"1\",\"OutlineRightVerticalEdge\"],1633:[\"FD\",\"1\",\"OutlineUpperHorizontalEdge\"],1634:[\"FD\",\"1\",\"OutlineLowerHorizontalEdge\"],1635:[\"FD\",\"2\",\"CenterOfCircularOutline\"],1636:[\"FD\",\"1\",\"DiameterOfCircularOutline\"],1637:[\"UL\",\"1\",\"NumberOfPolygonalVertices\"],1638:[\"OF\",\"1\",\"VerticesOfThePolygonalOutline\"],1700:[\"CS\",\"1-3\",\"CollimatorShape\"],1702:[\"IS\",\"1\",\"CollimatorLeftVerticalEdge\"],1704:[\"IS\",\"1\",\"CollimatorRightVerticalEdge\"],1706:[\"IS\",\"1\",\"CollimatorUpperHorizontalEdge\"],1708:[\"IS\",\"1\",\"CollimatorLowerHorizontalEdge\"],1710:[\"IS\",\"2\",\"CenterOfCircularCollimator\"],1712:[\"IS\",\"1\",\"RadiusOfCircularCollimator\"],1720:[\"IS\",\"2-2n\",\"VerticesOfThePolygonalCollimator\"],1800:[\"CS\",\"1\",\"AcquisitionTimeSynchronized\"],1801:[\"SH\",\"1\",\"TimeSource\"],1802:[\"CS\",\"1\",\"TimeDistributionProtocol\"],1803:[\"LO\",\"1\",\"NTPSourceAddress\"],2001:[\"IS\",\"1-n\",\"PageNumberVector\"],2002:[\"SH\",\"1-n\",\"FrameLabelVector\"],2003:[\"DS\",\"1-n\",\"FramePrimaryAngleVector\"],2004:[\"DS\",\"1-n\",\"FrameSecondaryAngleVector\"],2005:[\"DS\",\"1-n\",\"SliceLocationVector\"],2006:[\"SH\",\"1-n\",\"DisplayWindowLabelVector\"],2010:[\"DS\",\"2\",\"NominalScannedPixelSpacing\"],2020:[\"CS\",\"1\",\"DigitizingDeviceTransportDirection\"],2030:[\"DS\",\"1\",\"RotationOfScannedFilm\"],2041:[\"SQ\",\"1\",\"BiopsyTargetSequence\"],2042:[\"UI\",\"1\",\"TargetUID\"],2043:[\"FL\",\"2\",\"LocalizingCursorPosition\"],2044:[\"FL\",\"3\",\"CalculatedTargetPosition\"],2045:[\"SH\",\"1\",\"TargetLabel\"],2046:[\"FL\",\"1\",\"DisplayedZValue\"],3100:[\"CS\",\"1\",\"IVUSAcquisition\"],3101:[\"DS\",\"1\",\"IVUSPullbackRate\"],3102:[\"DS\",\"1\",\"IVUSGatedRate\"],3103:[\"IS\",\"1\",\"IVUSPullbackStartFrameNumber\"],3104:[\"IS\",\"1\",\"IVUSPullbackStopFrameNumber\"],3105:[\"IS\",\"1-n\",\"LesionNumber\"],4e3:[\"LT\",\"1\",\"AcquisitionComments\"],5e3:[\"SH\",\"1-n\",\"OutputPower\"],5010:[\"LO\",\"1-n\",\"TransducerData\"],5011:[\"SQ\",\"1\",\"TransducerIdentificationSequence\"],5012:[\"DS\",\"1\",\"FocusDepth\"],5020:[\"LO\",\"1\",\"ProcessingFunction\"],5021:[\"LO\",\"1\",\"PostprocessingFunction\"],5022:[\"DS\",\"1\",\"MechanicalIndex\"],5024:[\"DS\",\"1\",\"BoneThermalIndex\"],5026:[\"DS\",\"1\",\"CranialThermalIndex\"],5027:[\"DS\",\"1\",\"SoftTissueThermalIndex\"],5028:[\"DS\",\"1\",\"SoftTissueFocusThermalIndex\"],5029:[\"DS\",\"1\",\"SoftTissueSurfaceThermalIndex\"],5030:[\"DS\",\"1\",\"DynamicRange\"],5040:[\"DS\",\"1\",\"TotalGain\"],5050:[\"IS\",\"1\",\"DepthOfScanField\"],5100:[\"CS\",\"1\",\"PatientPosition\"],5101:[\"CS\",\"1\",\"ViewPosition\"],5104:[\"SQ\",\"1\",\"ProjectionEponymousNameCodeSequence\"],5210:[\"DS\",\"6\",\"ImageTransformationMatrix\"],5212:[\"DS\",\"3\",\"ImageTranslationVector\"],6e3:[\"DS\",\"1\",\"Sensitivity\"],6011:[\"SQ\",\"1\",\"SequenceOfUltrasoundRegions\"],6012:[\"US\",\"1\",\"RegionSpatialFormat\"],6014:[\"US\",\"1\",\"RegionDataType\"],6016:[\"UL\",\"1\",\"RegionFlags\"],6018:[\"UL\",\"1\",\"RegionLocationMinX0\"],\"601A\":[\"UL\",\"1\",\"RegionLocationMinY0\"],\"601C\":[\"UL\",\"1\",\"RegionLocationMaxX1\"],\"601E\":[\"UL\",\"1\",\"RegionLocationMaxY1\"],6020:[\"SL\",\"1\",\"ReferencePixelX0\"],6022:[\"SL\",\"1\",\"ReferencePixelY0\"],6024:[\"US\",\"1\",\"PhysicalUnitsXDirection\"],6026:[\"US\",\"1\",\"PhysicalUnitsYDirection\"],6028:[\"FD\",\"1\",\"ReferencePixelPhysicalValueX\"],\"602A\":[\"FD\",\"1\",\"ReferencePixelPhysicalValueY\"],\"602C\":[\"FD\",\"1\",\"PhysicalDeltaX\"],\"602E\":[\"FD\",\"1\",\"PhysicalDeltaY\"],6030:[\"UL\",\"1\",\"TransducerFrequency\"],6031:[\"CS\",\"1\",\"TransducerType\"],6032:[\"UL\",\"1\",\"PulseRepetitionFrequency\"],6034:[\"FD\",\"1\",\"DopplerCorrectionAngle\"],6036:[\"FD\",\"1\",\"SteeringAngle\"],6038:[\"UL\",\"1\",\"DopplerSampleVolumeXPositionRetired\"],6039:[\"SL\",\"1\",\"DopplerSampleVolumeXPosition\"],\"603A\":[\"UL\",\"1\",\"DopplerSampleVolumeYPositionRetired\"],\"603B\":[\"SL\",\"1\",\"DopplerSampleVolumeYPosition\"],\"603C\":[\"UL\",\"1\",\"TMLinePositionX0Retired\"],\"603D\":[\"SL\",\"1\",\"TMLinePositionX0\"],\"603E\":[\"UL\",\"1\",\"TMLinePositionY0Retired\"],\"603F\":[\"SL\",\"1\",\"TMLinePositionY0\"],6040:[\"UL\",\"1\",\"TMLinePositionX1Retired\"],6041:[\"SL\",\"1\",\"TMLinePositionX1\"],6042:[\"UL\",\"1\",\"TMLinePositionY1Retired\"],6043:[\"SL\",\"1\",\"TMLinePositionY1\"],6044:[\"US\",\"1\",\"PixelComponentOrganization\"],6046:[\"UL\",\"1\",\"PixelComponentMask\"],6048:[\"UL\",\"1\",\"PixelComponentRangeStart\"],\"604A\":[\"UL\",\"1\",\"PixelComponentRangeStop\"],\"604C\":[\"US\",\"1\",\"PixelComponentPhysicalUnits\"],\"604E\":[\"US\",\"1\",\"PixelComponentDataType\"],6050:[\"UL\",\"1\",\"NumberOfTableBreakPoints\"],6052:[\"UL\",\"1-n\",\"TableOfXBreakPoints\"],6054:[\"FD\",\"1-n\",\"TableOfYBreakPoints\"],6056:[\"UL\",\"1\",\"NumberOfTableEntries\"],6058:[\"UL\",\"1-n\",\"TableOfPixelValues\"],\"605A\":[\"FL\",\"1-n\",\"TableOfParameterValues\"],6060:[\"FL\",\"1-n\",\"RWaveTimeVector\"],6070:[\"US\",\"1\",\"ActiveImageAreaOverlayGroup\"],7e3:[\"CS\",\"1\",\"DetectorConditionsNominalFlag\"],7001:[\"DS\",\"1\",\"DetectorTemperature\"],7004:[\"CS\",\"1\",\"DetectorType\"],7005:[\"CS\",\"1\",\"DetectorConfiguration\"],7006:[\"LT\",\"1\",\"DetectorDescription\"],7008:[\"LT\",\"1\",\"DetectorMode\"],\"700A\":[\"SH\",\"1\",\"DetectorID\"],\"700C\":[\"DA\",\"1\",\"DateOfLastDetectorCalibration\"],\"700E\":[\"TM\",\"1\",\"TimeOfLastDetectorCalibration\"],7010:[\"IS\",\"1\",\"ExposuresOnDetectorSinceLastCalibration\"],7011:[\"IS\",\"1\",\"ExposuresOnDetectorSinceManufactured\"],7012:[\"DS\",\"1\",\"DetectorTimeSinceLastExposure\"],7014:[\"DS\",\"1\",\"DetectorActiveTime\"],7016:[\"DS\",\"1\",\"DetectorActivationOffsetFromExposure\"],\"701A\":[\"DS\",\"2\",\"DetectorBinning\"],7020:[\"DS\",\"2\",\"DetectorElementPhysicalSize\"],7022:[\"DS\",\"2\",\"DetectorElementSpacing\"],7024:[\"CS\",\"1\",\"DetectorActiveShape\"],7026:[\"DS\",\"1-2\",\"DetectorActiveDimensions\"],7028:[\"DS\",\"2\",\"DetectorActiveOrigin\"],\"702A\":[\"LO\",\"1\",\"DetectorManufacturerName\"],\"702B\":[\"LO\",\"1\",\"DetectorManufacturerModelName\"],7030:[\"DS\",\"2\",\"FieldOfViewOrigin\"],7032:[\"DS\",\"1\",\"FieldOfViewRotation\"],7034:[\"CS\",\"1\",\"FieldOfViewHorizontalFlip\"],7036:[\"FL\",\"2\",\"PixelDataAreaOriginRelativeToFOV\"],7038:[\"FL\",\"1\",\"PixelDataAreaRotationAngleRelativeToFOV\"],7040:[\"LT\",\"1\",\"GridAbsorbingMaterial\"],7041:[\"LT\",\"1\",\"GridSpacingMaterial\"],7042:[\"DS\",\"1\",\"GridThickness\"],7044:[\"DS\",\"1\",\"GridPitch\"],7046:[\"IS\",\"2\",\"GridAspectRatio\"],7048:[\"DS\",\"1\",\"GridPeriod\"],\"704C\":[\"DS\",\"1\",\"GridFocalDistance\"],7050:[\"CS\",\"1-n\",\"FilterMaterial\"],7052:[\"DS\",\"1-n\",\"FilterThicknessMinimum\"],7054:[\"DS\",\"1-n\",\"FilterThicknessMaximum\"],7056:[\"FL\",\"1-n\",\"FilterBeamPathLengthMinimum\"],7058:[\"FL\",\"1-n\",\"FilterBeamPathLengthMaximum\"],7060:[\"CS\",\"1\",\"ExposureControlMode\"],7062:[\"LT\",\"1\",\"ExposureControlModeDescription\"],7064:[\"CS\",\"1\",\"ExposureStatus\"],7065:[\"DS\",\"1\",\"PhototimerSetting\"],8150:[\"DS\",\"1\",\"ExposureTimeInuS\"],8151:[\"DS\",\"1\",\"XRayTubeCurrentInuA\"],9004:[\"CS\",\"1\",\"ContentQualification\"],9005:[\"SH\",\"1\",\"PulseSequenceName\"],9006:[\"SQ\",\"1\",\"MRImagingModifierSequence\"],9008:[\"CS\",\"1\",\"EchoPulseSequence\"],9009:[\"CS\",\"1\",\"InversionRecovery\"],9010:[\"CS\",\"1\",\"FlowCompensation\"],9011:[\"CS\",\"1\",\"MultipleSpinEcho\"],9012:[\"CS\",\"1\",\"MultiPlanarExcitation\"],9014:[\"CS\",\"1\",\"PhaseContrast\"],9015:[\"CS\",\"1\",\"TimeOfFlightContrast\"],9016:[\"CS\",\"1\",\"Spoiling\"],9017:[\"CS\",\"1\",\"SteadyStatePulseSequence\"],9018:[\"CS\",\"1\",\"EchoPlanarPulseSequence\"],9019:[\"FD\",\"1\",\"TagAngleFirstAxis\"],9020:[\"CS\",\"1\",\"MagnetizationTransfer\"],9021:[\"CS\",\"1\",\"T2Preparation\"],9022:[\"CS\",\"1\",\"BloodSignalNulling\"],9024:[\"CS\",\"1\",\"SaturationRecovery\"],9025:[\"CS\",\"1\",\"SpectrallySelectedSuppression\"],9026:[\"CS\",\"1\",\"SpectrallySelectedExcitation\"],9027:[\"CS\",\"1\",\"SpatialPresaturation\"],9028:[\"CS\",\"1\",\"Tagging\"],9029:[\"CS\",\"1\",\"OversamplingPhase\"],9030:[\"FD\",\"1\",\"TagSpacingFirstDimension\"],9032:[\"CS\",\"1\",\"GeometryOfKSpaceTraversal\"],9033:[\"CS\",\"1\",\"SegmentedKSpaceTraversal\"],9034:[\"CS\",\"1\",\"RectilinearPhaseEncodeReordering\"],9035:[\"FD\",\"1\",\"TagThickness\"],9036:[\"CS\",\"1\",\"PartialFourierDirection\"],9037:[\"CS\",\"1\",\"CardiacSynchronizationTechnique\"],9041:[\"LO\",\"1\",\"ReceiveCoilManufacturerName\"],9042:[\"SQ\",\"1\",\"MRReceiveCoilSequence\"],9043:[\"CS\",\"1\",\"ReceiveCoilType\"],9044:[\"CS\",\"1\",\"QuadratureReceiveCoil\"],9045:[\"SQ\",\"1\",\"MultiCoilDefinitionSequence\"],9046:[\"LO\",\"1\",\"MultiCoilConfiguration\"],9047:[\"SH\",\"1\",\"MultiCoilElementName\"],9048:[\"CS\",\"1\",\"MultiCoilElementUsed\"],9049:[\"SQ\",\"1\",\"MRTransmitCoilSequence\"],9050:[\"LO\",\"1\",\"TransmitCoilManufacturerName\"],9051:[\"CS\",\"1\",\"TransmitCoilType\"],9052:[\"FD\",\"1-2\",\"SpectralWidth\"],9053:[\"FD\",\"1-2\",\"ChemicalShiftReference\"],9054:[\"CS\",\"1\",\"VolumeLocalizationTechnique\"],9058:[\"US\",\"1\",\"MRAcquisitionFrequencyEncodingSteps\"],9059:[\"CS\",\"1\",\"Decoupling\"],9060:[\"CS\",\"1-2\",\"DecoupledNucleus\"],9061:[\"FD\",\"1-2\",\"DecouplingFrequency\"],9062:[\"CS\",\"1\",\"DecouplingMethod\"],9063:[\"FD\",\"1-2\",\"DecouplingChemicalShiftReference\"],9064:[\"CS\",\"1\",\"KSpaceFiltering\"],9065:[\"CS\",\"1-2\",\"TimeDomainFiltering\"],9066:[\"US\",\"1-2\",\"NumberOfZeroFills\"],9067:[\"CS\",\"1\",\"BaselineCorrection\"],9069:[\"FD\",\"1\",\"ParallelReductionFactorInPlane\"],9070:[\"FD\",\"1\",\"CardiacRRIntervalSpecified\"],9073:[\"FD\",\"1\",\"AcquisitionDuration\"],9074:[\"DT\",\"1\",\"FrameAcquisitionDateTime\"],9075:[\"CS\",\"1\",\"DiffusionDirectionality\"],9076:[\"SQ\",\"1\",\"DiffusionGradientDirectionSequence\"],9077:[\"CS\",\"1\",\"ParallelAcquisition\"],9078:[\"CS\",\"1\",\"ParallelAcquisitionTechnique\"],9079:[\"FD\",\"1-n\",\"InversionTimes\"],9080:[\"ST\",\"1\",\"MetaboliteMapDescription\"],9081:[\"CS\",\"1\",\"PartialFourier\"],9082:[\"FD\",\"1\",\"EffectiveEchoTime\"],9083:[\"SQ\",\"1\",\"MetaboliteMapCodeSequence\"],9084:[\"SQ\",\"1\",\"ChemicalShiftSequence\"],9085:[\"CS\",\"1\",\"CardiacSignalSource\"],9087:[\"FD\",\"1\",\"DiffusionBValue\"],9089:[\"FD\",\"3\",\"DiffusionGradientOrientation\"],9090:[\"FD\",\"3\",\"VelocityEncodingDirection\"],9091:[\"FD\",\"1\",\"VelocityEncodingMinimumValue\"],9092:[\"SQ\",\"1\",\"VelocityEncodingAcquisitionSequence\"],9093:[\"US\",\"1\",\"NumberOfKSpaceTrajectories\"],9094:[\"CS\",\"1\",\"CoverageOfKSpace\"],9095:[\"UL\",\"1\",\"SpectroscopyAcquisitionPhaseRows\"],9096:[\"FD\",\"1\",\"ParallelReductionFactorInPlaneRetired\"],9098:[\"FD\",\"1-2\",\"TransmitterFrequency\"],9100:[\"CS\",\"1-2\",\"ResonantNucleus\"],9101:[\"CS\",\"1\",\"FrequencyCorrection\"],9103:[\"SQ\",\"1\",\"MRSpectroscopyFOVGeometrySequence\"],9104:[\"FD\",\"1\",\"SlabThickness\"],9105:[\"FD\",\"3\",\"SlabOrientation\"],9106:[\"FD\",\"3\",\"MidSlabPosition\"],9107:[\"SQ\",\"1\",\"MRSpatialSaturationSequence\"],9112:[\"SQ\",\"1\",\"MRTimingAndRelatedParametersSequence\"],9114:[\"SQ\",\"1\",\"MREchoSequence\"],9115:[\"SQ\",\"1\",\"MRModifierSequence\"],9117:[\"SQ\",\"1\",\"MRDiffusionSequence\"],9118:[\"SQ\",\"1\",\"CardiacSynchronizationSequence\"],9119:[\"SQ\",\"1\",\"MRAveragesSequence\"],9125:[\"SQ\",\"1\",\"MRFOVGeometrySequence\"],9126:[\"SQ\",\"1\",\"VolumeLocalizationSequence\"],9127:[\"UL\",\"1\",\"SpectroscopyAcquisitionDataColumns\"],9147:[\"CS\",\"1\",\"DiffusionAnisotropyType\"],9151:[\"DT\",\"1\",\"FrameReferenceDateTime\"],9152:[\"SQ\",\"1\",\"MRMetaboliteMapSequence\"],9155:[\"FD\",\"1\",\"ParallelReductionFactorOutOfPlane\"],9159:[\"UL\",\"1\",\"SpectroscopyAcquisitionOutOfPlanePhaseSteps\"],9166:[\"CS\",\"1\",\"BulkMotionStatus\"],9168:[\"FD\",\"1\",\"ParallelReductionFactorSecondInPlane\"],9169:[\"CS\",\"1\",\"CardiacBeatRejectionTechnique\"],9170:[\"CS\",\"1\",\"RespiratoryMotionCompensationTechnique\"],9171:[\"CS\",\"1\",\"RespiratorySignalSource\"],9172:[\"CS\",\"1\",\"BulkMotionCompensationTechnique\"],9173:[\"CS\",\"1\",\"BulkMotionSignalSource\"],9174:[\"CS\",\"1\",\"ApplicableSafetyStandardAgency\"],9175:[\"LO\",\"1\",\"ApplicableSafetyStandardDescription\"],9176:[\"SQ\",\"1\",\"OperatingModeSequence\"],9177:[\"CS\",\"1\",\"OperatingModeType\"],9178:[\"CS\",\"1\",\"OperatingMode\"],9179:[\"CS\",\"1\",\"SpecificAbsorptionRateDefinition\"],9180:[\"CS\",\"1\",\"GradientOutputType\"],9181:[\"FD\",\"1\",\"SpecificAbsorptionRateValue\"],9182:[\"FD\",\"1\",\"GradientOutput\"],9183:[\"CS\",\"1\",\"FlowCompensationDirection\"],9184:[\"FD\",\"1\",\"TaggingDelay\"],9185:[\"ST\",\"1\",\"RespiratoryMotionCompensationTechniqueDescription\"],9186:[\"SH\",\"1\",\"RespiratorySignalSourceID\"],9195:[\"FD\",\"1\",\"ChemicalShiftMinimumIntegrationLimitInHz\"],9196:[\"FD\",\"1\",\"ChemicalShiftMaximumIntegrationLimitInHz\"],9197:[\"SQ\",\"1\",\"MRVelocityEncodingSequence\"],9198:[\"CS\",\"1\",\"FirstOrderPhaseCorrection\"],9199:[\"CS\",\"1\",\"WaterReferencedPhaseCorrection\"],9200:[\"CS\",\"1\",\"MRSpectroscopyAcquisitionType\"],9214:[\"CS\",\"1\",\"RespiratoryCyclePosition\"],9217:[\"FD\",\"1\",\"VelocityEncodingMaximumValue\"],9218:[\"FD\",\"1\",\"TagSpacingSecondDimension\"],9219:[\"SS\",\"1\",\"TagAngleSecondAxis\"],9220:[\"FD\",\"1\",\"FrameAcquisitionDuration\"],9226:[\"SQ\",\"1\",\"MRImageFrameTypeSequence\"],9227:[\"SQ\",\"1\",\"MRSpectroscopyFrameTypeSequence\"],9231:[\"US\",\"1\",\"MRAcquisitionPhaseEncodingStepsInPlane\"],9232:[\"US\",\"1\",\"MRAcquisitionPhaseEncodingStepsOutOfPlane\"],9234:[\"UL\",\"1\",\"SpectroscopyAcquisitionPhaseColumns\"],9236:[\"CS\",\"1\",\"CardiacCyclePosition\"],9239:[\"SQ\",\"1\",\"SpecificAbsorptionRateSequence\"],9240:[\"US\",\"1\",\"RFEchoTrainLength\"],9241:[\"US\",\"1\",\"GradientEchoTrainLength\"],9250:[\"CS\",\"1\",\"ArterialSpinLabelingContrast\"],9251:[\"SQ\",\"1\",\"MRArterialSpinLabelingSequence\"],9252:[\"LO\",\"1\",\"ASLTechniqueDescription\"],9253:[\"US\",\"1\",\"ASLSlabNumber\"],9254:[\"FD\",\"1\",\"ASLSlabThickness\"],9255:[\"FD\",\"3\",\"ASLSlabOrientation\"],9256:[\"FD\",\"3\",\"ASLMidSlabPosition\"],9257:[\"CS\",\"1\",\"ASLContext\"],9258:[\"UL\",\"1\",\"ASLPulseTrainDuration\"],9259:[\"CS\",\"1\",\"ASLCrusherFlag\"],\"925A\":[\"FD\",\"1\",\"ASLCrusherFlowLimit\"],\"925B\":[\"LO\",\"1\",\"ASLCrusherDescription\"],\"925C\":[\"CS\",\"1\",\"ASLBolusCutoffFlag\"],\"925D\":[\"SQ\",\"1\",\"ASLBolusCutoffTimingSequence\"],\"925E\":[\"LO\",\"1\",\"ASLBolusCutoffTechnique\"],\"925F\":[\"UL\",\"1\",\"ASLBolusCutoffDelayTime\"],9260:[\"SQ\",\"1\",\"ASLSlabSequence\"],9295:[\"FD\",\"1\",\"ChemicalShiftMinimumIntegrationLimitInppm\"],9296:[\"FD\",\"1\",\"ChemicalShiftMaximumIntegrationLimitInppm\"],9297:[\"CS\",\"1\",\"WaterReferenceAcquisition\"],9298:[\"IS\",\"1\",\"EchoPeakPosition\"],9301:[\"SQ\",\"1\",\"CTAcquisitionTypeSequence\"],9302:[\"CS\",\"1\",\"AcquisitionType\"],9303:[\"FD\",\"1\",\"TubeAngle\"],9304:[\"SQ\",\"1\",\"CTAcquisitionDetailsSequence\"],9305:[\"FD\",\"1\",\"RevolutionTime\"],9306:[\"FD\",\"1\",\"SingleCollimationWidth\"],9307:[\"FD\",\"1\",\"TotalCollimationWidth\"],9308:[\"SQ\",\"1\",\"CTTableDynamicsSequence\"],9309:[\"FD\",\"1\",\"TableSpeed\"],9310:[\"FD\",\"1\",\"TableFeedPerRotation\"],9311:[\"FD\",\"1\",\"SpiralPitchFactor\"],9312:[\"SQ\",\"1\",\"CTGeometrySequence\"],9313:[\"FD\",\"3\",\"DataCollectionCenterPatient\"],9314:[\"SQ\",\"1\",\"CTReconstructionSequence\"],9315:[\"CS\",\"1\",\"ReconstructionAlgorithm\"],9316:[\"CS\",\"1\",\"ConvolutionKernelGroup\"],9317:[\"FD\",\"2\",\"ReconstructionFieldOfView\"],9318:[\"FD\",\"3\",\"ReconstructionTargetCenterPatient\"],9319:[\"FD\",\"1\",\"ReconstructionAngle\"],9320:[\"SH\",\"1\",\"ImageFilter\"],9321:[\"SQ\",\"1\",\"CTExposureSequence\"],9322:[\"FD\",\"2\",\"ReconstructionPixelSpacing\"],9323:[\"CS\",\"1-n\",\"ExposureModulationType\"],9324:[\"FD\",\"1\",\"EstimatedDoseSaving\"],9325:[\"SQ\",\"1\",\"CTXRayDetailsSequence\"],9326:[\"SQ\",\"1\",\"CTPositionSequence\"],9327:[\"FD\",\"1\",\"TablePosition\"],9328:[\"FD\",\"1\",\"ExposureTimeInms\"],9329:[\"SQ\",\"1\",\"CTImageFrameTypeSequence\"],9330:[\"FD\",\"1\",\"XRayTubeCurrentInmA\"],9332:[\"FD\",\"1\",\"ExposureInmAs\"],9333:[\"CS\",\"1\",\"ConstantVolumeFlag\"],9334:[\"CS\",\"1\",\"FluoroscopyFlag\"],9335:[\"FD\",\"1\",\"DistanceSourceToDataCollectionCenter\"],9337:[\"US\",\"1\",\"ContrastBolusAgentNumber\"],9338:[\"SQ\",\"1\",\"ContrastBolusIngredientCodeSequence\"],9340:[\"SQ\",\"1\",\"ContrastAdministrationProfileSequence\"],9341:[\"SQ\",\"1\",\"ContrastBolusUsageSequence\"],9342:[\"CS\",\"1\",\"ContrastBolusAgentAdministered\"],9343:[\"CS\",\"1\",\"ContrastBolusAgentDetected\"],9344:[\"CS\",\"1\",\"ContrastBolusAgentPhase\"],9345:[\"FD\",\"1\",\"CTDIvol\"],9346:[\"SQ\",\"1\",\"CTDIPhantomTypeCodeSequence\"],9351:[\"FL\",\"1\",\"CalciumScoringMassFactorPatient\"],9352:[\"FL\",\"3\",\"CalciumScoringMassFactorDevice\"],9353:[\"FL\",\"1\",\"EnergyWeightingFactor\"],9360:[\"SQ\",\"1\",\"CTAdditionalXRaySourceSequence\"],9361:[\"CS\",\"1\",\"MultienergyCTAcquisition\"],9362:[\"SQ\",\"1\",\"MultienergyCTAcquisitionSequence\"],9363:[\"SQ\",\"1\",\"MultienergyCTProcessingSequence\"],9364:[\"SQ\",\"1\",\"MultienergyCTCharacteristicsSequence\"],9365:[\"SQ\",\"1\",\"MultienergyCTXRaySourceSequence\"],9366:[\"US\",\"1\",\"XRaySourceIndex\"],9367:[\"UC\",\"1\",\"XRaySourceID\"],9368:[\"CS\",\"1\",\"MultienergySourceTechnique\"],9369:[\"DT\",\"1\",\"SourceStartDateTime\"],\"936A\":[\"DT\",\"1\",\"SourceEndDateTime\"],\"936B\":[\"US\",\"1\",\"SwitchingPhaseNumber\"],\"936C\":[\"DS\",\"1\",\"SwitchingPhaseNominalDuration\"],\"936D\":[\"DS\",\"1\",\"SwitchingPhaseTransitionDuration\"],\"936E\":[\"DS\",\"1\",\"EffectiveBinEnergy\"],\"936F\":[\"SQ\",\"1\",\"MultienergyCTXRayDetectorSequence\"],9370:[\"US\",\"1\",\"XRayDetectorIndex\"],9371:[\"UC\",\"1\",\"XRayDetectorID\"],9372:[\"CS\",\"1\",\"MultienergyDetectorType\"],9373:[\"ST\",\"1\",\"XRayDetectorLabel\"],9374:[\"DS\",\"1\",\"NominalMaxEnergy\"],9375:[\"DS\",\"1\",\"NominalMinEnergy\"],9376:[\"US\",\"1-n\",\"ReferencedXRayDetectorIndex\"],9377:[\"US\",\"1-n\",\"ReferencedXRaySourceIndex\"],9378:[\"US\",\"1-n\",\"ReferencedPathIndex\"],9379:[\"SQ\",\"1\",\"MultienergyCTPathSequence\"],\"937A\":[\"US\",\"1\",\"MultienergyCTPathIndex\"],\"937B\":[\"UT\",\"1\",\"MultienergyAcquisitionDescription\"],\"937C\":[\"FD\",\"1\",\"MonoenergeticEnergyEquivalent\"],\"937D\":[\"SQ\",\"1\",\"MaterialCodeSequence\"],\"937E\":[\"CS\",\"1\",\"DecompositionMethod\"],\"937F\":[\"UT\",\"1\",\"DecompositionDescription\"],9380:[\"SQ\",\"1\",\"DecompositionAlgorithmIdentificationSequence\"],9381:[\"SQ\",\"1\",\"DecompositionMaterialSequence\"],9382:[\"SQ\",\"1\",\"MaterialAttenuationSequence\"],9383:[\"DS\",\"1\",\"PhotonEnergy\"],9384:[\"DS\",\"1\",\"XRayMassAttenuationCoefficient\"],9401:[\"SQ\",\"1\",\"ProjectionPixelCalibrationSequence\"],9402:[\"FL\",\"1\",\"DistanceSourceToIsocenter\"],9403:[\"FL\",\"1\",\"DistanceObjectToTableTop\"],9404:[\"FL\",\"2\",\"ObjectPixelSpacingInCenterOfBeam\"],9405:[\"SQ\",\"1\",\"PositionerPositionSequence\"],9406:[\"SQ\",\"1\",\"TablePositionSequence\"],9407:[\"SQ\",\"1\",\"CollimatorShapeSequence\"],9410:[\"CS\",\"1\",\"PlanesInAcquisition\"],9412:[\"SQ\",\"1\",\"XAXRFFrameCharacteristicsSequence\"],9417:[\"SQ\",\"1\",\"FrameAcquisitionSequence\"],9420:[\"CS\",\"1\",\"XRayReceptorType\"],9423:[\"LO\",\"1\",\"AcquisitionProtocolName\"],9424:[\"LT\",\"1\",\"AcquisitionProtocolDescription\"],9425:[\"CS\",\"1\",\"ContrastBolusIngredientOpaque\"],9426:[\"FL\",\"1\",\"DistanceReceptorPlaneToDetectorHousing\"],9427:[\"CS\",\"1\",\"IntensifierActiveShape\"],9428:[\"FL\",\"1-2\",\"IntensifierActiveDimensions\"],9429:[\"FL\",\"2\",\"PhysicalDetectorSize\"],9430:[\"FL\",\"2\",\"PositionOfIsocenterProjection\"],9432:[\"SQ\",\"1\",\"FieldOfViewSequence\"],9433:[\"LO\",\"1\",\"FieldOfViewDescription\"],9434:[\"SQ\",\"1\",\"ExposureControlSensingRegionsSequence\"],9435:[\"CS\",\"1\",\"ExposureControlSensingRegionShape\"],9436:[\"SS\",\"1\",\"ExposureControlSensingRegionLeftVerticalEdge\"],9437:[\"SS\",\"1\",\"ExposureControlSensingRegionRightVerticalEdge\"],9438:[\"SS\",\"1\",\"ExposureControlSensingRegionUpperHorizontalEdge\"],9439:[\"SS\",\"1\",\"ExposureControlSensingRegionLowerHorizontalEdge\"],9440:[\"SS\",\"2\",\"CenterOfCircularExposureControlSensingRegion\"],9441:[\"US\",\"1\",\"RadiusOfCircularExposureControlSensingRegion\"],9442:[\"SS\",\"2-n\",\"VerticesOfThePolygonalExposureControlSensingRegion\"],9445:[\"\",\"\",\"\"],9447:[\"FL\",\"1\",\"ColumnAngulationPatient\"],9449:[\"FL\",\"1\",\"BeamAngle\"],9451:[\"SQ\",\"1\",\"FrameDetectorParametersSequence\"],9452:[\"FL\",\"1\",\"CalculatedAnatomyThickness\"],9455:[\"SQ\",\"1\",\"CalibrationSequence\"],9456:[\"SQ\",\"1\",\"ObjectThicknessSequence\"],9457:[\"CS\",\"1\",\"PlaneIdentification\"],9461:[\"FL\",\"1-2\",\"FieldOfViewDimensionsInFloat\"],9462:[\"SQ\",\"1\",\"IsocenterReferenceSystemSequence\"],9463:[\"FL\",\"1\",\"PositionerIsocenterPrimaryAngle\"],9464:[\"FL\",\"1\",\"PositionerIsocenterSecondaryAngle\"],9465:[\"FL\",\"1\",\"PositionerIsocenterDetectorRotationAngle\"],9466:[\"FL\",\"1\",\"TableXPositionToIsocenter\"],9467:[\"FL\",\"1\",\"TableYPositionToIsocenter\"],9468:[\"FL\",\"1\",\"TableZPositionToIsocenter\"],9469:[\"FL\",\"1\",\"TableHorizontalRotationAngle\"],9470:[\"FL\",\"1\",\"TableHeadTiltAngle\"],9471:[\"FL\",\"1\",\"TableCradleTiltAngle\"],9472:[\"SQ\",\"1\",\"FrameDisplayShutterSequence\"],9473:[\"FL\",\"1\",\"AcquiredImageAreaDoseProduct\"],9474:[\"CS\",\"1\",\"CArmPositionerTabletopRelationship\"],9476:[\"SQ\",\"1\",\"XRayGeometrySequence\"],9477:[\"SQ\",\"1\",\"IrradiationEventIdentificationSequence\"],9504:[\"SQ\",\"1\",\"XRay3DFrameTypeSequence\"],9506:[\"SQ\",\"1\",\"ContributingSourcesSequence\"],9507:[\"SQ\",\"1\",\"XRay3DAcquisitionSequence\"],9508:[\"FL\",\"1\",\"PrimaryPositionerScanArc\"],9509:[\"FL\",\"1\",\"SecondaryPositionerScanArc\"],9510:[\"FL\",\"1\",\"PrimaryPositionerScanStartAngle\"],9511:[\"FL\",\"1\",\"SecondaryPositionerScanStartAngle\"],9514:[\"FL\",\"1\",\"PrimaryPositionerIncrement\"],9515:[\"FL\",\"1\",\"SecondaryPositionerIncrement\"],9516:[\"DT\",\"1\",\"StartAcquisitionDateTime\"],9517:[\"DT\",\"1\",\"EndAcquisitionDateTime\"],9518:[\"SS\",\"1\",\"PrimaryPositionerIncrementSign\"],9519:[\"SS\",\"1\",\"SecondaryPositionerIncrementSign\"],9524:[\"LO\",\"1\",\"ApplicationName\"],9525:[\"LO\",\"1\",\"ApplicationVersion\"],9526:[\"LO\",\"1\",\"ApplicationManufacturer\"],9527:[\"CS\",\"1\",\"AlgorithmType\"],9528:[\"LO\",\"1\",\"AlgorithmDescription\"],9530:[\"SQ\",\"1\",\"XRay3DReconstructionSequence\"],9531:[\"LO\",\"1\",\"ReconstructionDescription\"],9538:[\"SQ\",\"1\",\"PerProjectionAcquisitionSequence\"],9541:[\"SQ\",\"1\",\"DetectorPositionSequence\"],9542:[\"SQ\",\"1\",\"XRayAcquisitionDoseSequence\"],9543:[\"FD\",\"1\",\"XRaySourceIsocenterPrimaryAngle\"],9544:[\"FD\",\"1\",\"XRaySourceIsocenterSecondaryAngle\"],9545:[\"FD\",\"1\",\"BreastSupportIsocenterPrimaryAngle\"],9546:[\"FD\",\"1\",\"BreastSupportIsocenterSecondaryAngle\"],9547:[\"FD\",\"1\",\"BreastSupportXPositionToIsocenter\"],9548:[\"FD\",\"1\",\"BreastSupportYPositionToIsocenter\"],9549:[\"FD\",\"1\",\"BreastSupportZPositionToIsocenter\"],9550:[\"FD\",\"1\",\"DetectorIsocenterPrimaryAngle\"],9551:[\"FD\",\"1\",\"DetectorIsocenterSecondaryAngle\"],9552:[\"FD\",\"1\",\"DetectorXPositionToIsocenter\"],9553:[\"FD\",\"1\",\"DetectorYPositionToIsocenter\"],9554:[\"FD\",\"1\",\"DetectorZPositionToIsocenter\"],9555:[\"SQ\",\"1\",\"XRayGridSequence\"],9556:[\"SQ\",\"1\",\"XRayFilterSequence\"],9557:[\"FD\",\"3\",\"DetectorActiveAreaTLHCPosition\"],9558:[\"FD\",\"6\",\"DetectorActiveAreaOrientation\"],9559:[\"CS\",\"1\",\"PositionerPrimaryAngleDirection\"],9601:[\"SQ\",\"1\",\"DiffusionBMatrixSequence\"],9602:[\"FD\",\"1\",\"DiffusionBValueXX\"],9603:[\"FD\",\"1\",\"DiffusionBValueXY\"],9604:[\"FD\",\"1\",\"DiffusionBValueXZ\"],9605:[\"FD\",\"1\",\"DiffusionBValueYY\"],9606:[\"FD\",\"1\",\"DiffusionBValueYZ\"],9607:[\"FD\",\"1\",\"DiffusionBValueZZ\"],9621:[\"SQ\",\"1\",\"FunctionalMRSequence\"],9622:[\"CS\",\"1\",\"FunctionalSettlingPhaseFramesPresent\"],9623:[\"DT\",\"1\",\"FunctionalSyncPulse\"],9624:[\"CS\",\"1\",\"SettlingPhaseFrame\"],9701:[\"DT\",\"1\",\"DecayCorrectionDateTime\"],9715:[\"FD\",\"1\",\"StartDensityThreshold\"],9716:[\"FD\",\"1\",\"StartRelativeDensityDifferenceThreshold\"],9717:[\"FD\",\"1\",\"StartCardiacTriggerCountThreshold\"],9718:[\"FD\",\"1\",\"StartRespiratoryTriggerCountThreshold\"],9719:[\"FD\",\"1\",\"TerminationCountsThreshold\"],9720:[\"FD\",\"1\",\"TerminationDensityThreshold\"],9721:[\"FD\",\"1\",\"TerminationRelativeDensityThreshold\"],9722:[\"FD\",\"1\",\"TerminationTimeThreshold\"],9723:[\"FD\",\"1\",\"TerminationCardiacTriggerCountThreshold\"],9724:[\"FD\",\"1\",\"TerminationRespiratoryTriggerCountThreshold\"],9725:[\"CS\",\"1\",\"DetectorGeometry\"],9726:[\"FD\",\"1\",\"TransverseDetectorSeparation\"],9727:[\"FD\",\"1\",\"AxialDetectorDimension\"],9729:[\"US\",\"1\",\"RadiopharmaceuticalAgentNumber\"],9732:[\"SQ\",\"1\",\"PETFrameAcquisitionSequence\"],9733:[\"SQ\",\"1\",\"PETDetectorMotionDetailsSequence\"],9734:[\"SQ\",\"1\",\"PETTableDynamicsSequence\"],9735:[\"SQ\",\"1\",\"PETPositionSequence\"],9736:[\"SQ\",\"1\",\"PETFrameCorrectionFactorsSequence\"],9737:[\"SQ\",\"1\",\"RadiopharmaceuticalUsageSequence\"],9738:[\"CS\",\"1\",\"AttenuationCorrectionSource\"],9739:[\"US\",\"1\",\"NumberOfIterations\"],9740:[\"US\",\"1\",\"NumberOfSubsets\"],9749:[\"SQ\",\"1\",\"PETReconstructionSequence\"],9751:[\"SQ\",\"1\",\"PETFrameTypeSequence\"],9755:[\"CS\",\"1\",\"TimeOfFlightInformationUsed\"],9756:[\"CS\",\"1\",\"ReconstructionType\"],9758:[\"CS\",\"1\",\"DecayCorrected\"],9759:[\"CS\",\"1\",\"AttenuationCorrected\"],9760:[\"CS\",\"1\",\"ScatterCorrected\"],9761:[\"CS\",\"1\",\"DeadTimeCorrected\"],9762:[\"CS\",\"1\",\"GantryMotionCorrected\"],9763:[\"CS\",\"1\",\"PatientMotionCorrected\"],9764:[\"CS\",\"1\",\"CountLossNormalizationCorrected\"],9765:[\"CS\",\"1\",\"RandomsCorrected\"],9766:[\"CS\",\"1\",\"NonUniformRadialSamplingCorrected\"],9767:[\"CS\",\"1\",\"SensitivityCalibrated\"],9768:[\"CS\",\"1\",\"DetectorNormalizationCorrection\"],9769:[\"CS\",\"1\",\"IterativeReconstructionMethod\"],9770:[\"CS\",\"1\",\"AttenuationCorrectionTemporalRelationship\"],9771:[\"SQ\",\"1\",\"PatientPhysiologicalStateSequence\"],9772:[\"SQ\",\"1\",\"PatientPhysiologicalStateCodeSequence\"],9801:[\"FD\",\"1-n\",\"DepthsOfFocus\"],9803:[\"SQ\",\"1\",\"ExcludedIntervalsSequence\"],9804:[\"DT\",\"1\",\"ExclusionStartDateTime\"],9805:[\"FD\",\"1\",\"ExclusionDuration\"],9806:[\"SQ\",\"1\",\"USImageDescriptionSequence\"],9807:[\"SQ\",\"1\",\"ImageDataTypeSequence\"],9808:[\"CS\",\"1\",\"DataType\"],9809:[\"SQ\",\"1\",\"TransducerScanPatternCodeSequence\"],\"980B\":[\"CS\",\"1\",\"AliasedDataType\"],\"980C\":[\"CS\",\"1\",\"PositionMeasuringDeviceUsed\"],\"980D\":[\"SQ\",\"1\",\"TransducerGeometryCodeSequence\"],\"980E\":[\"SQ\",\"1\",\"TransducerBeamSteeringCodeSequence\"],\"980F\":[\"SQ\",\"1\",\"TransducerApplicationCodeSequence\"],9810:[\"xs\",\"1\",\"ZeroVelocityPixelValue\"],9900:[\"LO\",\"1\",\"ReferenceLocationLabel\"],9901:[\"UT\",\"1\",\"ReferenceLocationDescription\"],9902:[\"SQ\",\"1\",\"ReferenceBasisCodeSequence\"],9903:[\"SQ\",\"1\",\"ReferenceGeometryCodeSequence\"],9904:[\"DS\",\"1\",\"OffsetDistance\"],9905:[\"CS\",\"1\",\"OffsetDirection\"],9906:[\"SQ\",\"1\",\"PotentialScheduledProtocolCodeSequence\"],9907:[\"SQ\",\"1\",\"PotentialRequestedProcedureCodeSequence\"],9908:[\"UC\",\"1-n\",\"PotentialReasonsForProcedure\"],9909:[\"SQ\",\"1\",\"PotentialReasonsForProcedureCodeSequence\"],\"990A\":[\"UC\",\"1-n\",\"PotentialDiagnosticTasks\"],\"990B\":[\"SQ\",\"1\",\"ContraindicationsCodeSequence\"],\"990C\":[\"SQ\",\"1\",\"ReferencedDefinedProtocolSequence\"],\"990D\":[\"SQ\",\"1\",\"ReferencedPerformedProtocolSequence\"],\"990E\":[\"SQ\",\"1\",\"PredecessorProtocolSequence\"],\"990F\":[\"UT\",\"1\",\"ProtocolPlanningInformation\"],9910:[\"UT\",\"1\",\"ProtocolDesignRationale\"],9911:[\"SQ\",\"1\",\"PatientSpecificationSequence\"],9912:[\"SQ\",\"1\",\"ModelSpecificationSequence\"],9913:[\"SQ\",\"1\",\"ParametersSpecificationSequence\"],9914:[\"SQ\",\"1\",\"InstructionSequence\"],9915:[\"US\",\"1\",\"InstructionIndex\"],9916:[\"LO\",\"1\",\"InstructionText\"],9917:[\"UT\",\"1\",\"InstructionDescription\"],9918:[\"CS\",\"1\",\"InstructionPerformedFlag\"],9919:[\"DT\",\"1\",\"InstructionPerformedDateTime\"],\"991A\":[\"UT\",\"1\",\"InstructionPerformanceComment\"],\"991B\":[\"SQ\",\"1\",\"PatientPositioningInstructionSequence\"],\"991C\":[\"SQ\",\"1\",\"PositioningMethodCodeSequence\"],\"991D\":[\"SQ\",\"1\",\"PositioningLandmarkSequence\"],\"991E\":[\"UI\",\"1\",\"TargetFrameOfReferenceUID\"],\"991F\":[\"SQ\",\"1\",\"AcquisitionProtocolElementSpecificationSequence\"],9920:[\"SQ\",\"1\",\"AcquisitionProtocolElementSequence\"],9921:[\"US\",\"1\",\"ProtocolElementNumber\"],9922:[\"LO\",\"1\",\"ProtocolElementName\"],9923:[\"UT\",\"1\",\"ProtocolElementCharacteristicsSummary\"],9924:[\"UT\",\"1\",\"ProtocolElementPurpose\"],9930:[\"CS\",\"1\",\"AcquisitionMotion\"],9931:[\"SQ\",\"1\",\"AcquisitionStartLocationSequence\"],9932:[\"SQ\",\"1\",\"AcquisitionEndLocationSequence\"],9933:[\"SQ\",\"1\",\"ReconstructionProtocolElementSpecificationSequence\"],9934:[\"SQ\",\"1\",\"ReconstructionProtocolElementSequence\"],9935:[\"SQ\",\"1\",\"StorageProtocolElementSpecificationSequence\"],9936:[\"SQ\",\"1\",\"StorageProtocolElementSequence\"],9937:[\"LO\",\"1\",\"RequestedSeriesDescription\"],9938:[\"US\",\"1-n\",\"SourceAcquisitionProtocolElementNumber\"],9939:[\"US\",\"1-n\",\"SourceAcquisitionBeamNumber\"],\"993A\":[\"US\",\"1-n\",\"SourceReconstructionProtocolElementNumber\"],\"993B\":[\"SQ\",\"1\",\"ReconstructionStartLocationSequence\"],\"993C\":[\"SQ\",\"1\",\"ReconstructionEndLocationSequence\"],\"993D\":[\"SQ\",\"1\",\"ReconstructionAlgorithmSequence\"],\"993E\":[\"SQ\",\"1\",\"ReconstructionTargetCenterLocationSequence\"],9941:[\"UT\",\"1\",\"ImageFilterDescription\"],9942:[\"FD\",\"1\",\"CTDIvolNotificationTrigger\"],9943:[\"FD\",\"1\",\"DLPNotificationTrigger\"],9944:[\"CS\",\"1\",\"AutoKVPSelectionType\"],9945:[\"FD\",\"1\",\"AutoKVPUpperBound\"],9946:[\"FD\",\"1\",\"AutoKVPLowerBound\"],9947:[\"CS\",\"1\",\"ProtocolDefinedPatientPosition\"],A001:[\"SQ\",\"1\",\"ContributingEquipmentSequence\"],A002:[\"DT\",\"1\",\"ContributionDateTime\"],A003:[\"ST\",\"1\",\"ContributionDescription\"]},\"0020\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"000D\":[\"UI\",\"1\",\"StudyInstanceUID\"],\"000E\":[\"UI\",\"1\",\"SeriesInstanceUID\"],\"0010\":[\"SH\",\"1\",\"StudyID\"],\"0011\":[\"IS\",\"1\",\"SeriesNumber\"],\"0012\":[\"IS\",\"1\",\"AcquisitionNumber\"],\"0013\":[\"IS\",\"1\",\"InstanceNumber\"],\"0014\":[\"IS\",\"1\",\"IsotopeNumber\"],\"0015\":[\"IS\",\"1\",\"PhaseNumber\"],\"0016\":[\"IS\",\"1\",\"IntervalNumber\"],\"0017\":[\"IS\",\"1\",\"TimeSlotNumber\"],\"0018\":[\"IS\",\"1\",\"AngleNumber\"],\"0019\":[\"IS\",\"1\",\"ItemNumber\"],\"0020\":[\"CS\",\"2\",\"PatientOrientation\"],\"0022\":[\"IS\",\"1\",\"OverlayNumber\"],\"0024\":[\"IS\",\"1\",\"CurveNumber\"],\"0026\":[\"IS\",\"1\",\"LUTNumber\"],\"0030\":[\"DS\",\"3\",\"ImagePosition\"],\"0032\":[\"DS\",\"3\",\"ImagePositionPatient\"],\"0035\":[\"DS\",\"6\",\"ImageOrientation\"],\"0037\":[\"DS\",\"6\",\"ImageOrientationPatient\"],\"0050\":[\"DS\",\"1\",\"Location\"],\"0052\":[\"UI\",\"1\",\"FrameOfReferenceUID\"],\"0060\":[\"CS\",\"1\",\"Laterality\"],\"0062\":[\"CS\",\"1\",\"ImageLaterality\"],\"0070\":[\"LO\",\"1\",\"ImageGeometryType\"],\"0080\":[\"CS\",\"1-n\",\"MaskingImage\"],\"00AA\":[\"IS\",\"1\",\"ReportNumber\"],\"0100\":[\"IS\",\"1\",\"TemporalPositionIdentifier\"],\"0105\":[\"IS\",\"1\",\"NumberOfTemporalPositions\"],\"0110\":[\"DS\",\"1\",\"TemporalResolution\"],\"0200\":[\"UI\",\"1\",\"SynchronizationFrameOfReferenceUID\"],\"0242\":[\"UI\",\"1\",\"SOPInstanceUIDOfConcatenationSource\"],1e3:[\"IS\",\"1\",\"SeriesInStudy\"],1001:[\"IS\",\"1\",\"AcquisitionsInSeries\"],1002:[\"IS\",\"1\",\"ImagesInAcquisition\"],1003:[\"IS\",\"1\",\"ImagesInSeries\"],1004:[\"IS\",\"1\",\"AcquisitionsInStudy\"],1005:[\"IS\",\"1\",\"ImagesInStudy\"],1020:[\"LO\",\"1-n\",\"Reference\"],\"103F\":[\"LO\",\"1\",\"TargetPositionReferenceIndicator\"],1040:[\"LO\",\"1\",\"PositionReferenceIndicator\"],1041:[\"DS\",\"1\",\"SliceLocation\"],1070:[\"IS\",\"1-n\",\"OtherStudyNumbers\"],1200:[\"IS\",\"1\",\"NumberOfPatientRelatedStudies\"],1202:[\"IS\",\"1\",\"NumberOfPatientRelatedSeries\"],1204:[\"IS\",\"1\",\"NumberOfPatientRelatedInstances\"],1206:[\"IS\",\"1\",\"NumberOfStudyRelatedSeries\"],1208:[\"IS\",\"1\",\"NumberOfStudyRelatedInstances\"],1209:[\"IS\",\"1\",\"NumberOfSeriesRelatedInstances\"],3100:[\"CS\",\"1-n\",\"SourceImageIDs\"],3401:[\"CS\",\"1\",\"ModifyingDeviceID\"],3402:[\"CS\",\"1\",\"ModifiedImageID\"],3403:[\"DA\",\"1\",\"ModifiedImageDate\"],3404:[\"LO\",\"1\",\"ModifyingDeviceManufacturer\"],3405:[\"TM\",\"1\",\"ModifiedImageTime\"],3406:[\"LO\",\"1\",\"ModifiedImageDescription\"],4e3:[\"LT\",\"1\",\"ImageComments\"],5e3:[\"AT\",\"1-n\",\"OriginalImageIdentification\"],5002:[\"LO\",\"1-n\",\"OriginalImageIdentificationNomenclature\"],9056:[\"SH\",\"1\",\"StackID\"],9057:[\"UL\",\"1\",\"InStackPositionNumber\"],9071:[\"SQ\",\"1\",\"FrameAnatomySequence\"],9072:[\"CS\",\"1\",\"FrameLaterality\"],9111:[\"SQ\",\"1\",\"FrameContentSequence\"],9113:[\"SQ\",\"1\",\"PlanePositionSequence\"],9116:[\"SQ\",\"1\",\"PlaneOrientationSequence\"],9128:[\"UL\",\"1\",\"TemporalPositionIndex\"],9153:[\"FD\",\"1\",\"NominalCardiacTriggerDelayTime\"],9154:[\"FL\",\"1\",\"NominalCardiacTriggerTimePriorToRPeak\"],9155:[\"FL\",\"1\",\"ActualCardiacTriggerTimePriorToRPeak\"],9156:[\"US\",\"1\",\"FrameAcquisitionNumber\"],9157:[\"UL\",\"1-n\",\"DimensionIndexValues\"],9158:[\"LT\",\"1\",\"FrameComments\"],9161:[\"UI\",\"1\",\"ConcatenationUID\"],9162:[\"US\",\"1\",\"InConcatenationNumber\"],9163:[\"US\",\"1\",\"InConcatenationTotalNumber\"],9164:[\"UI\",\"1\",\"DimensionOrganizationUID\"],9165:[\"AT\",\"1\",\"DimensionIndexPointer\"],9167:[\"AT\",\"1\",\"FunctionalGroupPointer\"],9170:[\"SQ\",\"1\",\"UnassignedSharedConvertedAttributesSequence\"],9171:[\"SQ\",\"1\",\"UnassignedPerFrameConvertedAttributesSequence\"],9172:[\"SQ\",\"1\",\"ConversionSourceAttributesSequence\"],9213:[\"LO\",\"1\",\"DimensionIndexPrivateCreator\"],9221:[\"SQ\",\"1\",\"DimensionOrganizationSequence\"],9222:[\"SQ\",\"1\",\"DimensionIndexSequence\"],9228:[\"UL\",\"1\",\"ConcatenationFrameOffsetNumber\"],9238:[\"LO\",\"1\",\"FunctionalGroupPrivateCreator\"],9241:[\"FL\",\"1\",\"NominalPercentageOfCardiacPhase\"],9245:[\"FL\",\"1\",\"NominalPercentageOfRespiratoryPhase\"],9246:[\"FL\",\"1\",\"StartingRespiratoryAmplitude\"],9247:[\"CS\",\"1\",\"StartingRespiratoryPhase\"],9248:[\"FL\",\"1\",\"EndingRespiratoryAmplitude\"],9249:[\"CS\",\"1\",\"EndingRespiratoryPhase\"],9250:[\"CS\",\"1\",\"RespiratoryTriggerType\"],9251:[\"FD\",\"1\",\"RRIntervalTimeNominal\"],9252:[\"FD\",\"1\",\"ActualCardiacTriggerDelayTime\"],9253:[\"SQ\",\"1\",\"RespiratorySynchronizationSequence\"],9254:[\"FD\",\"1\",\"RespiratoryIntervalTime\"],9255:[\"FD\",\"1\",\"NominalRespiratoryTriggerDelayTime\"],9256:[\"FD\",\"1\",\"RespiratoryTriggerDelayThreshold\"],9257:[\"FD\",\"1\",\"ActualRespiratoryTriggerDelayTime\"],9301:[\"FD\",\"3\",\"ImagePositionVolume\"],9302:[\"FD\",\"6\",\"ImageOrientationVolume\"],9307:[\"CS\",\"1\",\"UltrasoundAcquisitionGeometry\"],9308:[\"FD\",\"3\",\"ApexPosition\"],9309:[\"FD\",\"16\",\"VolumeToTransducerMappingMatrix\"],\"930A\":[\"FD\",\"16\",\"VolumeToTableMappingMatrix\"],\"930B\":[\"CS\",\"1\",\"VolumeToTransducerRelationship\"],\"930C\":[\"CS\",\"1\",\"PatientFrameOfReferenceSource\"],\"930D\":[\"FD\",\"1\",\"TemporalPositionTimeOffset\"],\"930E\":[\"SQ\",\"1\",\"PlanePositionVolumeSequence\"],\"930F\":[\"SQ\",\"1\",\"PlaneOrientationVolumeSequence\"],9310:[\"SQ\",\"1\",\"TemporalPositionSequence\"],9311:[\"CS\",\"1\",\"DimensionOrganizationType\"],9312:[\"UI\",\"1\",\"VolumeFrameOfReferenceUID\"],9313:[\"UI\",\"1\",\"TableFrameOfReferenceUID\"],9421:[\"LO\",\"1\",\"DimensionDescriptionLabel\"],9450:[\"SQ\",\"1\",\"PatientOrientationInFrameSequence\"],9453:[\"LO\",\"1\",\"FrameLabel\"],9518:[\"US\",\"1-n\",\"AcquisitionIndex\"],9529:[\"SQ\",\"1\",\"ContributingSOPInstancesReferenceSequence\"],9536:[\"US\",\"1\",\"ReconstructionIndex\"]},\"0022\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"US\",\"1\",\"LightPathFilterPassThroughWavelength\"],\"0002\":[\"US\",\"2\",\"LightPathFilterPassBand\"],\"0003\":[\"US\",\"1\",\"ImagePathFilterPassThroughWavelength\"],\"0004\":[\"US\",\"2\",\"ImagePathFilterPassBand\"],\"0005\":[\"CS\",\"1\",\"PatientEyeMovementCommanded\"],\"0006\":[\"SQ\",\"1\",\"PatientEyeMovementCommandCodeSequence\"],\"0007\":[\"FL\",\"1\",\"SphericalLensPower\"],\"0008\":[\"FL\",\"1\",\"CylinderLensPower\"],\"0009\":[\"FL\",\"1\",\"CylinderAxis\"],\"000A\":[\"FL\",\"1\",\"EmmetropicMagnification\"],\"000B\":[\"FL\",\"1\",\"IntraOcularPressure\"],\"000C\":[\"FL\",\"1\",\"HorizontalFieldOfView\"],\"000D\":[\"CS\",\"1\",\"PupilDilated\"],\"000E\":[\"FL\",\"1\",\"DegreeOfDilation\"],\"0010\":[\"FL\",\"1\",\"StereoBaselineAngle\"],\"0011\":[\"FL\",\"1\",\"StereoBaselineDisplacement\"],\"0012\":[\"FL\",\"1\",\"StereoHorizontalPixelOffset\"],\"0013\":[\"FL\",\"1\",\"StereoVerticalPixelOffset\"],\"0014\":[\"FL\",\"1\",\"StereoRotation\"],\"0015\":[\"SQ\",\"1\",\"AcquisitionDeviceTypeCodeSequence\"],\"0016\":[\"SQ\",\"1\",\"IlluminationTypeCodeSequence\"],\"0017\":[\"SQ\",\"1\",\"LightPathFilterTypeStackCodeSequence\"],\"0018\":[\"SQ\",\"1\",\"ImagePathFilterTypeStackCodeSequence\"],\"0019\":[\"SQ\",\"1\",\"LensesCodeSequence\"],\"001A\":[\"SQ\",\"1\",\"ChannelDescriptionCodeSequence\"],\"001B\":[\"SQ\",\"1\",\"RefractiveStateSequence\"],\"001C\":[\"SQ\",\"1\",\"MydriaticAgentCodeSequence\"],\"001D\":[\"SQ\",\"1\",\"RelativeImagePositionCodeSequence\"],\"001E\":[\"FL\",\"1\",\"CameraAngleOfView\"],\"0020\":[\"SQ\",\"1\",\"StereoPairsSequence\"],\"0021\":[\"SQ\",\"1\",\"LeftImageSequence\"],\"0022\":[\"SQ\",\"1\",\"RightImageSequence\"],\"0028\":[\"CS\",\"1\",\"StereoPairsPresent\"],\"0030\":[\"FL\",\"1\",\"AxialLengthOfTheEye\"],\"0031\":[\"SQ\",\"1\",\"OphthalmicFrameLocationSequence\"],\"0032\":[\"FL\",\"2-2n\",\"ReferenceCoordinates\"],\"0035\":[\"FL\",\"1\",\"DepthSpatialResolution\"],\"0036\":[\"FL\",\"1\",\"MaximumDepthDistortion\"],\"0037\":[\"FL\",\"1\",\"AlongScanSpatialResolution\"],\"0038\":[\"FL\",\"1\",\"MaximumAlongScanDistortion\"],\"0039\":[\"CS\",\"1\",\"OphthalmicImageOrientation\"],\"0041\":[\"FL\",\"1\",\"DepthOfTransverseImage\"],\"0042\":[\"SQ\",\"1\",\"MydriaticAgentConcentrationUnitsSequence\"],\"0048\":[\"FL\",\"1\",\"AcrossScanSpatialResolution\"],\"0049\":[\"FL\",\"1\",\"MaximumAcrossScanDistortion\"],\"004E\":[\"DS\",\"1\",\"MydriaticAgentConcentration\"],\"0055\":[\"FL\",\"1\",\"IlluminationWaveLength\"],\"0056\":[\"FL\",\"1\",\"IlluminationPower\"],\"0057\":[\"FL\",\"1\",\"IlluminationBandwidth\"],\"0058\":[\"SQ\",\"1\",\"MydriaticAgentSequence\"],1007:[\"SQ\",\"1\",\"OphthalmicAxialMeasurementsRightEyeSequence\"],1008:[\"SQ\",\"1\",\"OphthalmicAxialMeasurementsLeftEyeSequence\"],1009:[\"CS\",\"1\",\"OphthalmicAxialMeasurementsDeviceType\"],1010:[\"CS\",\"1\",\"OphthalmicAxialLengthMeasurementsType\"],1012:[\"SQ\",\"1\",\"OphthalmicAxialLengthSequence\"],1019:[\"FL\",\"1\",\"OphthalmicAxialLength\"],1024:[\"SQ\",\"1\",\"LensStatusCodeSequence\"],1025:[\"SQ\",\"1\",\"VitreousStatusCodeSequence\"],1028:[\"SQ\",\"1\",\"IOLFormulaCodeSequence\"],1029:[\"LO\",\"1\",\"IOLFormulaDetail\"],1033:[\"FL\",\"1\",\"KeratometerIndex\"],1035:[\"SQ\",\"1\",\"SourceOfOphthalmicAxialLengthCodeSequence\"],1036:[\"SQ\",\"1\",\"SourceOfCornealSizeDataCodeSequence\"],1037:[\"FL\",\"1\",\"TargetRefraction\"],1039:[\"CS\",\"1\",\"RefractiveProcedureOccurred\"],1040:[\"SQ\",\"1\",\"RefractiveSurgeryTypeCodeSequence\"],1044:[\"SQ\",\"1\",\"OphthalmicUltrasoundMethodCodeSequence\"],1045:[\"SQ\",\"1\",\"SurgicallyInducedAstigmatismSequence\"],1046:[\"CS\",\"1\",\"TypeOfOpticalCorrection\"],1047:[\"SQ\",\"1\",\"ToricIOLPowerSequence\"],1048:[\"SQ\",\"1\",\"PredictedToricErrorSequence\"],1049:[\"CS\",\"1\",\"PreSelectedForImplantation\"],\"104A\":[\"SQ\",\"1\",\"ToricIOLPowerForExactEmmetropiaSequence\"],\"104B\":[\"SQ\",\"1\",\"ToricIOLPowerForExactTargetRefractionSequence\"],1050:[\"SQ\",\"1\",\"OphthalmicAxialLengthMeasurementsSequence\"],1053:[\"FL\",\"1\",\"IOLPower\"],1054:[\"FL\",\"1\",\"PredictedRefractiveError\"],1059:[\"FL\",\"1\",\"OphthalmicAxialLengthVelocity\"],1065:[\"LO\",\"1\",\"LensStatusDescription\"],1066:[\"LO\",\"1\",\"VitreousStatusDescription\"],1090:[\"SQ\",\"1\",\"IOLPowerSequence\"],1092:[\"SQ\",\"1\",\"LensConstantSequence\"],1093:[\"LO\",\"1\",\"IOLManufacturer\"],1094:[\"LO\",\"1\",\"LensConstantDescription\"],1095:[\"LO\",\"1\",\"ImplantName\"],1096:[\"SQ\",\"1\",\"KeratometryMeasurementTypeCodeSequence\"],1097:[\"LO\",\"1\",\"ImplantPartNumber\"],1100:[\"SQ\",\"1\",\"ReferencedOphthalmicAxialMeasurementsSequence\"],1101:[\"SQ\",\"1\",\"OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence\"],1103:[\"SQ\",\"1\",\"RefractiveErrorBeforeRefractiveSurgeryCodeSequence\"],1121:[\"FL\",\"1\",\"IOLPowerForExactEmmetropia\"],1122:[\"FL\",\"1\",\"IOLPowerForExactTargetRefraction\"],1125:[\"SQ\",\"1\",\"AnteriorChamberDepthDefinitionCodeSequence\"],1127:[\"SQ\",\"1\",\"LensThicknessSequence\"],1128:[\"SQ\",\"1\",\"AnteriorChamberDepthSequence\"],\"112A\":[\"SQ\",\"1\",\"CalculationCommentSequence\"],\"112B\":[\"CS\",\"1\",\"CalculationCommentType\"],\"112C\":[\"LT\",\"1\",\"CalculationComment\"],1130:[\"FL\",\"1\",\"LensThickness\"],1131:[\"FL\",\"1\",\"AnteriorChamberDepth\"],1132:[\"SQ\",\"1\",\"SourceOfLensThicknessDataCodeSequence\"],1133:[\"SQ\",\"1\",\"SourceOfAnteriorChamberDepthDataCodeSequence\"],1134:[\"SQ\",\"1\",\"SourceOfRefractiveMeasurementsSequence\"],1135:[\"SQ\",\"1\",\"SourceOfRefractiveMeasurementsCodeSequence\"],1140:[\"CS\",\"1\",\"OphthalmicAxialLengthMeasurementModified\"],1150:[\"SQ\",\"1\",\"OphthalmicAxialLengthDataSourceCodeSequence\"],1153:[\"SQ\",\"1\",\"OphthalmicAxialLengthAcquisitionMethodCodeSequence\"],1155:[\"FL\",\"1\",\"SignalToNoiseRatio\"],1159:[\"LO\",\"1\",\"OphthalmicAxialLengthDataSourceDescription\"],1210:[\"SQ\",\"1\",\"OphthalmicAxialLengthMeasurementsTotalLengthSequence\"],1211:[\"SQ\",\"1\",\"OphthalmicAxialLengthMeasurementsSegmentalLengthSequence\"],1212:[\"SQ\",\"1\",\"OphthalmicAxialLengthMeasurementsLengthSummationSequence\"],1220:[\"SQ\",\"1\",\"UltrasoundOphthalmicAxialLengthMeasurementsSequence\"],1225:[\"SQ\",\"1\",\"OpticalOphthalmicAxialLengthMeasurementsSequence\"],1230:[\"SQ\",\"1\",\"UltrasoundSelectedOphthalmicAxialLengthSequence\"],1250:[\"SQ\",\"1\",\"OphthalmicAxialLengthSelectionMethodCodeSequence\"],1255:[\"SQ\",\"1\",\"OpticalSelectedOphthalmicAxialLengthSequence\"],1257:[\"SQ\",\"1\",\"SelectedSegmentalOphthalmicAxialLengthSequence\"],1260:[\"SQ\",\"1\",\"SelectedTotalOphthalmicAxialLengthSequence\"],1262:[\"SQ\",\"1\",\"OphthalmicAxialLengthQualityMetricSequence\"],1265:[\"SQ\",\"1\",\"OphthalmicAxialLengthQualityMetricTypeCodeSequence\"],1273:[\"LO\",\"1\",\"OphthalmicAxialLengthQualityMetricTypeDescription\"],1300:[\"SQ\",\"1\",\"IntraocularLensCalculationsRightEyeSequence\"],1310:[\"SQ\",\"1\",\"IntraocularLensCalculationsLeftEyeSequence\"],1330:[\"SQ\",\"1\",\"ReferencedOphthalmicAxialLengthMeasurementQCImageSequence\"],1415:[\"CS\",\"1\",\"OphthalmicMappingDeviceType\"],1420:[\"SQ\",\"1\",\"AcquisitionMethodCodeSequence\"],1423:[\"SQ\",\"1\",\"AcquisitionMethodAlgorithmSequence\"],1436:[\"SQ\",\"1\",\"OphthalmicThicknessMapTypeCodeSequence\"],1443:[\"SQ\",\"1\",\"OphthalmicThicknessMappingNormalsSequence\"],1445:[\"SQ\",\"1\",\"RetinalThicknessDefinitionCodeSequence\"],1450:[\"SQ\",\"1\",\"PixelValueMappingToCodedConceptSequence\"],1452:[\"xs\",\"1\",\"MappedPixelValue\"],1454:[\"LO\",\"1\",\"PixelValueMappingExplanation\"],1458:[\"SQ\",\"1\",\"OphthalmicThicknessMapQualityThresholdSequence\"],1460:[\"FL\",\"1\",\"OphthalmicThicknessMapThresholdQualityRating\"],1463:[\"FL\",\"2\",\"AnatomicStructureReferencePoint\"],1465:[\"SQ\",\"1\",\"RegistrationToLocalizerSequence\"],1466:[\"CS\",\"1\",\"RegisteredLocalizerUnits\"],1467:[\"FL\",\"2\",\"RegisteredLocalizerTopLeftHandCorner\"],1468:[\"FL\",\"2\",\"RegisteredLocalizerBottomRightHandCorner\"],1470:[\"SQ\",\"1\",\"OphthalmicThicknessMapQualityRatingSequence\"],1472:[\"SQ\",\"1\",\"RelevantOPTAttributesSequence\"],1512:[\"SQ\",\"1\",\"TransformationMethodCodeSequence\"],1513:[\"SQ\",\"1\",\"TransformationAlgorithmSequence\"],1515:[\"CS\",\"1\",\"OphthalmicAxialLengthMethod\"],1517:[\"FL\",\"1\",\"OphthalmicFOV\"],1518:[\"SQ\",\"1\",\"TwoDimensionalToThreeDimensionalMapSequence\"],1525:[\"SQ\",\"1\",\"WideFieldOphthalmicPhotographyQualityRatingSequence\"],1526:[\"SQ\",\"1\",\"WideFieldOphthalmicPhotographyQualityThresholdSequence\"],1527:[\"FL\",\"1\",\"WideFieldOphthalmicPhotographyThresholdQualityRating\"],1528:[\"FL\",\"1\",\"XCoordinatesCenterPixelViewAngle\"],1529:[\"FL\",\"1\",\"YCoordinatesCenterPixelViewAngle\"],1530:[\"UL\",\"1\",\"NumberOfMapPoints\"],1531:[\"OF\",\"1\",\"TwoDimensionalToThreeDimensionalMapData\"],1612:[\"SQ\",\"1\",\"DerivationAlgorithmSequence\"],1615:[\"SQ\",\"1\",\"OphthalmicImageTypeCodeSequence\"],1616:[\"LO\",\"1\",\"OphthalmicImageTypeDescription\"],1618:[\"SQ\",\"1\",\"ScanPatternTypeCodeSequence\"],1620:[\"SQ\",\"1\",\"ReferencedSurfaceMeshIdentificationSequence\"],1622:[\"CS\",\"1\",\"OphthalmicVolumetricPropertiesFlag\"],1624:[\"FL\",\"1\",\"OphthalmicAnatomicReferencePointXCoordinate\"],1626:[\"FL\",\"1\",\"OphthalmicAnatomicReferencePointYCoordinate\"],1628:[\"SQ\",\"1\",\"OphthalmicEnFaceImageQualityRatingSequence\"],1630:[\"DS\",\"1\",\"QualityThreshold\"],1640:[\"SQ\",\"1\",\"OCTBscanAnalysisAcquisitionParametersSequence\"],1642:[\"UL\",\"1\",\"NumberOfBscansPerFrame\"],1643:[\"FL\",\"1\",\"BscanSlabThickness\"],1644:[\"FL\",\"1\",\"DistanceBetweenBscanSlabs\"],1645:[\"FL\",\"1\",\"BscanCycleTime\"],1646:[\"FL\",\"1-n\",\"BscanCycleTimeVector\"],1649:[\"FL\",\"1\",\"AscanRate\"],1650:[\"FL\",\"1\",\"BscanRate\"],1658:[\"UL\",\"1\",\"SurfaceMeshZPixelOffset\"]},\"0024\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"FL\",\"1\",\"VisualFieldHorizontalExtent\"],\"0011\":[\"FL\",\"1\",\"VisualFieldVerticalExtent\"],\"0012\":[\"CS\",\"1\",\"VisualFieldShape\"],\"0016\":[\"SQ\",\"1\",\"ScreeningTestModeCodeSequence\"],\"0018\":[\"FL\",\"1\",\"MaximumStimulusLuminance\"],\"0020\":[\"FL\",\"1\",\"BackgroundLuminance\"],\"0021\":[\"SQ\",\"1\",\"StimulusColorCodeSequence\"],\"0024\":[\"SQ\",\"1\",\"BackgroundIlluminationColorCodeSequence\"],\"0025\":[\"FL\",\"1\",\"StimulusArea\"],\"0028\":[\"FL\",\"1\",\"StimulusPresentationTime\"],\"0032\":[\"SQ\",\"1\",\"FixationSequence\"],\"0033\":[\"SQ\",\"1\",\"FixationMonitoringCodeSequence\"],\"0034\":[\"SQ\",\"1\",\"VisualFieldCatchTrialSequence\"],\"0035\":[\"US\",\"1\",\"FixationCheckedQuantity\"],\"0036\":[\"US\",\"1\",\"PatientNotProperlyFixatedQuantity\"],\"0037\":[\"CS\",\"1\",\"PresentedVisualStimuliDataFlag\"],\"0038\":[\"US\",\"1\",\"NumberOfVisualStimuli\"],\"0039\":[\"CS\",\"1\",\"ExcessiveFixationLossesDataFlag\"],\"0040\":[\"CS\",\"1\",\"ExcessiveFixationLosses\"],\"0042\":[\"US\",\"1\",\"StimuliRetestingQuantity\"],\"0044\":[\"LT\",\"1\",\"CommentsOnPatientPerformanceOfVisualField\"],\"0045\":[\"CS\",\"1\",\"FalseNegativesEstimateFlag\"],\"0046\":[\"FL\",\"1\",\"FalseNegativesEstimate\"],\"0048\":[\"US\",\"1\",\"NegativeCatchTrialsQuantity\"],\"0050\":[\"US\",\"1\",\"FalseNegativesQuantity\"],\"0051\":[\"CS\",\"1\",\"ExcessiveFalseNegativesDataFlag\"],\"0052\":[\"CS\",\"1\",\"ExcessiveFalseNegatives\"],\"0053\":[\"CS\",\"1\",\"FalsePositivesEstimateFlag\"],\"0054\":[\"FL\",\"1\",\"FalsePositivesEstimate\"],\"0055\":[\"CS\",\"1\",\"CatchTrialsDataFlag\"],\"0056\":[\"US\",\"1\",\"PositiveCatchTrialsQuantity\"],\"0057\":[\"CS\",\"1\",\"TestPointNormalsDataFlag\"],\"0058\":[\"SQ\",\"1\",\"TestPointNormalsSequence\"],\"0059\":[\"CS\",\"1\",\"GlobalDeviationProbabilityNormalsFlag\"],\"0060\":[\"US\",\"1\",\"FalsePositivesQuantity\"],\"0061\":[\"CS\",\"1\",\"ExcessiveFalsePositivesDataFlag\"],\"0062\":[\"CS\",\"1\",\"ExcessiveFalsePositives\"],\"0063\":[\"CS\",\"1\",\"VisualFieldTestNormalsFlag\"],\"0064\":[\"SQ\",\"1\",\"ResultsNormalsSequence\"],\"0065\":[\"SQ\",\"1\",\"AgeCorrectedSensitivityDeviationAlgorithmSequence\"],\"0066\":[\"FL\",\"1\",\"GlobalDeviationFromNormal\"],\"0067\":[\"SQ\",\"1\",\"GeneralizedDefectSensitivityDeviationAlgorithmSequence\"],\"0068\":[\"FL\",\"1\",\"LocalizedDeviationFromNormal\"],\"0069\":[\"LO\",\"1\",\"PatientReliabilityIndicator\"],\"0070\":[\"FL\",\"1\",\"VisualFieldMeanSensitivity\"],\"0071\":[\"FL\",\"1\",\"GlobalDeviationProbability\"],\"0072\":[\"CS\",\"1\",\"LocalDeviationProbabilityNormalsFlag\"],\"0073\":[\"FL\",\"1\",\"LocalizedDeviationProbability\"],\"0074\":[\"CS\",\"1\",\"ShortTermFluctuationCalculated\"],\"0075\":[\"FL\",\"1\",\"ShortTermFluctuation\"],\"0076\":[\"CS\",\"1\",\"ShortTermFluctuationProbabilityCalculated\"],\"0077\":[\"FL\",\"1\",\"ShortTermFluctuationProbability\"],\"0078\":[\"CS\",\"1\",\"CorrectedLocalizedDeviationFromNormalCalculated\"],\"0079\":[\"FL\",\"1\",\"CorrectedLocalizedDeviationFromNormal\"],\"0080\":[\"CS\",\"1\",\"CorrectedLocalizedDeviationFromNormalProbabilityCalculated\"],\"0081\":[\"FL\",\"1\",\"CorrectedLocalizedDeviationFromNormalProbability\"],\"0083\":[\"SQ\",\"1\",\"GlobalDeviationProbabilitySequence\"],\"0085\":[\"SQ\",\"1\",\"LocalizedDeviationProbabilitySequence\"],\"0086\":[\"CS\",\"1\",\"FovealSensitivityMeasured\"],\"0087\":[\"FL\",\"1\",\"FovealSensitivity\"],\"0088\":[\"FL\",\"1\",\"VisualFieldTestDuration\"],\"0089\":[\"SQ\",\"1\",\"VisualFieldTestPointSequence\"],\"0090\":[\"FL\",\"1\",\"VisualFieldTestPointXCoordinate\"],\"0091\":[\"FL\",\"1\",\"VisualFieldTestPointYCoordinate\"],\"0092\":[\"FL\",\"1\",\"AgeCorrectedSensitivityDeviationValue\"],\"0093\":[\"CS\",\"1\",\"StimulusResults\"],\"0094\":[\"FL\",\"1\",\"SensitivityValue\"],\"0095\":[\"CS\",\"1\",\"RetestStimulusSeen\"],\"0096\":[\"FL\",\"1\",\"RetestSensitivityValue\"],\"0097\":[\"SQ\",\"1\",\"VisualFieldTestPointNormalsSequence\"],\"0098\":[\"FL\",\"1\",\"QuantifiedDefect\"],\"0100\":[\"FL\",\"1\",\"AgeCorrectedSensitivityDeviationProbabilityValue\"],\"0102\":[\"CS\",\"1\",\"GeneralizedDefectCorrectedSensitivityDeviationFlag\"],\"0103\":[\"FL\",\"1\",\"GeneralizedDefectCorrectedSensitivityDeviationValue\"],\"0104\":[\"FL\",\"1\",\"GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue\"],\"0105\":[\"FL\",\"1\",\"MinimumSensitivityValue\"],\"0106\":[\"CS\",\"1\",\"BlindSpotLocalized\"],\"0107\":[\"FL\",\"1\",\"BlindSpotXCoordinate\"],\"0108\":[\"FL\",\"1\",\"BlindSpotYCoordinate\"],\"0110\":[\"SQ\",\"1\",\"VisualAcuityMeasurementSequence\"],\"0112\":[\"SQ\",\"1\",\"RefractiveParametersUsedOnPatientSequence\"],\"0113\":[\"CS\",\"1\",\"MeasurementLaterality\"],\"0114\":[\"SQ\",\"1\",\"OphthalmicPatientClinicalInformationLeftEyeSequence\"],\"0115\":[\"SQ\",\"1\",\"OphthalmicPatientClinicalInformationRightEyeSequence\"],\"0117\":[\"CS\",\"1\",\"FovealPointNormativeDataFlag\"],\"0118\":[\"FL\",\"1\",\"FovealPointProbabilityValue\"],\"0120\":[\"CS\",\"1\",\"ScreeningBaselineMeasured\"],\"0122\":[\"SQ\",\"1\",\"ScreeningBaselineMeasuredSequence\"],\"0124\":[\"CS\",\"1\",\"ScreeningBaselineType\"],\"0126\":[\"FL\",\"1\",\"ScreeningBaselineValue\"],\"0202\":[\"LO\",\"1\",\"AlgorithmSource\"],\"0306\":[\"LO\",\"1\",\"DataSetName\"],\"0307\":[\"LO\",\"1\",\"DataSetVersion\"],\"0308\":[\"LO\",\"1\",\"DataSetSource\"],\"0309\":[\"LO\",\"1\",\"DataSetDescription\"],\"0317\":[\"SQ\",\"1\",\"VisualFieldTestReliabilityGlobalIndexSequence\"],\"0320\":[\"SQ\",\"1\",\"VisualFieldGlobalResultsIndexSequence\"],\"0325\":[\"SQ\",\"1\",\"DataObservationSequence\"],\"0338\":[\"CS\",\"1\",\"IndexNormalsFlag\"],\"0341\":[\"FL\",\"1\",\"IndexProbability\"],\"0344\":[\"SQ\",\"1\",\"IndexProbabilitySequence\"]},\"0028\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"US\",\"1\",\"SamplesPerPixel\"],\"0003\":[\"US\",\"1\",\"SamplesPerPixelUsed\"],\"0004\":[\"CS\",\"1\",\"PhotometricInterpretation\"],\"0005\":[\"US\",\"1\",\"ImageDimensions\"],\"0006\":[\"US\",\"1\",\"PlanarConfiguration\"],\"0008\":[\"IS\",\"1\",\"NumberOfFrames\"],\"0009\":[\"AT\",\"1-n\",\"FrameIncrementPointer\"],\"000A\":[\"AT\",\"1-n\",\"FrameDimensionPointer\"],\"0010\":[\"US\",\"1\",\"Rows\"],\"0011\":[\"US\",\"1\",\"Columns\"],\"0012\":[\"US\",\"1\",\"Planes\"],\"0014\":[\"US\",\"1\",\"UltrasoundColorDataPresent\"],\"0020\":[\"\",\"\",\"\"],\"0030\":[\"DS\",\"2\",\"PixelSpacing\"],\"0031\":[\"DS\",\"2\",\"ZoomFactor\"],\"0032\":[\"DS\",\"2\",\"ZoomCenter\"],\"0034\":[\"IS\",\"2\",\"PixelAspectRatio\"],\"0040\":[\"CS\",\"1\",\"ImageFormat\"],\"0050\":[\"LO\",\"1-n\",\"ManipulatedImage\"],\"0051\":[\"CS\",\"1-n\",\"CorrectedImage\"],\"005F\":[\"LO\",\"1\",\"CompressionRecognitionCode\"],\"0060\":[\"CS\",\"1\",\"CompressionCode\"],\"0061\":[\"SH\",\"1\",\"CompressionOriginator\"],\"0062\":[\"LO\",\"1\",\"CompressionLabel\"],\"0063\":[\"SH\",\"1\",\"CompressionDescription\"],\"0065\":[\"CS\",\"1-n\",\"CompressionSequence\"],\"0066\":[\"AT\",\"1-n\",\"CompressionStepPointers\"],\"0068\":[\"US\",\"1\",\"RepeatInterval\"],\"0069\":[\"US\",\"1\",\"BitsGrouped\"],\"0070\":[\"US\",\"1-n\",\"PerimeterTable\"],\"0071\":[\"xs\",\"1\",\"PerimeterValue\"],\"0080\":[\"US\",\"1\",\"PredictorRows\"],\"0081\":[\"US\",\"1\",\"PredictorColumns\"],\"0082\":[\"US\",\"1-n\",\"PredictorConstants\"],\"0090\":[\"CS\",\"1\",\"BlockedPixels\"],\"0091\":[\"US\",\"1\",\"BlockRows\"],\"0092\":[\"US\",\"1\",\"BlockColumns\"],\"0093\":[\"US\",\"1\",\"RowOverlap\"],\"0094\":[\"US\",\"1\",\"ColumnOverlap\"],\"0100\":[\"US\",\"1\",\"BitsAllocated\"],\"0101\":[\"US\",\"1\",\"BitsStored\"],\"0102\":[\"US\",\"1\",\"HighBit\"],\"0103\":[\"US\",\"1\",\"PixelRepresentation\"],\"0104\":[\"xs\",\"1\",\"SmallestValidPixelValue\"],\"0105\":[\"xs\",\"1\",\"LargestValidPixelValue\"],\"0106\":[\"xs\",\"1\",\"SmallestImagePixelValue\"],\"0107\":[\"xs\",\"1\",\"LargestImagePixelValue\"],\"0108\":[\"xs\",\"1\",\"SmallestPixelValueInSeries\"],\"0109\":[\"xs\",\"1\",\"LargestPixelValueInSeries\"],\"0110\":[\"xs\",\"1\",\"SmallestImagePixelValueInPlane\"],\"0111\":[\"xs\",\"1\",\"LargestImagePixelValueInPlane\"],\"0120\":[\"xs\",\"1\",\"PixelPaddingValue\"],\"0121\":[\"xs\",\"1\",\"PixelPaddingRangeLimit\"],\"0122\":[\"FL\",\"1\",\"FloatPixelPaddingValue\"],\"0123\":[\"FD\",\"1\",\"DoubleFloatPixelPaddingValue\"],\"0124\":[\"FL\",\"1\",\"FloatPixelPaddingRangeLimit\"],\"0125\":[\"FD\",\"1\",\"DoubleFloatPixelPaddingRangeLimit\"],\"0200\":[\"US\",\"1\",\"ImageLocation\"],\"0300\":[\"CS\",\"1\",\"QualityControlImage\"],\"0301\":[\"CS\",\"1\",\"BurnedInAnnotation\"],\"0302\":[\"CS\",\"1\",\"RecognizableVisualFeatures\"],\"0303\":[\"CS\",\"1\",\"LongitudinalTemporalInformationModified\"],\"0304\":[\"UI\",\"1\",\"ReferencedColorPaletteInstanceUID\"],\"0400\":[\"LO\",\"1\",\"TransformLabel\"],\"0401\":[\"LO\",\"1\",\"TransformVersionNumber\"],\"0402\":[\"US\",\"1\",\"NumberOfTransformSteps\"],\"0403\":[\"LO\",\"1-n\",\"SequenceOfCompressedData\"],\"0404\":[\"AT\",\"1-n\",\"DetailsOfCoefficients\"],\"04x0\":[\"US\",\"1\",\"RowsForNthOrderCoefficients\"],\"04x1\":[\"US\",\"1\",\"ColumnsForNthOrderCoefficients\"],\"04x2\":[\"LO\",\"1-n\",\"CoefficientCoding\"],\"04x3\":[\"AT\",\"1-n\",\"CoefficientCodingPointers\"],\"0700\":[\"LO\",\"1\",\"DCTLabel\"],\"0701\":[\"CS\",\"1-n\",\"DataBlockDescription\"],\"0702\":[\"AT\",\"1-n\",\"DataBlock\"],\"0710\":[\"US\",\"1\",\"NormalizationFactorFormat\"],\"0720\":[\"US\",\"1\",\"ZonalMapNumberFormat\"],\"0721\":[\"AT\",\"1-n\",\"ZonalMapLocation\"],\"0722\":[\"US\",\"1\",\"ZonalMapFormat\"],\"0730\":[\"US\",\"1\",\"AdaptiveMapFormat\"],\"0740\":[\"US\",\"1\",\"CodeNumberFormat\"],\"08x0\":[\"CS\",\"1-n\",\"CodeLabel\"],\"08x2\":[\"US\",\"1\",\"NumberOfTables\"],\"08x3\":[\"AT\",\"1-n\",\"CodeTableLocation\"],\"08x4\":[\"US\",\"1\",\"BitsForCodeWord\"],\"08x8\":[\"AT\",\"1-n\",\"ImageDataLocation\"],\"0A02\":[\"CS\",\"1\",\"PixelSpacingCalibrationType\"],\"0A04\":[\"LO\",\"1\",\"PixelSpacingCalibrationDescription\"],1040:[\"CS\",\"1\",\"PixelIntensityRelationship\"],1041:[\"SS\",\"1\",\"PixelIntensityRelationshipSign\"],1050:[\"DS\",\"1-n\",\"WindowCenter\"],1051:[\"DS\",\"1-n\",\"WindowWidth\"],1052:[\"DS\",\"1\",\"RescaleIntercept\"],1053:[\"DS\",\"1\",\"RescaleSlope\"],1054:[\"LO\",\"1\",\"RescaleType\"],1055:[\"LO\",\"1-n\",\"WindowCenterWidthExplanation\"],1056:[\"CS\",\"1\",\"VOILUTFunction\"],1080:[\"CS\",\"1\",\"GrayScale\"],1090:[\"CS\",\"1\",\"RecommendedViewingMode\"],1100:[\"xs\",\"3\",\"GrayLookupTableDescriptor\"],1101:[\"xs\",\"3\",\"RedPaletteColorLookupTableDescriptor\"],1102:[\"xs\",\"3\",\"GreenPaletteColorLookupTableDescriptor\"],1103:[\"xs\",\"3\",\"BluePaletteColorLookupTableDescriptor\"],1104:[\"US\",\"3\",\"AlphaPaletteColorLookupTableDescriptor\"],1111:[\"xs\",\"4\",\"LargeRedPaletteColorLookupTableDescriptor\"],1112:[\"xs\",\"4\",\"LargeGreenPaletteColorLookupTableDescriptor\"],1113:[\"xs\",\"4\",\"LargeBluePaletteColorLookupTableDescriptor\"],1199:[\"UI\",\"1\",\"PaletteColorLookupTableUID\"],1200:[\"xs\",\"1-n or 1\",\"GrayLookupTableData\"],1201:[\"OW\",\"1\",\"RedPaletteColorLookupTableData\"],1202:[\"OW\",\"1\",\"GreenPaletteColorLookupTableData\"],1203:[\"OW\",\"1\",\"BluePaletteColorLookupTableData\"],1204:[\"OW\",\"1\",\"AlphaPaletteColorLookupTableData\"],1211:[\"OW\",\"1\",\"LargeRedPaletteColorLookupTableData\"],1212:[\"OW\",\"1\",\"LargeGreenPaletteColorLookupTableData\"],1213:[\"OW\",\"1\",\"LargeBluePaletteColorLookupTableData\"],1214:[\"UI\",\"1\",\"LargePaletteColorLookupTableUID\"],1221:[\"OW\",\"1\",\"SegmentedRedPaletteColorLookupTableData\"],1222:[\"OW\",\"1\",\"SegmentedGreenPaletteColorLookupTableData\"],1223:[\"OW\",\"1\",\"SegmentedBluePaletteColorLookupTableData\"],1224:[\"OW\",\"1\",\"SegmentedAlphaPaletteColorLookupTableData\"],1230:[\"SQ\",\"1\",\"StoredValueColorRangeSequence\"],1231:[\"FD\",\"1\",\"MinimumStoredValueMapped\"],1232:[\"FD\",\"1\",\"MaximumStoredValueMapped\"],1300:[\"CS\",\"1\",\"BreastImplantPresent\"],1350:[\"CS\",\"1\",\"PartialView\"],1351:[\"ST\",\"1\",\"PartialViewDescription\"],1352:[\"SQ\",\"1\",\"PartialViewCodeSequence\"],\"135A\":[\"CS\",\"1\",\"SpatialLocationsPreserved\"],1401:[\"SQ\",\"1\",\"DataFrameAssignmentSequence\"],1402:[\"CS\",\"1\",\"DataPathAssignment\"],1403:[\"US\",\"1\",\"BitsMappedToColorLookupTable\"],1404:[\"SQ\",\"1\",\"BlendingLUT1Sequence\"],1405:[\"CS\",\"1\",\"BlendingLUT1TransferFunction\"],1406:[\"FD\",\"1\",\"BlendingWeightConstant\"],1407:[\"US\",\"3\",\"BlendingLookupTableDescriptor\"],1408:[\"OW\",\"1\",\"BlendingLookupTableData\"],\"140B\":[\"SQ\",\"1\",\"EnhancedPaletteColorLookupTableSequence\"],\"140C\":[\"SQ\",\"1\",\"BlendingLUT2Sequence\"],\"140D\":[\"CS\",\"1\",\"BlendingLUT2TransferFunction\"],\"140E\":[\"CS\",\"1\",\"DataPathID\"],\"140F\":[\"CS\",\"1\",\"RGBLUTTransferFunction\"],1410:[\"CS\",\"1\",\"AlphaLUTTransferFunction\"],2e3:[\"OB\",\"1\",\"ICCProfile\"],2002:[\"CS\",\"1\",\"ColorSpace\"],2110:[\"CS\",\"1\",\"LossyImageCompression\"],2112:[\"DS\",\"1-n\",\"LossyImageCompressionRatio\"],2114:[\"CS\",\"1-n\",\"LossyImageCompressionMethod\"],3e3:[\"SQ\",\"1\",\"ModalityLUTSequence\"],3002:[\"xs\",\"3\",\"LUTDescriptor\"],3003:[\"LO\",\"1\",\"LUTExplanation\"],3004:[\"LO\",\"1\",\"ModalityLUTType\"],3006:[\"xx\",\"1-n or 1\",\"LUTData\"],3010:[\"SQ\",\"1\",\"VOILUTSequence\"],3110:[\"SQ\",\"1\",\"SoftcopyVOILUTSequence\"],4e3:[\"LT\",\"1\",\"ImagePresentationComments\"],5e3:[\"SQ\",\"1\",\"BiPlaneAcquisitionSequence\"],6010:[\"US\",\"1\",\"RepresentativeFrameNumber\"],6020:[\"US\",\"1-n\",\"FrameNumbersOfInterest\"],6022:[\"LO\",\"1-n\",\"FrameOfInterestDescription\"],6023:[\"CS\",\"1-n\",\"FrameOfInterestType\"],6030:[\"US\",\"1-n\",\"MaskPointers\"],6040:[\"US\",\"1-n\",\"RWavePointer\"],6100:[\"SQ\",\"1\",\"MaskSubtractionSequence\"],6101:[\"CS\",\"1\",\"MaskOperation\"],6102:[\"US\",\"2-2n\",\"ApplicableFrameRange\"],6110:[\"US\",\"1-n\",\"MaskFrameNumbers\"],6112:[\"US\",\"1\",\"ContrastFrameAveraging\"],6114:[\"FL\",\"2\",\"MaskSubPixelShift\"],6120:[\"SS\",\"1\",\"TIDOffset\"],6190:[\"ST\",\"1\",\"MaskOperationExplanation\"],7e3:[\"SQ\",\"1\",\"EquipmentAdministratorSequence\"],7001:[\"US\",\"1\",\"NumberOfDisplaySubsystems\"],7002:[\"US\",\"1\",\"CurrentConfigurationID\"],7003:[\"US\",\"1\",\"DisplaySubsystemID\"],7004:[\"SH\",\"1\",\"DisplaySubsystemName\"],7005:[\"LO\",\"1\",\"DisplaySubsystemDescription\"],7006:[\"CS\",\"1\",\"SystemStatus\"],7007:[\"LO\",\"1\",\"SystemStatusComment\"],7008:[\"SQ\",\"1\",\"TargetLuminanceCharacteristicsSequence\"],7009:[\"US\",\"1\",\"LuminanceCharacteristicsID\"],\"700A\":[\"SQ\",\"1\",\"DisplaySubsystemConfigurationSequence\"],\"700B\":[\"US\",\"1\",\"ConfigurationID\"],\"700C\":[\"SH\",\"1\",\"ConfigurationName\"],\"700D\":[\"LO\",\"1\",\"ConfigurationDescription\"],\"700E\":[\"US\",\"1\",\"ReferencedTargetLuminanceCharacteristicsID\"],\"700F\":[\"SQ\",\"1\",\"QAResultsSequence\"],7010:[\"SQ\",\"1\",\"DisplaySubsystemQAResultsSequence\"],7011:[\"SQ\",\"1\",\"ConfigurationQAResultsSequence\"],7012:[\"SQ\",\"1\",\"MeasurementEquipmentSequence\"],7013:[\"CS\",\"1-n\",\"MeasurementFunctions\"],7014:[\"CS\",\"1\",\"MeasurementEquipmentType\"],7015:[\"SQ\",\"1\",\"VisualEvaluationResultSequence\"],7016:[\"SQ\",\"1\",\"DisplayCalibrationResultSequence\"],7017:[\"US\",\"1\",\"DDLValue\"],7018:[\"FL\",\"2\",\"CIExyWhitePoint\"],7019:[\"CS\",\"1\",\"DisplayFunctionType\"],\"701A\":[\"FL\",\"1\",\"GammaValue\"],\"701B\":[\"US\",\"1\",\"NumberOfLuminancePoints\"],\"701C\":[\"SQ\",\"1\",\"LuminanceResponseSequence\"],\"701D\":[\"FL\",\"1\",\"TargetMinimumLuminance\"],\"701E\":[\"FL\",\"1\",\"TargetMaximumLuminance\"],\"701F\":[\"FL\",\"1\",\"LuminanceValue\"],7020:[\"LO\",\"1\",\"LuminanceResponseDescription\"],7021:[\"CS\",\"1\",\"WhitePointFlag\"],7022:[\"SQ\",\"1\",\"DisplayDeviceTypeCodeSequence\"],7023:[\"SQ\",\"1\",\"DisplaySubsystemSequence\"],7024:[\"SQ\",\"1\",\"LuminanceResultSequence\"],7025:[\"CS\",\"1\",\"AmbientLightValueSource\"],7026:[\"CS\",\"1-n\",\"MeasuredCharacteristics\"],7027:[\"SQ\",\"1\",\"LuminanceUniformityResultSequence\"],7028:[\"SQ\",\"1\",\"VisualEvaluationTestSequence\"],7029:[\"CS\",\"1\",\"TestResult\"],\"702A\":[\"LO\",\"1\",\"TestResultComment\"],\"702B\":[\"CS\",\"1\",\"TestImageValidation\"],\"702C\":[\"SQ\",\"1\",\"TestPatternCodeSequence\"],\"702D\":[\"SQ\",\"1\",\"MeasurementPatternCodeSequence\"],\"702E\":[\"SQ\",\"1\",\"VisualEvaluationMethodCodeSequence\"],\"7FE0\":[\"UR\",\"1\",\"PixelDataProviderURL\"],9001:[\"UL\",\"1\",\"DataPointRows\"],9002:[\"UL\",\"1\",\"DataPointColumns\"],9003:[\"CS\",\"1\",\"SignalDomainColumns\"],9099:[\"US\",\"1\",\"LargestMonochromePixelValue\"],9108:[\"CS\",\"1\",\"DataRepresentation\"],9110:[\"SQ\",\"1\",\"PixelMeasuresSequence\"],9132:[\"SQ\",\"1\",\"FrameVOILUTSequence\"],9145:[\"SQ\",\"1\",\"PixelValueTransformationSequence\"],9235:[\"CS\",\"1\",\"SignalDomainRows\"],9411:[\"FL\",\"1\",\"DisplayFilterPercentage\"],9415:[\"SQ\",\"1\",\"FramePixelShiftSequence\"],9416:[\"US\",\"1\",\"SubtractionItemID\"],9422:[\"SQ\",\"1\",\"PixelIntensityRelationshipLUTSequence\"],9443:[\"SQ\",\"1\",\"FramePixelDataPropertiesSequence\"],9444:[\"CS\",\"1\",\"GeometricalProperties\"],9445:[\"FL\",\"1\",\"GeometricMaximumDistortion\"],9446:[\"CS\",\"1-n\",\"ImageProcessingApplied\"],9454:[\"CS\",\"1\",\"MaskSelectionMode\"],9474:[\"CS\",\"1\",\"LUTFunction\"],9478:[\"FL\",\"1\",\"MaskVisibilityPercentage\"],9501:[\"SQ\",\"1\",\"PixelShiftSequence\"],9502:[\"SQ\",\"1\",\"RegionPixelShiftSequence\"],9503:[\"SS\",\"2-2n\",\"VerticesOfTheRegion\"],9505:[\"SQ\",\"1\",\"MultiFramePresentationSequence\"],9506:[\"US\",\"2-2n\",\"PixelShiftFrameRange\"],9507:[\"US\",\"2-2n\",\"LUTFrameRange\"],9520:[\"DS\",\"16\",\"ImageToEquipmentMappingMatrix\"],9537:[\"CS\",\"1\",\"EquipmentCoordinateSystemIdentification\"]},\"0032\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"000A\":[\"CS\",\"1\",\"StudyStatusID\"],\"000C\":[\"CS\",\"1\",\"StudyPriorityID\"],\"0012\":[\"LO\",\"1\",\"StudyIDIssuer\"],\"0032\":[\"DA\",\"1\",\"StudyVerifiedDate\"],\"0033\":[\"TM\",\"1\",\"StudyVerifiedTime\"],\"0034\":[\"DA\",\"1\",\"StudyReadDate\"],\"0035\":[\"TM\",\"1\",\"StudyReadTime\"],1e3:[\"DA\",\"1\",\"ScheduledStudyStartDate\"],1001:[\"TM\",\"1\",\"ScheduledStudyStartTime\"],1010:[\"DA\",\"1\",\"ScheduledStudyStopDate\"],1011:[\"TM\",\"1\",\"ScheduledStudyStopTime\"],1020:[\"LO\",\"1\",\"ScheduledStudyLocation\"],1021:[\"AE\",\"1-n\",\"ScheduledStudyLocationAETitle\"],1030:[\"LO\",\"1\",\"ReasonForStudy\"],1031:[\"SQ\",\"1\",\"RequestingPhysicianIdentificationSequence\"],1032:[\"PN\",\"1\",\"RequestingPhysician\"],1033:[\"LO\",\"1\",\"RequestingService\"],1034:[\"SQ\",\"1\",\"RequestingServiceCodeSequence\"],1040:[\"DA\",\"1\",\"StudyArrivalDate\"],1041:[\"TM\",\"1\",\"StudyArrivalTime\"],1050:[\"DA\",\"1\",\"StudyCompletionDate\"],1051:[\"TM\",\"1\",\"StudyCompletionTime\"],1055:[\"CS\",\"1\",\"StudyComponentStatusID\"],1060:[\"LO\",\"1\",\"RequestedProcedureDescription\"],1064:[\"SQ\",\"1\",\"RequestedProcedureCodeSequence\"],1065:[\"SQ\",\"1\",\"RequestedLateralityCodeSequence\"],1066:[\"UT\",\"1\",\"ReasonForVisit\"],1067:[\"SQ\",\"1\",\"ReasonForVisitCodeSequence\"],1070:[\"LO\",\"1\",\"RequestedContrastAgent\"],4e3:[\"LT\",\"1\",\"StudyComments\"]},\"0034\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"SQ\",\"1\",\"FlowIdentifierSequence\"],\"0002\":[\"OB\",\"1\",\"FlowIdentifier\"],\"0003\":[\"UI\",\"1\",\"FlowTransferSyntaxUID\"],\"0004\":[\"UL\",\"1\",\"FlowRTPSamplingRate\"],\"0005\":[\"OB\",\"1\",\"SourceIdentifier\"],\"0007\":[\"OB\",\"1\",\"FrameOriginTimestamp\"],\"0008\":[\"CS\",\"1\",\"IncludesImagingSubject\"],\"0009\":[\"SQ\",\"1\",\"FrameUsefulnessGroupSequence\"],\"000A\":[\"SQ\",\"1\",\"RealTimeBulkDataFlowSequence\"],\"000B\":[\"SQ\",\"1\",\"CameraPositionGroupSequence\"],\"000C\":[\"CS\",\"1\",\"IncludesInformation\"],\"000D\":[\"SQ\",\"1\",\"TimeOfFrameGroupSequence\"]},\"0038\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0004\":[\"SQ\",\"1\",\"ReferencedPatientAliasSequence\"],\"0008\":[\"CS\",\"1\",\"VisitStatusID\"],\"0010\":[\"LO\",\"1\",\"AdmissionID\"],\"0011\":[\"LO\",\"1\",\"IssuerOfAdmissionID\"],\"0014\":[\"SQ\",\"1\",\"IssuerOfAdmissionIDSequence\"],\"0016\":[\"LO\",\"1\",\"RouteOfAdmissions\"],\"001A\":[\"DA\",\"1\",\"ScheduledAdmissionDate\"],\"001B\":[\"TM\",\"1\",\"ScheduledAdmissionTime\"],\"001C\":[\"DA\",\"1\",\"ScheduledDischargeDate\"],\"001D\":[\"TM\",\"1\",\"ScheduledDischargeTime\"],\"001E\":[\"LO\",\"1\",\"ScheduledPatientInstitutionResidence\"],\"0020\":[\"DA\",\"1\",\"AdmittingDate\"],\"0021\":[\"TM\",\"1\",\"AdmittingTime\"],\"0030\":[\"DA\",\"1\",\"DischargeDate\"],\"0032\":[\"TM\",\"1\",\"DischargeTime\"],\"0040\":[\"LO\",\"1\",\"DischargeDiagnosisDescription\"],\"0044\":[\"SQ\",\"1\",\"DischargeDiagnosisCodeSequence\"],\"0050\":[\"LO\",\"1\",\"SpecialNeeds\"],\"0060\":[\"LO\",\"1\",\"ServiceEpisodeID\"],\"0061\":[\"LO\",\"1\",\"IssuerOfServiceEpisodeID\"],\"0062\":[\"LO\",\"1\",\"ServiceEpisodeDescription\"],\"0064\":[\"SQ\",\"1\",\"IssuerOfServiceEpisodeIDSequence\"],\"0100\":[\"SQ\",\"1\",\"PertinentDocumentsSequence\"],\"0101\":[\"SQ\",\"1\",\"PertinentResourcesSequence\"],\"0102\":[\"LO\",\"1\",\"ResourceDescription\"],\"0300\":[\"LO\",\"1\",\"CurrentPatientLocation\"],\"0400\":[\"LO\",\"1\",\"PatientInstitutionResidence\"],\"0500\":[\"LO\",\"1\",\"PatientState\"],\"0502\":[\"SQ\",\"1\",\"PatientClinicalTrialParticipationSequence\"],4e3:[\"LT\",\"1\",\"VisitComments\"]},\"003A\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0004\":[\"CS\",\"1\",\"WaveformOriginality\"],\"0005\":[\"US\",\"1\",\"NumberOfWaveformChannels\"],\"0010\":[\"UL\",\"1\",\"NumberOfWaveformSamples\"],\"001A\":[\"DS\",\"1\",\"SamplingFrequency\"],\"0020\":[\"SH\",\"1\",\"MultiplexGroupLabel\"],\"0200\":[\"SQ\",\"1\",\"ChannelDefinitionSequence\"],\"0202\":[\"IS\",\"1\",\"WaveformChannelNumber\"],\"0203\":[\"SH\",\"1\",\"ChannelLabel\"],\"0205\":[\"CS\",\"1-n\",\"ChannelStatus\"],\"0208\":[\"SQ\",\"1\",\"ChannelSourceSequence\"],\"0209\":[\"SQ\",\"1\",\"ChannelSourceModifiersSequence\"],\"020A\":[\"SQ\",\"1\",\"SourceWaveformSequence\"],\"020C\":[\"LO\",\"1\",\"ChannelDerivationDescription\"],\"0210\":[\"DS\",\"1\",\"ChannelSensitivity\"],\"0211\":[\"SQ\",\"1\",\"ChannelSensitivityUnitsSequence\"],\"0212\":[\"DS\",\"1\",\"ChannelSensitivityCorrectionFactor\"],\"0213\":[\"DS\",\"1\",\"ChannelBaseline\"],\"0214\":[\"DS\",\"1\",\"ChannelTimeSkew\"],\"0215\":[\"DS\",\"1\",\"ChannelSampleSkew\"],\"0218\":[\"DS\",\"1\",\"ChannelOffset\"],\"021A\":[\"US\",\"1\",\"WaveformBitsStored\"],\"0220\":[\"DS\",\"1\",\"FilterLowFrequency\"],\"0221\":[\"DS\",\"1\",\"FilterHighFrequency\"],\"0222\":[\"DS\",\"1\",\"NotchFilterFrequency\"],\"0223\":[\"DS\",\"1\",\"NotchFilterBandwidth\"],\"0230\":[\"FL\",\"1\",\"WaveformDataDisplayScale\"],\"0231\":[\"US\",\"3\",\"WaveformDisplayBackgroundCIELabValue\"],\"0240\":[\"SQ\",\"1\",\"WaveformPresentationGroupSequence\"],\"0241\":[\"US\",\"1\",\"PresentationGroupNumber\"],\"0242\":[\"SQ\",\"1\",\"ChannelDisplaySequence\"],\"0244\":[\"US\",\"3\",\"ChannelRecommendedDisplayCIELabValue\"],\"0245\":[\"FL\",\"1\",\"ChannelPosition\"],\"0246\":[\"CS\",\"1\",\"DisplayShadingFlag\"],\"0247\":[\"FL\",\"1\",\"FractionalChannelDisplayScale\"],\"0248\":[\"FL\",\"1\",\"AbsoluteChannelDisplayScale\"],\"0300\":[\"SQ\",\"1\",\"MultiplexedAudioChannelsDescriptionCodeSequence\"],\"0301\":[\"IS\",\"1\",\"ChannelIdentificationCode\"],\"0302\":[\"CS\",\"1\",\"ChannelMode\"],\"0310\":[\"UI\",\"1\",\"MultiplexGroupUID\"],\"0311\":[\"DS\",\"1\",\"PowerlineFrequency\"],\"0312\":[\"SQ\",\"1\",\"ChannelImpedanceSequence\"],\"0313\":[\"DS\",\"1\",\"ImpedanceValue\"],\"0314\":[\"DT\",\"1\",\"ImpedanceMeasurementDateTime\"],\"0315\":[\"DS\",\"1\",\"ImpedanceMeasurementFrequency\"],\"0316\":[\"CS\",\"1\",\"ImpedanceMeasurementCurrentType\"]},\"0040\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"AE\",\"1-n\",\"ScheduledStationAETitle\"],\"0002\":[\"DA\",\"1\",\"ScheduledProcedureStepStartDate\"],\"0003\":[\"TM\",\"1\",\"ScheduledProcedureStepStartTime\"],\"0004\":[\"DA\",\"1\",\"ScheduledProcedureStepEndDate\"],\"0005\":[\"TM\",\"1\",\"ScheduledProcedureStepEndTime\"],\"0006\":[\"PN\",\"1\",\"ScheduledPerformingPhysicianName\"],\"0007\":[\"LO\",\"1\",\"ScheduledProcedureStepDescription\"],\"0008\":[\"SQ\",\"1\",\"ScheduledProtocolCodeSequence\"],\"0009\":[\"SH\",\"1\",\"ScheduledProcedureStepID\"],\"000A\":[\"SQ\",\"1\",\"StageCodeSequence\"],\"000B\":[\"SQ\",\"1\",\"ScheduledPerformingPhysicianIdentificationSequence\"],\"0010\":[\"SH\",\"1-n\",\"ScheduledStationName\"],\"0011\":[\"SH\",\"1\",\"ScheduledProcedureStepLocation\"],\"0012\":[\"LO\",\"1\",\"PreMedication\"],\"0020\":[\"CS\",\"1\",\"ScheduledProcedureStepStatus\"],\"0026\":[\"SQ\",\"1\",\"OrderPlacerIdentifierSequence\"],\"0027\":[\"SQ\",\"1\",\"OrderFillerIdentifierSequence\"],\"0031\":[\"UT\",\"1\",\"LocalNamespaceEntityID\"],\"0032\":[\"UT\",\"1\",\"UniversalEntityID\"],\"0033\":[\"CS\",\"1\",\"UniversalEntityIDType\"],\"0035\":[\"CS\",\"1\",\"IdentifierTypeCode\"],\"0036\":[\"SQ\",\"1\",\"AssigningFacilitySequence\"],\"0039\":[\"SQ\",\"1\",\"AssigningJurisdictionCodeSequence\"],\"003A\":[\"SQ\",\"1\",\"AssigningAgencyOrDepartmentCodeSequence\"],\"0100\":[\"SQ\",\"1\",\"ScheduledProcedureStepSequence\"],\"0220\":[\"SQ\",\"1\",\"ReferencedNonImageCompositeSOPInstanceSequence\"],\"0241\":[\"AE\",\"1\",\"PerformedStationAETitle\"],\"0242\":[\"SH\",\"1\",\"PerformedStationName\"],\"0243\":[\"SH\",\"1\",\"PerformedLocation\"],\"0244\":[\"DA\",\"1\",\"PerformedProcedureStepStartDate\"],\"0245\":[\"TM\",\"1\",\"PerformedProcedureStepStartTime\"],\"0250\":[\"DA\",\"1\",\"PerformedProcedureStepEndDate\"],\"0251\":[\"TM\",\"1\",\"PerformedProcedureStepEndTime\"],\"0252\":[\"CS\",\"1\",\"PerformedProcedureStepStatus\"],\"0253\":[\"SH\",\"1\",\"PerformedProcedureStepID\"],\"0254\":[\"LO\",\"1\",\"PerformedProcedureStepDescription\"],\"0255\":[\"LO\",\"1\",\"PerformedProcedureTypeDescription\"],\"0260\":[\"SQ\",\"1\",\"PerformedProtocolCodeSequence\"],\"0261\":[\"CS\",\"1\",\"PerformedProtocolType\"],\"0270\":[\"SQ\",\"1\",\"ScheduledStepAttributesSequence\"],\"0275\":[\"SQ\",\"1\",\"RequestAttributesSequence\"],\"0280\":[\"ST\",\"1\",\"CommentsOnThePerformedProcedureStep\"],\"0281\":[\"SQ\",\"1\",\"PerformedProcedureStepDiscontinuationReasonCodeSequence\"],\"0293\":[\"SQ\",\"1\",\"QuantitySequence\"],\"0294\":[\"DS\",\"1\",\"Quantity\"],\"0295\":[\"SQ\",\"1\",\"MeasuringUnitsSequence\"],\"0296\":[\"SQ\",\"1\",\"BillingItemSequence\"],\"0300\":[\"US\",\"1\",\"TotalTimeOfFluoroscopy\"],\"0301\":[\"US\",\"1\",\"TotalNumberOfExposures\"],\"0302\":[\"US\",\"1\",\"EntranceDose\"],\"0303\":[\"US\",\"1-2\",\"ExposedArea\"],\"0306\":[\"DS\",\"1\",\"DistanceSourceToEntrance\"],\"0307\":[\"DS\",\"1\",\"DistanceSourceToSupport\"],\"030E\":[\"SQ\",\"1\",\"ExposureDoseSequence\"],\"0310\":[\"ST\",\"1\",\"CommentsOnRadiationDose\"],\"0312\":[\"DS\",\"1\",\"XRayOutput\"],\"0314\":[\"DS\",\"1\",\"HalfValueLayer\"],\"0316\":[\"DS\",\"1\",\"OrganDose\"],\"0318\":[\"CS\",\"1\",\"OrganExposed\"],\"0320\":[\"SQ\",\"1\",\"BillingProcedureStepSequence\"],\"0321\":[\"SQ\",\"1\",\"FilmConsumptionSequence\"],\"0324\":[\"SQ\",\"1\",\"BillingSuppliesAndDevicesSequence\"],\"0330\":[\"SQ\",\"1\",\"ReferencedProcedureStepSequence\"],\"0340\":[\"SQ\",\"1\",\"PerformedSeriesSequence\"],\"0400\":[\"LT\",\"1\",\"CommentsOnTheScheduledProcedureStep\"],\"0440\":[\"SQ\",\"1\",\"ProtocolContextSequence\"],\"0441\":[\"SQ\",\"1\",\"ContentItemModifierSequence\"],\"0500\":[\"SQ\",\"1\",\"ScheduledSpecimenSequence\"],\"050A\":[\"LO\",\"1\",\"SpecimenAccessionNumber\"],\"0512\":[\"LO\",\"1\",\"ContainerIdentifier\"],\"0513\":[\"SQ\",\"1\",\"IssuerOfTheContainerIdentifierSequence\"],\"0515\":[\"SQ\",\"1\",\"AlternateContainerIdentifierSequence\"],\"0518\":[\"SQ\",\"1\",\"ContainerTypeCodeSequence\"],\"051A\":[\"LO\",\"1\",\"ContainerDescription\"],\"0520\":[\"SQ\",\"1\",\"ContainerComponentSequence\"],\"0550\":[\"SQ\",\"1\",\"SpecimenSequence\"],\"0551\":[\"LO\",\"1\",\"SpecimenIdentifier\"],\"0552\":[\"SQ\",\"1\",\"SpecimenDescriptionSequenceTrial\"],\"0553\":[\"ST\",\"1\",\"SpecimenDescriptionTrial\"],\"0554\":[\"UI\",\"1\",\"SpecimenUID\"],\"0555\":[\"SQ\",\"1\",\"AcquisitionContextSequence\"],\"0556\":[\"ST\",\"1\",\"AcquisitionContextDescription\"],\"0560\":[\"SQ\",\"1\",\"SpecimenDescriptionSequence\"],\"0562\":[\"SQ\",\"1\",\"IssuerOfTheSpecimenIdentifierSequence\"],\"059A\":[\"SQ\",\"1\",\"SpecimenTypeCodeSequence\"],\"0600\":[\"LO\",\"1\",\"SpecimenShortDescription\"],\"0602\":[\"UT\",\"1\",\"SpecimenDetailedDescription\"],\"0610\":[\"SQ\",\"1\",\"SpecimenPreparationSequence\"],\"0612\":[\"SQ\",\"1\",\"SpecimenPreparationStepContentItemSequence\"],\"0620\":[\"SQ\",\"1\",\"SpecimenLocalizationContentItemSequence\"],\"06FA\":[\"LO\",\"1\",\"SlideIdentifier\"],\"0710\":[\"SQ\",\"1\",\"WholeSlideMicroscopyImageFrameTypeSequence\"],\"071A\":[\"SQ\",\"1\",\"ImageCenterPointCoordinatesSequence\"],\"072A\":[\"DS\",\"1\",\"XOffsetInSlideCoordinateSystem\"],\"073A\":[\"DS\",\"1\",\"YOffsetInSlideCoordinateSystem\"],\"074A\":[\"DS\",\"1\",\"ZOffsetInSlideCoordinateSystem\"],\"08D8\":[\"SQ\",\"1\",\"PixelSpacingSequence\"],\"08DA\":[\"SQ\",\"1\",\"CoordinateSystemAxisCodeSequence\"],\"08EA\":[\"SQ\",\"1\",\"MeasurementUnitsCodeSequence\"],\"09F8\":[\"SQ\",\"1\",\"VitalStainCodeSequenceTrial\"],1001:[\"SH\",\"1\",\"RequestedProcedureID\"],1002:[\"LO\",\"1\",\"ReasonForTheRequestedProcedure\"],1003:[\"SH\",\"1\",\"RequestedProcedurePriority\"],1004:[\"LO\",\"1\",\"PatientTransportArrangements\"],1005:[\"LO\",\"1\",\"RequestedProcedureLocation\"],1006:[\"SH\",\"1\",\"PlacerOrderNumberProcedure\"],1007:[\"SH\",\"1\",\"FillerOrderNumberProcedure\"],1008:[\"LO\",\"1\",\"ConfidentialityCode\"],1009:[\"SH\",\"1\",\"ReportingPriority\"],\"100A\":[\"SQ\",\"1\",\"ReasonForRequestedProcedureCodeSequence\"],1010:[\"PN\",\"1-n\",\"NamesOfIntendedRecipientsOfResults\"],1011:[\"SQ\",\"1\",\"IntendedRecipientsOfResultsIdentificationSequence\"],1012:[\"SQ\",\"1\",\"ReasonForPerformedProcedureCodeSequence\"],1060:[\"LO\",\"1\",\"RequestedProcedureDescriptionTrial\"],1101:[\"SQ\",\"1\",\"PersonIdentificationCodeSequence\"],1102:[\"ST\",\"1\",\"PersonAddress\"],1103:[\"LO\",\"1-n\",\"PersonTelephoneNumbers\"],1104:[\"LT\",\"1\",\"PersonTelecomInformation\"],1400:[\"LT\",\"1\",\"RequestedProcedureComments\"],2001:[\"LO\",\"1\",\"ReasonForTheImagingServiceRequest\"],2004:[\"DA\",\"1\",\"IssueDateOfImagingServiceRequest\"],2005:[\"TM\",\"1\",\"IssueTimeOfImagingServiceRequest\"],2006:[\"SH\",\"1\",\"PlacerOrderNumberImagingServiceRequestRetired\"],2007:[\"SH\",\"1\",\"FillerOrderNumberImagingServiceRequestRetired\"],2008:[\"PN\",\"1\",\"OrderEnteredBy\"],2009:[\"SH\",\"1\",\"OrderEntererLocation\"],2010:[\"SH\",\"1\",\"OrderCallbackPhoneNumber\"],2011:[\"LT\",\"1\",\"OrderCallbackTelecomInformation\"],2016:[\"LO\",\"1\",\"PlacerOrderNumberImagingServiceRequest\"],2017:[\"LO\",\"1\",\"FillerOrderNumberImagingServiceRequest\"],2400:[\"LT\",\"1\",\"ImagingServiceRequestComments\"],3001:[\"LO\",\"1\",\"ConfidentialityConstraintOnPatientDataDescription\"],4001:[\"CS\",\"1\",\"GeneralPurposeScheduledProcedureStepStatus\"],4002:[\"CS\",\"1\",\"GeneralPurposePerformedProcedureStepStatus\"],4003:[\"CS\",\"1\",\"GeneralPurposeScheduledProcedureStepPriority\"],4004:[\"SQ\",\"1\",\"ScheduledProcessingApplicationsCodeSequence\"],4005:[\"DT\",\"1\",\"ScheduledProcedureStepStartDateTime\"],4006:[\"CS\",\"1\",\"MultipleCopiesFlag\"],4007:[\"SQ\",\"1\",\"PerformedProcessingApplicationsCodeSequence\"],4008:[\"DT\",\"1\",\"ScheduledProcedureStepExpirationDateTime\"],4009:[\"SQ\",\"1\",\"HumanPerformerCodeSequence\"],4010:[\"DT\",\"1\",\"ScheduledProcedureStepModificationDateTime\"],4011:[\"DT\",\"1\",\"ExpectedCompletionDateTime\"],4015:[\"SQ\",\"1\",\"ResultingGeneralPurposePerformedProcedureStepsSequence\"],4016:[\"SQ\",\"1\",\"ReferencedGeneralPurposeScheduledProcedureStepSequence\"],4018:[\"SQ\",\"1\",\"ScheduledWorkitemCodeSequence\"],4019:[\"SQ\",\"1\",\"PerformedWorkitemCodeSequence\"],4020:[\"CS\",\"1\",\"InputAvailabilityFlag\"],4021:[\"SQ\",\"1\",\"InputInformationSequence\"],4022:[\"SQ\",\"1\",\"RelevantInformationSequence\"],4023:[\"UI\",\"1\",\"ReferencedGeneralPurposeScheduledProcedureStepTransactionUID\"],4025:[\"SQ\",\"1\",\"ScheduledStationNameCodeSequence\"],4026:[\"SQ\",\"1\",\"ScheduledStationClassCodeSequence\"],4027:[\"SQ\",\"1\",\"ScheduledStationGeographicLocationCodeSequence\"],4028:[\"SQ\",\"1\",\"PerformedStationNameCodeSequence\"],4029:[\"SQ\",\"1\",\"PerformedStationClassCodeSequence\"],4030:[\"SQ\",\"1\",\"PerformedStationGeographicLocationCodeSequence\"],4031:[\"SQ\",\"1\",\"RequestedSubsequentWorkitemCodeSequence\"],4032:[\"SQ\",\"1\",\"NonDICOMOutputCodeSequence\"],4033:[\"SQ\",\"1\",\"OutputInformationSequence\"],4034:[\"SQ\",\"1\",\"ScheduledHumanPerformersSequence\"],4035:[\"SQ\",\"1\",\"ActualHumanPerformersSequence\"],4036:[\"LO\",\"1\",\"HumanPerformerOrganization\"],4037:[\"PN\",\"1\",\"HumanPerformerName\"],4040:[\"CS\",\"1\",\"RawDataHandling\"],4041:[\"CS\",\"1\",\"InputReadinessState\"],4050:[\"DT\",\"1\",\"PerformedProcedureStepStartDateTime\"],4051:[\"DT\",\"1\",\"PerformedProcedureStepEndDateTime\"],4052:[\"DT\",\"1\",\"ProcedureStepCancellationDateTime\"],4070:[\"SQ\",\"1\",\"OutputDestinationSequence\"],4071:[\"SQ\",\"1\",\"DICOMStorageSequence\"],4072:[\"SQ\",\"1\",\"STOWRSStorageSequence\"],4073:[\"UR\",\"1\",\"StorageURL\"],4074:[\"SQ\",\"1\",\"XDSStorageSequence\"],8302:[\"DS\",\"1\",\"EntranceDoseInmGy\"],8303:[\"CS\",\"1\",\"EntranceDoseDerivation\"],9092:[\"SQ\",\"1\",\"ParametricMapFrameTypeSequence\"],9094:[\"SQ\",\"1\",\"ReferencedImageRealWorldValueMappingSequence\"],9096:[\"SQ\",\"1\",\"RealWorldValueMappingSequence\"],9098:[\"SQ\",\"1\",\"PixelValueMappingCodeSequence\"],9210:[\"SH\",\"1\",\"LUTLabel\"],9211:[\"xs\",\"1\",\"RealWorldValueLastValueMapped\"],9212:[\"FD\",\"1-n\",\"RealWorldValueLUTData\"],9213:[\"FD\",\"1\",\"DoubleFloatRealWorldValueLastValueMapped\"],9214:[\"FD\",\"1\",\"DoubleFloatRealWorldValueFirstValueMapped\"],9216:[\"xs\",\"1\",\"RealWorldValueFirstValueMapped\"],9220:[\"SQ\",\"1\",\"QuantityDefinitionSequence\"],9224:[\"FD\",\"1\",\"RealWorldValueIntercept\"],9225:[\"FD\",\"1\",\"RealWorldValueSlope\"],A007:[\"CS\",\"1\",\"FindingsFlagTrial\"],A010:[\"CS\",\"1\",\"RelationshipType\"],A020:[\"SQ\",\"1\",\"FindingsSequenceTrial\"],A021:[\"UI\",\"1\",\"FindingsGroupUIDTrial\"],A022:[\"UI\",\"1\",\"ReferencedFindingsGroupUIDTrial\"],A023:[\"DA\",\"1\",\"FindingsGroupRecordingDateTrial\"],A024:[\"TM\",\"1\",\"FindingsGroupRecordingTimeTrial\"],A026:[\"SQ\",\"1\",\"FindingsSourceCategoryCodeSequenceTrial\"],A027:[\"LO\",\"1\",\"VerifyingOrganization\"],A028:[\"SQ\",\"1\",\"DocumentingOrganizationIdentifierCodeSequenceTrial\"],A030:[\"DT\",\"1\",\"VerificationDateTime\"],A032:[\"DT\",\"1\",\"ObservationDateTime\"],A033:[\"DT\",\"1\",\"ObservationStartDateTime\"],A040:[\"CS\",\"1\",\"ValueType\"],A043:[\"SQ\",\"1\",\"ConceptNameCodeSequence\"],A047:[\"LO\",\"1\",\"MeasurementPrecisionDescriptionTrial\"],A050:[\"CS\",\"1\",\"ContinuityOfContent\"],A057:[\"CS\",\"1-n\",\"UrgencyOrPriorityAlertsTrial\"],A060:[\"LO\",\"1\",\"SequencingIndicatorTrial\"],A066:[\"SQ\",\"1\",\"DocumentIdentifierCodeSequenceTrial\"],A067:[\"PN\",\"1\",\"DocumentAuthorTrial\"],A068:[\"SQ\",\"1\",\"DocumentAuthorIdentifierCodeSequenceTrial\"],A070:[\"SQ\",\"1\",\"IdentifierCodeSequenceTrial\"],A073:[\"SQ\",\"1\",\"VerifyingObserverSequence\"],A074:[\"OB\",\"1\",\"ObjectBinaryIdentifierTrial\"],A075:[\"PN\",\"1\",\"VerifyingObserverName\"],A076:[\"SQ\",\"1\",\"DocumentingObserverIdentifierCodeSequenceTrial\"],A078:[\"SQ\",\"1\",\"AuthorObserverSequence\"],A07A:[\"SQ\",\"1\",\"ParticipantSequence\"],A07C:[\"SQ\",\"1\",\"CustodialOrganizationSequence\"],A080:[\"CS\",\"1\",\"ParticipationType\"],A082:[\"DT\",\"1\",\"ParticipationDateTime\"],A084:[\"CS\",\"1\",\"ObserverType\"],A085:[\"SQ\",\"1\",\"ProcedureIdentifierCodeSequenceTrial\"],A088:[\"SQ\",\"1\",\"VerifyingObserverIdentificationCodeSequence\"],A089:[\"OB\",\"1\",\"ObjectDirectoryBinaryIdentifierTrial\"],A090:[\"SQ\",\"1\",\"EquivalentCDADocumentSequence\"],A0B0:[\"US\",\"2-2n\",\"ReferencedWaveformChannels\"],A110:[\"DA\",\"1\",\"DateOfDocumentOrVerbalTransactionTrial\"],A112:[\"TM\",\"1\",\"TimeOfDocumentCreationOrVerbalTransactionTrial\"],A120:[\"DT\",\"1\",\"DateTime\"],A121:[\"DA\",\"1\",\"Date\"],A122:[\"TM\",\"1\",\"Time\"],A123:[\"PN\",\"1\",\"PersonName\"],A124:[\"UI\",\"1\",\"UID\"],A125:[\"CS\",\"2\",\"ReportStatusIDTrial\"],A130:[\"CS\",\"1\",\"TemporalRangeType\"],A132:[\"UL\",\"1-n\",\"ReferencedSamplePositions\"],A136:[\"US\",\"1-n\",\"ReferencedFrameNumbers\"],A138:[\"DS\",\"1-n\",\"ReferencedTimeOffsets\"],A13A:[\"DT\",\"1-n\",\"ReferencedDateTime\"],A160:[\"UT\",\"1\",\"TextValue\"],A161:[\"FD\",\"1-n\",\"FloatingPointValue\"],A162:[\"SL\",\"1-n\",\"RationalNumeratorValue\"],A163:[\"UL\",\"1-n\",\"RationalDenominatorValue\"],A167:[\"SQ\",\"1\",\"ObservationCategoryCodeSequenceTrial\"],A168:[\"SQ\",\"1\",\"ConceptCodeSequence\"],A16A:[\"ST\",\"1\",\"BibliographicCitationTrial\"],A170:[\"SQ\",\"1\",\"PurposeOfReferenceCodeSequence\"],A171:[\"UI\",\"1\",\"ObservationUID\"],A172:[\"UI\",\"1\",\"ReferencedObservationUIDTrial\"],A173:[\"CS\",\"1\",\"ReferencedObservationClassTrial\"],A174:[\"CS\",\"1\",\"ReferencedObjectObservationClassTrial\"],A180:[\"US\",\"1\",\"AnnotationGroupNumber\"],A192:[\"DA\",\"1\",\"ObservationDateTrial\"],A193:[\"TM\",\"1\",\"ObservationTimeTrial\"],A194:[\"CS\",\"1\",\"MeasurementAutomationTrial\"],A195:[\"SQ\",\"1\",\"ModifierCodeSequence\"],A224:[\"ST\",\"1\",\"IdentificationDescriptionTrial\"],A290:[\"CS\",\"1\",\"CoordinatesSetGeometricTypeTrial\"],A296:[\"SQ\",\"1\",\"AlgorithmCodeSequenceTrial\"],A297:[\"ST\",\"1\",\"AlgorithmDescriptionTrial\"],A29A:[\"SL\",\"2-2n\",\"PixelCoordinatesSetTrial\"],A300:[\"SQ\",\"1\",\"MeasuredValueSequence\"],A301:[\"SQ\",\"1\",\"NumericValueQualifierCodeSequence\"],A307:[\"PN\",\"1\",\"CurrentObserverTrial\"],A30A:[\"DS\",\"1-n\",\"NumericValue\"],A313:[\"SQ\",\"1\",\"ReferencedAccessionSequenceTrial\"],A33A:[\"ST\",\"1\",\"ReportStatusCommentTrial\"],A340:[\"SQ\",\"1\",\"ProcedureContextSequenceTrial\"],A352:[\"PN\",\"1\",\"VerbalSourceTrial\"],A353:[\"ST\",\"1\",\"AddressTrial\"],A354:[\"LO\",\"1\",\"TelephoneNumberTrial\"],A358:[\"SQ\",\"1\",\"VerbalSourceIdentifierCodeSequenceTrial\"],A360:[\"SQ\",\"1\",\"PredecessorDocumentsSequence\"],A370:[\"SQ\",\"1\",\"ReferencedRequestSequence\"],A372:[\"SQ\",\"1\",\"PerformedProcedureCodeSequence\"],A375:[\"SQ\",\"1\",\"CurrentRequestedProcedureEvidenceSequence\"],A380:[\"SQ\",\"1\",\"ReportDetailSequenceTrial\"],A385:[\"SQ\",\"1\",\"PertinentOtherEvidenceSequence\"],A390:[\"SQ\",\"1\",\"HL7StructuredDocumentReferenceSequence\"],A402:[\"UI\",\"1\",\"ObservationSubjectUIDTrial\"],A403:[\"CS\",\"1\",\"ObservationSubjectClassTrial\"],A404:[\"SQ\",\"1\",\"ObservationSubjectTypeCodeSequenceTrial\"],A491:[\"CS\",\"1\",\"CompletionFlag\"],A492:[\"LO\",\"1\",\"CompletionFlagDescription\"],A493:[\"CS\",\"1\",\"VerificationFlag\"],A494:[\"CS\",\"1\",\"ArchiveRequested\"],A496:[\"CS\",\"1\",\"PreliminaryFlag\"],A504:[\"SQ\",\"1\",\"ContentTemplateSequence\"],A525:[\"SQ\",\"1\",\"IdenticalDocumentsSequence\"],A600:[\"CS\",\"1\",\"ObservationSubjectContextFlagTrial\"],A601:[\"CS\",\"1\",\"ObserverContextFlagTrial\"],A603:[\"CS\",\"1\",\"ProcedureContextFlagTrial\"],A730:[\"SQ\",\"1\",\"ContentSequence\"],A731:[\"SQ\",\"1\",\"RelationshipSequenceTrial\"],A732:[\"SQ\",\"1\",\"RelationshipTypeCodeSequenceTrial\"],A744:[\"SQ\",\"1\",\"LanguageCodeSequenceTrial\"],A801:[\"SQ\",\"1\",\"TabulatedValuesSequence\"],A802:[\"UL\",\"1\",\"NumberOfTableRows\"],A803:[\"UL\",\"1\",\"NumberOfTableColumns\"],A804:[\"UL\",\"1\",\"TableRowNumber\"],A805:[\"UL\",\"1\",\"TableColumnNumber\"],A806:[\"SQ\",\"1\",\"TableRowDefinitionSequence\"],A807:[\"SQ\",\"1\",\"TableColumnDefinitionSequence\"],A808:[\"SQ\",\"1\",\"CellValuesSequence\"],A992:[\"ST\",\"1\",\"UniformResourceLocatorTrial\"],B020:[\"SQ\",\"1\",\"WaveformAnnotationSequence\"],DB00:[\"CS\",\"1\",\"TemplateIdentifier\"],DB06:[\"DT\",\"1\",\"TemplateVersion\"],DB07:[\"DT\",\"1\",\"TemplateLocalVersion\"],DB0B:[\"CS\",\"1\",\"TemplateExtensionFlag\"],DB0C:[\"UI\",\"1\",\"TemplateExtensionOrganizationUID\"],DB0D:[\"UI\",\"1\",\"TemplateExtensionCreatorUID\"],DB73:[\"UL\",\"1-n\",\"ReferencedContentItemIdentifier\"],E001:[\"ST\",\"1\",\"HL7InstanceIdentifier\"],E004:[\"DT\",\"1\",\"HL7DocumentEffectiveTime\"],E006:[\"SQ\",\"1\",\"HL7DocumentTypeCodeSequence\"],E008:[\"SQ\",\"1\",\"DocumentClassCodeSequence\"],E010:[\"UR\",\"1\",\"RetrieveURI\"],E011:[\"UI\",\"1\",\"RetrieveLocationUID\"],E020:[\"CS\",\"1\",\"TypeOfInstances\"],E021:[\"SQ\",\"1\",\"DICOMRetrievalSequence\"],E022:[\"SQ\",\"1\",\"DICOMMediaRetrievalSequence\"],E023:[\"SQ\",\"1\",\"WADORetrievalSequence\"],E024:[\"SQ\",\"1\",\"XDSRetrievalSequence\"],E025:[\"SQ\",\"1\",\"WADORSRetrievalSequence\"],E030:[\"UI\",\"1\",\"RepositoryUniqueID\"],E031:[\"UI\",\"1\",\"HomeCommunityID\"]},\"0042\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"ST\",\"1\",\"DocumentTitle\"],\"0011\":[\"OB\",\"1\",\"EncapsulatedDocument\"],\"0012\":[\"LO\",\"1\",\"MIMETypeOfEncapsulatedDocument\"],\"0013\":[\"SQ\",\"1\",\"SourceInstanceSequence\"],\"0014\":[\"LO\",\"1-n\",\"ListOfMIMETypes\"],\"0015\":[\"UL\",\"1\",\"EncapsulatedDocumentLength\"]},\"0044\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"ST\",\"1\",\"ProductPackageIdentifier\"],\"0002\":[\"CS\",\"1\",\"SubstanceAdministrationApproval\"],\"0003\":[\"LT\",\"1\",\"ApprovalStatusFurtherDescription\"],\"0004\":[\"DT\",\"1\",\"ApprovalStatusDateTime\"],\"0007\":[\"SQ\",\"1\",\"ProductTypeCodeSequence\"],\"0008\":[\"LO\",\"1-n\",\"ProductName\"],\"0009\":[\"LT\",\"1\",\"ProductDescription\"],\"000A\":[\"LO\",\"1\",\"ProductLotIdentifier\"],\"000B\":[\"DT\",\"1\",\"ProductExpirationDateTime\"],\"0010\":[\"DT\",\"1\",\"SubstanceAdministrationDateTime\"],\"0011\":[\"LO\",\"1\",\"SubstanceAdministrationNotes\"],\"0012\":[\"LO\",\"1\",\"SubstanceAdministrationDeviceID\"],\"0013\":[\"SQ\",\"1\",\"ProductParameterSequence\"],\"0019\":[\"SQ\",\"1\",\"SubstanceAdministrationParameterSequence\"],\"0100\":[\"SQ\",\"1\",\"ApprovalSequence\"],\"0101\":[\"SQ\",\"1\",\"AssertionCodeSequence\"],\"0102\":[\"UI\",\"1\",\"AssertionUID\"],\"0103\":[\"SQ\",\"1\",\"AsserterIdentificationSequence\"],\"0104\":[\"DT\",\"1\",\"AssertionDateTime\"],\"0105\":[\"DT\",\"1\",\"AssertionExpirationDateTime\"],\"0106\":[\"UT\",\"1\",\"AssertionComments\"],\"0107\":[\"SQ\",\"1\",\"RelatedAssertionSequence\"],\"0108\":[\"UI\",\"1\",\"ReferencedAssertionUID\"],\"0109\":[\"SQ\",\"1\",\"ApprovalSubjectSequence\"],\"010A\":[\"SQ\",\"1\",\"OrganizationalRoleCodeSequence\"]},\"0046\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0012\":[\"LO\",\"1\",\"LensDescription\"],\"0014\":[\"SQ\",\"1\",\"RightLensSequence\"],\"0015\":[\"SQ\",\"1\",\"LeftLensSequence\"],\"0016\":[\"SQ\",\"1\",\"UnspecifiedLateralityLensSequence\"],\"0018\":[\"SQ\",\"1\",\"CylinderSequence\"],\"0028\":[\"SQ\",\"1\",\"PrismSequence\"],\"0030\":[\"FD\",\"1\",\"HorizontalPrismPower\"],\"0032\":[\"CS\",\"1\",\"HorizontalPrismBase\"],\"0034\":[\"FD\",\"1\",\"VerticalPrismPower\"],\"0036\":[\"CS\",\"1\",\"VerticalPrismBase\"],\"0038\":[\"CS\",\"1\",\"LensSegmentType\"],\"0040\":[\"FD\",\"1\",\"OpticalTransmittance\"],\"0042\":[\"FD\",\"1\",\"ChannelWidth\"],\"0044\":[\"FD\",\"1\",\"PupilSize\"],\"0046\":[\"FD\",\"1\",\"CornealSize\"],\"0047\":[\"SQ\",\"1\",\"CornealSizeSequence\"],\"0050\":[\"SQ\",\"1\",\"AutorefractionRightEyeSequence\"],\"0052\":[\"SQ\",\"1\",\"AutorefractionLeftEyeSequence\"],\"0060\":[\"FD\",\"1\",\"DistancePupillaryDistance\"],\"0062\":[\"FD\",\"1\",\"NearPupillaryDistance\"],\"0063\":[\"FD\",\"1\",\"IntermediatePupillaryDistance\"],\"0064\":[\"FD\",\"1\",\"OtherPupillaryDistance\"],\"0070\":[\"SQ\",\"1\",\"KeratometryRightEyeSequence\"],\"0071\":[\"SQ\",\"1\",\"KeratometryLeftEyeSequence\"],\"0074\":[\"SQ\",\"1\",\"SteepKeratometricAxisSequence\"],\"0075\":[\"FD\",\"1\",\"RadiusOfCurvature\"],\"0076\":[\"FD\",\"1\",\"KeratometricPower\"],\"0077\":[\"FD\",\"1\",\"KeratometricAxis\"],\"0080\":[\"SQ\",\"1\",\"FlatKeratometricAxisSequence\"],\"0092\":[\"CS\",\"1\",\"BackgroundColor\"],\"0094\":[\"CS\",\"1\",\"Optotype\"],\"0095\":[\"CS\",\"1\",\"OptotypePresentation\"],\"0097\":[\"SQ\",\"1\",\"SubjectiveRefractionRightEyeSequence\"],\"0098\":[\"SQ\",\"1\",\"SubjectiveRefractionLeftEyeSequence\"],\"0100\":[\"SQ\",\"1\",\"AddNearSequence\"],\"0101\":[\"SQ\",\"1\",\"AddIntermediateSequence\"],\"0102\":[\"SQ\",\"1\",\"AddOtherSequence\"],\"0104\":[\"FD\",\"1\",\"AddPower\"],\"0106\":[\"FD\",\"1\",\"ViewingDistance\"],\"0110\":[\"SQ\",\"1\",\"CorneaMeasurementsSequence\"],\"0111\":[\"SQ\",\"1\",\"SourceOfCorneaMeasurementDataCodeSequence\"],\"0112\":[\"SQ\",\"1\",\"SteepCornealAxisSequence\"],\"0113\":[\"SQ\",\"1\",\"FlatCornealAxisSequence\"],\"0114\":[\"FD\",\"1\",\"CornealPower\"],\"0115\":[\"FD\",\"1\",\"CornealAxis\"],\"0116\":[\"SQ\",\"1\",\"CorneaMeasurementMethodCodeSequence\"],\"0117\":[\"FL\",\"1\",\"RefractiveIndexOfCornea\"],\"0118\":[\"FL\",\"1\",\"RefractiveIndexOfAqueousHumor\"],\"0121\":[\"SQ\",\"1\",\"VisualAcuityTypeCodeSequence\"],\"0122\":[\"SQ\",\"1\",\"VisualAcuityRightEyeSequence\"],\"0123\":[\"SQ\",\"1\",\"VisualAcuityLeftEyeSequence\"],\"0124\":[\"SQ\",\"1\",\"VisualAcuityBothEyesOpenSequence\"],\"0125\":[\"CS\",\"1\",\"ViewingDistanceType\"],\"0135\":[\"SS\",\"2\",\"VisualAcuityModifiers\"],\"0137\":[\"FD\",\"1\",\"DecimalVisualAcuity\"],\"0139\":[\"LO\",\"1\",\"OptotypeDetailedDefinition\"],\"0145\":[\"SQ\",\"1\",\"ReferencedRefractiveMeasurementsSequence\"],\"0146\":[\"FD\",\"1\",\"SpherePower\"],\"0147\":[\"FD\",\"1\",\"CylinderPower\"],\"0201\":[\"CS\",\"1\",\"CornealTopographySurface\"],\"0202\":[\"FL\",\"2\",\"CornealVertexLocation\"],\"0203\":[\"FL\",\"1\",\"PupilCentroidXCoordinate\"],\"0204\":[\"FL\",\"1\",\"PupilCentroidYCoordinate\"],\"0205\":[\"FL\",\"1\",\"EquivalentPupilRadius\"],\"0207\":[\"SQ\",\"1\",\"CornealTopographyMapTypeCodeSequence\"],\"0208\":[\"IS\",\"2-2n\",\"VerticesOfTheOutlineOfPupil\"],\"0210\":[\"SQ\",\"1\",\"CornealTopographyMappingNormalsSequence\"],\"0211\":[\"SQ\",\"1\",\"MaximumCornealCurvatureSequence\"],\"0212\":[\"FL\",\"1\",\"MaximumCornealCurvature\"],\"0213\":[\"FL\",\"2\",\"MaximumCornealCurvatureLocation\"],\"0215\":[\"SQ\",\"1\",\"MinimumKeratometricSequence\"],\"0218\":[\"SQ\",\"1\",\"SimulatedKeratometricCylinderSequence\"],\"0220\":[\"FL\",\"1\",\"AverageCornealPower\"],\"0224\":[\"FL\",\"1\",\"CornealISValue\"],\"0227\":[\"FL\",\"1\",\"AnalyzedArea\"],\"0230\":[\"FL\",\"1\",\"SurfaceRegularityIndex\"],\"0232\":[\"FL\",\"1\",\"SurfaceAsymmetryIndex\"],\"0234\":[\"FL\",\"1\",\"CornealEccentricityIndex\"],\"0236\":[\"FL\",\"1\",\"KeratoconusPredictionIndex\"],\"0238\":[\"FL\",\"1\",\"DecimalPotentialVisualAcuity\"],\"0242\":[\"CS\",\"1\",\"CornealTopographyMapQualityEvaluation\"],\"0244\":[\"SQ\",\"1\",\"SourceImageCornealProcessedDataSequence\"],\"0247\":[\"FL\",\"3\",\"CornealPointLocation\"],\"0248\":[\"CS\",\"1\",\"CornealPointEstimated\"],\"0249\":[\"FL\",\"1\",\"AxialPower\"],\"0250\":[\"FL\",\"1\",\"TangentialPower\"],\"0251\":[\"FL\",\"1\",\"RefractivePower\"],\"0252\":[\"FL\",\"1\",\"RelativeElevation\"],\"0253\":[\"FL\",\"1\",\"CornealWavefront\"]},\"0048\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"FL\",\"1\",\"ImagedVolumeWidth\"],\"0002\":[\"FL\",\"1\",\"ImagedVolumeHeight\"],\"0003\":[\"FL\",\"1\",\"ImagedVolumeDepth\"],\"0006\":[\"UL\",\"1\",\"TotalPixelMatrixColumns\"],\"0007\":[\"UL\",\"1\",\"TotalPixelMatrixRows\"],\"0008\":[\"SQ\",\"1\",\"TotalPixelMatrixOriginSequence\"],\"0010\":[\"CS\",\"1\",\"SpecimenLabelInImage\"],\"0011\":[\"CS\",\"1\",\"FocusMethod\"],\"0012\":[\"CS\",\"1\",\"ExtendedDepthOfField\"],\"0013\":[\"US\",\"1\",\"NumberOfFocalPlanes\"],\"0014\":[\"FL\",\"1\",\"DistanceBetweenFocalPlanes\"],\"0015\":[\"US\",\"3\",\"RecommendedAbsentPixelCIELabValue\"],\"0100\":[\"SQ\",\"1\",\"IlluminatorTypeCodeSequence\"],\"0102\":[\"DS\",\"6\",\"ImageOrientationSlide\"],\"0105\":[\"SQ\",\"1\",\"OpticalPathSequence\"],\"0106\":[\"SH\",\"1\",\"OpticalPathIdentifier\"],\"0107\":[\"ST\",\"1\",\"OpticalPathDescription\"],\"0108\":[\"SQ\",\"1\",\"IlluminationColorCodeSequence\"],\"0110\":[\"SQ\",\"1\",\"SpecimenReferenceSequence\"],\"0111\":[\"DS\",\"1\",\"CondenserLensPower\"],\"0112\":[\"DS\",\"1\",\"ObjectiveLensPower\"],\"0113\":[\"DS\",\"1\",\"ObjectiveLensNumericalAperture\"],\"0120\":[\"SQ\",\"1\",\"PaletteColorLookupTableSequence\"],\"0200\":[\"SQ\",\"1\",\"ReferencedImageNavigationSequence\"],\"0201\":[\"US\",\"2\",\"TopLeftHandCornerOfLocalizerArea\"],\"0202\":[\"US\",\"2\",\"BottomRightHandCornerOfLocalizerArea\"],\"0207\":[\"SQ\",\"1\",\"OpticalPathIdentificationSequence\"],\"021A\":[\"SQ\",\"1\",\"PlanePositionSlideSequence\"],\"021E\":[\"SL\",\"1\",\"ColumnPositionInTotalImagePixelMatrix\"],\"021F\":[\"SL\",\"1\",\"RowPositionInTotalImagePixelMatrix\"],\"0301\":[\"CS\",\"1\",\"PixelOriginInterpretation\"],\"0302\":[\"UL\",\"1\",\"NumberOfOpticalPaths\"],\"0303\":[\"UL\",\"1\",\"TotalPixelMatrixFocalPlanes\"]},\"0050\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0004\":[\"CS\",\"1\",\"CalibrationImage\"],\"0010\":[\"SQ\",\"1\",\"DeviceSequence\"],\"0012\":[\"SQ\",\"1\",\"ContainerComponentTypeCodeSequence\"],\"0013\":[\"FD\",\"1\",\"ContainerComponentThickness\"],\"0014\":[\"DS\",\"1\",\"DeviceLength\"],\"0015\":[\"FD\",\"1\",\"ContainerComponentWidth\"],\"0016\":[\"DS\",\"1\",\"DeviceDiameter\"],\"0017\":[\"CS\",\"1\",\"DeviceDiameterUnits\"],\"0018\":[\"DS\",\"1\",\"DeviceVolume\"],\"0019\":[\"DS\",\"1\",\"InterMarkerDistance\"],\"001A\":[\"CS\",\"1\",\"ContainerComponentMaterial\"],\"001B\":[\"LO\",\"1\",\"ContainerComponentID\"],\"001C\":[\"FD\",\"1\",\"ContainerComponentLength\"],\"001D\":[\"FD\",\"1\",\"ContainerComponentDiameter\"],\"001E\":[\"LO\",\"1\",\"ContainerComponentDescription\"],\"0020\":[\"LO\",\"1\",\"DeviceDescription\"],\"0021\":[\"ST\",\"1\",\"LongDeviceDescription\"]},\"0052\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"FL\",\"1\",\"ContrastBolusIngredientPercentByVolume\"],\"0002\":[\"FD\",\"1\",\"OCTFocalDistance\"],\"0003\":[\"FD\",\"1\",\"BeamSpotSize\"],\"0004\":[\"FD\",\"1\",\"EffectiveRefractiveIndex\"],\"0006\":[\"CS\",\"1\",\"OCTAcquisitionDomain\"],\"0007\":[\"FD\",\"1\",\"OCTOpticalCenterWavelength\"],\"0008\":[\"FD\",\"1\",\"AxialResolution\"],\"0009\":[\"FD\",\"1\",\"RangingDepth\"],\"0011\":[\"FD\",\"1\",\"ALineRate\"],\"0012\":[\"US\",\"1\",\"ALinesPerFrame\"],\"0013\":[\"FD\",\"1\",\"CatheterRotationalRate\"],\"0014\":[\"FD\",\"1\",\"ALinePixelSpacing\"],\"0016\":[\"SQ\",\"1\",\"ModeOfPercutaneousAccessSequence\"],\"0025\":[\"SQ\",\"1\",\"IntravascularOCTFrameTypeSequence\"],\"0026\":[\"CS\",\"1\",\"OCTZOffsetApplied\"],\"0027\":[\"SQ\",\"1\",\"IntravascularFrameContentSequence\"],\"0028\":[\"FD\",\"1\",\"IntravascularLongitudinalDistance\"],\"0029\":[\"SQ\",\"1\",\"IntravascularOCTFrameContentSequence\"],\"0030\":[\"SS\",\"1\",\"OCTZOffsetCorrection\"],\"0031\":[\"CS\",\"1\",\"CatheterDirectionOfRotation\"],\"0033\":[\"FD\",\"1\",\"SeamLineLocation\"],\"0034\":[\"FD\",\"1\",\"FirstALineLocation\"],\"0036\":[\"US\",\"1\",\"SeamLineIndex\"],\"0038\":[\"US\",\"1\",\"NumberOfPaddedALines\"],\"0039\":[\"CS\",\"1\",\"InterpolationType\"],\"003A\":[\"CS\",\"1\",\"RefractiveIndexApplied\"]},\"0054\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"US\",\"1-n\",\"EnergyWindowVector\"],\"0011\":[\"US\",\"1\",\"NumberOfEnergyWindows\"],\"0012\":[\"SQ\",\"1\",\"EnergyWindowInformationSequence\"],\"0013\":[\"SQ\",\"1\",\"EnergyWindowRangeSequence\"],\"0014\":[\"DS\",\"1\",\"EnergyWindowLowerLimit\"],\"0015\":[\"DS\",\"1\",\"EnergyWindowUpperLimit\"],\"0016\":[\"SQ\",\"1\",\"RadiopharmaceuticalInformationSequence\"],\"0017\":[\"IS\",\"1\",\"ResidualSyringeCounts\"],\"0018\":[\"SH\",\"1\",\"EnergyWindowName\"],\"0020\":[\"US\",\"1-n\",\"DetectorVector\"],\"0021\":[\"US\",\"1\",\"NumberOfDetectors\"],\"0022\":[\"SQ\",\"1\",\"DetectorInformationSequence\"],\"0030\":[\"US\",\"1-n\",\"PhaseVector\"],\"0031\":[\"US\",\"1\",\"NumberOfPhases\"],\"0032\":[\"SQ\",\"1\",\"PhaseInformationSequence\"],\"0033\":[\"US\",\"1\",\"NumberOfFramesInPhase\"],\"0036\":[\"IS\",\"1\",\"PhaseDelay\"],\"0038\":[\"IS\",\"1\",\"PauseBetweenFrames\"],\"0039\":[\"CS\",\"1\",\"PhaseDescription\"],\"0050\":[\"US\",\"1-n\",\"RotationVector\"],\"0051\":[\"US\",\"1\",\"NumberOfRotations\"],\"0052\":[\"SQ\",\"1\",\"RotationInformationSequence\"],\"0053\":[\"US\",\"1\",\"NumberOfFramesInRotation\"],\"0060\":[\"US\",\"1-n\",\"RRIntervalVector\"],\"0061\":[\"US\",\"1\",\"NumberOfRRIntervals\"],\"0062\":[\"SQ\",\"1\",\"GatedInformationSequence\"],\"0063\":[\"SQ\",\"1\",\"DataInformationSequence\"],\"0070\":[\"US\",\"1-n\",\"TimeSlotVector\"],\"0071\":[\"US\",\"1\",\"NumberOfTimeSlots\"],\"0072\":[\"SQ\",\"1\",\"TimeSlotInformationSequence\"],\"0073\":[\"DS\",\"1\",\"TimeSlotTime\"],\"0080\":[\"US\",\"1-n\",\"SliceVector\"],\"0081\":[\"US\",\"1\",\"NumberOfSlices\"],\"0090\":[\"US\",\"1-n\",\"AngularViewVector\"],\"0100\":[\"US\",\"1-n\",\"TimeSliceVector\"],\"0101\":[\"US\",\"1\",\"NumberOfTimeSlices\"],\"0200\":[\"DS\",\"1\",\"StartAngle\"],\"0202\":[\"CS\",\"1\",\"TypeOfDetectorMotion\"],\"0210\":[\"IS\",\"1-n\",\"TriggerVector\"],\"0211\":[\"US\",\"1\",\"NumberOfTriggersInPhase\"],\"0220\":[\"SQ\",\"1\",\"ViewCodeSequence\"],\"0222\":[\"SQ\",\"1\",\"ViewModifierCodeSequence\"],\"0300\":[\"SQ\",\"1\",\"RadionuclideCodeSequence\"],\"0302\":[\"SQ\",\"1\",\"AdministrationRouteCodeSequence\"],\"0304\":[\"SQ\",\"1\",\"RadiopharmaceuticalCodeSequence\"],\"0306\":[\"SQ\",\"1\",\"CalibrationDataSequence\"],\"0308\":[\"US\",\"1\",\"EnergyWindowNumber\"],\"0400\":[\"SH\",\"1\",\"ImageID\"],\"0410\":[\"SQ\",\"1\",\"PatientOrientationCodeSequence\"],\"0412\":[\"SQ\",\"1\",\"PatientOrientationModifierCodeSequence\"],\"0414\":[\"SQ\",\"1\",\"PatientGantryRelationshipCodeSequence\"],\"0500\":[\"CS\",\"1\",\"SliceProgressionDirection\"],\"0501\":[\"CS\",\"1\",\"ScanProgressionDirection\"],1e3:[\"CS\",\"2\",\"SeriesType\"],1001:[\"CS\",\"1\",\"Units\"],1002:[\"CS\",\"1\",\"CountsSource\"],1004:[\"CS\",\"1\",\"ReprojectionMethod\"],1006:[\"CS\",\"1\",\"SUVType\"],1100:[\"CS\",\"1\",\"RandomsCorrectionMethod\"],1101:[\"LO\",\"1\",\"AttenuationCorrectionMethod\"],1102:[\"CS\",\"1\",\"DecayCorrection\"],1103:[\"LO\",\"1\",\"ReconstructionMethod\"],1104:[\"LO\",\"1\",\"DetectorLinesOfResponseUsed\"],1105:[\"LO\",\"1\",\"ScatterCorrectionMethod\"],1200:[\"DS\",\"1\",\"AxialAcceptance\"],1201:[\"IS\",\"2\",\"AxialMash\"],1202:[\"IS\",\"1\",\"TransverseMash\"],1203:[\"DS\",\"2\",\"DetectorElementSize\"],1210:[\"DS\",\"1\",\"CoincidenceWindowWidth\"],1220:[\"CS\",\"1-n\",\"SecondaryCountsType\"],1300:[\"DS\",\"1\",\"FrameReferenceTime\"],1310:[\"IS\",\"1\",\"PrimaryPromptsCountsAccumulated\"],1311:[\"IS\",\"1-n\",\"SecondaryCountsAccumulated\"],1320:[\"DS\",\"1\",\"SliceSensitivityFactor\"],1321:[\"DS\",\"1\",\"DecayFactor\"],1322:[\"DS\",\"1\",\"DoseCalibrationFactor\"],1323:[\"DS\",\"1\",\"ScatterFractionFactor\"],1324:[\"DS\",\"1\",\"DeadTimeFactor\"],1330:[\"US\",\"1\",\"ImageIndex\"],1400:[\"CS\",\"1-n\",\"CountsIncluded\"],1401:[\"CS\",\"1\",\"DeadTimeCorrectionFlag\"]},\"0060\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],3e3:[\"SQ\",\"1\",\"HistogramSequence\"],3002:[\"US\",\"1\",\"HistogramNumberOfBins\"],3004:[\"xs\",\"1\",\"HistogramFirstBinValue\"],3006:[\"xs\",\"1\",\"HistogramLastBinValue\"],3008:[\"US\",\"1\",\"HistogramBinWidth\"],3010:[\"LO\",\"1\",\"HistogramExplanation\"],3020:[\"UL\",\"1-n\",\"HistogramData\"]},\"0062\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"CS\",\"1\",\"SegmentationType\"],\"0002\":[\"SQ\",\"1\",\"SegmentSequence\"],\"0003\":[\"SQ\",\"1\",\"SegmentedPropertyCategoryCodeSequence\"],\"0004\":[\"US\",\"1\",\"SegmentNumber\"],\"0005\":[\"LO\",\"1\",\"SegmentLabel\"],\"0006\":[\"ST\",\"1\",\"SegmentDescription\"],\"0007\":[\"SQ\",\"1\",\"SegmentationAlgorithmIdentificationSequence\"],\"0008\":[\"CS\",\"1\",\"SegmentAlgorithmType\"],\"0009\":[\"LO\",\"1-n\",\"SegmentAlgorithmName\"],\"000A\":[\"SQ\",\"1\",\"SegmentIdentificationSequence\"],\"000B\":[\"US\",\"1-n\",\"ReferencedSegmentNumber\"],\"000C\":[\"US\",\"1\",\"RecommendedDisplayGrayscaleValue\"],\"000D\":[\"US\",\"3\",\"RecommendedDisplayCIELabValue\"],\"000E\":[\"US\",\"1\",\"MaximumFractionalValue\"],\"000F\":[\"SQ\",\"1\",\"SegmentedPropertyTypeCodeSequence\"],\"0010\":[\"CS\",\"1\",\"SegmentationFractionalType\"],\"0011\":[\"SQ\",\"1\",\"SegmentedPropertyTypeModifierCodeSequence\"],\"0012\":[\"SQ\",\"1\",\"UsedSegmentsSequence\"],\"0013\":[\"CS\",\"1\",\"SegmentsOverlap\"],\"0020\":[\"UT\",\"1\",\"TrackingID\"],\"0021\":[\"UI\",\"1\",\"TrackingUID\"]},\"0064\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"SQ\",\"1\",\"DeformableRegistrationSequence\"],\"0003\":[\"UI\",\"1\",\"SourceFrameOfReferenceUID\"],\"0005\":[\"SQ\",\"1\",\"DeformableRegistrationGridSequence\"],\"0007\":[\"UL\",\"3\",\"GridDimensions\"],\"0008\":[\"FD\",\"3\",\"GridResolution\"],\"0009\":[\"OF\",\"1\",\"VectorGridData\"],\"000F\":[\"SQ\",\"1\",\"PreDeformationMatrixRegistrationSequence\"],\"0010\":[\"SQ\",\"1\",\"PostDeformationMatrixRegistrationSequence\"]},\"0066\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"UL\",\"1\",\"NumberOfSurfaces\"],\"0002\":[\"SQ\",\"1\",\"SurfaceSequence\"],\"0003\":[\"UL\",\"1\",\"SurfaceNumber\"],\"0004\":[\"LT\",\"1\",\"SurfaceComments\"],\"0009\":[\"CS\",\"1\",\"SurfaceProcessing\"],\"000A\":[\"FL\",\"1\",\"SurfaceProcessingRatio\"],\"000B\":[\"LO\",\"1\",\"SurfaceProcessingDescription\"],\"000C\":[\"FL\",\"1\",\"RecommendedPresentationOpacity\"],\"000D\":[\"CS\",\"1\",\"RecommendedPresentationType\"],\"000E\":[\"CS\",\"1\",\"FiniteVolume\"],\"0010\":[\"CS\",\"1\",\"Manifold\"],\"0011\":[\"SQ\",\"1\",\"SurfacePointsSequence\"],\"0012\":[\"SQ\",\"1\",\"SurfacePointsNormalsSequence\"],\"0013\":[\"SQ\",\"1\",\"SurfaceMeshPrimitivesSequence\"],\"0015\":[\"UL\",\"1\",\"NumberOfSurfacePoints\"],\"0016\":[\"OF\",\"1\",\"PointCoordinatesData\"],\"0017\":[\"FL\",\"3\",\"PointPositionAccuracy\"],\"0018\":[\"FL\",\"1\",\"MeanPointDistance\"],\"0019\":[\"FL\",\"1\",\"MaximumPointDistance\"],\"001A\":[\"FL\",\"6\",\"PointsBoundingBoxCoordinates\"],\"001B\":[\"FL\",\"3\",\"AxisOfRotation\"],\"001C\":[\"FL\",\"3\",\"CenterOfRotation\"],\"001E\":[\"UL\",\"1\",\"NumberOfVectors\"],\"001F\":[\"US\",\"1\",\"VectorDimensionality\"],\"0020\":[\"FL\",\"1-n\",\"VectorAccuracy\"],\"0021\":[\"OF\",\"1\",\"VectorCoordinateData\"],\"0022\":[\"OD\",\"1\",\"DoublePointCoordinatesData\"],\"0023\":[\"OW\",\"1\",\"TrianglePointIndexList\"],\"0024\":[\"OW\",\"1\",\"EdgePointIndexList\"],\"0025\":[\"OW\",\"1\",\"VertexPointIndexList\"],\"0026\":[\"SQ\",\"1\",\"TriangleStripSequence\"],\"0027\":[\"SQ\",\"1\",\"TriangleFanSequence\"],\"0028\":[\"SQ\",\"1\",\"LineSequence\"],\"0029\":[\"OW\",\"1\",\"PrimitivePointIndexList\"],\"002A\":[\"UL\",\"1\",\"SurfaceCount\"],\"002B\":[\"SQ\",\"1\",\"ReferencedSurfaceSequence\"],\"002C\":[\"UL\",\"1\",\"ReferencedSurfaceNumber\"],\"002D\":[\"SQ\",\"1\",\"SegmentSurfaceGenerationAlgorithmIdentificationSequence\"],\"002E\":[\"SQ\",\"1\",\"SegmentSurfaceSourceInstanceSequence\"],\"002F\":[\"SQ\",\"1\",\"AlgorithmFamilyCodeSequence\"],\"0030\":[\"SQ\",\"1\",\"AlgorithmNameCodeSequence\"],\"0031\":[\"LO\",\"1\",\"AlgorithmVersion\"],\"0032\":[\"LT\",\"1\",\"AlgorithmParameters\"],\"0034\":[\"SQ\",\"1\",\"FacetSequence\"],\"0035\":[\"SQ\",\"1\",\"SurfaceProcessingAlgorithmIdentificationSequence\"],\"0036\":[\"LO\",\"1\",\"AlgorithmName\"],\"0037\":[\"FL\",\"1\",\"RecommendedPointRadius\"],\"0038\":[\"FL\",\"1\",\"RecommendedLineThickness\"],\"0040\":[\"OL\",\"1\",\"LongPrimitivePointIndexList\"],\"0041\":[\"OL\",\"1\",\"LongTrianglePointIndexList\"],\"0042\":[\"OL\",\"1\",\"LongEdgePointIndexList\"],\"0043\":[\"OL\",\"1\",\"LongVertexPointIndexList\"],\"0101\":[\"SQ\",\"1\",\"TrackSetSequence\"],\"0102\":[\"SQ\",\"1\",\"TrackSequence\"],\"0103\":[\"OW\",\"1\",\"RecommendedDisplayCIELabValueList\"],\"0104\":[\"SQ\",\"1\",\"TrackingAlgorithmIdentificationSequence\"],\"0105\":[\"UL\",\"1\",\"TrackSetNumber\"],\"0106\":[\"LO\",\"1\",\"TrackSetLabel\"],\"0107\":[\"UT\",\"1\",\"TrackSetDescription\"],\"0108\":[\"SQ\",\"1\",\"TrackSetAnatomicalTypeCodeSequence\"],\"0121\":[\"SQ\",\"1\",\"MeasurementsSequence\"],\"0124\":[\"SQ\",\"1\",\"TrackSetStatisticsSequence\"],\"0125\":[\"OF\",\"1\",\"FloatingPointValues\"],\"0129\":[\"OL\",\"1\",\"TrackPointIndexList\"],\"0130\":[\"SQ\",\"1\",\"TrackStatisticsSequence\"],\"0132\":[\"SQ\",\"1\",\"MeasurementValuesSequence\"],\"0133\":[\"SQ\",\"1\",\"DiffusionAcquisitionCodeSequence\"],\"0134\":[\"SQ\",\"1\",\"DiffusionModelCodeSequence\"]},\"0068\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],6210:[\"LO\",\"1\",\"ImplantSize\"],6221:[\"LO\",\"1\",\"ImplantTemplateVersion\"],6222:[\"SQ\",\"1\",\"ReplacedImplantTemplateSequence\"],6223:[\"CS\",\"1\",\"ImplantType\"],6224:[\"SQ\",\"1\",\"DerivationImplantTemplateSequence\"],6225:[\"SQ\",\"1\",\"OriginalImplantTemplateSequence\"],6226:[\"DT\",\"1\",\"EffectiveDateTime\"],6230:[\"SQ\",\"1\",\"ImplantTargetAnatomySequence\"],6260:[\"SQ\",\"1\",\"InformationFromManufacturerSequence\"],6265:[\"SQ\",\"1\",\"NotificationFromManufacturerSequence\"],6270:[\"DT\",\"1\",\"InformationIssueDateTime\"],6280:[\"ST\",\"1\",\"InformationSummary\"],\"62A0\":[\"SQ\",\"1\",\"ImplantRegulatoryDisapprovalCodeSequence\"],\"62A5\":[\"FD\",\"1\",\"OverallTemplateSpatialTolerance\"],\"62C0\":[\"SQ\",\"1\",\"HPGLDocumentSequence\"],\"62D0\":[\"US\",\"1\",\"HPGLDocumentID\"],\"62D5\":[\"LO\",\"1\",\"HPGLDocumentLabel\"],\"62E0\":[\"SQ\",\"1\",\"ViewOrientationCodeSequence\"],\"62F0\":[\"SQ\",\"1\",\"ViewOrientationModifierCodeSequence\"],\"62F2\":[\"FD\",\"1\",\"HPGLDocumentScaling\"],6300:[\"OB\",\"1\",\"HPGLDocument\"],6310:[\"US\",\"1\",\"HPGLContourPenNumber\"],6320:[\"SQ\",\"1\",\"HPGLPenSequence\"],6330:[\"US\",\"1\",\"HPGLPenNumber\"],6340:[\"LO\",\"1\",\"HPGLPenLabel\"],6345:[\"ST\",\"1\",\"HPGLPenDescription\"],6346:[\"FD\",\"2\",\"RecommendedRotationPoint\"],6347:[\"FD\",\"4\",\"BoundingRectangle\"],6350:[\"US\",\"1-n\",\"ImplantTemplate3DModelSurfaceNumber\"],6360:[\"SQ\",\"1\",\"SurfaceModelDescriptionSequence\"],6380:[\"LO\",\"1\",\"SurfaceModelLabel\"],6390:[\"FD\",\"1\",\"SurfaceModelScalingFactor\"],\"63A0\":[\"SQ\",\"1\",\"MaterialsCodeSequence\"],\"63A4\":[\"SQ\",\"1\",\"CoatingMaterialsCodeSequence\"],\"63A8\":[\"SQ\",\"1\",\"ImplantTypeCodeSequence\"],\"63AC\":[\"SQ\",\"1\",\"FixationMethodCodeSequence\"],\"63B0\":[\"SQ\",\"1\",\"MatingFeatureSetsSequence\"],\"63C0\":[\"US\",\"1\",\"MatingFeatureSetID\"],\"63D0\":[\"LO\",\"1\",\"MatingFeatureSetLabel\"],\"63E0\":[\"SQ\",\"1\",\"MatingFeatureSequence\"],\"63F0\":[\"US\",\"1\",\"MatingFeatureID\"],6400:[\"SQ\",\"1\",\"MatingFeatureDegreeOfFreedomSequence\"],6410:[\"US\",\"1\",\"DegreeOfFreedomID\"],6420:[\"CS\",\"1\",\"DegreeOfFreedomType\"],6430:[\"SQ\",\"1\",\"TwoDMatingFeatureCoordinatesSequence\"],6440:[\"US\",\"1\",\"ReferencedHPGLDocumentID\"],6450:[\"FD\",\"2\",\"TwoDMatingPoint\"],6460:[\"FD\",\"4\",\"TwoDMatingAxes\"],6470:[\"SQ\",\"1\",\"TwoDDegreeOfFreedomSequence\"],6490:[\"FD\",\"3\",\"ThreeDDegreeOfFreedomAxis\"],\"64A0\":[\"FD\",\"2\",\"RangeOfFreedom\"],\"64C0\":[\"FD\",\"3\",\"ThreeDMatingPoint\"],\"64D0\":[\"FD\",\"9\",\"ThreeDMatingAxes\"],\"64F0\":[\"FD\",\"3\",\"TwoDDegreeOfFreedomAxis\"],6500:[\"SQ\",\"1\",\"PlanningLandmarkPointSequence\"],6510:[\"SQ\",\"1\",\"PlanningLandmarkLineSequence\"],6520:[\"SQ\",\"1\",\"PlanningLandmarkPlaneSequence\"],6530:[\"US\",\"1\",\"PlanningLandmarkID\"],6540:[\"LO\",\"1\",\"PlanningLandmarkDescription\"],6545:[\"SQ\",\"1\",\"PlanningLandmarkIdentificationCodeSequence\"],6550:[\"SQ\",\"1\",\"TwoDPointCoordinatesSequence\"],6560:[\"FD\",\"2\",\"TwoDPointCoordinates\"],6590:[\"FD\",\"3\",\"ThreeDPointCoordinates\"],\"65A0\":[\"SQ\",\"1\",\"TwoDLineCoordinatesSequence\"],\"65B0\":[\"FD\",\"4\",\"TwoDLineCoordinates\"],\"65D0\":[\"FD\",\"6\",\"ThreeDLineCoordinates\"],\"65E0\":[\"SQ\",\"1\",\"TwoDPlaneCoordinatesSequence\"],\"65F0\":[\"FD\",\"4\",\"TwoDPlaneIntersection\"],6610:[\"FD\",\"3\",\"ThreeDPlaneOrigin\"],6620:[\"FD\",\"3\",\"ThreeDPlaneNormal\"],7001:[\"CS\",\"1\",\"ModelModification\"],7002:[\"CS\",\"1\",\"ModelMirroring\"],7003:[\"SQ\",\"1\",\"ModelUsageCodeSequence\"],7004:[\"UI\",\"1\",\"ModelGroupUID\"],7005:[\"UR\",\"1\",\"RelativeURIReferenceWithinEncapsulatedDocument\"]},\"006A\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"CS\",\"1\",\"AnnotationCoordinateType\"],\"0002\":[\"SQ\",\"1\",\"AnnotationGroupSequence\"],\"0003\":[\"UI\",\"1\",\"AnnotationGroupUID\"],\"0005\":[\"LO\",\"1\",\"AnnotationGroupLabel\"],\"0006\":[\"UT\",\"1\",\"AnnotationGroupDescription\"],\"0007\":[\"CS\",\"1\",\"AnnotationGroupGenerationType\"],\"0008\":[\"SQ\",\"1\",\"AnnotationGroupAlgorithmIdentificationSequence\"],\"0009\":[\"SQ\",\"1\",\"AnnotationPropertyCategoryCodeSequence\"],\"000A\":[\"SQ\",\"1\",\"AnnotationPropertyTypeCodeSequence\"],\"000B\":[\"SQ\",\"1\",\"AnnotationPropertyTypeModifierCodeSequence\"],\"000C\":[\"UL\",\"1\",\"NumberOfAnnotations\"],\"000D\":[\"CS\",\"1\",\"AnnotationAppliesToAllOpticalPaths\"],\"000E\":[\"SH\",\"1-n\",\"ReferencedOpticalPathIdentifier\"],\"000F\":[\"CS\",\"1\",\"AnnotationAppliesToAllZPlanes\"],\"0010\":[\"FD\",\"1-n\",\"CommonZCoordinateValue\"],\"0011\":[\"OL\",\"1\",\"AnnotationIndexList\"]},\"0070\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"SQ\",\"1\",\"GraphicAnnotationSequence\"],\"0002\":[\"CS\",\"1\",\"GraphicLayer\"],\"0003\":[\"CS\",\"1\",\"BoundingBoxAnnotationUnits\"],\"0004\":[\"CS\",\"1\",\"AnchorPointAnnotationUnits\"],\"0005\":[\"CS\",\"1\",\"GraphicAnnotationUnits\"],\"0006\":[\"ST\",\"1\",\"UnformattedTextValue\"],\"0008\":[\"SQ\",\"1\",\"TextObjectSequence\"],\"0009\":[\"SQ\",\"1\",\"GraphicObjectSequence\"],\"0010\":[\"FL\",\"2\",\"BoundingBoxTopLeftHandCorner\"],\"0011\":[\"FL\",\"2\",\"BoundingBoxBottomRightHandCorner\"],\"0012\":[\"CS\",\"1\",\"BoundingBoxTextHorizontalJustification\"],\"0014\":[\"FL\",\"2\",\"AnchorPoint\"],\"0015\":[\"CS\",\"1\",\"AnchorPointVisibility\"],\"0020\":[\"US\",\"1\",\"GraphicDimensions\"],\"0021\":[\"US\",\"1\",\"NumberOfGraphicPoints\"],\"0022\":[\"FL\",\"2-n\",\"GraphicData\"],\"0023\":[\"CS\",\"1\",\"GraphicType\"],\"0024\":[\"CS\",\"1\",\"GraphicFilled\"],\"0040\":[\"IS\",\"1\",\"ImageRotationRetired\"],\"0041\":[\"CS\",\"1\",\"ImageHorizontalFlip\"],\"0042\":[\"US\",\"1\",\"ImageRotation\"],\"0050\":[\"US\",\"2\",\"DisplayedAreaTopLeftHandCornerTrial\"],\"0051\":[\"US\",\"2\",\"DisplayedAreaBottomRightHandCornerTrial\"],\"0052\":[\"SL\",\"2\",\"DisplayedAreaTopLeftHandCorner\"],\"0053\":[\"SL\",\"2\",\"DisplayedAreaBottomRightHandCorner\"],\"005A\":[\"SQ\",\"1\",\"DisplayedAreaSelectionSequence\"],\"0060\":[\"SQ\",\"1\",\"GraphicLayerSequence\"],\"0062\":[\"IS\",\"1\",\"GraphicLayerOrder\"],\"0066\":[\"US\",\"1\",\"GraphicLayerRecommendedDisplayGrayscaleValue\"],\"0067\":[\"US\",\"3\",\"GraphicLayerRecommendedDisplayRGBValue\"],\"0068\":[\"LO\",\"1\",\"GraphicLayerDescription\"],\"0080\":[\"CS\",\"1\",\"ContentLabel\"],\"0081\":[\"LO\",\"1\",\"ContentDescription\"],\"0082\":[\"DA\",\"1\",\"PresentationCreationDate\"],\"0083\":[\"TM\",\"1\",\"PresentationCreationTime\"],\"0084\":[\"PN\",\"1\",\"ContentCreatorName\"],\"0086\":[\"SQ\",\"1\",\"ContentCreatorIdentificationCodeSequence\"],\"0087\":[\"SQ\",\"1\",\"AlternateContentDescriptionSequence\"],\"0100\":[\"CS\",\"1\",\"PresentationSizeMode\"],\"0101\":[\"DS\",\"2\",\"PresentationPixelSpacing\"],\"0102\":[\"IS\",\"2\",\"PresentationPixelAspectRatio\"],\"0103\":[\"FL\",\"1\",\"PresentationPixelMagnificationRatio\"],\"0207\":[\"LO\",\"1\",\"GraphicGroupLabel\"],\"0208\":[\"ST\",\"1\",\"GraphicGroupDescription\"],\"0209\":[\"SQ\",\"1\",\"CompoundGraphicSequence\"],\"0226\":[\"UL\",\"1\",\"CompoundGraphicInstanceID\"],\"0227\":[\"LO\",\"1\",\"FontName\"],\"0228\":[\"CS\",\"1\",\"FontNameType\"],\"0229\":[\"LO\",\"1\",\"CSSFontName\"],\"0230\":[\"FD\",\"1\",\"RotationAngle\"],\"0231\":[\"SQ\",\"1\",\"TextStyleSequence\"],\"0232\":[\"SQ\",\"1\",\"LineStyleSequence\"],\"0233\":[\"SQ\",\"1\",\"FillStyleSequence\"],\"0234\":[\"SQ\",\"1\",\"GraphicGroupSequence\"],\"0241\":[\"US\",\"3\",\"TextColorCIELabValue\"],\"0242\":[\"CS\",\"1\",\"HorizontalAlignment\"],\"0243\":[\"CS\",\"1\",\"VerticalAlignment\"],\"0244\":[\"CS\",\"1\",\"ShadowStyle\"],\"0245\":[\"FL\",\"1\",\"ShadowOffsetX\"],\"0246\":[\"FL\",\"1\",\"ShadowOffsetY\"],\"0247\":[\"US\",\"3\",\"ShadowColorCIELabValue\"],\"0248\":[\"CS\",\"1\",\"Underlined\"],\"0249\":[\"CS\",\"1\",\"Bold\"],\"0250\":[\"CS\",\"1\",\"Italic\"],\"0251\":[\"US\",\"3\",\"PatternOnColorCIELabValue\"],\"0252\":[\"US\",\"3\",\"PatternOffColorCIELabValue\"],\"0253\":[\"FL\",\"1\",\"LineThickness\"],\"0254\":[\"CS\",\"1\",\"LineDashingStyle\"],\"0255\":[\"UL\",\"1\",\"LinePattern\"],\"0256\":[\"OB\",\"1\",\"FillPattern\"],\"0257\":[\"CS\",\"1\",\"FillMode\"],\"0258\":[\"FL\",\"1\",\"ShadowOpacity\"],\"0261\":[\"FL\",\"1\",\"GapLength\"],\"0262\":[\"FL\",\"1\",\"DiameterOfVisibility\"],\"0273\":[\"FL\",\"2\",\"RotationPoint\"],\"0274\":[\"CS\",\"1\",\"TickAlignment\"],\"0278\":[\"CS\",\"1\",\"ShowTickLabel\"],\"0279\":[\"CS\",\"1\",\"TickLabelAlignment\"],\"0282\":[\"CS\",\"1\",\"CompoundGraphicUnits\"],\"0284\":[\"FL\",\"1\",\"PatternOnOpacity\"],\"0285\":[\"FL\",\"1\",\"PatternOffOpacity\"],\"0287\":[\"SQ\",\"1\",\"MajorTicksSequence\"],\"0288\":[\"FL\",\"1\",\"TickPosition\"],\"0289\":[\"SH\",\"1\",\"TickLabel\"],\"0294\":[\"CS\",\"1\",\"CompoundGraphicType\"],\"0295\":[\"UL\",\"1\",\"GraphicGroupID\"],\"0306\":[\"CS\",\"1\",\"ShapeType\"],\"0308\":[\"SQ\",\"1\",\"RegistrationSequence\"],\"0309\":[\"SQ\",\"1\",\"MatrixRegistrationSequence\"],\"030A\":[\"SQ\",\"1\",\"MatrixSequence\"],\"030B\":[\"FD\",\"16\",\"FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix\"],\"030C\":[\"CS\",\"1\",\"FrameOfReferenceTransformationMatrixType\"],\"030D\":[\"SQ\",\"1\",\"RegistrationTypeCodeSequence\"],\"030F\":[\"ST\",\"1\",\"FiducialDescription\"],\"0310\":[\"SH\",\"1\",\"FiducialIdentifier\"],\"0311\":[\"SQ\",\"1\",\"FiducialIdentifierCodeSequence\"],\"0312\":[\"FD\",\"1\",\"ContourUncertaintyRadius\"],\"0314\":[\"SQ\",\"1\",\"UsedFiducialsSequence\"],\"0318\":[\"SQ\",\"1\",\"GraphicCoordinatesDataSequence\"],\"031A\":[\"UI\",\"1\",\"FiducialUID\"],\"031B\":[\"UI\",\"1\",\"ReferencedFiducialUID\"],\"031C\":[\"SQ\",\"1\",\"FiducialSetSequence\"],\"031E\":[\"SQ\",\"1\",\"FiducialSequence\"],\"031F\":[\"SQ\",\"1\",\"FiducialsPropertyCategoryCodeSequence\"],\"0401\":[\"US\",\"3\",\"GraphicLayerRecommendedDisplayCIELabValue\"],\"0402\":[\"SQ\",\"1\",\"BlendingSequence\"],\"0403\":[\"FL\",\"1\",\"RelativeOpacity\"],\"0404\":[\"SQ\",\"1\",\"ReferencedSpatialRegistrationSequence\"],\"0405\":[\"CS\",\"1\",\"BlendingPosition\"],1101:[\"UI\",\"1\",\"PresentationDisplayCollectionUID\"],1102:[\"UI\",\"1\",\"PresentationSequenceCollectionUID\"],1103:[\"US\",\"1\",\"PresentationSequencePositionIndex\"],1104:[\"SQ\",\"1\",\"RenderedImageReferenceSequence\"],1201:[\"SQ\",\"1\",\"VolumetricPresentationStateInputSequence\"],1202:[\"CS\",\"1\",\"PresentationInputType\"],1203:[\"US\",\"1\",\"InputSequencePositionIndex\"],1204:[\"CS\",\"1\",\"Crop\"],1205:[\"US\",\"1-n\",\"CroppingSpecificationIndex\"],1206:[\"CS\",\"1\",\"CompositingMethod\"],1207:[\"US\",\"1\",\"VolumetricPresentationInputNumber\"],1208:[\"CS\",\"1\",\"ImageVolumeGeometry\"],1209:[\"UI\",\"1\",\"VolumetricPresentationInputSetUID\"],\"120A\":[\"SQ\",\"1\",\"VolumetricPresentationInputSetSequence\"],\"120B\":[\"CS\",\"1\",\"GlobalCrop\"],\"120C\":[\"US\",\"1-n\",\"GlobalCroppingSpecificationIndex\"],\"120D\":[\"CS\",\"1\",\"RenderingMethod\"],1301:[\"SQ\",\"1\",\"VolumeCroppingSequence\"],1302:[\"CS\",\"1\",\"VolumeCroppingMethod\"],1303:[\"FD\",\"6\",\"BoundingBoxCrop\"],1304:[\"SQ\",\"1\",\"ObliqueCroppingPlaneSequence\"],1305:[\"FD\",\"4\",\"Plane\"],1306:[\"FD\",\"3\",\"PlaneNormal\"],1309:[\"US\",\"1\",\"CroppingSpecificationNumber\"],1501:[\"CS\",\"1\",\"MultiPlanarReconstructionStyle\"],1502:[\"CS\",\"1\",\"MPRThicknessType\"],1503:[\"FD\",\"1\",\"MPRSlabThickness\"],1505:[\"FD\",\"3\",\"MPRTopLeftHandCorner\"],1507:[\"FD\",\"3\",\"MPRViewWidthDirection\"],1508:[\"FD\",\"1\",\"MPRViewWidth\"],\"150C\":[\"UL\",\"1\",\"NumberOfVolumetricCurvePoints\"],\"150D\":[\"OD\",\"1\",\"VolumetricCurvePoints\"],1511:[\"FD\",\"3\",\"MPRViewHeightDirection\"],1512:[\"FD\",\"1\",\"MPRViewHeight\"],1602:[\"CS\",\"1\",\"RenderProjection\"],1603:[\"FD\",\"3\",\"ViewpointPosition\"],1604:[\"FD\",\"3\",\"ViewpointLookAtPoint\"],1605:[\"FD\",\"3\",\"ViewpointUpDirection\"],1606:[\"FD\",\"6\",\"RenderFieldOfView\"],1607:[\"FD\",\"1\",\"SamplingStepSize\"],1701:[\"CS\",\"1\",\"ShadingStyle\"],1702:[\"FD\",\"1\",\"AmbientReflectionIntensity\"],1703:[\"FD\",\"3\",\"LightDirection\"],1704:[\"FD\",\"1\",\"DiffuseReflectionIntensity\"],1705:[\"FD\",\"1\",\"SpecularReflectionIntensity\"],1706:[\"FD\",\"1\",\"Shininess\"],1801:[\"SQ\",\"1\",\"PresentationStateClassificationComponentSequence\"],1802:[\"CS\",\"1\",\"ComponentType\"],1803:[\"SQ\",\"1\",\"ComponentInputSequence\"],1804:[\"US\",\"1\",\"VolumetricPresentationInputIndex\"],1805:[\"SQ\",\"1\",\"PresentationStateCompositorComponentSequence\"],1806:[\"SQ\",\"1\",\"WeightingTransferFunctionSequence\"],1807:[\"US\",\"3\",\"WeightingLookupTableDescriptor\"],1808:[\"OB\",\"1\",\"WeightingLookupTableData\"],1901:[\"SQ\",\"1\",\"VolumetricAnnotationSequence\"],1903:[\"SQ\",\"1\",\"ReferencedStructuredContextSequence\"],1904:[\"UI\",\"1\",\"ReferencedContentItem\"],1905:[\"SQ\",\"1\",\"VolumetricPresentationInputAnnotationSequence\"],1907:[\"CS\",\"1\",\"AnnotationClipping\"],\"1A01\":[\"CS\",\"1\",\"PresentationAnimationStyle\"],\"1A03\":[\"FD\",\"1\",\"RecommendedAnimationRate\"],\"1A04\":[\"SQ\",\"1\",\"AnimationCurveSequence\"],\"1A05\":[\"FD\",\"1\",\"AnimationStepSize\"],\"1A06\":[\"FD\",\"1\",\"SwivelRange\"],\"1A07\":[\"OD\",\"1\",\"VolumetricCurveUpDirections\"],\"1A08\":[\"SQ\",\"1\",\"VolumeStreamSequence\"],\"1A09\":[\"LO\",\"1\",\"RGBATransferFunctionDescription\"],\"1B01\":[\"SQ\",\"1\",\"AdvancedBlendingSequence\"],\"1B02\":[\"US\",\"1\",\"BlendingInputNumber\"],\"1B03\":[\"SQ\",\"1\",\"BlendingDisplayInputSequence\"],\"1B04\":[\"SQ\",\"1\",\"BlendingDisplaySequence\"],\"1B06\":[\"CS\",\"1\",\"BlendingMode\"],\"1B07\":[\"CS\",\"1\",\"TimeSeriesBlending\"],\"1B08\":[\"CS\",\"1\",\"GeometryForDisplay\"],\"1B11\":[\"SQ\",\"1\",\"ThresholdSequence\"],\"1B12\":[\"SQ\",\"1\",\"ThresholdValueSequence\"],\"1B13\":[\"CS\",\"1\",\"ThresholdType\"],\"1B14\":[\"FD\",\"1\",\"ThresholdValue\"]},\"0072\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"SH\",\"1\",\"HangingProtocolName\"],\"0004\":[\"LO\",\"1\",\"HangingProtocolDescription\"],\"0006\":[\"CS\",\"1\",\"HangingProtocolLevel\"],\"0008\":[\"LO\",\"1\",\"HangingProtocolCreator\"],\"000A\":[\"DT\",\"1\",\"HangingProtocolCreationDateTime\"],\"000C\":[\"SQ\",\"1\",\"HangingProtocolDefinitionSequence\"],\"000E\":[\"SQ\",\"1\",\"HangingProtocolUserIdentificationCodeSequence\"],\"0010\":[\"LO\",\"1\",\"HangingProtocolUserGroupName\"],\"0012\":[\"SQ\",\"1\",\"SourceHangingProtocolSequence\"],\"0014\":[\"US\",\"1\",\"NumberOfPriorsReferenced\"],\"0020\":[\"SQ\",\"1\",\"ImageSetsSequence\"],\"0022\":[\"SQ\",\"1\",\"ImageSetSelectorSequence\"],\"0024\":[\"CS\",\"1\",\"ImageSetSelectorUsageFlag\"],\"0026\":[\"AT\",\"1\",\"SelectorAttribute\"],\"0028\":[\"US\",\"1\",\"SelectorValueNumber\"],\"0030\":[\"SQ\",\"1\",\"TimeBasedImageSetsSequence\"],\"0032\":[\"US\",\"1\",\"ImageSetNumber\"],\"0034\":[\"CS\",\"1\",\"ImageSetSelectorCategory\"],\"0038\":[\"US\",\"2\",\"RelativeTime\"],\"003A\":[\"CS\",\"1\",\"RelativeTimeUnits\"],\"003C\":[\"SS\",\"2\",\"AbstractPriorValue\"],\"003E\":[\"SQ\",\"1\",\"AbstractPriorCodeSequence\"],\"0040\":[\"LO\",\"1\",\"ImageSetLabel\"],\"0050\":[\"CS\",\"1\",\"SelectorAttributeVR\"],\"0052\":[\"AT\",\"1-n\",\"SelectorSequencePointer\"],\"0054\":[\"LO\",\"1-n\",\"SelectorSequencePointerPrivateCreator\"],\"0056\":[\"LO\",\"1\",\"SelectorAttributePrivateCreator\"],\"005E\":[\"AE\",\"1-n\",\"SelectorAEValue\"],\"005F\":[\"AS\",\"1-n\",\"SelectorASValue\"],\"0060\":[\"AT\",\"1-n\",\"SelectorATValue\"],\"0061\":[\"DA\",\"1-n\",\"SelectorDAValue\"],\"0062\":[\"CS\",\"1-n\",\"SelectorCSValue\"],\"0063\":[\"DT\",\"1-n\",\"SelectorDTValue\"],\"0064\":[\"IS\",\"1-n\",\"SelectorISValue\"],\"0065\":[\"OB\",\"1\",\"SelectorOBValue\"],\"0066\":[\"LO\",\"1-n\",\"SelectorLOValue\"],\"0067\":[\"OF\",\"1\",\"SelectorOFValue\"],\"0068\":[\"LT\",\"1\",\"SelectorLTValue\"],\"0069\":[\"OW\",\"1\",\"SelectorOWValue\"],\"006A\":[\"PN\",\"1-n\",\"SelectorPNValue\"],\"006B\":[\"TM\",\"1-n\",\"SelectorTMValue\"],\"006C\":[\"SH\",\"1-n\",\"SelectorSHValue\"],\"006D\":[\"UN\",\"1\",\"SelectorUNValue\"],\"006E\":[\"ST\",\"1\",\"SelectorSTValue\"],\"006F\":[\"UC\",\"1-n\",\"SelectorUCValue\"],\"0070\":[\"UT\",\"1\",\"SelectorUTValue\"],\"0071\":[\"UR\",\"1\",\"SelectorURValue\"],\"0072\":[\"DS\",\"1-n\",\"SelectorDSValue\"],\"0073\":[\"OD\",\"1\",\"SelectorODValue\"],\"0074\":[\"FD\",\"1-n\",\"SelectorFDValue\"],\"0075\":[\"OL\",\"1\",\"SelectorOLValue\"],\"0076\":[\"FL\",\"1-n\",\"SelectorFLValue\"],\"0078\":[\"UL\",\"1-n\",\"SelectorULValue\"],\"007A\":[\"US\",\"1-n\",\"SelectorUSValue\"],\"007C\":[\"SL\",\"1-n\",\"SelectorSLValue\"],\"007E\":[\"SS\",\"1-n\",\"SelectorSSValue\"],\"007F\":[\"UI\",\"1-n\",\"SelectorUIValue\"],\"0080\":[\"SQ\",\"1\",\"SelectorCodeSequenceValue\"],\"0081\":[\"OV\",\"1\",\"SelectorOVValue\"],\"0082\":[\"SV\",\"1-n\",\"SelectorSVValue\"],\"0083\":[\"UV\",\"1-n\",\"SelectorUVValue\"],\"0100\":[\"US\",\"1\",\"NumberOfScreens\"],\"0102\":[\"SQ\",\"1\",\"NominalScreenDefinitionSequence\"],\"0104\":[\"US\",\"1\",\"NumberOfVerticalPixels\"],\"0106\":[\"US\",\"1\",\"NumberOfHorizontalPixels\"],\"0108\":[\"FD\",\"4\",\"DisplayEnvironmentSpatialPosition\"],\"010A\":[\"US\",\"1\",\"ScreenMinimumGrayscaleBitDepth\"],\"010C\":[\"US\",\"1\",\"ScreenMinimumColorBitDepth\"],\"010E\":[\"US\",\"1\",\"ApplicationMaximumRepaintTime\"],\"0200\":[\"SQ\",\"1\",\"DisplaySetsSequence\"],\"0202\":[\"US\",\"1\",\"DisplaySetNumber\"],\"0203\":[\"LO\",\"1\",\"DisplaySetLabel\"],\"0204\":[\"US\",\"1\",\"DisplaySetPresentationGroup\"],\"0206\":[\"LO\",\"1\",\"DisplaySetPresentationGroupDescription\"],\"0208\":[\"CS\",\"1\",\"PartialDataDisplayHandling\"],\"0210\":[\"SQ\",\"1\",\"SynchronizedScrollingSequence\"],\"0212\":[\"US\",\"2-n\",\"DisplaySetScrollingGroup\"],\"0214\":[\"SQ\",\"1\",\"NavigationIndicatorSequence\"],\"0216\":[\"US\",\"1\",\"NavigationDisplaySet\"],\"0218\":[\"US\",\"1-n\",\"ReferenceDisplaySets\"],\"0300\":[\"SQ\",\"1\",\"ImageBoxesSequence\"],\"0302\":[\"US\",\"1\",\"ImageBoxNumber\"],\"0304\":[\"CS\",\"1\",\"ImageBoxLayoutType\"],\"0306\":[\"US\",\"1\",\"ImageBoxTileHorizontalDimension\"],\"0308\":[\"US\",\"1\",\"ImageBoxTileVerticalDimension\"],\"0310\":[\"CS\",\"1\",\"ImageBoxScrollDirection\"],\"0312\":[\"CS\",\"1\",\"ImageBoxSmallScrollType\"],\"0314\":[\"US\",\"1\",\"ImageBoxSmallScrollAmount\"],\"0316\":[\"CS\",\"1\",\"ImageBoxLargeScrollType\"],\"0318\":[\"US\",\"1\",\"ImageBoxLargeScrollAmount\"],\"0320\":[\"US\",\"1\",\"ImageBoxOverlapPriority\"],\"0330\":[\"FD\",\"1\",\"CineRelativeToRealTime\"],\"0400\":[\"SQ\",\"1\",\"FilterOperationsSequence\"],\"0402\":[\"CS\",\"1\",\"FilterByCategory\"],\"0404\":[\"CS\",\"1\",\"FilterByAttributePresence\"],\"0406\":[\"CS\",\"1\",\"FilterByOperator\"],\"0420\":[\"US\",\"3\",\"StructuredDisplayBackgroundCIELabValue\"],\"0421\":[\"US\",\"3\",\"EmptyImageBoxCIELabValue\"],\"0422\":[\"SQ\",\"1\",\"StructuredDisplayImageBoxSequence\"],\"0424\":[\"SQ\",\"1\",\"StructuredDisplayTextBoxSequence\"],\"0427\":[\"SQ\",\"1\",\"ReferencedFirstFrameSequence\"],\"0430\":[\"SQ\",\"1\",\"ImageBoxSynchronizationSequence\"],\"0432\":[\"US\",\"2-n\",\"SynchronizedImageBoxList\"],\"0434\":[\"CS\",\"1\",\"TypeOfSynchronization\"],\"0500\":[\"CS\",\"1\",\"BlendingOperationType\"],\"0510\":[\"CS\",\"1\",\"ReformattingOperationType\"],\"0512\":[\"FD\",\"1\",\"ReformattingThickness\"],\"0514\":[\"FD\",\"1\",\"ReformattingInterval\"],\"0516\":[\"CS\",\"1\",\"ReformattingOperationInitialViewDirection\"],\"0520\":[\"CS\",\"1-n\",\"ThreeDRenderingType\"],\"0600\":[\"SQ\",\"1\",\"SortingOperationsSequence\"],\"0602\":[\"CS\",\"1\",\"SortByCategory\"],\"0604\":[\"CS\",\"1\",\"SortingDirection\"],\"0700\":[\"CS\",\"2\",\"DisplaySetPatientOrientation\"],\"0702\":[\"CS\",\"1\",\"VOIType\"],\"0704\":[\"CS\",\"1\",\"PseudoColorType\"],\"0705\":[\"SQ\",\"1\",\"PseudoColorPaletteInstanceReferenceSequence\"],\"0706\":[\"CS\",\"1\",\"ShowGrayscaleInverted\"],\"0710\":[\"CS\",\"1\",\"ShowImageTrueSizeFlag\"],\"0712\":[\"CS\",\"1\",\"ShowGraphicAnnotationFlag\"],\"0714\":[\"CS\",\"1\",\"ShowPatientDemographicsFlag\"],\"0716\":[\"CS\",\"1\",\"ShowAcquisitionTechniquesFlag\"],\"0717\":[\"CS\",\"1\",\"DisplaySetHorizontalJustification\"],\"0718\":[\"CS\",\"1\",\"DisplaySetVerticalJustification\"]},\"0074\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0120\":[\"FD\",\"1\",\"ContinuationStartMeterset\"],\"0121\":[\"FD\",\"1\",\"ContinuationEndMeterset\"],1e3:[\"CS\",\"1\",\"ProcedureStepState\"],1002:[\"SQ\",\"1\",\"ProcedureStepProgressInformationSequence\"],1004:[\"DS\",\"1\",\"ProcedureStepProgress\"],1006:[\"ST\",\"1\",\"ProcedureStepProgressDescription\"],1007:[\"SQ\",\"1\",\"ProcedureStepProgressParametersSequence\"],1008:[\"SQ\",\"1\",\"ProcedureStepCommunicationsURISequence\"],\"100A\":[\"UR\",\"1\",\"ContactURI\"],\"100C\":[\"LO\",\"1\",\"ContactDisplayName\"],\"100E\":[\"SQ\",\"1\",\"ProcedureStepDiscontinuationReasonCodeSequence\"],1020:[\"SQ\",\"1\",\"BeamTaskSequence\"],1022:[\"CS\",\"1\",\"BeamTaskType\"],1024:[\"IS\",\"1\",\"BeamOrderIndexTrial\"],1025:[\"CS\",\"1\",\"AutosequenceFlag\"],1026:[\"FD\",\"1\",\"TableTopVerticalAdjustedPosition\"],1027:[\"FD\",\"1\",\"TableTopLongitudinalAdjustedPosition\"],1028:[\"FD\",\"1\",\"TableTopLateralAdjustedPosition\"],\"102A\":[\"FD\",\"1\",\"PatientSupportAdjustedAngle\"],\"102B\":[\"FD\",\"1\",\"TableTopEccentricAdjustedAngle\"],\"102C\":[\"FD\",\"1\",\"TableTopPitchAdjustedAngle\"],\"102D\":[\"FD\",\"1\",\"TableTopRollAdjustedAngle\"],1030:[\"SQ\",\"1\",\"DeliveryVerificationImageSequence\"],1032:[\"CS\",\"1\",\"VerificationImageTiming\"],1034:[\"CS\",\"1\",\"DoubleExposureFlag\"],1036:[\"CS\",\"1\",\"DoubleExposureOrdering\"],1038:[\"DS\",\"1\",\"DoubleExposureMetersetTrial\"],\"103A\":[\"DS\",\"4\",\"DoubleExposureFieldDeltaTrial\"],1040:[\"SQ\",\"1\",\"RelatedReferenceRTImageSequence\"],1042:[\"SQ\",\"1\",\"GeneralMachineVerificationSequence\"],1044:[\"SQ\",\"1\",\"ConventionalMachineVerificationSequence\"],1046:[\"SQ\",\"1\",\"IonMachineVerificationSequence\"],1048:[\"SQ\",\"1\",\"FailedAttributesSequence\"],\"104A\":[\"SQ\",\"1\",\"OverriddenAttributesSequence\"],\"104C\":[\"SQ\",\"1\",\"ConventionalControlPointVerificationSequence\"],\"104E\":[\"SQ\",\"1\",\"IonControlPointVerificationSequence\"],1050:[\"SQ\",\"1\",\"AttributeOccurrenceSequence\"],1052:[\"AT\",\"1\",\"AttributeOccurrencePointer\"],1054:[\"UL\",\"1\",\"AttributeItemSelector\"],1056:[\"LO\",\"1\",\"AttributeOccurrencePrivateCreator\"],1057:[\"IS\",\"1-n\",\"SelectorSequencePointerItems\"],1200:[\"CS\",\"1\",\"ScheduledProcedureStepPriority\"],1202:[\"LO\",\"1\",\"WorklistLabel\"],1204:[\"LO\",\"1\",\"ProcedureStepLabel\"],1210:[\"SQ\",\"1\",\"ScheduledProcessingParametersSequence\"],1212:[\"SQ\",\"1\",\"PerformedProcessingParametersSequence\"],1216:[\"SQ\",\"1\",\"UnifiedProcedureStepPerformedProcedureSequence\"],1220:[\"SQ\",\"1\",\"RelatedProcedureStepSequence\"],1222:[\"LO\",\"1\",\"ProcedureStepRelationshipType\"],1224:[\"SQ\",\"1\",\"ReplacedProcedureStepSequence\"],1230:[\"LO\",\"1\",\"DeletionLock\"],1234:[\"AE\",\"1\",\"ReceivingAE\"],1236:[\"AE\",\"1\",\"RequestingAE\"],1238:[\"LT\",\"1\",\"ReasonForCancellation\"],1242:[\"CS\",\"1\",\"SCPStatus\"],1244:[\"CS\",\"1\",\"SubscriptionListStatus\"],1246:[\"CS\",\"1\",\"UnifiedProcedureStepListStatus\"],1324:[\"UL\",\"1\",\"BeamOrderIndex\"],1338:[\"FD\",\"1\",\"DoubleExposureMeterset\"],\"133A\":[\"FD\",\"4\",\"DoubleExposureFieldDelta\"],1401:[\"SQ\",\"1\",\"BrachyTaskSequence\"],1402:[\"DS\",\"1\",\"ContinuationStartTotalReferenceAirKerma\"],1403:[\"DS\",\"1\",\"ContinuationEndTotalReferenceAirKerma\"],1404:[\"IS\",\"1\",\"ContinuationPulseNumber\"],1405:[\"SQ\",\"1\",\"ChannelDeliveryOrderSequence\"],1406:[\"IS\",\"1\",\"ReferencedChannelNumber\"],1407:[\"DS\",\"1\",\"StartCumulativeTimeWeight\"],1408:[\"DS\",\"1\",\"EndCumulativeTimeWeight\"],1409:[\"SQ\",\"1\",\"OmittedChannelSequence\"],\"140A\":[\"CS\",\"1\",\"ReasonForChannelOmission\"],\"140B\":[\"LO\",\"1\",\"ReasonForChannelOmissionDescription\"],\"140C\":[\"IS\",\"1\",\"ChannelDeliveryOrderIndex\"],\"140D\":[\"SQ\",\"1\",\"ChannelDeliveryContinuationSequence\"],\"140E\":[\"SQ\",\"1\",\"OmittedApplicationSetupSequence\"]},\"0076\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"LO\",\"1\",\"ImplantAssemblyTemplateName\"],\"0003\":[\"LO\",\"1\",\"ImplantAssemblyTemplateIssuer\"],\"0006\":[\"LO\",\"1\",\"ImplantAssemblyTemplateVersion\"],\"0008\":[\"SQ\",\"1\",\"ReplacedImplantAssemblyTemplateSequence\"],\"000A\":[\"CS\",\"1\",\"ImplantAssemblyTemplateType\"],\"000C\":[\"SQ\",\"1\",\"OriginalImplantAssemblyTemplateSequence\"],\"000E\":[\"SQ\",\"1\",\"DerivationImplantAssemblyTemplateSequence\"],\"0010\":[\"SQ\",\"1\",\"ImplantAssemblyTemplateTargetAnatomySequence\"],\"0020\":[\"SQ\",\"1\",\"ProcedureTypeCodeSequence\"],\"0030\":[\"LO\",\"1\",\"SurgicalTechnique\"],\"0032\":[\"SQ\",\"1\",\"ComponentTypesSequence\"],\"0034\":[\"SQ\",\"1\",\"ComponentTypeCodeSequence\"],\"0036\":[\"CS\",\"1\",\"ExclusiveComponentType\"],\"0038\":[\"CS\",\"1\",\"MandatoryComponentType\"],\"0040\":[\"SQ\",\"1\",\"ComponentSequence\"],\"0055\":[\"US\",\"1\",\"ComponentID\"],\"0060\":[\"SQ\",\"1\",\"ComponentAssemblySequence\"],\"0070\":[\"US\",\"1\",\"Component1ReferencedID\"],\"0080\":[\"US\",\"1\",\"Component1ReferencedMatingFeatureSetID\"],\"0090\":[\"US\",\"1\",\"Component1ReferencedMatingFeatureID\"],\"00A0\":[\"US\",\"1\",\"Component2ReferencedID\"],\"00B0\":[\"US\",\"1\",\"Component2ReferencedMatingFeatureSetID\"],\"00C0\":[\"US\",\"1\",\"Component2ReferencedMatingFeatureID\"]},\"0078\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"LO\",\"1\",\"ImplantTemplateGroupName\"],\"0010\":[\"ST\",\"1\",\"ImplantTemplateGroupDescription\"],\"0020\":[\"LO\",\"1\",\"ImplantTemplateGroupIssuer\"],\"0024\":[\"LO\",\"1\",\"ImplantTemplateGroupVersion\"],\"0026\":[\"SQ\",\"1\",\"ReplacedImplantTemplateGroupSequence\"],\"0028\":[\"SQ\",\"1\",\"ImplantTemplateGroupTargetAnatomySequence\"],\"002A\":[\"SQ\",\"1\",\"ImplantTemplateGroupMembersSequence\"],\"002E\":[\"US\",\"1\",\"ImplantTemplateGroupMemberID\"],\"0050\":[\"FD\",\"3\",\"ThreeDImplantTemplateGroupMemberMatchingPoint\"],\"0060\":[\"FD\",\"9\",\"ThreeDImplantTemplateGroupMemberMatchingAxes\"],\"0070\":[\"SQ\",\"1\",\"ImplantTemplateGroupMemberMatching2DCoordinatesSequence\"],\"0090\":[\"FD\",\"2\",\"TwoDImplantTemplateGroupMemberMatchingPoint\"],\"00A0\":[\"FD\",\"4\",\"TwoDImplantTemplateGroupMemberMatchingAxes\"],\"00B0\":[\"SQ\",\"1\",\"ImplantTemplateGroupVariationDimensionSequence\"],\"00B2\":[\"LO\",\"1\",\"ImplantTemplateGroupVariationDimensionName\"],\"00B4\":[\"SQ\",\"1\",\"ImplantTemplateGroupVariationDimensionRankSequence\"],\"00B6\":[\"US\",\"1\",\"ReferencedImplantTemplateGroupMemberID\"],\"00B8\":[\"US\",\"1\",\"ImplantTemplateGroupVariationDimensionRank\"]},\"0080\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"SQ\",\"1\",\"SurfaceScanAcquisitionTypeCodeSequence\"],\"0002\":[\"SQ\",\"1\",\"SurfaceScanModeCodeSequence\"],\"0003\":[\"SQ\",\"1\",\"RegistrationMethodCodeSequence\"],\"0004\":[\"FD\",\"1\",\"ShotDurationTime\"],\"0005\":[\"FD\",\"1\",\"ShotOffsetTime\"],\"0006\":[\"US\",\"1-n\",\"SurfacePointPresentationValueData\"],\"0007\":[\"US\",\"3-3n\",\"SurfacePointColorCIELabValueData\"],\"0008\":[\"SQ\",\"1\",\"UVMappingSequence\"],\"0009\":[\"SH\",\"1\",\"TextureLabel\"],\"0010\":[\"OF\",\"1\",\"UValueData\"],\"0011\":[\"OF\",\"1\",\"VValueData\"],\"0012\":[\"SQ\",\"1\",\"ReferencedTextureSequence\"],\"0013\":[\"SQ\",\"1\",\"ReferencedSurfaceDataSequence\"]},\"0082\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"CS\",\"1\",\"AssessmentSummary\"],\"0003\":[\"UT\",\"1\",\"AssessmentSummaryDescription\"],\"0004\":[\"SQ\",\"1\",\"AssessedSOPInstanceSequence\"],\"0005\":[\"SQ\",\"1\",\"ReferencedComparisonSOPInstanceSequence\"],\"0006\":[\"UL\",\"1\",\"NumberOfAssessmentObservations\"],\"0007\":[\"SQ\",\"1\",\"AssessmentObservationsSequence\"],\"0008\":[\"CS\",\"1\",\"ObservationSignificance\"],\"000A\":[\"UT\",\"1\",\"ObservationDescription\"],\"000C\":[\"SQ\",\"1\",\"StructuredConstraintObservationSequence\"],\"0010\":[\"SQ\",\"1\",\"AssessedAttributeValueSequence\"],\"0016\":[\"LO\",\"1\",\"AssessmentSetID\"],\"0017\":[\"SQ\",\"1\",\"AssessmentRequesterSequence\"],\"0018\":[\"LO\",\"1\",\"SelectorAttributeName\"],\"0019\":[\"LO\",\"1\",\"SelectorAttributeKeyword\"],\"0021\":[\"SQ\",\"1\",\"AssessmentTypeCodeSequence\"],\"0022\":[\"SQ\",\"1\",\"ObservationBasisCodeSequence\"],\"0023\":[\"LO\",\"1\",\"AssessmentLabel\"],\"0032\":[\"CS\",\"1\",\"ConstraintType\"],\"0033\":[\"UT\",\"1\",\"SpecificationSelectionGuidance\"],\"0034\":[\"SQ\",\"1\",\"ConstraintValueSequence\"],\"0035\":[\"SQ\",\"1\",\"RecommendedDefaultValueSequence\"],\"0036\":[\"CS\",\"1\",\"ConstraintViolationSignificance\"],\"0037\":[\"UT\",\"1\",\"ConstraintViolationCondition\"],\"0038\":[\"CS\",\"1\",\"ModifiableConstraintFlag\"]},\"0088\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0130\":[\"SH\",\"1\",\"StorageMediaFileSetID\"],\"0140\":[\"UI\",\"1\",\"StorageMediaFileSetUID\"],\"0200\":[\"SQ\",\"1\",\"IconImageSequence\"],\"0904\":[\"LO\",\"1\",\"TopicTitle\"],\"0906\":[\"ST\",\"1\",\"TopicSubject\"],\"0910\":[\"LO\",\"1\",\"TopicAuthor\"],\"0912\":[\"LO\",\"1-32\",\"TopicKeywords\"]},\"0100\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0410\":[\"CS\",\"1\",\"SOPInstanceStatus\"],\"0420\":[\"DT\",\"1\",\"SOPAuthorizationDateTime\"],\"0424\":[\"LT\",\"1\",\"SOPAuthorizationComment\"],\"0426\":[\"LO\",\"1\",\"AuthorizationEquipmentCertificationNumber\"]},\"0400\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0005\":[\"US\",\"1\",\"MACIDNumber\"],\"0010\":[\"UI\",\"1\",\"MACCalculationTransferSyntaxUID\"],\"0015\":[\"CS\",\"1\",\"MACAlgorithm\"],\"0020\":[\"AT\",\"1-n\",\"DataElementsSigned\"],\"0100\":[\"UI\",\"1\",\"DigitalSignatureUID\"],\"0105\":[\"DT\",\"1\",\"DigitalSignatureDateTime\"],\"0110\":[\"CS\",\"1\",\"CertificateType\"],\"0115\":[\"OB\",\"1\",\"CertificateOfSigner\"],\"0120\":[\"OB\",\"1\",\"Signature\"],\"0305\":[\"CS\",\"1\",\"CertifiedTimestampType\"],\"0310\":[\"OB\",\"1\",\"CertifiedTimestamp\"],\"0315\":[\"FL\",\"1\",\"\"],\"0401\":[\"SQ\",\"1\",\"DigitalSignaturePurposeCodeSequence\"],\"0402\":[\"SQ\",\"1\",\"ReferencedDigitalSignatureSequence\"],\"0403\":[\"SQ\",\"1\",\"ReferencedSOPInstanceMACSequence\"],\"0404\":[\"OB\",\"1\",\"MAC\"],\"0500\":[\"SQ\",\"1\",\"EncryptedAttributesSequence\"],\"0510\":[\"UI\",\"1\",\"EncryptedContentTransferSyntaxUID\"],\"0520\":[\"OB\",\"1\",\"EncryptedContent\"],\"0550\":[\"SQ\",\"1\",\"ModifiedAttributesSequence\"],\"0551\":[\"SQ\",\"1\",\"NonconformingModifiedAttributesSequence\"],\"0552\":[\"OB\",\"1\",\"NonconformingDataElementValue\"],\"0561\":[\"SQ\",\"1\",\"OriginalAttributesSequence\"],\"0562\":[\"DT\",\"1\",\"AttributeModificationDateTime\"],\"0563\":[\"LO\",\"1\",\"ModifyingSystem\"],\"0564\":[\"LO\",\"1\",\"SourceOfPreviousValues\"],\"0565\":[\"CS\",\"1\",\"ReasonForTheAttributeModification\"],\"0600\":[\"CS\",\"1\",\"InstanceOriginStatus\"]},1e3:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"US\",\"3\",\"EscapeTriplet\"],\"0011\":[\"US\",\"3\",\"RunLengthTriplet\"],\"0012\":[\"US\",\"1\",\"HuffmanTableSize\"],\"0013\":[\"US\",\"3\",\"HuffmanTableTriplet\"],\"0014\":[\"US\",\"1\",\"ShiftTableSize\"],\"0015\":[\"US\",\"3\",\"ShiftTableTriplet\"]},1010:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0004\":[\"US\",\"1-n\",\"ZonalMap\"]},2e3:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"IS\",\"1\",\"NumberOfCopies\"],\"001E\":[\"SQ\",\"1\",\"PrinterConfigurationSequence\"],\"0020\":[\"CS\",\"1\",\"PrintPriority\"],\"0030\":[\"CS\",\"1\",\"MediumType\"],\"0040\":[\"CS\",\"1\",\"FilmDestination\"],\"0050\":[\"LO\",\"1\",\"FilmSessionLabel\"],\"0060\":[\"IS\",\"1\",\"MemoryAllocation\"],\"0061\":[\"IS\",\"1\",\"MaximumMemoryAllocation\"],\"0062\":[\"CS\",\"1\",\"ColorImagePrintingFlag\"],\"0063\":[\"CS\",\"1\",\"CollationFlag\"],\"0065\":[\"CS\",\"1\",\"AnnotationFlag\"],\"0067\":[\"CS\",\"1\",\"ImageOverlayFlag\"],\"0069\":[\"CS\",\"1\",\"PresentationLUTFlag\"],\"006A\":[\"CS\",\"1\",\"ImageBoxPresentationLUTFlag\"],\"00A0\":[\"US\",\"1\",\"MemoryBitDepth\"],\"00A1\":[\"US\",\"1\",\"PrintingBitDepth\"],\"00A2\":[\"SQ\",\"1\",\"MediaInstalledSequence\"],\"00A4\":[\"SQ\",\"1\",\"OtherMediaAvailableSequence\"],\"00A8\":[\"SQ\",\"1\",\"SupportedImageDisplayFormatsSequence\"],\"0500\":[\"SQ\",\"1\",\"ReferencedFilmBoxSequence\"],\"0510\":[\"SQ\",\"1\",\"ReferencedStoredPrintSequence\"]},2010:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"ST\",\"1\",\"ImageDisplayFormat\"],\"0030\":[\"CS\",\"1\",\"AnnotationDisplayFormatID\"],\"0040\":[\"CS\",\"1\",\"FilmOrientation\"],\"0050\":[\"CS\",\"1\",\"FilmSizeID\"],\"0052\":[\"CS\",\"1\",\"PrinterResolutionID\"],\"0054\":[\"CS\",\"1\",\"DefaultPrinterResolutionID\"],\"0060\":[\"CS\",\"1\",\"MagnificationType\"],\"0080\":[\"CS\",\"1\",\"SmoothingType\"],\"00A6\":[\"CS\",\"1\",\"DefaultMagnificationType\"],\"00A7\":[\"CS\",\"1-n\",\"OtherMagnificationTypesAvailable\"],\"00A8\":[\"CS\",\"1\",\"DefaultSmoothingType\"],\"00A9\":[\"CS\",\"1-n\",\"OtherSmoothingTypesAvailable\"],\"0100\":[\"CS\",\"1\",\"BorderDensity\"],\"0110\":[\"CS\",\"1\",\"EmptyImageDensity\"],\"0120\":[\"US\",\"1\",\"MinDensity\"],\"0130\":[\"US\",\"1\",\"MaxDensity\"],\"0140\":[\"CS\",\"1\",\"Trim\"],\"0150\":[\"ST\",\"1\",\"ConfigurationInformation\"],\"0152\":[\"LT\",\"1\",\"ConfigurationInformationDescription\"],\"0154\":[\"IS\",\"1\",\"MaximumCollatedFilms\"],\"015E\":[\"US\",\"1\",\"Illumination\"],\"0160\":[\"US\",\"1\",\"ReflectedAmbientLight\"],\"0376\":[\"DS\",\"2\",\"PrinterPixelSpacing\"],\"0500\":[\"SQ\",\"1\",\"ReferencedFilmSessionSequence\"],\"0510\":[\"SQ\",\"1\",\"ReferencedImageBoxSequence\"],\"0520\":[\"SQ\",\"1\",\"ReferencedBasicAnnotationBoxSequence\"]},2020:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"US\",\"1\",\"ImageBoxPosition\"],\"0020\":[\"CS\",\"1\",\"Polarity\"],\"0030\":[\"DS\",\"1\",\"RequestedImageSize\"],\"0040\":[\"CS\",\"1\",\"RequestedDecimateCropBehavior\"],\"0050\":[\"CS\",\"1\",\"RequestedResolutionID\"],\"00A0\":[\"CS\",\"1\",\"RequestedImageSizeFlag\"],\"00A2\":[\"CS\",\"1\",\"DecimateCropResult\"],\"0110\":[\"SQ\",\"1\",\"BasicGrayscaleImageSequence\"],\"0111\":[\"SQ\",\"1\",\"BasicColorImageSequence\"],\"0130\":[\"SQ\",\"1\",\"ReferencedImageOverlayBoxSequence\"],\"0140\":[\"SQ\",\"1\",\"ReferencedVOILUTBoxSequence\"]},2030:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"US\",\"1\",\"AnnotationPosition\"],\"0020\":[\"LO\",\"1\",\"TextString\"]},2040:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"SQ\",\"1\",\"ReferencedOverlayPlaneSequence\"],\"0011\":[\"US\",\"1-99\",\"ReferencedOverlayPlaneGroups\"],\"0020\":[\"SQ\",\"1\",\"OverlayPixelDataSequence\"],\"0060\":[\"CS\",\"1\",\"OverlayMagnificationType\"],\"0070\":[\"CS\",\"1\",\"OverlaySmoothingType\"],\"0072\":[\"CS\",\"1\",\"OverlayOrImageMagnification\"],\"0074\":[\"US\",\"1\",\"MagnifyToNumberOfColumns\"],\"0080\":[\"CS\",\"1\",\"OverlayForegroundDensity\"],\"0082\":[\"CS\",\"1\",\"OverlayBackgroundDensity\"],\"0090\":[\"CS\",\"1\",\"OverlayMode\"],\"0100\":[\"CS\",\"1\",\"ThresholdDensity\"],\"0500\":[\"SQ\",\"1\",\"ReferencedImageBoxSequenceRetired\"]},2050:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"SQ\",\"1\",\"PresentationLUTSequence\"],\"0020\":[\"CS\",\"1\",\"PresentationLUTShape\"],\"0500\":[\"SQ\",\"1\",\"ReferencedPresentationLUTSequence\"]},2100:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"SH\",\"1\",\"PrintJobID\"],\"0020\":[\"CS\",\"1\",\"ExecutionStatus\"],\"0030\":[\"CS\",\"1\",\"ExecutionStatusInfo\"],\"0040\":[\"DA\",\"1\",\"CreationDate\"],\"0050\":[\"TM\",\"1\",\"CreationTime\"],\"0070\":[\"AE\",\"1\",\"Originator\"],\"0140\":[\"AE\",\"1\",\"DestinationAE\"],\"0160\":[\"SH\",\"1\",\"OwnerID\"],\"0170\":[\"IS\",\"1\",\"NumberOfFilms\"],\"0500\":[\"SQ\",\"1\",\"ReferencedPrintJobSequencePullStoredPrint\"]},2110:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"CS\",\"1\",\"PrinterStatus\"],\"0020\":[\"CS\",\"1\",\"PrinterStatusInfo\"],\"0030\":[\"LO\",\"1\",\"PrinterName\"],\"0099\":[\"SH\",\"1\",\"PrintQueueID\"]},2120:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"CS\",\"1\",\"QueueStatus\"],\"0050\":[\"SQ\",\"1\",\"PrintJobDescriptionSequence\"],\"0070\":[\"SQ\",\"1\",\"ReferencedPrintJobSequence\"]},2130:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"SQ\",\"1\",\"PrintManagementCapabilitiesSequence\"],\"0015\":[\"SQ\",\"1\",\"PrinterCharacteristicsSequence\"],\"0030\":[\"SQ\",\"1\",\"FilmBoxContentSequence\"],\"0040\":[\"SQ\",\"1\",\"ImageBoxContentSequence\"],\"0050\":[\"SQ\",\"1\",\"AnnotationContentSequence\"],\"0060\":[\"SQ\",\"1\",\"ImageOverlayBoxContentSequence\"],\"0080\":[\"SQ\",\"1\",\"PresentationLUTContentSequence\"],\"00A0\":[\"SQ\",\"1\",\"ProposedStudySequence\"],\"00C0\":[\"SQ\",\"1\",\"OriginalImageSequence\"]},2200:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"CS\",\"1\",\"LabelUsingInformationExtractedFromInstances\"],\"0002\":[\"UT\",\"1\",\"LabelText\"],\"0003\":[\"CS\",\"1\",\"LabelStyleSelection\"],\"0004\":[\"LT\",\"1\",\"MediaDisposition\"],\"0005\":[\"LT\",\"1\",\"BarcodeValue\"],\"0006\":[\"CS\",\"1\",\"BarcodeSymbology\"],\"0007\":[\"CS\",\"1\",\"AllowMediaSplitting\"],\"0008\":[\"CS\",\"1\",\"IncludeNonDICOMObjects\"],\"0009\":[\"CS\",\"1\",\"IncludeDisplayApplication\"],\"000A\":[\"CS\",\"1\",\"PreserveCompositeInstancesAfterMediaCreation\"],\"000B\":[\"US\",\"1\",\"TotalNumberOfPiecesOfMediaCreated\"],\"000C\":[\"LO\",\"1\",\"RequestedMediaApplicationProfile\"],\"000D\":[\"SQ\",\"1\",\"ReferencedStorageMediaSequence\"],\"000E\":[\"AT\",\"1-n\",\"FailureAttributes\"],\"000F\":[\"CS\",\"1\",\"AllowLossyCompression\"],\"0020\":[\"CS\",\"1\",\"RequestPriority\"]},3002:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"SH\",\"1\",\"RTImageLabel\"],\"0003\":[\"LO\",\"1\",\"RTImageName\"],\"0004\":[\"ST\",\"1\",\"RTImageDescription\"],\"000A\":[\"CS\",\"1\",\"ReportedValuesOrigin\"],\"000C\":[\"CS\",\"1\",\"RTImagePlane\"],\"000D\":[\"DS\",\"3\",\"XRayImageReceptorTranslation\"],\"000E\":[\"DS\",\"1\",\"XRayImageReceptorAngle\"],\"0010\":[\"DS\",\"6\",\"RTImageOrientation\"],\"0011\":[\"DS\",\"2\",\"ImagePlanePixelSpacing\"],\"0012\":[\"DS\",\"2\",\"RTImagePosition\"],\"0020\":[\"SH\",\"1\",\"RadiationMachineName\"],\"0022\":[\"DS\",\"1\",\"RadiationMachineSAD\"],\"0024\":[\"DS\",\"1\",\"RadiationMachineSSD\"],\"0026\":[\"DS\",\"1\",\"RTImageSID\"],\"0028\":[\"DS\",\"1\",\"SourceToReferenceObjectDistance\"],\"0029\":[\"IS\",\"1\",\"FractionNumber\"],\"0030\":[\"SQ\",\"1\",\"ExposureSequence\"],\"0032\":[\"DS\",\"1\",\"MetersetExposure\"],\"0034\":[\"DS\",\"4\",\"DiaphragmPosition\"],\"0040\":[\"SQ\",\"1\",\"FluenceMapSequence\"],\"0041\":[\"CS\",\"1\",\"FluenceDataSource\"],\"0042\":[\"DS\",\"1\",\"FluenceDataScale\"],\"0050\":[\"SQ\",\"1\",\"PrimaryFluenceModeSequence\"],\"0051\":[\"CS\",\"1\",\"FluenceMode\"],\"0052\":[\"SH\",\"1\",\"FluenceModeID\"]},3004:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"CS\",\"1\",\"DVHType\"],\"0002\":[\"CS\",\"1\",\"DoseUnits\"],\"0004\":[\"CS\",\"1\",\"DoseType\"],\"0005\":[\"CS\",\"1\",\"SpatialTransformOfDose\"],\"0006\":[\"LO\",\"1\",\"DoseComment\"],\"0008\":[\"DS\",\"3\",\"NormalizationPoint\"],\"000A\":[\"CS\",\"1\",\"DoseSummationType\"],\"000C\":[\"DS\",\"2-n\",\"GridFrameOffsetVector\"],\"000E\":[\"DS\",\"1\",\"DoseGridScaling\"],\"0010\":[\"SQ\",\"1\",\"RTDoseROISequence\"],\"0012\":[\"DS\",\"1\",\"DoseValue\"],\"0014\":[\"CS\",\"1-3\",\"TissueHeterogeneityCorrection\"],\"0040\":[\"DS\",\"3\",\"DVHNormalizationPoint\"],\"0042\":[\"DS\",\"1\",\"DVHNormalizationDoseValue\"],\"0050\":[\"SQ\",\"1\",\"DVHSequence\"],\"0052\":[\"DS\",\"1\",\"DVHDoseScaling\"],\"0054\":[\"CS\",\"1\",\"DVHVolumeUnits\"],\"0056\":[\"IS\",\"1\",\"DVHNumberOfBins\"],\"0058\":[\"DS\",\"2-2n\",\"DVHData\"],\"0060\":[\"SQ\",\"1\",\"DVHReferencedROISequence\"],\"0062\":[\"CS\",\"1\",\"DVHROIContributionType\"],\"0070\":[\"DS\",\"1\",\"DVHMinimumDose\"],\"0072\":[\"DS\",\"1\",\"DVHMaximumDose\"],\"0074\":[\"DS\",\"1\",\"DVHMeanDose\"]},3006:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"SH\",\"1\",\"StructureSetLabel\"],\"0004\":[\"LO\",\"1\",\"StructureSetName\"],\"0006\":[\"ST\",\"1\",\"StructureSetDescription\"],\"0008\":[\"DA\",\"1\",\"StructureSetDate\"],\"0009\":[\"TM\",\"1\",\"StructureSetTime\"],\"0010\":[\"SQ\",\"1\",\"ReferencedFrameOfReferenceSequence\"],\"0012\":[\"SQ\",\"1\",\"RTReferencedStudySequence\"],\"0014\":[\"SQ\",\"1\",\"RTReferencedSeriesSequence\"],\"0016\":[\"SQ\",\"1\",\"ContourImageSequence\"],\"0018\":[\"SQ\",\"1\",\"PredecessorStructureSetSequence\"],\"0020\":[\"SQ\",\"1\",\"StructureSetROISequence\"],\"0022\":[\"IS\",\"1\",\"ROINumber\"],\"0024\":[\"UI\",\"1\",\"ReferencedFrameOfReferenceUID\"],\"0026\":[\"LO\",\"1\",\"ROIName\"],\"0028\":[\"ST\",\"1\",\"ROIDescription\"],\"002A\":[\"IS\",\"3\",\"ROIDisplayColor\"],\"002C\":[\"DS\",\"1\",\"ROIVolume\"],\"0030\":[\"SQ\",\"1\",\"RTRelatedROISequence\"],\"0033\":[\"CS\",\"1\",\"RTROIRelationship\"],\"0036\":[\"CS\",\"1\",\"ROIGenerationAlgorithm\"],\"0037\":[\"SQ\",\"1\",\"ROIDerivationAlgorithmIdentificationSequence\"],\"0038\":[\"LO\",\"1\",\"ROIGenerationDescription\"],\"0039\":[\"SQ\",\"1\",\"ROIContourSequence\"],\"0040\":[\"SQ\",\"1\",\"ContourSequence\"],\"0042\":[\"CS\",\"1\",\"ContourGeometricType\"],\"0044\":[\"DS\",\"1\",\"ContourSlabThickness\"],\"0045\":[\"DS\",\"3\",\"ContourOffsetVector\"],\"0046\":[\"IS\",\"1\",\"NumberOfContourPoints\"],\"0048\":[\"IS\",\"1\",\"ContourNumber\"],\"0049\":[\"IS\",\"1-n\",\"AttachedContours\"],\"004A\":[\"SQ\",\"1\",\"SourcePixelPlanesCharacteristicsSequence\"],\"0050\":[\"DS\",\"3-3n\",\"ContourData\"],\"0080\":[\"SQ\",\"1\",\"RTROIObservationsSequence\"],\"0082\":[\"IS\",\"1\",\"ObservationNumber\"],\"0084\":[\"IS\",\"1\",\"ReferencedROINumber\"],\"0085\":[\"SH\",\"1\",\"ROIObservationLabel\"],\"0086\":[\"SQ\",\"1\",\"RTROIIdentificationCodeSequence\"],\"0088\":[\"ST\",\"1\",\"ROIObservationDescription\"],\"00A0\":[\"SQ\",\"1\",\"RelatedRTROIObservationsSequence\"],\"00A4\":[\"CS\",\"1\",\"RTROIInterpretedType\"],\"00A6\":[\"PN\",\"1\",\"ROIInterpreter\"],\"00B0\":[\"SQ\",\"1\",\"ROIPhysicalPropertiesSequence\"],\"00B2\":[\"CS\",\"1\",\"ROIPhysicalProperty\"],\"00B4\":[\"DS\",\"1\",\"ROIPhysicalPropertyValue\"],\"00B6\":[\"SQ\",\"1\",\"ROIElementalCompositionSequence\"],\"00B7\":[\"US\",\"1\",\"ROIElementalCompositionAtomicNumber\"],\"00B8\":[\"FL\",\"1\",\"ROIElementalCompositionAtomicMassFraction\"],\"00B9\":[\"SQ\",\"1\",\"AdditionalRTROIIdentificationCodeSequence\"],\"00C0\":[\"SQ\",\"1\",\"FrameOfReferenceRelationshipSequence\"],\"00C2\":[\"UI\",\"1\",\"RelatedFrameOfReferenceUID\"],\"00C4\":[\"CS\",\"1\",\"FrameOfReferenceTransformationType\"],\"00C6\":[\"DS\",\"16\",\"FrameOfReferenceTransformationMatrix\"],\"00C8\":[\"LO\",\"1\",\"FrameOfReferenceTransformationComment\"],\"00C9\":[\"SQ\",\"1\",\"PatientLocationCoordinatesSequence\"],\"00CA\":[\"SQ\",\"1\",\"PatientLocationCoordinatesCodeSequence\"],\"00CB\":[\"SQ\",\"1\",\"PatientSupportPositionSequence\"]},3008:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"SQ\",\"1\",\"MeasuredDoseReferenceSequence\"],\"0012\":[\"ST\",\"1\",\"MeasuredDoseDescription\"],\"0014\":[\"CS\",\"1\",\"MeasuredDoseType\"],\"0016\":[\"DS\",\"1\",\"MeasuredDoseValue\"],\"0020\":[\"SQ\",\"1\",\"TreatmentSessionBeamSequence\"],\"0021\":[\"SQ\",\"1\",\"TreatmentSessionIonBeamSequence\"],\"0022\":[\"IS\",\"1\",\"CurrentFractionNumber\"],\"0024\":[\"DA\",\"1\",\"TreatmentControlPointDate\"],\"0025\":[\"TM\",\"1\",\"TreatmentControlPointTime\"],\"002A\":[\"CS\",\"1\",\"TreatmentTerminationStatus\"],\"002B\":[\"SH\",\"1\",\"TreatmentTerminationCode\"],\"002C\":[\"CS\",\"1\",\"TreatmentVerificationStatus\"],\"0030\":[\"SQ\",\"1\",\"ReferencedTreatmentRecordSequence\"],\"0032\":[\"DS\",\"1\",\"SpecifiedPrimaryMeterset\"],\"0033\":[\"DS\",\"1\",\"SpecifiedSecondaryMeterset\"],\"0036\":[\"DS\",\"1\",\"DeliveredPrimaryMeterset\"],\"0037\":[\"DS\",\"1\",\"DeliveredSecondaryMeterset\"],\"003A\":[\"DS\",\"1\",\"SpecifiedTreatmentTime\"],\"003B\":[\"DS\",\"1\",\"DeliveredTreatmentTime\"],\"0040\":[\"SQ\",\"1\",\"ControlPointDeliverySequence\"],\"0041\":[\"SQ\",\"1\",\"IonControlPointDeliverySequence\"],\"0042\":[\"DS\",\"1\",\"SpecifiedMeterset\"],\"0044\":[\"DS\",\"1\",\"DeliveredMeterset\"],\"0045\":[\"FL\",\"1\",\"MetersetRateSet\"],\"0046\":[\"FL\",\"1\",\"MetersetRateDelivered\"],\"0047\":[\"FL\",\"1-n\",\"ScanSpotMetersetsDelivered\"],\"0048\":[\"DS\",\"1\",\"DoseRateDelivered\"],\"0050\":[\"SQ\",\"1\",\"TreatmentSummaryCalculatedDoseReferenceSequence\"],\"0052\":[\"DS\",\"1\",\"CumulativeDoseToDoseReference\"],\"0054\":[\"DA\",\"1\",\"FirstTreatmentDate\"],\"0056\":[\"DA\",\"1\",\"MostRecentTreatmentDate\"],\"005A\":[\"IS\",\"1\",\"NumberOfFractionsDelivered\"],\"0060\":[\"SQ\",\"1\",\"OverrideSequence\"],\"0061\":[\"AT\",\"1\",\"ParameterSequencePointer\"],\"0062\":[\"AT\",\"1\",\"OverrideParameterPointer\"],\"0063\":[\"IS\",\"1\",\"ParameterItemIndex\"],\"0064\":[\"IS\",\"1\",\"MeasuredDoseReferenceNumber\"],\"0065\":[\"AT\",\"1\",\"ParameterPointer\"],\"0066\":[\"ST\",\"1\",\"OverrideReason\"],\"0067\":[\"US\",\"1\",\"ParameterValueNumber\"],\"0068\":[\"SQ\",\"1\",\"CorrectedParameterSequence\"],\"006A\":[\"FL\",\"1\",\"CorrectionValue\"],\"0070\":[\"SQ\",\"1\",\"CalculatedDoseReferenceSequence\"],\"0072\":[\"IS\",\"1\",\"CalculatedDoseReferenceNumber\"],\"0074\":[\"ST\",\"1\",\"CalculatedDoseReferenceDescription\"],\"0076\":[\"DS\",\"1\",\"CalculatedDoseReferenceDoseValue\"],\"0078\":[\"DS\",\"1\",\"StartMeterset\"],\"007A\":[\"DS\",\"1\",\"EndMeterset\"],\"0080\":[\"SQ\",\"1\",\"ReferencedMeasuredDoseReferenceSequence\"],\"0082\":[\"IS\",\"1\",\"ReferencedMeasuredDoseReferenceNumber\"],\"0090\":[\"SQ\",\"1\",\"ReferencedCalculatedDoseReferenceSequence\"],\"0092\":[\"IS\",\"1\",\"ReferencedCalculatedDoseReferenceNumber\"],\"00A0\":[\"SQ\",\"1\",\"BeamLimitingDeviceLeafPairsSequence\"],\"00B0\":[\"SQ\",\"1\",\"RecordedWedgeSequence\"],\"00C0\":[\"SQ\",\"1\",\"RecordedCompensatorSequence\"],\"00D0\":[\"SQ\",\"1\",\"RecordedBlockSequence\"],\"00D1\":[\"SQ\",\"1\",\"RecordedBlockSlabSequence\"],\"00E0\":[\"SQ\",\"1\",\"TreatmentSummaryMeasuredDoseReferenceSequence\"],\"00F0\":[\"SQ\",\"1\",\"RecordedSnoutSequence\"],\"00F2\":[\"SQ\",\"1\",\"RecordedRangeShifterSequence\"],\"00F4\":[\"SQ\",\"1\",\"RecordedLateralSpreadingDeviceSequence\"],\"00F6\":[\"SQ\",\"1\",\"RecordedRangeModulatorSequence\"],\"0100\":[\"SQ\",\"1\",\"RecordedSourceSequence\"],\"0105\":[\"LO\",\"1\",\"SourceSerialNumber\"],\"0110\":[\"SQ\",\"1\",\"TreatmentSessionApplicationSetupSequence\"],\"0116\":[\"CS\",\"1\",\"ApplicationSetupCheck\"],\"0120\":[\"SQ\",\"1\",\"RecordedBrachyAccessoryDeviceSequence\"],\"0122\":[\"IS\",\"1\",\"ReferencedBrachyAccessoryDeviceNumber\"],\"0130\":[\"SQ\",\"1\",\"RecordedChannelSequence\"],\"0132\":[\"DS\",\"1\",\"SpecifiedChannelTotalTime\"],\"0134\":[\"DS\",\"1\",\"DeliveredChannelTotalTime\"],\"0136\":[\"IS\",\"1\",\"SpecifiedNumberOfPulses\"],\"0138\":[\"IS\",\"1\",\"DeliveredNumberOfPulses\"],\"013A\":[\"DS\",\"1\",\"SpecifiedPulseRepetitionInterval\"],\"013C\":[\"DS\",\"1\",\"DeliveredPulseRepetitionInterval\"],\"0140\":[\"SQ\",\"1\",\"RecordedSourceApplicatorSequence\"],\"0142\":[\"IS\",\"1\",\"ReferencedSourceApplicatorNumber\"],\"0150\":[\"SQ\",\"1\",\"RecordedChannelShieldSequence\"],\"0152\":[\"IS\",\"1\",\"ReferencedChannelShieldNumber\"],\"0160\":[\"SQ\",\"1\",\"BrachyControlPointDeliveredSequence\"],\"0162\":[\"DA\",\"1\",\"SafePositionExitDate\"],\"0164\":[\"TM\",\"1\",\"SafePositionExitTime\"],\"0166\":[\"DA\",\"1\",\"SafePositionReturnDate\"],\"0168\":[\"TM\",\"1\",\"SafePositionReturnTime\"],\"0171\":[\"SQ\",\"1\",\"PulseSpecificBrachyControlPointDeliveredSequence\"],\"0172\":[\"US\",\"1\",\"PulseNumber\"],\"0173\":[\"SQ\",\"1\",\"BrachyPulseControlPointDeliveredSequence\"],\"0200\":[\"CS\",\"1\",\"CurrentTreatmentStatus\"],\"0202\":[\"ST\",\"1\",\"TreatmentStatusComment\"],\"0220\":[\"SQ\",\"1\",\"FractionGroupSummarySequence\"],\"0223\":[\"IS\",\"1\",\"ReferencedFractionNumber\"],\"0224\":[\"CS\",\"1\",\"FractionGroupType\"],\"0230\":[\"CS\",\"1\",\"BeamStopperPosition\"],\"0240\":[\"SQ\",\"1\",\"FractionStatusSummarySequence\"],\"0250\":[\"DA\",\"1\",\"TreatmentDate\"],\"0251\":[\"TM\",\"1\",\"TreatmentTime\"]},\"300A\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"SH\",\"1\",\"RTPlanLabel\"],\"0003\":[\"LO\",\"1\",\"RTPlanName\"],\"0004\":[\"ST\",\"1\",\"RTPlanDescription\"],\"0006\":[\"DA\",\"1\",\"RTPlanDate\"],\"0007\":[\"TM\",\"1\",\"RTPlanTime\"],\"0009\":[\"LO\",\"1-n\",\"TreatmentProtocols\"],\"000A\":[\"CS\",\"1\",\"PlanIntent\"],\"000B\":[\"LO\",\"1-n\",\"TreatmentSites\"],\"000C\":[\"CS\",\"1\",\"RTPlanGeometry\"],\"000E\":[\"ST\",\"1\",\"PrescriptionDescription\"],\"0010\":[\"SQ\",\"1\",\"DoseReferenceSequence\"],\"0012\":[\"IS\",\"1\",\"DoseReferenceNumber\"],\"0013\":[\"UI\",\"1\",\"DoseReferenceUID\"],\"0014\":[\"CS\",\"1\",\"DoseReferenceStructureType\"],\"0015\":[\"CS\",\"1\",\"NominalBeamEnergyUnit\"],\"0016\":[\"LO\",\"1\",\"DoseReferenceDescription\"],\"0018\":[\"DS\",\"3\",\"DoseReferencePointCoordinates\"],\"001A\":[\"DS\",\"1\",\"NominalPriorDose\"],\"0020\":[\"CS\",\"1\",\"DoseReferenceType\"],\"0021\":[\"DS\",\"1\",\"ConstraintWeight\"],\"0022\":[\"DS\",\"1\",\"DeliveryWarningDose\"],\"0023\":[\"DS\",\"1\",\"DeliveryMaximumDose\"],\"0025\":[\"DS\",\"1\",\"TargetMinimumDose\"],\"0026\":[\"DS\",\"1\",\"TargetPrescriptionDose\"],\"0027\":[\"DS\",\"1\",\"TargetMaximumDose\"],\"0028\":[\"DS\",\"1\",\"TargetUnderdoseVolumeFraction\"],\"002A\":[\"DS\",\"1\",\"OrganAtRiskFullVolumeDose\"],\"002B\":[\"DS\",\"1\",\"OrganAtRiskLimitDose\"],\"002C\":[\"DS\",\"1\",\"OrganAtRiskMaximumDose\"],\"002D\":[\"DS\",\"1\",\"OrganAtRiskOverdoseVolumeFraction\"],\"0040\":[\"SQ\",\"1\",\"ToleranceTableSequence\"],\"0042\":[\"IS\",\"1\",\"ToleranceTableNumber\"],\"0043\":[\"SH\",\"1\",\"ToleranceTableLabel\"],\"0044\":[\"DS\",\"1\",\"GantryAngleTolerance\"],\"0046\":[\"DS\",\"1\",\"BeamLimitingDeviceAngleTolerance\"],\"0048\":[\"SQ\",\"1\",\"BeamLimitingDeviceToleranceSequence\"],\"004A\":[\"DS\",\"1\",\"BeamLimitingDevicePositionTolerance\"],\"004B\":[\"FL\",\"1\",\"SnoutPositionTolerance\"],\"004C\":[\"DS\",\"1\",\"PatientSupportAngleTolerance\"],\"004E\":[\"DS\",\"1\",\"TableTopEccentricAngleTolerance\"],\"004F\":[\"FL\",\"1\",\"TableTopPitchAngleTolerance\"],\"0050\":[\"FL\",\"1\",\"TableTopRollAngleTolerance\"],\"0051\":[\"DS\",\"1\",\"TableTopVerticalPositionTolerance\"],\"0052\":[\"DS\",\"1\",\"TableTopLongitudinalPositionTolerance\"],\"0053\":[\"DS\",\"1\",\"TableTopLateralPositionTolerance\"],\"0055\":[\"CS\",\"1\",\"RTPlanRelationship\"],\"0070\":[\"SQ\",\"1\",\"FractionGroupSequence\"],\"0071\":[\"IS\",\"1\",\"FractionGroupNumber\"],\"0072\":[\"LO\",\"1\",\"FractionGroupDescription\"],\"0078\":[\"IS\",\"1\",\"NumberOfFractionsPlanned\"],\"0079\":[\"IS\",\"1\",\"NumberOfFractionPatternDigitsPerDay\"],\"007A\":[\"IS\",\"1\",\"RepeatFractionCycleLength\"],\"007B\":[\"LT\",\"1\",\"FractionPattern\"],\"0080\":[\"IS\",\"1\",\"NumberOfBeams\"],\"0082\":[\"DS\",\"3\",\"BeamDoseSpecificationPoint\"],\"0083\":[\"UI\",\"1\",\"ReferencedDoseReferenceUID\"],\"0084\":[\"DS\",\"1\",\"BeamDose\"],\"0086\":[\"DS\",\"1\",\"BeamMeterset\"],\"0088\":[\"FL\",\"1\",\"BeamDosePointDepth\"],\"0089\":[\"FL\",\"1\",\"BeamDosePointEquivalentDepth\"],\"008A\":[\"FL\",\"1\",\"BeamDosePointSSD\"],\"008B\":[\"CS\",\"1\",\"BeamDoseMeaning\"],\"008C\":[\"SQ\",\"1\",\"BeamDoseVerificationControlPointSequence\"],\"008D\":[\"FL\",\"1\",\"AverageBeamDosePointDepth\"],\"008E\":[\"FL\",\"1\",\"AverageBeamDosePointEquivalentDepth\"],\"008F\":[\"FL\",\"1\",\"AverageBeamDosePointSSD\"],\"0090\":[\"CS\",\"1\",\"BeamDoseType\"],\"0091\":[\"DS\",\"1\",\"AlternateBeamDose\"],\"0092\":[\"CS\",\"1\",\"AlternateBeamDoseType\"],\"0093\":[\"CS\",\"1\",\"DepthValueAveragingFlag\"],\"0094\":[\"DS\",\"1\",\"BeamDosePointSourceToExternalContourDistance\"],\"00A0\":[\"IS\",\"1\",\"NumberOfBrachyApplicationSetups\"],\"00A2\":[\"DS\",\"3\",\"BrachyApplicationSetupDoseSpecificationPoint\"],\"00A4\":[\"DS\",\"1\",\"BrachyApplicationSetupDose\"],\"00B0\":[\"SQ\",\"1\",\"BeamSequence\"],\"00B2\":[\"SH\",\"1\",\"TreatmentMachineName\"],\"00B3\":[\"CS\",\"1\",\"PrimaryDosimeterUnit\"],\"00B4\":[\"DS\",\"1\",\"SourceAxisDistance\"],\"00B6\":[\"SQ\",\"1\",\"BeamLimitingDeviceSequence\"],\"00B8\":[\"CS\",\"1\",\"RTBeamLimitingDeviceType\"],\"00BA\":[\"DS\",\"1\",\"SourceToBeamLimitingDeviceDistance\"],\"00BB\":[\"FL\",\"1\",\"IsocenterToBeamLimitingDeviceDistance\"],\"00BC\":[\"IS\",\"1\",\"NumberOfLeafJawPairs\"],\"00BE\":[\"DS\",\"3-n\",\"LeafPositionBoundaries\"],\"00C0\":[\"IS\",\"1\",\"BeamNumber\"],\"00C2\":[\"LO\",\"1\",\"BeamName\"],\"00C3\":[\"ST\",\"1\",\"BeamDescription\"],\"00C4\":[\"CS\",\"1\",\"BeamType\"],\"00C5\":[\"FD\",\"1\",\"BeamDeliveryDurationLimit\"],\"00C6\":[\"CS\",\"1\",\"RadiationType\"],\"00C7\":[\"CS\",\"1\",\"HighDoseTechniqueType\"],\"00C8\":[\"IS\",\"1\",\"ReferenceImageNumber\"],\"00CA\":[\"SQ\",\"1\",\"PlannedVerificationImageSequence\"],\"00CC\":[\"LO\",\"1-n\",\"ImagingDeviceSpecificAcquisitionParameters\"],\"00CE\":[\"CS\",\"1\",\"TreatmentDeliveryType\"],\"00D0\":[\"IS\",\"1\",\"NumberOfWedges\"],\"00D1\":[\"SQ\",\"1\",\"WedgeSequence\"],\"00D2\":[\"IS\",\"1\",\"WedgeNumber\"],\"00D3\":[\"CS\",\"1\",\"WedgeType\"],\"00D4\":[\"SH\",\"1\",\"WedgeID\"],\"00D5\":[\"IS\",\"1\",\"WedgeAngle\"],\"00D6\":[\"DS\",\"1\",\"WedgeFactor\"],\"00D7\":[\"FL\",\"1\",\"TotalWedgeTrayWaterEquivalentThickness\"],\"00D8\":[\"DS\",\"1\",\"WedgeOrientation\"],\"00D9\":[\"FL\",\"1\",\"IsocenterToWedgeTrayDistance\"],\"00DA\":[\"DS\",\"1\",\"SourceToWedgeTrayDistance\"],\"00DB\":[\"FL\",\"1\",\"WedgeThinEdgePosition\"],\"00DC\":[\"SH\",\"1\",\"BolusID\"],\"00DD\":[\"ST\",\"1\",\"BolusDescription\"],\"00DE\":[\"DS\",\"1\",\"EffectiveWedgeAngle\"],\"00E0\":[\"IS\",\"1\",\"NumberOfCompensators\"],\"00E1\":[\"SH\",\"1\",\"MaterialID\"],\"00E2\":[\"DS\",\"1\",\"TotalCompensatorTrayFactor\"],\"00E3\":[\"SQ\",\"1\",\"CompensatorSequence\"],\"00E4\":[\"IS\",\"1\",\"CompensatorNumber\"],\"00E5\":[\"SH\",\"1\",\"CompensatorID\"],\"00E6\":[\"DS\",\"1\",\"SourceToCompensatorTrayDistance\"],\"00E7\":[\"IS\",\"1\",\"CompensatorRows\"],\"00E8\":[\"IS\",\"1\",\"CompensatorColumns\"],\"00E9\":[\"DS\",\"2\",\"CompensatorPixelSpacing\"],\"00EA\":[\"DS\",\"2\",\"CompensatorPosition\"],\"00EB\":[\"DS\",\"1-n\",\"CompensatorTransmissionData\"],\"00EC\":[\"DS\",\"1-n\",\"CompensatorThicknessData\"],\"00ED\":[\"IS\",\"1\",\"NumberOfBoli\"],\"00EE\":[\"CS\",\"1\",\"CompensatorType\"],\"00EF\":[\"SH\",\"1\",\"CompensatorTrayID\"],\"00F0\":[\"IS\",\"1\",\"NumberOfBlocks\"],\"00F2\":[\"DS\",\"1\",\"TotalBlockTrayFactor\"],\"00F3\":[\"FL\",\"1\",\"TotalBlockTrayWaterEquivalentThickness\"],\"00F4\":[\"SQ\",\"1\",\"BlockSequence\"],\"00F5\":[\"SH\",\"1\",\"BlockTrayID\"],\"00F6\":[\"DS\",\"1\",\"SourceToBlockTrayDistance\"],\"00F7\":[\"FL\",\"1\",\"IsocenterToBlockTrayDistance\"],\"00F8\":[\"CS\",\"1\",\"BlockType\"],\"00F9\":[\"LO\",\"1\",\"AccessoryCode\"],\"00FA\":[\"CS\",\"1\",\"BlockDivergence\"],\"00FB\":[\"CS\",\"1\",\"BlockMountingPosition\"],\"00FC\":[\"IS\",\"1\",\"BlockNumber\"],\"00FE\":[\"LO\",\"1\",\"BlockName\"],\"0100\":[\"DS\",\"1\",\"BlockThickness\"],\"0102\":[\"DS\",\"1\",\"BlockTransmission\"],\"0104\":[\"IS\",\"1\",\"BlockNumberOfPoints\"],\"0106\":[\"DS\",\"2-2n\",\"BlockData\"],\"0107\":[\"SQ\",\"1\",\"ApplicatorSequence\"],\"0108\":[\"SH\",\"1\",\"ApplicatorID\"],\"0109\":[\"CS\",\"1\",\"ApplicatorType\"],\"010A\":[\"LO\",\"1\",\"ApplicatorDescription\"],\"010C\":[\"DS\",\"1\",\"CumulativeDoseReferenceCoefficient\"],\"010E\":[\"DS\",\"1\",\"FinalCumulativeMetersetWeight\"],\"0110\":[\"IS\",\"1\",\"NumberOfControlPoints\"],\"0111\":[\"SQ\",\"1\",\"ControlPointSequence\"],\"0112\":[\"IS\",\"1\",\"ControlPointIndex\"],\"0114\":[\"DS\",\"1\",\"NominalBeamEnergy\"],\"0115\":[\"DS\",\"1\",\"DoseRateSet\"],\"0116\":[\"SQ\",\"1\",\"WedgePositionSequence\"],\"0118\":[\"CS\",\"1\",\"WedgePosition\"],\"011A\":[\"SQ\",\"1\",\"BeamLimitingDevicePositionSequence\"],\"011C\":[\"DS\",\"2-2n\",\"LeafJawPositions\"],\"011E\":[\"DS\",\"1\",\"GantryAngle\"],\"011F\":[\"CS\",\"1\",\"GantryRotationDirection\"],\"0120\":[\"DS\",\"1\",\"BeamLimitingDeviceAngle\"],\"0121\":[\"CS\",\"1\",\"BeamLimitingDeviceRotationDirection\"],\"0122\":[\"DS\",\"1\",\"PatientSupportAngle\"],\"0123\":[\"CS\",\"1\",\"PatientSupportRotationDirection\"],\"0124\":[\"DS\",\"1\",\"TableTopEccentricAxisDistance\"],\"0125\":[\"DS\",\"1\",\"TableTopEccentricAngle\"],\"0126\":[\"CS\",\"1\",\"TableTopEccentricRotationDirection\"],\"0128\":[\"DS\",\"1\",\"TableTopVerticalPosition\"],\"0129\":[\"DS\",\"1\",\"TableTopLongitudinalPosition\"],\"012A\":[\"DS\",\"1\",\"TableTopLateralPosition\"],\"012C\":[\"DS\",\"3\",\"IsocenterPosition\"],\"012E\":[\"DS\",\"3\",\"SurfaceEntryPoint\"],\"0130\":[\"DS\",\"1\",\"SourceToSurfaceDistance\"],\"0131\":[\"FL\",\"1\",\"AverageBeamDosePointSourceToExternalContourDistance\"],\"0132\":[\"FL\",\"1\",\"SourceToExternalContourDistance\"],\"0133\":[\"FL\",\"3\",\"ExternalContourEntryPoint\"],\"0134\":[\"DS\",\"1\",\"CumulativeMetersetWeight\"],\"0140\":[\"FL\",\"1\",\"TableTopPitchAngle\"],\"0142\":[\"CS\",\"1\",\"TableTopPitchRotationDirection\"],\"0144\":[\"FL\",\"1\",\"TableTopRollAngle\"],\"0146\":[\"CS\",\"1\",\"TableTopRollRotationDirection\"],\"0148\":[\"FL\",\"1\",\"HeadFixationAngle\"],\"014A\":[\"FL\",\"1\",\"GantryPitchAngle\"],\"014C\":[\"CS\",\"1\",\"GantryPitchRotationDirection\"],\"014E\":[\"FL\",\"1\",\"GantryPitchAngleTolerance\"],\"0150\":[\"CS\",\"1\",\"FixationEye\"],\"0151\":[\"DS\",\"1\",\"ChairHeadFramePosition\"],\"0152\":[\"DS\",\"1\",\"HeadFixationAngleTolerance\"],\"0153\":[\"DS\",\"1\",\"ChairHeadFramePositionTolerance\"],\"0154\":[\"DS\",\"1\",\"FixationLightAzimuthalAngleTolerance\"],\"0155\":[\"DS\",\"1\",\"FixationLightPolarAngleTolerance\"],\"0180\":[\"SQ\",\"1\",\"PatientSetupSequence\"],\"0182\":[\"IS\",\"1\",\"PatientSetupNumber\"],\"0183\":[\"LO\",\"1\",\"PatientSetupLabel\"],\"0184\":[\"LO\",\"1\",\"PatientAdditionalPosition\"],\"0190\":[\"SQ\",\"1\",\"FixationDeviceSequence\"],\"0192\":[\"CS\",\"1\",\"FixationDeviceType\"],\"0194\":[\"SH\",\"1\",\"FixationDeviceLabel\"],\"0196\":[\"ST\",\"1\",\"FixationDeviceDescription\"],\"0198\":[\"SH\",\"1\",\"FixationDevicePosition\"],\"0199\":[\"FL\",\"1\",\"FixationDevicePitchAngle\"],\"019A\":[\"FL\",\"1\",\"FixationDeviceRollAngle\"],\"01A0\":[\"SQ\",\"1\",\"ShieldingDeviceSequence\"],\"01A2\":[\"CS\",\"1\",\"ShieldingDeviceType\"],\"01A4\":[\"SH\",\"1\",\"ShieldingDeviceLabel\"],\"01A6\":[\"ST\",\"1\",\"ShieldingDeviceDescription\"],\"01A8\":[\"SH\",\"1\",\"ShieldingDevicePosition\"],\"01B0\":[\"CS\",\"1\",\"SetupTechnique\"],\"01B2\":[\"ST\",\"1\",\"SetupTechniqueDescription\"],\"01B4\":[\"SQ\",\"1\",\"SetupDeviceSequence\"],\"01B6\":[\"CS\",\"1\",\"SetupDeviceType\"],\"01B8\":[\"SH\",\"1\",\"SetupDeviceLabel\"],\"01BA\":[\"ST\",\"1\",\"SetupDeviceDescription\"],\"01BC\":[\"DS\",\"1\",\"SetupDeviceParameter\"],\"01D0\":[\"ST\",\"1\",\"SetupReferenceDescription\"],\"01D2\":[\"DS\",\"1\",\"TableTopVerticalSetupDisplacement\"],\"01D4\":[\"DS\",\"1\",\"TableTopLongitudinalSetupDisplacement\"],\"01D6\":[\"DS\",\"1\",\"TableTopLateralSetupDisplacement\"],\"0200\":[\"CS\",\"1\",\"BrachyTreatmentTechnique\"],\"0202\":[\"CS\",\"1\",\"BrachyTreatmentType\"],\"0206\":[\"SQ\",\"1\",\"TreatmentMachineSequence\"],\"0210\":[\"SQ\",\"1\",\"SourceSequence\"],\"0212\":[\"IS\",\"1\",\"SourceNumber\"],\"0214\":[\"CS\",\"1\",\"SourceType\"],\"0216\":[\"LO\",\"1\",\"SourceManufacturer\"],\"0218\":[\"DS\",\"1\",\"ActiveSourceDiameter\"],\"021A\":[\"DS\",\"1\",\"ActiveSourceLength\"],\"021B\":[\"SH\",\"1\",\"SourceModelID\"],\"021C\":[\"LO\",\"1\",\"SourceDescription\"],\"0222\":[\"DS\",\"1\",\"SourceEncapsulationNominalThickness\"],\"0224\":[\"DS\",\"1\",\"SourceEncapsulationNominalTransmission\"],\"0226\":[\"LO\",\"1\",\"SourceIsotopeName\"],\"0228\":[\"DS\",\"1\",\"SourceIsotopeHalfLife\"],\"0229\":[\"CS\",\"1\",\"SourceStrengthUnits\"],\"022A\":[\"DS\",\"1\",\"ReferenceAirKermaRate\"],\"022B\":[\"DS\",\"1\",\"SourceStrength\"],\"022C\":[\"DA\",\"1\",\"SourceStrengthReferenceDate\"],\"022E\":[\"TM\",\"1\",\"SourceStrengthReferenceTime\"],\"0230\":[\"SQ\",\"1\",\"ApplicationSetupSequence\"],\"0232\":[\"CS\",\"1\",\"ApplicationSetupType\"],\"0234\":[\"IS\",\"1\",\"ApplicationSetupNumber\"],\"0236\":[\"LO\",\"1\",\"ApplicationSetupName\"],\"0238\":[\"LO\",\"1\",\"ApplicationSetupManufacturer\"],\"0240\":[\"IS\",\"1\",\"TemplateNumber\"],\"0242\":[\"SH\",\"1\",\"TemplateType\"],\"0244\":[\"LO\",\"1\",\"TemplateName\"],\"0250\":[\"DS\",\"1\",\"TotalReferenceAirKerma\"],\"0260\":[\"SQ\",\"1\",\"BrachyAccessoryDeviceSequence\"],\"0262\":[\"IS\",\"1\",\"BrachyAccessoryDeviceNumber\"],\"0263\":[\"SH\",\"1\",\"BrachyAccessoryDeviceID\"],\"0264\":[\"CS\",\"1\",\"BrachyAccessoryDeviceType\"],\"0266\":[\"LO\",\"1\",\"BrachyAccessoryDeviceName\"],\"026A\":[\"DS\",\"1\",\"BrachyAccessoryDeviceNominalThickness\"],\"026C\":[\"DS\",\"1\",\"BrachyAccessoryDeviceNominalTransmission\"],\"0271\":[\"DS\",\"1\",\"ChannelEffectiveLength\"],\"0272\":[\"DS\",\"1\",\"ChannelInnerLength\"],\"0273\":[\"SH\",\"1\",\"AfterloaderChannelID\"],\"0274\":[\"DS\",\"1\",\"SourceApplicatorTipLength\"],\"0280\":[\"SQ\",\"1\",\"ChannelSequence\"],\"0282\":[\"IS\",\"1\",\"ChannelNumber\"],\"0284\":[\"DS\",\"1\",\"ChannelLength\"],\"0286\":[\"DS\",\"1\",\"ChannelTotalTime\"],\"0288\":[\"CS\",\"1\",\"SourceMovementType\"],\"028A\":[\"IS\",\"1\",\"NumberOfPulses\"],\"028C\":[\"DS\",\"1\",\"PulseRepetitionInterval\"],\"0290\":[\"IS\",\"1\",\"SourceApplicatorNumber\"],\"0291\":[\"SH\",\"1\",\"SourceApplicatorID\"],\"0292\":[\"CS\",\"1\",\"SourceApplicatorType\"],\"0294\":[\"LO\",\"1\",\"SourceApplicatorName\"],\"0296\":[\"DS\",\"1\",\"SourceApplicatorLength\"],\"0298\":[\"LO\",\"1\",\"SourceApplicatorManufacturer\"],\"029C\":[\"DS\",\"1\",\"SourceApplicatorWallNominalThickness\"],\"029E\":[\"DS\",\"1\",\"SourceApplicatorWallNominalTransmission\"],\"02A0\":[\"DS\",\"1\",\"SourceApplicatorStepSize\"],\"02A1\":[\"IS\",\"1\",\"ApplicatorShapeReferencedROINumber\"],\"02A2\":[\"IS\",\"1\",\"TransferTubeNumber\"],\"02A4\":[\"DS\",\"1\",\"TransferTubeLength\"],\"02B0\":[\"SQ\",\"1\",\"ChannelShieldSequence\"],\"02B2\":[\"IS\",\"1\",\"ChannelShieldNumber\"],\"02B3\":[\"SH\",\"1\",\"ChannelShieldID\"],\"02B4\":[\"LO\",\"1\",\"ChannelShieldName\"],\"02B8\":[\"DS\",\"1\",\"ChannelShieldNominalThickness\"],\"02BA\":[\"DS\",\"1\",\"ChannelShieldNominalTransmission\"],\"02C8\":[\"DS\",\"1\",\"FinalCumulativeTimeWeight\"],\"02D0\":[\"SQ\",\"1\",\"BrachyControlPointSequence\"],\"02D2\":[\"DS\",\"1\",\"ControlPointRelativePosition\"],\"02D4\":[\"DS\",\"3\",\"ControlPoint3DPosition\"],\"02D6\":[\"DS\",\"1\",\"CumulativeTimeWeight\"],\"02E0\":[\"CS\",\"1\",\"CompensatorDivergence\"],\"02E1\":[\"CS\",\"1\",\"CompensatorMountingPosition\"],\"02E2\":[\"DS\",\"1-n\",\"SourceToCompensatorDistance\"],\"02E3\":[\"FL\",\"1\",\"TotalCompensatorTrayWaterEquivalentThickness\"],\"02E4\":[\"FL\",\"1\",\"IsocenterToCompensatorTrayDistance\"],\"02E5\":[\"FL\",\"1\",\"CompensatorColumnOffset\"],\"02E6\":[\"FL\",\"1-n\",\"IsocenterToCompensatorDistances\"],\"02E7\":[\"FL\",\"1\",\"CompensatorRelativeStoppingPowerRatio\"],\"02E8\":[\"FL\",\"1\",\"CompensatorMillingToolDiameter\"],\"02EA\":[\"SQ\",\"1\",\"IonRangeCompensatorSequence\"],\"02EB\":[\"LT\",\"1\",\"CompensatorDescription\"],\"0302\":[\"IS\",\"1\",\"RadiationMassNumber\"],\"0304\":[\"IS\",\"1\",\"RadiationAtomicNumber\"],\"0306\":[\"SS\",\"1\",\"RadiationChargeState\"],\"0308\":[\"CS\",\"1\",\"ScanMode\"],\"0309\":[\"CS\",\"1\",\"ModulatedScanModeType\"],\"030A\":[\"FL\",\"2\",\"VirtualSourceAxisDistances\"],\"030C\":[\"SQ\",\"1\",\"SnoutSequence\"],\"030D\":[\"FL\",\"1\",\"SnoutPosition\"],\"030F\":[\"SH\",\"1\",\"SnoutID\"],\"0312\":[\"IS\",\"1\",\"NumberOfRangeShifters\"],\"0314\":[\"SQ\",\"1\",\"RangeShifterSequence\"],\"0316\":[\"IS\",\"1\",\"RangeShifterNumber\"],\"0318\":[\"SH\",\"1\",\"RangeShifterID\"],\"0320\":[\"CS\",\"1\",\"RangeShifterType\"],\"0322\":[\"LO\",\"1\",\"RangeShifterDescription\"],\"0330\":[\"IS\",\"1\",\"NumberOfLateralSpreadingDevices\"],\"0332\":[\"SQ\",\"1\",\"LateralSpreadingDeviceSequence\"],\"0334\":[\"IS\",\"1\",\"LateralSpreadingDeviceNumber\"],\"0336\":[\"SH\",\"1\",\"LateralSpreadingDeviceID\"],\"0338\":[\"CS\",\"1\",\"LateralSpreadingDeviceType\"],\"033A\":[\"LO\",\"1\",\"LateralSpreadingDeviceDescription\"],\"033C\":[\"FL\",\"1\",\"LateralSpreadingDeviceWaterEquivalentThickness\"],\"0340\":[\"IS\",\"1\",\"NumberOfRangeModulators\"],\"0342\":[\"SQ\",\"1\",\"RangeModulatorSequence\"],\"0344\":[\"IS\",\"1\",\"RangeModulatorNumber\"],\"0346\":[\"SH\",\"1\",\"RangeModulatorID\"],\"0348\":[\"CS\",\"1\",\"RangeModulatorType\"],\"034A\":[\"LO\",\"1\",\"RangeModulatorDescription\"],\"034C\":[\"SH\",\"1\",\"BeamCurrentModulationID\"],\"0350\":[\"CS\",\"1\",\"PatientSupportType\"],\"0352\":[\"SH\",\"1\",\"PatientSupportID\"],\"0354\":[\"LO\",\"1\",\"PatientSupportAccessoryCode\"],\"0355\":[\"LO\",\"1\",\"TrayAccessoryCode\"],\"0356\":[\"FL\",\"1\",\"FixationLightAzimuthalAngle\"],\"0358\":[\"FL\",\"1\",\"FixationLightPolarAngle\"],\"035A\":[\"FL\",\"1\",\"MetersetRate\"],\"0360\":[\"SQ\",\"1\",\"RangeShifterSettingsSequence\"],\"0362\":[\"LO\",\"1\",\"RangeShifterSetting\"],\"0364\":[\"FL\",\"1\",\"IsocenterToRangeShifterDistance\"],\"0366\":[\"FL\",\"1\",\"RangeShifterWaterEquivalentThickness\"],\"0370\":[\"SQ\",\"1\",\"LateralSpreadingDeviceSettingsSequence\"],\"0372\":[\"LO\",\"1\",\"LateralSpreadingDeviceSetting\"],\"0374\":[\"FL\",\"1\",\"IsocenterToLateralSpreadingDeviceDistance\"],\"0380\":[\"SQ\",\"1\",\"RangeModulatorSettingsSequence\"],\"0382\":[\"FL\",\"1\",\"RangeModulatorGatingStartValue\"],\"0384\":[\"FL\",\"1\",\"RangeModulatorGatingStopValue\"],\"0386\":[\"FL\",\"1\",\"RangeModulatorGatingStartWaterEquivalentThickness\"],\"0388\":[\"FL\",\"1\",\"RangeModulatorGatingStopWaterEquivalentThickness\"],\"038A\":[\"FL\",\"1\",\"IsocenterToRangeModulatorDistance\"],\"038F\":[\"FL\",\"1-n\",\"ScanSpotTimeOffset\"],\"0390\":[\"SH\",\"1\",\"ScanSpotTuneID\"],\"0391\":[\"IS\",\"1-n\",\"ScanSpotPrescribedIndices\"],\"0392\":[\"IS\",\"1\",\"NumberOfScanSpotPositions\"],\"0393\":[\"CS\",\"1\",\"ScanSpotReordered\"],\"0394\":[\"FL\",\"1-n\",\"ScanSpotPositionMap\"],\"0395\":[\"CS\",\"1\",\"ScanSpotReorderingAllowed\"],\"0396\":[\"FL\",\"1-n\",\"ScanSpotMetersetWeights\"],\"0398\":[\"FL\",\"2\",\"ScanningSpotSize\"],\"0399\":[\"FL\",\"2-2n\",\"ScanSpotSizesDelivered\"],\"039A\":[\"IS\",\"1\",\"NumberOfPaintings\"],\"03A0\":[\"SQ\",\"1\",\"IonToleranceTableSequence\"],\"03A2\":[\"SQ\",\"1\",\"IonBeamSequence\"],\"03A4\":[\"SQ\",\"1\",\"IonBeamLimitingDeviceSequence\"],\"03A6\":[\"SQ\",\"1\",\"IonBlockSequence\"],\"03A8\":[\"SQ\",\"1\",\"IonControlPointSequence\"],\"03AA\":[\"SQ\",\"1\",\"IonWedgeSequence\"],\"03AC\":[\"SQ\",\"1\",\"IonWedgePositionSequence\"],\"0401\":[\"SQ\",\"1\",\"ReferencedSetupImageSequence\"],\"0402\":[\"ST\",\"1\",\"SetupImageComment\"],\"0410\":[\"SQ\",\"1\",\"MotionSynchronizationSequence\"],\"0412\":[\"FL\",\"3\",\"ControlPointOrientation\"],\"0420\":[\"SQ\",\"1\",\"GeneralAccessorySequence\"],\"0421\":[\"SH\",\"1\",\"GeneralAccessoryID\"],\"0422\":[\"ST\",\"1\",\"GeneralAccessoryDescription\"],\"0423\":[\"CS\",\"1\",\"GeneralAccessoryType\"],\"0424\":[\"IS\",\"1\",\"GeneralAccessoryNumber\"],\"0425\":[\"FL\",\"1\",\"SourceToGeneralAccessoryDistance\"],\"0426\":[\"DS\",\"1\",\"IsocenterToGeneralAccessoryDistance\"],\"0431\":[\"SQ\",\"1\",\"ApplicatorGeometrySequence\"],\"0432\":[\"CS\",\"1\",\"ApplicatorApertureShape\"],\"0433\":[\"FL\",\"1\",\"ApplicatorOpening\"],\"0434\":[\"FL\",\"1\",\"ApplicatorOpeningX\"],\"0435\":[\"FL\",\"1\",\"ApplicatorOpeningY\"],\"0436\":[\"FL\",\"1\",\"SourceToApplicatorMountingPositionDistance\"],\"0440\":[\"IS\",\"1\",\"NumberOfBlockSlabItems\"],\"0441\":[\"SQ\",\"1\",\"BlockSlabSequence\"],\"0442\":[\"DS\",\"1\",\"BlockSlabThickness\"],\"0443\":[\"US\",\"1\",\"BlockSlabNumber\"],\"0450\":[\"SQ\",\"1\",\"DeviceMotionControlSequence\"],\"0451\":[\"CS\",\"1\",\"DeviceMotionExecutionMode\"],\"0452\":[\"CS\",\"1\",\"DeviceMotionObservationMode\"],\"0453\":[\"SQ\",\"1\",\"DeviceMotionParameterCodeSequence\"],\"0501\":[\"FL\",\"1\",\"DistalDepthFraction\"],\"0502\":[\"FL\",\"1\",\"DistalDepth\"],\"0503\":[\"FL\",\"2\",\"NominalRangeModulationFractions\"],\"0504\":[\"FL\",\"2\",\"NominalRangeModulatedRegionDepths\"],\"0505\":[\"SQ\",\"1\",\"DepthDoseParametersSequence\"],\"0506\":[\"SQ\",\"1\",\"DeliveredDepthDoseParametersSequence\"],\"0507\":[\"FL\",\"1\",\"DeliveredDistalDepthFraction\"],\"0508\":[\"FL\",\"1\",\"DeliveredDistalDepth\"],\"0509\":[\"FL\",\"2\",\"DeliveredNominalRangeModulationFractions\"],\"0510\":[\"FL\",\"2\",\"DeliveredNominalRangeModulatedRegionDepths\"],\"0511\":[\"CS\",\"1\",\"DeliveredReferenceDoseDefinition\"],\"0512\":[\"CS\",\"1\",\"ReferenceDoseDefinition\"],\"0600\":[\"US\",\"1\",\"RTControlPointIndex\"],\"0601\":[\"US\",\"1\",\"RadiationGenerationModeIndex\"],\"0602\":[\"US\",\"1\",\"ReferencedDefinedDeviceIndex\"],\"0603\":[\"US\",\"1\",\"RadiationDoseIdentificationIndex\"],\"0604\":[\"US\",\"1\",\"NumberOfRTControlPoints\"],\"0605\":[\"US\",\"1\",\"ReferencedRadiationGenerationModeIndex\"],\"0606\":[\"US\",\"1\",\"TreatmentPositionIndex\"],\"0607\":[\"US\",\"1\",\"ReferencedDeviceIndex\"],\"0608\":[\"LO\",\"1\",\"TreatmentPositionGroupLabel\"],\"0609\":[\"UI\",\"1\",\"TreatmentPositionGroupUID\"],\"060A\":[\"SQ\",\"1\",\"TreatmentPositionGroupSequence\"],\"060B\":[\"US\",\"1\",\"ReferencedTreatmentPositionIndex\"],\"060C\":[\"US\",\"1\",\"ReferencedRadiationDoseIdentificationIndex\"],\"060D\":[\"FD\",\"1\",\"RTAccessoryHolderWaterEquivalentThickness\"],\"060E\":[\"US\",\"1\",\"ReferencedRTAccessoryHolderDeviceIndex\"],\"060F\":[\"CS\",\"1\",\"RTAccessoryHolderSlotExistenceFlag\"],\"0610\":[\"SQ\",\"1\",\"RTAccessoryHolderSlotSequence\"],\"0611\":[\"LO\",\"1\",\"RTAccessoryHolderSlotID\"],\"0612\":[\"FD\",\"1\",\"RTAccessoryHolderSlotDistance\"],\"0613\":[\"FD\",\"1\",\"RTAccessorySlotDistance\"],\"0614\":[\"SQ\",\"1\",\"RTAccessoryHolderDefinitionSequence\"],\"0615\":[\"LO\",\"1\",\"RTAccessoryDeviceSlotID\"],\"0616\":[\"SQ\",\"1\",\"RTRadiationSequence\"],\"0617\":[\"SQ\",\"1\",\"RadiationDoseSequence\"],\"0618\":[\"SQ\",\"1\",\"RadiationDoseIdentificationSequence\"],\"0619\":[\"LO\",\"1\",\"RadiationDoseIdentificationLabel\"],\"061A\":[\"CS\",\"1\",\"ReferenceDoseType\"],\"061B\":[\"CS\",\"1\",\"PrimaryDoseValueIndicator\"],\"061C\":[\"SQ\",\"1\",\"DoseValuesSequence\"],\"061D\":[\"CS\",\"1-n\",\"DoseValuePurpose\"],\"061E\":[\"FD\",\"3\",\"ReferenceDosePointCoordinates\"],\"061F\":[\"SQ\",\"1\",\"RadiationDoseValuesParametersSequence\"],\"0620\":[\"SQ\",\"1\",\"MetersetToDoseMappingSequence\"],\"0621\":[\"SQ\",\"1\",\"ExpectedInVivoMeasurementValuesSequence\"],\"0622\":[\"US\",\"1\",\"ExpectedInVivoMeasurementValueIndex\"],\"0623\":[\"LO\",\"1\",\"RadiationDoseInVivoMeasurementLabel\"],\"0624\":[\"FD\",\"2\",\"RadiationDoseCentralAxisDisplacement\"],\"0625\":[\"FD\",\"1\",\"RadiationDoseValue\"],\"0626\":[\"FD\",\"1\",\"RadiationDoseSourceToSkinDistance\"],\"0627\":[\"FD\",\"3\",\"RadiationDoseMeasurementPointCoordinates\"],\"0628\":[\"FD\",\"1\",\"RadiationDoseSourceToExternalContourDistance\"],\"0629\":[\"SQ\",\"1\",\"RTToleranceSetSequence\"],\"062A\":[\"LO\",\"1\",\"RTToleranceSetLabel\"],\"062B\":[\"SQ\",\"1\",\"AttributeToleranceValuesSequence\"],\"062C\":[\"FD\",\"1\",\"ToleranceValue\"],\"062D\":[\"SQ\",\"1\",\"PatientSupportPositionToleranceSequence\"],\"062E\":[\"FD\",\"1\",\"TreatmentTimeLimit\"],\"062F\":[\"SQ\",\"1\",\"CArmPhotonElectronControlPointSequence\"],\"0630\":[\"SQ\",\"1\",\"ReferencedRTRadiationSequence\"],\"0631\":[\"SQ\",\"1\",\"ReferencedRTInstanceSequence\"],\"0632\":[\"SQ\",\"1\",\"ReferencedRTPatientSetupSequence\"],\"0634\":[\"FD\",\"1\",\"SourceToPatientSurfaceDistance\"],\"0635\":[\"SQ\",\"1\",\"TreatmentMachineSpecialModeCodeSequence\"],\"0636\":[\"US\",\"1\",\"IntendedNumberOfFractions\"],\"0637\":[\"CS\",\"1\",\"RTRadiationSetIntent\"],\"0638\":[\"CS\",\"1\",\"RTRadiationPhysicalAndGeometricContentDetailFlag\"],\"0639\":[\"CS\",\"1\",\"RTRecordFlag\"],\"063A\":[\"SQ\",\"1\",\"TreatmentDeviceIdentificationSequence\"],\"063B\":[\"SQ\",\"1\",\"ReferencedRTPhysicianIntentSequence\"],\"063C\":[\"FD\",\"1\",\"CumulativeMeterset\"],\"063D\":[\"FD\",\"1\",\"DeliveryRate\"],\"063E\":[\"SQ\",\"1\",\"DeliveryRateUnitSequence\"],\"063F\":[\"SQ\",\"1\",\"TreatmentPositionSequence\"],\"0640\":[\"FD\",\"1\",\"RadiationSourceAxisDistance\"],\"0641\":[\"US\",\"1\",\"NumberOfRTBeamLimitingDevices\"],\"0642\":[\"FD\",\"1\",\"RTBeamLimitingDeviceProximalDistance\"],\"0643\":[\"FD\",\"1\",\"RTBeamLimitingDeviceDistalDistance\"],\"0644\":[\"SQ\",\"1\",\"ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence\"],\"0645\":[\"FD\",\"1\",\"BeamModifierOrientationAngle\"],\"0646\":[\"SQ\",\"1\",\"FixedRTBeamDelimiterDeviceSequence\"],\"0647\":[\"SQ\",\"1\",\"ParallelRTBeamDelimiterDeviceSequence\"],\"0648\":[\"US\",\"1\",\"NumberOfParallelRTBeamDelimiters\"],\"0649\":[\"FD\",\"2-n\",\"ParallelRTBeamDelimiterBoundaries\"],\"064A\":[\"FD\",\"2-n\",\"ParallelRTBeamDelimiterPositions\"],\"064B\":[\"FD\",\"2\",\"RTBeamLimitingDeviceOffset\"],\"064C\":[\"SQ\",\"1\",\"RTBeamDelimiterGeometrySequence\"],\"064D\":[\"SQ\",\"1\",\"RTBeamLimitingDeviceDefinitionSequence\"],\"064E\":[\"CS\",\"1\",\"ParallelRTBeamDelimiterOpeningMode\"],\"064F\":[\"CS\",\"1-n\",\"ParallelRTBeamDelimiterLeafMountingSide\"],\"0650\":[\"UI\",\"1\",\"PatientSetupUID\"],\"0651\":[\"SQ\",\"1\",\"WedgeDefinitionSequence\"],\"0652\":[\"FD\",\"1\",\"RadiationBeamWedgeAngle\"],\"0653\":[\"FD\",\"1\",\"RadiationBeamWedgeThinEdgeDistance\"],\"0654\":[\"FD\",\"1\",\"RadiationBeamEffectiveWedgeAngle\"],\"0655\":[\"US\",\"1\",\"NumberOfWedgePositions\"],\"0656\":[\"SQ\",\"1\",\"RTBeamLimitingDeviceOpeningSequence\"],\"0657\":[\"US\",\"1\",\"NumberOfRTBeamLimitingDeviceOpenings\"],\"0658\":[\"SQ\",\"1\",\"RadiationDosimeterUnitSequence\"],\"0659\":[\"SQ\",\"1\",\"RTDeviceDistanceReferenceLocationCodeSequence\"],\"065A\":[\"SQ\",\"1\",\"RadiationDeviceConfigurationAndCommissioningKeySequence\"],\"065B\":[\"SQ\",\"1\",\"PatientSupportPositionParameterSequence\"],\"065C\":[\"CS\",\"1\",\"PatientSupportPositionSpecificationMethod\"],\"065D\":[\"SQ\",\"1\",\"PatientSupportPositionDeviceParameterSequence\"],\"065E\":[\"US\",\"1\",\"DeviceOrderIndex\"],\"065F\":[\"US\",\"1\",\"PatientSupportPositionParameterOrderIndex\"],\"0660\":[\"SQ\",\"1\",\"PatientSupportPositionDeviceToleranceSequence\"],\"0661\":[\"US\",\"1\",\"PatientSupportPositionToleranceOrderIndex\"],\"0662\":[\"SQ\",\"1\",\"CompensatorDefinitionSequence\"],\"0663\":[\"CS\",\"1\",\"CompensatorMapOrientation\"],\"0664\":[\"OF\",\"1\",\"CompensatorProximalThicknessMap\"],\"0665\":[\"OF\",\"1\",\"CompensatorDistalThicknessMap\"],\"0666\":[\"FD\",\"1\",\"CompensatorBasePlaneOffset\"],\"0667\":[\"SQ\",\"1\",\"CompensatorShapeFabricationCodeSequence\"],\"0668\":[\"SQ\",\"1\",\"CompensatorShapeSequence\"],\"0669\":[\"FD\",\"1\",\"RadiationBeamCompensatorMillingToolDiameter\"],\"066A\":[\"SQ\",\"1\",\"BlockDefinitionSequence\"],\"066B\":[\"OF\",\"1\",\"BlockEdgeData\"],\"066C\":[\"CS\",\"1\",\"BlockOrientation\"],\"066D\":[\"FD\",\"1\",\"RadiationBeamBlockThickness\"],\"066E\":[\"FD\",\"1\",\"RadiationBeamBlockSlabThickness\"],\"066F\":[\"SQ\",\"1\",\"BlockEdgeDataSequence\"],\"0670\":[\"US\",\"1\",\"NumberOfRTAccessoryHolders\"],\"0671\":[\"SQ\",\"1\",\"GeneralAccessoryDefinitionSequence\"],\"0672\":[\"US\",\"1\",\"NumberOfGeneralAccessories\"],\"0673\":[\"SQ\",\"1\",\"BolusDefinitionSequence\"],\"0674\":[\"US\",\"1\",\"NumberOfBoluses\"],\"0675\":[\"UI\",\"1\",\"EquipmentFrameOfReferenceUID\"],\"0676\":[\"ST\",\"1\",\"EquipmentFrameOfReferenceDescription\"],\"0677\":[\"SQ\",\"1\",\"EquipmentReferencePointCoordinatesSequence\"],\"0678\":[\"SQ\",\"1\",\"EquipmentReferencePointCodeSequence\"],\"0679\":[\"FD\",\"1\",\"RTBeamLimitingDeviceAngle\"],\"067A\":[\"FD\",\"1\",\"SourceRollAngle\"],\"067B\":[\"SQ\",\"1\",\"RadiationGenerationModeSequence\"],\"067C\":[\"SH\",\"1\",\"RadiationGenerationModeLabel\"],\"067D\":[\"ST\",\"1\",\"RadiationGenerationModeDescription\"],\"067E\":[\"SQ\",\"1\",\"RadiationGenerationModeMachineCodeSequence\"],\"067F\":[\"SQ\",\"1\",\"RadiationTypeCodeSequence\"],\"0680\":[\"DS\",\"1\",\"NominalEnergy\"],\"0681\":[\"DS\",\"1\",\"MinimumNominalEnergy\"],\"0682\":[\"DS\",\"1\",\"MaximumNominalEnergy\"],\"0683\":[\"SQ\",\"1\",\"RadiationFluenceModifierCodeSequence\"],\"0684\":[\"SQ\",\"1\",\"EnergyUnitCodeSequence\"],\"0685\":[\"US\",\"1\",\"NumberOfRadiationGenerationModes\"],\"0686\":[\"SQ\",\"1\",\"PatientSupportDevicesSequence\"],\"0687\":[\"US\",\"1\",\"NumberOfPatientSupportDevices\"],\"0688\":[\"FD\",\"1\",\"RTBeamModifierDefinitionDistance\"],\"0689\":[\"SQ\",\"1\",\"BeamAreaLimitSequence\"],\"068A\":[\"SQ\",\"1\",\"ReferencedRTPrescriptionSequence\"],\"0700\":[\"UI\",\"1\",\"TreatmentSessionUID\"],\"0701\":[\"CS\",\"1\",\"RTRadiationUsage\"],\"0702\":[\"SQ\",\"1\",\"ReferencedRTRadiationSetSequence\"],\"0703\":[\"SQ\",\"1\",\"ReferencedRTRadiationRecordSequence\"],\"0704\":[\"US\",\"1\",\"RTRadiationSetDeliveryNumber\"],\"0705\":[\"US\",\"1\",\"ClinicalFractionNumber\"],\"0706\":[\"CS\",\"1\",\"RTTreatmentFractionCompletionStatus\"],\"0707\":[\"CS\",\"1\",\"RTRadiationSetUsage\"],\"0708\":[\"CS\",\"1\",\"TreatmentDeliveryContinuationFlag\"],\"0709\":[\"CS\",\"1\",\"TreatmentRecordContentOrigin\"],\"0714\":[\"CS\",\"1\",\"RTTreatmentTerminationStatus\"],\"0715\":[\"SQ\",\"1\",\"RTTreatmentTerminationReasonCodeSequence\"],\"0716\":[\"SQ\",\"1\",\"MachineSpecificTreatmentTerminationCodeSequence\"],\"0722\":[\"SQ\",\"1\",\"RTRadiationSalvageRecordControlPointSequence\"],\"0723\":[\"CS\",\"1\",\"StartingMetersetValueKnownFlag\"],\"0730\":[\"ST\",\"1\",\"TreatmentTerminationDescription\"],\"0731\":[\"SQ\",\"1\",\"TreatmentToleranceViolationSequence\"],\"0732\":[\"CS\",\"1\",\"TreatmentToleranceViolationCategory\"],\"0733\":[\"SQ\",\"1\",\"TreatmentToleranceViolationAttributeSequence\"],\"0734\":[\"ST\",\"1\",\"TreatmentToleranceViolationDescription\"],\"0735\":[\"ST\",\"1\",\"TreatmentToleranceViolationIdentification\"],\"0736\":[\"DT\",\"1\",\"TreatmentToleranceViolationDateTime\"],\"073A\":[\"DT\",\"1\",\"RecordedRTControlPointDateTime\"],\"073B\":[\"US\",\"1\",\"ReferencedRadiationRTControlPointIndex\"],\"073E\":[\"SQ\",\"1\",\"AlternateValueSequence\"],\"073F\":[\"SQ\",\"1\",\"ConfirmationSequence\"],\"0740\":[\"SQ\",\"1\",\"InterlockSequence\"],\"0741\":[\"DT\",\"1\",\"InterlockDateTime\"],\"0742\":[\"ST\",\"1\",\"InterlockDescription\"],\"0743\":[\"SQ\",\"1\",\"InterlockOriginatingDeviceSequence\"],\"0744\":[\"SQ\",\"1\",\"InterlockCodeSequence\"],\"0745\":[\"SQ\",\"1\",\"InterlockResolutionCodeSequence\"],\"0746\":[\"SQ\",\"1\",\"InterlockResolutionUserSequence\"],\"0760\":[\"DT\",\"1\",\"OverrideDateTime\"],\"0761\":[\"SQ\",\"1\",\"TreatmentToleranceViolationTypeCodeSequence\"],\"0762\":[\"SQ\",\"1\",\"TreatmentToleranceViolationCauseCodeSequence\"],\"0772\":[\"SQ\",\"1\",\"MeasuredMetersetToDoseMappingSequence\"],\"0773\":[\"US\",\"1\",\"ReferencedExpectedInVivoMeasurementValueIndex\"],\"0774\":[\"SQ\",\"1\",\"DoseMeasurementDeviceCodeSequence\"],\"0780\":[\"SQ\",\"1\",\"AdditionalParameterRecordingInstanceSequence\"],\"0782\":[\"US\",\"1\",\"\"],\"0783\":[\"ST\",\"1\",\"InterlockOriginDescription\"],\"0784\":[\"SQ\",\"1\",\"RTPatientPositionScopeSequence\"],\"0785\":[\"UI\",\"1\",\"ReferencedTreatmentPositionGroupUID\"],\"0786\":[\"US\",\"1\",\"RadiationOrderIndex\"],\"0787\":[\"SQ\",\"1\",\"OmittedRadiationSequence\"],\"0788\":[\"SQ\",\"1\",\"ReasonForOmissionCodeSequence\"],\"0789\":[\"SQ\",\"1\",\"RTDeliveryStartPatientPositionSequence\"],\"078A\":[\"SQ\",\"1\",\"RTTreatmentPreparationPatientPositionSequence\"],\"078B\":[\"SQ\",\"1\",\"ReferencedRTTreatmentPreparationSequence\"],\"078C\":[\"SQ\",\"1\",\"ReferencedPatientSetupPhotoSequence\"],\"078D\":[\"SQ\",\"1\",\"PatientTreatmentPreparationMethodCodeSequence\"],\"078E\":[\"LT\",\"1\",\"PatientTreatmentPreparationProcedureParameterDescription\"],\"078F\":[\"SQ\",\"1\",\"PatientTreatmentPreparationDeviceSequence\"],\"0790\":[\"SQ\",\"1\",\"PatientTreatmentPreparationProcedureSequence\"],\"0791\":[\"SQ\",\"1\",\"PatientTreatmentPreparationProcedureCodeSequence\"],\"0792\":[\"LT\",\"1\",\"PatientTreatmentPreparationMethodDescription\"],\"0793\":[\"SQ\",\"1\",\"PatientTreatmentPreparationProcedureParameterSequence\"],\"0794\":[\"LT\",\"1\",\"PatientSetupPhotoDescription\"],\"0795\":[\"US\",\"1\",\"PatientTreatmentPreparationProcedureIndex\"],\"0796\":[\"US\",\"1\",\"ReferencedPatientSetupProcedureIndex\"],\"0797\":[\"SQ\",\"1\",\"RTRadiationTaskSequence\"],\"0798\":[\"SQ\",\"1\",\"RTPatientPositionDisplacementSequence\"],\"0799\":[\"SQ\",\"1\",\"RTPatientPositionSequence\"],\"079A\":[\"LO\",\"1\",\"DisplacementReferenceLabel\"],\"079B\":[\"FD\",\"16\",\"DisplacementMatrix\"],\"079C\":[\"SQ\",\"1\",\"PatientSupportDisplacementSequence\"],\"079D\":[\"SQ\",\"1\",\"DisplacementReferenceLocationCodeSequence\"],\"079E\":[\"CS\",\"1\",\"RTRadiationSetDeliveryUsage\"]},\"300C\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"SQ\",\"1\",\"ReferencedRTPlanSequence\"],\"0004\":[\"SQ\",\"1\",\"ReferencedBeamSequence\"],\"0006\":[\"IS\",\"1\",\"ReferencedBeamNumber\"],\"0007\":[\"IS\",\"1\",\"ReferencedReferenceImageNumber\"],\"0008\":[\"DS\",\"1\",\"StartCumulativeMetersetWeight\"],\"0009\":[\"DS\",\"1\",\"EndCumulativeMetersetWeight\"],\"000A\":[\"SQ\",\"1\",\"ReferencedBrachyApplicationSetupSequence\"],\"000C\":[\"IS\",\"1\",\"ReferencedBrachyApplicationSetupNumber\"],\"000E\":[\"IS\",\"1\",\"ReferencedSourceNumber\"],\"0020\":[\"SQ\",\"1\",\"ReferencedFractionGroupSequence\"],\"0022\":[\"IS\",\"1\",\"ReferencedFractionGroupNumber\"],\"0040\":[\"SQ\",\"1\",\"ReferencedVerificationImageSequence\"],\"0042\":[\"SQ\",\"1\",\"ReferencedReferenceImageSequence\"],\"0050\":[\"SQ\",\"1\",\"ReferencedDoseReferenceSequence\"],\"0051\":[\"IS\",\"1\",\"ReferencedDoseReferenceNumber\"],\"0055\":[\"SQ\",\"1\",\"BrachyReferencedDoseReferenceSequence\"],\"0060\":[\"SQ\",\"1\",\"ReferencedStructureSetSequence\"],\"006A\":[\"IS\",\"1\",\"ReferencedPatientSetupNumber\"],\"0080\":[\"SQ\",\"1\",\"ReferencedDoseSequence\"],\"00A0\":[\"IS\",\"1\",\"ReferencedToleranceTableNumber\"],\"00B0\":[\"SQ\",\"1\",\"ReferencedBolusSequence\"],\"00C0\":[\"IS\",\"1\",\"ReferencedWedgeNumber\"],\"00D0\":[\"IS\",\"1\",\"ReferencedCompensatorNumber\"],\"00E0\":[\"IS\",\"1\",\"ReferencedBlockNumber\"],\"00F0\":[\"IS\",\"1\",\"ReferencedControlPointIndex\"],\"00F2\":[\"SQ\",\"1\",\"ReferencedControlPointSequence\"],\"00F4\":[\"IS\",\"1\",\"ReferencedStartControlPointIndex\"],\"00F6\":[\"IS\",\"1\",\"ReferencedStopControlPointIndex\"],\"0100\":[\"IS\",\"1\",\"ReferencedRangeShifterNumber\"],\"0102\":[\"IS\",\"1\",\"ReferencedLateralSpreadingDeviceNumber\"],\"0104\":[\"IS\",\"1\",\"ReferencedRangeModulatorNumber\"],\"0111\":[\"SQ\",\"1\",\"OmittedBeamTaskSequence\"],\"0112\":[\"CS\",\"1\",\"ReasonForOmission\"],\"0113\":[\"LO\",\"1\",\"ReasonForOmissionDescription\"],\"0114\":[\"SQ\",\"1\",\"PrescriptionOverviewSequence\"],\"0115\":[\"FL\",\"1\",\"TotalPrescriptionDose\"],\"0116\":[\"SQ\",\"1\",\"PlanOverviewSequence\"],\"0117\":[\"US\",\"1\",\"PlanOverviewIndex\"],\"0118\":[\"US\",\"1\",\"ReferencedPlanOverviewIndex\"],\"0119\":[\"US\",\"1\",\"NumberOfFractionsIncluded\"],\"0120\":[\"SQ\",\"1\",\"DoseCalibrationConditionsSequence\"],\"0121\":[\"FD\",\"1\",\"AbsorbedDoseToMetersetRatio\"],\"0122\":[\"FD\",\"2\",\"DelineatedRadiationFieldSize\"],\"0123\":[\"CS\",\"1\",\"DoseCalibrationConditionsVerifiedFlag\"],\"0124\":[\"FD\",\"1\",\"CalibrationReferencePointDepth\"],\"0125\":[\"SQ\",\"1\",\"GatingBeamHoldTransitionSequence\"],\"0126\":[\"CS\",\"1\",\"BeamHoldTransition\"],\"0127\":[\"DT\",\"1\",\"BeamHoldTransitionDateTime\"],\"0128\":[\"SQ\",\"1\",\"BeamHoldOriginatingDeviceSequence\"]},\"300E\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0002\":[\"CS\",\"1\",\"ApprovalStatus\"],\"0004\":[\"DA\",\"1\",\"ReviewDate\"],\"0005\":[\"TM\",\"1\",\"ReviewTime\"],\"0008\":[\"PN\",\"1\",\"ReviewerName\"]},3010:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"SQ\",\"1\",\"RadiobiologicalDoseEffectSequence\"],\"0002\":[\"CS\",\"1\",\"RadiobiologicalDoseEffectFlag\"],\"0003\":[\"SQ\",\"1\",\"EffectiveDoseCalculationMethodCategoryCodeSequence\"],\"0004\":[\"SQ\",\"1\",\"EffectiveDoseCalculationMethodCodeSequence\"],\"0005\":[\"LO\",\"1\",\"EffectiveDoseCalculationMethodDescription\"],\"0006\":[\"UI\",\"1\",\"ConceptualVolumeUID\"],\"0007\":[\"SQ\",\"1\",\"OriginatingSOPInstanceReferenceSequence\"],\"0008\":[\"SQ\",\"1\",\"ConceptualVolumeConstituentSequence\"],\"0009\":[\"SQ\",\"1\",\"EquivalentConceptualVolumeInstanceReferenceSequence\"],\"000A\":[\"SQ\",\"1\",\"EquivalentConceptualVolumesSequence\"],\"000B\":[\"UI\",\"1\",\"ReferencedConceptualVolumeUID\"],\"000C\":[\"UT\",\"1\",\"ConceptualVolumeCombinationExpression\"],\"000D\":[\"US\",\"1\",\"ConceptualVolumeConstituentIndex\"],\"000E\":[\"CS\",\"1\",\"ConceptualVolumeCombinationFlag\"],\"000F\":[\"ST\",\"1\",\"ConceptualVolumeCombinationDescription\"],\"0010\":[\"CS\",\"1\",\"ConceptualVolumeSegmentationDefinedFlag\"],\"0011\":[\"SQ\",\"1\",\"ConceptualVolumeSegmentationReferenceSequence\"],\"0012\":[\"SQ\",\"1\",\"ConceptualVolumeConstituentSegmentationReferenceSequence\"],\"0013\":[\"UI\",\"1\",\"ConstituentConceptualVolumeUID\"],\"0014\":[\"SQ\",\"1\",\"DerivationConceptualVolumeSequence\"],\"0015\":[\"UI\",\"1\",\"SourceConceptualVolumeUID\"],\"0016\":[\"SQ\",\"1\",\"ConceptualVolumeDerivationAlgorithmSequence\"],\"0017\":[\"ST\",\"1\",\"ConceptualVolumeDescription\"],\"0018\":[\"SQ\",\"1\",\"SourceConceptualVolumeSequence\"],\"0019\":[\"SQ\",\"1\",\"AuthorIdentificationSequence\"],\"001A\":[\"LO\",\"1\",\"ManufacturerModelVersion\"],\"001B\":[\"UC\",\"1\",\"DeviceAlternateIdentifier\"],\"001C\":[\"CS\",\"1\",\"DeviceAlternateIdentifierType\"],\"001D\":[\"LT\",\"1\",\"DeviceAlternateIdentifierFormat\"],\"001E\":[\"LO\",\"1\",\"SegmentationCreationTemplateLabel\"],\"001F\":[\"UI\",\"1\",\"SegmentationTemplateUID\"],\"0020\":[\"US\",\"1\",\"ReferencedSegmentReferenceIndex\"],\"0021\":[\"SQ\",\"1\",\"SegmentReferenceSequence\"],\"0022\":[\"US\",\"1\",\"SegmentReferenceIndex\"],\"0023\":[\"SQ\",\"1\",\"DirectSegmentReferenceSequence\"],\"0024\":[\"SQ\",\"1\",\"CombinationSegmentReferenceSequence\"],\"0025\":[\"SQ\",\"1\",\"ConceptualVolumeSequence\"],\"0026\":[\"SQ\",\"1\",\"SegmentedRTAccessoryDeviceSequence\"],\"0027\":[\"SQ\",\"1\",\"SegmentCharacteristicsSequence\"],\"0028\":[\"SQ\",\"1\",\"RelatedSegmentCharacteristicsSequence\"],\"0029\":[\"US\",\"1\",\"SegmentCharacteristicsPrecedence\"],\"002A\":[\"SQ\",\"1\",\"RTSegmentAnnotationSequence\"],\"002B\":[\"SQ\",\"1\",\"SegmentAnnotationCategoryCodeSequence\"],\"002C\":[\"SQ\",\"1\",\"SegmentAnnotationTypeCodeSequence\"],\"002D\":[\"LO\",\"1\",\"DeviceLabel\"],\"002E\":[\"SQ\",\"1\",\"DeviceTypeCodeSequence\"],\"002F\":[\"SQ\",\"1\",\"SegmentAnnotationTypeModifierCodeSequence\"],\"0030\":[\"SQ\",\"1\",\"PatientEquipmentRelationshipCodeSequence\"],\"0031\":[\"UI\",\"1\",\"ReferencedFiducialsUID\"],\"0032\":[\"SQ\",\"1\",\"PatientTreatmentOrientationSequence\"],\"0033\":[\"SH\",\"1\",\"UserContentLabel\"],\"0034\":[\"LO\",\"1\",\"UserContentLongLabel\"],\"0035\":[\"SH\",\"1\",\"EntityLabel\"],\"0036\":[\"LO\",\"1\",\"EntityName\"],\"0037\":[\"ST\",\"1\",\"EntityDescription\"],\"0038\":[\"LO\",\"1\",\"EntityLongLabel\"],\"0039\":[\"US\",\"1\",\"DeviceIndex\"],\"003A\":[\"US\",\"1\",\"RTTreatmentPhaseIndex\"],\"003B\":[\"UI\",\"1\",\"RTTreatmentPhaseUID\"],\"003C\":[\"US\",\"1\",\"RTPrescriptionIndex\"],\"003D\":[\"US\",\"1\",\"RTSegmentAnnotationIndex\"],\"003E\":[\"US\",\"1\",\"BasisRTTreatmentPhaseIndex\"],\"003F\":[\"US\",\"1\",\"RelatedRTTreatmentPhaseIndex\"],\"0040\":[\"US\",\"1\",\"ReferencedRTTreatmentPhaseIndex\"],\"0041\":[\"US\",\"1\",\"ReferencedRTPrescriptionIndex\"],\"0042\":[\"US\",\"1\",\"ReferencedParentRTPrescriptionIndex\"],\"0043\":[\"ST\",\"1\",\"ManufacturerDeviceIdentifier\"],\"0044\":[\"SQ\",\"1\",\"InstanceLevelReferencedPerformedProcedureStepSequence\"],\"0045\":[\"CS\",\"1\",\"RTTreatmentPhaseIntentPresenceFlag\"],\"0046\":[\"CS\",\"1\",\"RadiotherapyTreatmentType\"],\"0047\":[\"CS\",\"1-n\",\"TeletherapyRadiationType\"],\"0048\":[\"CS\",\"1-n\",\"BrachytherapySourceType\"],\"0049\":[\"SQ\",\"1\",\"ReferencedRTTreatmentPhaseSequence\"],\"004A\":[\"SQ\",\"1\",\"ReferencedDirectSegmentInstanceSequence\"],\"004B\":[\"SQ\",\"1\",\"IntendedRTTreatmentPhaseSequence\"],\"004C\":[\"DA\",\"1\",\"IntendedPhaseStartDate\"],\"004D\":[\"DA\",\"1\",\"IntendedPhaseEndDate\"],\"004E\":[\"SQ\",\"1\",\"RTTreatmentPhaseIntervalSequence\"],\"004F\":[\"CS\",\"1\",\"TemporalRelationshipIntervalAnchor\"],\"0050\":[\"FD\",\"1\",\"MinimumNumberOfIntervalDays\"],\"0051\":[\"FD\",\"1\",\"MaximumNumberOfIntervalDays\"],\"0052\":[\"UI\",\"1-n\",\"PertinentSOPClassesInStudy\"],\"0053\":[\"UI\",\"1-n\",\"PertinentSOPClassesInSeries\"],\"0054\":[\"LO\",\"1\",\"RTPrescriptionLabel\"],\"0055\":[\"SQ\",\"1\",\"RTPhysicianIntentPredecessorSequence\"],\"0056\":[\"LO\",\"1\",\"RTTreatmentApproachLabel\"],\"0057\":[\"SQ\",\"1\",\"RTPhysicianIntentSequence\"],\"0058\":[\"US\",\"1\",\"RTPhysicianIntentIndex\"],\"0059\":[\"CS\",\"1\",\"RTTreatmentIntentType\"],\"005A\":[\"UT\",\"1\",\"RTPhysicianIntentNarrative\"],\"005B\":[\"SQ\",\"1\",\"RTProtocolCodeSequence\"],\"005C\":[\"ST\",\"1\",\"ReasonForSuperseding\"],\"005D\":[\"SQ\",\"1\",\"RTDiagnosisCodeSequence\"],\"005E\":[\"US\",\"1\",\"ReferencedRTPhysicianIntentIndex\"],\"005F\":[\"SQ\",\"1\",\"RTPhysicianIntentInputInstanceSequence\"],\"0060\":[\"SQ\",\"1\",\"RTAnatomicPrescriptionSequence\"],\"0061\":[\"UT\",\"1\",\"PriorTreatmentDoseDescription\"],\"0062\":[\"SQ\",\"1\",\"PriorTreatmentReferenceSequence\"],\"0063\":[\"CS\",\"1\",\"DosimetricObjectiveEvaluationScope\"],\"0064\":[\"SQ\",\"1\",\"TherapeuticRoleCategoryCodeSequence\"],\"0065\":[\"SQ\",\"1\",\"TherapeuticRoleTypeCodeSequence\"],\"0066\":[\"US\",\"1\",\"ConceptualVolumeOptimizationPrecedence\"],\"0067\":[\"SQ\",\"1\",\"ConceptualVolumeCategoryCodeSequence\"],\"0068\":[\"CS\",\"1\",\"ConceptualVolumeBlockingConstraint\"],\"0069\":[\"SQ\",\"1\",\"ConceptualVolumeTypeCodeSequence\"],\"006A\":[\"SQ\",\"1\",\"ConceptualVolumeTypeModifierCodeSequence\"],\"006B\":[\"SQ\",\"1\",\"RTPrescriptionSequence\"],\"006C\":[\"SQ\",\"1\",\"DosimetricObjectiveSequence\"],\"006D\":[\"SQ\",\"1\",\"DosimetricObjectiveTypeCodeSequence\"],\"006E\":[\"UI\",\"1\",\"DosimetricObjectiveUID\"],\"006F\":[\"UI\",\"1\",\"ReferencedDosimetricObjectiveUID\"],\"0070\":[\"SQ\",\"1\",\"DosimetricObjectiveParameterSequence\"],\"0071\":[\"SQ\",\"1\",\"ReferencedDosimetricObjectivesSequence\"],\"0073\":[\"CS\",\"1\",\"AbsoluteDosimetricObjectiveFlag\"],\"0074\":[\"FD\",\"1\",\"DosimetricObjectiveWeight\"],\"0075\":[\"CS\",\"1\",\"DosimetricObjectivePurpose\"],\"0076\":[\"SQ\",\"1\",\"PlanningInputInformationSequence\"],\"0077\":[\"LO\",\"1\",\"TreatmentSite\"],\"0078\":[\"SQ\",\"1\",\"TreatmentSiteCodeSequence\"],\"0079\":[\"SQ\",\"1\",\"FractionPatternSequence\"],\"007A\":[\"UT\",\"1\",\"TreatmentTechniqueNotes\"],\"007B\":[\"UT\",\"1\",\"PrescriptionNotes\"],\"007C\":[\"IS\",\"1\",\"NumberOfIntervalFractions\"],\"007D\":[\"US\",\"1\",\"NumberOfFractions\"],\"007E\":[\"US\",\"1\",\"IntendedDeliveryDuration\"],\"007F\":[\"UT\",\"1\",\"FractionationNotes\"],\"0080\":[\"SQ\",\"1\",\"RTTreatmentTechniqueCodeSequence\"],\"0081\":[\"SQ\",\"1\",\"PrescriptionNotesSequence\"],\"0082\":[\"SQ\",\"1\",\"FractionBasedRelationshipSequence\"],\"0083\":[\"CS\",\"1\",\"FractionBasedRelationshipIntervalAnchor\"],\"0084\":[\"FD\",\"1\",\"MinimumHoursBetweenFractions\"],\"0085\":[\"TM\",\"1-n\",\"IntendedFractionStartTime\"],\"0086\":[\"LT\",\"1\",\"IntendedStartDayOfWeek\"],\"0087\":[\"SQ\",\"1\",\"WeekdayFractionPatternSequence\"],\"0088\":[\"SQ\",\"1\",\"DeliveryTimeStructureCodeSequence\"],\"0089\":[\"SQ\",\"1\",\"TreatmentSiteModifierCodeSequence\"],\"0090\":[\"CS\",\"1\",\"RoboticBaseLocationIndicator\"],\"0091\":[\"SQ\",\"1\",\"RoboticPathNodeSetCodeSequence\"],\"0092\":[\"UL\",\"1\",\"RoboticNodeIdentifier\"],\"0093\":[\"FD\",\"3\",\"RTTreatmentSourceCoordinates\"],\"0094\":[\"FD\",\"1\",\"RadiationSourceCoordinateSystemYawAngle\"],\"0095\":[\"FD\",\"1\",\"RadiationSourceCoordinateSystemRollAngle\"],\"0096\":[\"FD\",\"1\",\"RadiationSourceCoordinateSystemPitchAngle\"],\"0097\":[\"SQ\",\"1\",\"RoboticPathControlPointSequence\"],\"0098\":[\"SQ\",\"1\",\"TomotherapeuticControlPointSequence\"],\"0099\":[\"FD\",\"1-n\",\"TomotherapeuticLeafOpenDurations\"],\"009A\":[\"FD\",\"1-n\",\"TomotherapeuticLeafInitialClosedDurations\"]},4e3:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"LT\",\"1\",\"Arbitrary\"],4e3:[\"LT\",\"1\",\"TextComments\"]},4008:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0040\":[\"SH\",\"1\",\"ResultsID\"],\"0042\":[\"LO\",\"1\",\"ResultsIDIssuer\"],\"0050\":[\"SQ\",\"1\",\"ReferencedInterpretationSequence\"],\"00FF\":[\"CS\",\"1\",\"ReportProductionStatusTrial\"],\"0100\":[\"DA\",\"1\",\"InterpretationRecordedDate\"],\"0101\":[\"TM\",\"1\",\"InterpretationRecordedTime\"],\"0102\":[\"PN\",\"1\",\"InterpretationRecorder\"],\"0103\":[\"LO\",\"1\",\"ReferenceToRecordedSound\"],\"0108\":[\"DA\",\"1\",\"InterpretationTranscriptionDate\"],\"0109\":[\"TM\",\"1\",\"InterpretationTranscriptionTime\"],\"010A\":[\"PN\",\"1\",\"InterpretationTranscriber\"],\"010B\":[\"ST\",\"1\",\"InterpretationText\"],\"010C\":[\"PN\",\"1\",\"InterpretationAuthor\"],\"0111\":[\"SQ\",\"1\",\"InterpretationApproverSequence\"],\"0112\":[\"DA\",\"1\",\"InterpretationApprovalDate\"],\"0113\":[\"TM\",\"1\",\"InterpretationApprovalTime\"],\"0114\":[\"PN\",\"1\",\"PhysicianApprovingInterpretation\"],\"0115\":[\"LT\",\"1\",\"InterpretationDiagnosisDescription\"],\"0117\":[\"SQ\",\"1\",\"InterpretationDiagnosisCodeSequence\"],\"0118\":[\"SQ\",\"1\",\"ResultsDistributionListSequence\"],\"0119\":[\"PN\",\"1\",\"DistributionName\"],\"011A\":[\"LO\",\"1\",\"DistributionAddress\"],\"0200\":[\"SH\",\"1\",\"InterpretationID\"],\"0202\":[\"LO\",\"1\",\"InterpretationIDIssuer\"],\"0210\":[\"CS\",\"1\",\"InterpretationTypeID\"],\"0212\":[\"CS\",\"1\",\"InterpretationStatusID\"],\"0300\":[\"ST\",\"1\",\"Impressions\"],4e3:[\"ST\",\"1\",\"ResultsComments\"]},4010:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"CS\",\"1\",\"LowEnergyDetectors\"],\"0002\":[\"CS\",\"1\",\"HighEnergyDetectors\"],\"0004\":[\"SQ\",\"1\",\"DetectorGeometrySequence\"],1001:[\"SQ\",\"1\",\"ThreatROIVoxelSequence\"],1004:[\"FL\",\"3\",\"ThreatROIBase\"],1005:[\"FL\",\"3\",\"ThreatROIExtents\"],1006:[\"OB\",\"1\",\"ThreatROIBitmap\"],1007:[\"SH\",\"1\",\"RouteSegmentID\"],1008:[\"CS\",\"1\",\"GantryType\"],1009:[\"CS\",\"1\",\"OOIOwnerType\"],\"100A\":[\"SQ\",\"1\",\"RouteSegmentSequence\"],1010:[\"US\",\"1\",\"PotentialThreatObjectID\"],1011:[\"SQ\",\"1\",\"ThreatSequence\"],1012:[\"CS\",\"1\",\"ThreatCategory\"],1013:[\"LT\",\"1\",\"ThreatCategoryDescription\"],1014:[\"CS\",\"1\",\"ATDAbilityAssessment\"],1015:[\"CS\",\"1\",\"ATDAssessmentFlag\"],1016:[\"FL\",\"1\",\"ATDAssessmentProbability\"],1017:[\"FL\",\"1\",\"Mass\"],1018:[\"FL\",\"1\",\"Density\"],1019:[\"FL\",\"1\",\"ZEffective\"],\"101A\":[\"SH\",\"1\",\"BoardingPassID\"],\"101B\":[\"FL\",\"3\",\"CenterOfMass\"],\"101C\":[\"FL\",\"3\",\"CenterOfPTO\"],\"101D\":[\"FL\",\"6-n\",\"BoundingPolygon\"],\"101E\":[\"SH\",\"1\",\"RouteSegmentStartLocationID\"],\"101F\":[\"SH\",\"1\",\"RouteSegmentEndLocationID\"],1020:[\"CS\",\"1\",\"RouteSegmentLocationIDType\"],1021:[\"CS\",\"1-n\",\"AbortReason\"],1023:[\"FL\",\"1\",\"VolumeOfPTO\"],1024:[\"CS\",\"1\",\"AbortFlag\"],1025:[\"DT\",\"1\",\"RouteSegmentStartTime\"],1026:[\"DT\",\"1\",\"RouteSegmentEndTime\"],1027:[\"CS\",\"1\",\"TDRType\"],1028:[\"CS\",\"1\",\"InternationalRouteSegment\"],1029:[\"LO\",\"1-n\",\"ThreatDetectionAlgorithmAndVersion\"],\"102A\":[\"SH\",\"1\",\"AssignedLocation\"],\"102B\":[\"DT\",\"1\",\"AlarmDecisionTime\"],1031:[\"CS\",\"1\",\"AlarmDecision\"],1033:[\"US\",\"1\",\"NumberOfTotalObjects\"],1034:[\"US\",\"1\",\"NumberOfAlarmObjects\"],1037:[\"SQ\",\"1\",\"PTORepresentationSequence\"],1038:[\"SQ\",\"1\",\"ATDAssessmentSequence\"],1039:[\"CS\",\"1\",\"TIPType\"],\"103A\":[\"CS\",\"1\",\"DICOSVersion\"],1041:[\"DT\",\"1\",\"OOIOwnerCreationTime\"],1042:[\"CS\",\"1\",\"OOIType\"],1043:[\"FL\",\"3\",\"OOISize\"],1044:[\"CS\",\"1\",\"AcquisitionStatus\"],1045:[\"SQ\",\"1\",\"BasisMaterialsCodeSequence\"],1046:[\"CS\",\"1\",\"PhantomType\"],1047:[\"SQ\",\"1\",\"OOIOwnerSequence\"],1048:[\"CS\",\"1\",\"ScanType\"],1051:[\"LO\",\"1\",\"ItineraryID\"],1052:[\"SH\",\"1\",\"ItineraryIDType\"],1053:[\"LO\",\"1\",\"ItineraryIDAssigningAuthority\"],1054:[\"SH\",\"1\",\"RouteID\"],1055:[\"SH\",\"1\",\"RouteIDAssigningAuthority\"],1056:[\"CS\",\"1\",\"InboundArrivalType\"],1058:[\"SH\",\"1\",\"CarrierID\"],1059:[\"CS\",\"1\",\"CarrierIDAssigningAuthority\"],1060:[\"FL\",\"3\",\"SourceOrientation\"],1061:[\"FL\",\"3\",\"SourcePosition\"],1062:[\"FL\",\"1\",\"BeltHeight\"],1064:[\"SQ\",\"1\",\"AlgorithmRoutingCodeSequence\"],1067:[\"CS\",\"1\",\"TransportClassification\"],1068:[\"LT\",\"1\",\"OOITypeDescriptor\"],1069:[\"FL\",\"1\",\"TotalProcessingTime\"],\"106C\":[\"OB\",\"1\",\"DetectorCalibrationData\"],\"106D\":[\"CS\",\"1\",\"AdditionalScreeningPerformed\"],\"106E\":[\"CS\",\"1\",\"AdditionalInspectionSelectionCriteria\"],\"106F\":[\"SQ\",\"1\",\"AdditionalInspectionMethodSequence\"],1070:[\"CS\",\"1\",\"AITDeviceType\"],1071:[\"SQ\",\"1\",\"QRMeasurementsSequence\"],1072:[\"SQ\",\"1\",\"TargetMaterialSequence\"],1073:[\"FD\",\"1\",\"SNRThreshold\"],1075:[\"DS\",\"1\",\"ImageScaleRepresentation\"],1076:[\"SQ\",\"1\",\"ReferencedPTOSequence\"],1077:[\"SQ\",\"1\",\"ReferencedTDRInstanceSequence\"],1078:[\"ST\",\"1\",\"PTOLocationDescription\"],1079:[\"SQ\",\"1\",\"AnomalyLocatorIndicatorSequence\"],\"107A\":[\"FL\",\"3\",\"AnomalyLocatorIndicator\"],\"107B\":[\"SQ\",\"1\",\"PTORegionSequence\"],\"107C\":[\"CS\",\"1\",\"InspectionSelectionCriteria\"],\"107D\":[\"SQ\",\"1\",\"SecondaryInspectionMethodSequence\"],\"107E\":[\"DS\",\"6\",\"PRCSToRCSOrientation\"]},\"4FFE\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"SQ\",\"1\",\"MACParametersSequence\"]},5e3:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0005\":[\"US\",\"1\",\"CurveDimensions\"],\"0010\":[\"US\",\"1\",\"NumberOfPoints\"],\"0020\":[\"CS\",\"1\",\"TypeOfData\"],\"0022\":[\"LO\",\"1\",\"CurveDescription\"],\"0030\":[\"SH\",\"1-n\",\"AxisUnits\"],\"0040\":[\"SH\",\"1-n\",\"AxisLabels\"],\"0103\":[\"US\",\"1\",\"DataValueRepresentation\"],\"0104\":[\"US\",\"1-n\",\"MinimumCoordinateValue\"],\"0105\":[\"US\",\"1-n\",\"MaximumCoordinateValue\"],\"0106\":[\"SH\",\"1-n\",\"CurveRange\"],\"0110\":[\"US\",\"1-n\",\"CurveDataDescriptor\"],\"0112\":[\"US\",\"1-n\",\"CoordinateStartValue\"],\"0114\":[\"US\",\"1-n\",\"CoordinateStepValue\"],1001:[\"CS\",\"1\",\"CurveActivationLayer\"],2e3:[\"US\",\"1\",\"AudioType\"],2002:[\"US\",\"1\",\"AudioSampleFormat\"],2004:[\"US\",\"1\",\"NumberOfChannels\"],2006:[\"UL\",\"1\",\"NumberOfSamples\"],2008:[\"UL\",\"1\",\"SampleRate\"],\"200A\":[\"UL\",\"1\",\"TotalTime\"],\"200C\":[\"ox\",\"1\",\"AudioSampleData\"],\"200E\":[\"LT\",\"1\",\"AudioComments\"],2500:[\"LO\",\"1\",\"CurveLabel\"],2600:[\"SQ\",\"1\",\"CurveReferencedOverlaySequence\"],2610:[\"US\",\"1\",\"CurveReferencedOverlayGroup\"],3e3:[\"ox\",\"1\",\"CurveData\"]},5200:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],9229:[\"SQ\",\"1\",\"SharedFunctionalGroupsSequence\"],9230:[\"SQ\",\"1\",\"PerFrameFunctionalGroupsSequence\"]},5400:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0100\":[\"SQ\",\"1\",\"WaveformSequence\"],\"0110\":[\"ox\",\"1\",\"ChannelMinimumValue\"],\"0112\":[\"ox\",\"1\",\"ChannelMaximumValue\"],1004:[\"US\",\"1\",\"WaveformBitsAllocated\"],1006:[\"CS\",\"1\",\"WaveformSampleInterpretation\"],\"100A\":[\"ox\",\"1\",\"WaveformPaddingValue\"],1010:[\"ox\",\"1\",\"WaveformData\"]},5600:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"OF\",\"1\",\"FirstOrderPhaseCorrectionAngle\"],\"0020\":[\"OF\",\"1\",\"SpectroscopyData\"]},6e3:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"US\",\"1\",\"OverlayRows\"],\"0011\":[\"US\",\"1\",\"OverlayColumns\"],\"0012\":[\"US\",\"1\",\"OverlayPlanes\"],\"0015\":[\"IS\",\"1\",\"NumberOfFramesInOverlay\"],\"0022\":[\"LO\",\"1\",\"OverlayDescription\"],\"0040\":[\"CS\",\"1\",\"OverlayType\"],\"0045\":[\"LO\",\"1\",\"OverlaySubtype\"],\"0050\":[\"SS\",\"2\",\"OverlayOrigin\"],\"0051\":[\"US\",\"1\",\"ImageFrameOrigin\"],\"0052\":[\"US\",\"1\",\"OverlayPlaneOrigin\"],\"0060\":[\"CS\",\"1\",\"OverlayCompressionCode\"],\"0061\":[\"SH\",\"1\",\"OverlayCompressionOriginator\"],\"0062\":[\"SH\",\"1\",\"OverlayCompressionLabel\"],\"0063\":[\"CS\",\"1\",\"OverlayCompressionDescription\"],\"0066\":[\"AT\",\"1-n\",\"OverlayCompressionStepPointers\"],\"0068\":[\"US\",\"1\",\"OverlayRepeatInterval\"],\"0069\":[\"US\",\"1\",\"OverlayBitsGrouped\"],\"0100\":[\"US\",\"1\",\"OverlayBitsAllocated\"],\"0102\":[\"US\",\"1\",\"OverlayBitPosition\"],\"0110\":[\"CS\",\"1\",\"OverlayFormat\"],\"0200\":[\"US\",\"1\",\"OverlayLocation\"],\"0800\":[\"CS\",\"1-n\",\"OverlayCodeLabel\"],\"0802\":[\"US\",\"1\",\"OverlayNumberOfTables\"],\"0803\":[\"AT\",\"1-n\",\"OverlayCodeTableLocation\"],\"0804\":[\"US\",\"1\",\"OverlayBitsForCodeWord\"],1001:[\"CS\",\"1\",\"OverlayActivationLayer\"],1100:[\"US\",\"1\",\"OverlayDescriptorGray\"],1101:[\"US\",\"1\",\"OverlayDescriptorRed\"],1102:[\"US\",\"1\",\"OverlayDescriptorGreen\"],1103:[\"US\",\"1\",\"OverlayDescriptorBlue\"],1200:[\"US\",\"1-n\",\"OverlaysGray\"],1201:[\"US\",\"1-n\",\"OverlaysRed\"],1202:[\"US\",\"1-n\",\"OverlaysGreen\"],1203:[\"US\",\"1-n\",\"OverlaysBlue\"],1301:[\"IS\",\"1\",\"ROIArea\"],1302:[\"DS\",\"1\",\"ROIMean\"],1303:[\"DS\",\"1\",\"ROIStandardDeviation\"],1500:[\"LO\",\"1\",\"OverlayLabel\"],3e3:[\"ox\",\"1\",\"OverlayData\"],4e3:[\"LT\",\"1\",\"OverlayComments\"]},\"7F00\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0010\":[\"ox\",\"1\",\"VariablePixelData\"],\"0011\":[\"US\",\"1\",\"VariableNextDataGroup\"],\"0020\":[\"OW\",\"1\",\"VariableCoefficientsSDVN\"],\"0030\":[\"OW\",\"1\",\"VariableCoefficientsSDHN\"],\"0040\":[\"OW\",\"1\",\"VariableCoefficientsSDDN\"]},\"7FE0\":{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],\"0001\":[\"OV\",\"1\",\"ExtendedOffsetTable\"],\"0002\":[\"OV\",\"1\",\"ExtendedOffsetTableLengths\"],\"0008\":[\"OF\",\"1\",\"FloatPixelData\"],\"0009\":[\"OD\",\"1\",\"DoubleFloatPixelData\"],\"0010\":[\"ox\",\"1\",\"PixelData\"],\"0020\":[\"OW\",\"1\",\"CoefficientsSDVN\"],\"0030\":[\"OW\",\"1\",\"CoefficientsSDHN\"],\"0040\":[\"OW\",\"1\",\"CoefficientsSDDN\"]},FFFA:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],FFFA:[\"SQ\",\"1\",\"DigitalSignaturesSequence\"]},FFFC:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],FFFC:[\"OB\",\"1\",\"DataSetTrailingPadding\"]},FFFE:{\"0000\":[\"UL\",\"1\",\"GenericGroupLength\"],E000:[\"NONE\",\"1\",\"Item\"],E00D:[\"NONE\",\"1\",\"ItemDelimitationItem\"],E0DD:[\"NONE\",\"1\",\"SequenceDelimitationItem\"]}};function _(e,t){Z[e]=t}const K={\"0000\":\"Command\",\"0002\":\"Meta Element\",\"0004\":\"File Set\",\"0008\":\"Identifying\",\"0009\":\"SPI Identifying\",\"0010\":\"Patient\",\"0012\":\"Clinical Trial\",\"0018\":\"Acquisition\",\"0019\":\"SPI Acquisition\",\"0020\":\"Image\",\"0021\":\"SPI Image\",\"0022\":\"Ophtalmology\",\"0028\":\"Image Presentation\",\"0032\":\"Study\",\"0038\":\"Visit\",\"003A\":\"Waveform\",\"0040\":\"Procedure\",\"0042\":\"Encapsulated Document\",\"0050\":\"Device Informations\",\"0054\":\"Nuclear Medicine\",\"0060\":\"Histogram\",\"0070\":\"Presentation State\",\"0072\":\"Hanging Protocol\",\"0088\":\"Storage\",\"0100\":\"Authorization\",\"0400\":\"Digital Signature\",1e3:\"Code Table\",1010:\"Zonal Map\",2e3:\"Film Session\",2010:\"Film Box\",2020:\"Image Box\",2030:\"Annotation\",2040:\"Overlay Box\",2050:\"Presentation LUT\",2100:\"Print Job\",2110:\"Printer\",2120:\"Queue\",2130:\"Print Content\",2200:\"Media Creation\",3002:\"RT Image\",3004:\"RT Dose\",3006:\"RT StructureSet\",3008:\"RT Treatment\",\"300A\":\"RT Plan\",\"300C\":\"RT Relationship\",\"300E\":\"RT Approval\",4e3:\"Text\",4008:\"Results\",\"4FFE\":\"MAC Parameters\",5e3:\"Curve\",5002:\"Curve\",5004:\"Curve\",5006:\"Curve\",5008:\"Curve\",\"500A\":\"Curve\",\"500C\":\"Curve\",\"500E\":\"Curve\",5400:\"Waveform Data\",6e3:\"Overlays\",6002:\"Overlays\",6004:\"Overlays\",6008:\"Overlays\",\"600A\":\"Overlays\",\"600C\":\"Overlays\",\"600E\":\"Overlays\",FFFC:\"Generic\",\"7FE0\":\"Pixel Data\",FFFF:\"Unknown\"},J={OB:!0,OD:!0,OF:!0,OL:!0,OV:!0,OW:!0,SQ:!0,SV:!0,UC:!0,UN:!0,UR:!0,UT:!0,UV:!0,ox:!0};function $(e){return void 0!==J[e]}const ee={SH:!0,LO:!0,UC:!0,ST:!0,LT:!0,UT:!0,PN:!0};function te(e){return void 0!==ee[e]}const ne={AE:\"string\",AS:\"string\",AT:void 0,CS:\"string\",DA:\"string\",DS:\"string\",DT:\"string\",FL:\"Float32\",FD:\"Float64\",IS:\"string\",LO:\"string\",LT:\"string\",OB:\"Uint8\",OD:\"Uint64\",OF:\"Uint32\",OL:\"Uint32\",OV:\"Uint64\",OW:\"Uint16\",PN:\"string\",SH:\"string\",SL:\"Int32\",SQ:void 0,SS:\"Int16\",ST:\"string\",SV:\"Int64\",TM:\"string\",UC:\"string\",UI:\"string\",UL:\"Uint32\",UN:\"Uint8\",UR:\"string\",US:\"Uint16\",UT:\"string\",UV:\"Uint64\"},ie={\"1.2.840.10008.1.2\":\"Implicit VR Little Endian\",\"1.2.840.10008.1.2.1\":\"Explicit VR Little Endian\",\"1.2.840.10008.1.2.1.98\":\"Encapsulated Uncompressed Explicit VR Little Endian\",\"1.2.840.10008.1.2.1.99\":\"Deflated Explicit VR Little Endian\",\"1.2.840.10008.1.2.2\":\"Explicit VR Big Endian (Retired)\",\"1.2.840.10008.1.2.4.50\":\"JPEG Baseline (Process 1)\",\"1.2.840.10008.1.2.4.51\":\"JPEG Extended (Process 2 & 4)\",\"1.2.840.10008.1.2.4.52\":\"JPEG Extended (Process 3 & 5) (Retired)\",\"1.2.840.10008.1.2.4.53\":\"JPEG Spectral Selection, Non-Hierarchical (Process 6 & 8) (Retired)\",\"1.2.840.10008.1.2.4.54\":\"JPEG Spectral Selection, Non-Hierarchical (Process 7 & 9) (Retired)\",\"1.2.840.10008.1.2.4.55\":\"JPEG Full Progression, Non-Hierarchical (Process 10 & 12) (Retired)\",\"1.2.840.10008.1.2.4.56\":\"JPEG Full Progression, Non-Hierarchical (Process 11 & 13) (Retired)\",\"1.2.840.10008.1.2.4.57\":\"JPEG Lossless, Non-Hierarchical (Process 14)\",\"1.2.840.10008.1.2.4.58\":\"JPEG Lossless, Non-Hierarchical (Process 15) (Retired)\",\"1.2.840.10008.1.2.4.59\":\"JPEG Extended, Hierarchical (Process 16 & 18) (Retired)\",\"1.2.840.10008.1.2.4.60\":\"JPEG Extended, Hierarchical (Process 17 & 19) (Retired)\",\"1.2.840.10008.1.2.4.61\":\"JPEG Spectral Selection, Hierarchical (Process 20 & 22) (Retired)\",\"1.2.840.10008.1.2.4.62\":\"JPEG Spectral Selection, Hierarchical (Process 21 & 23) (Retired)\",\"1.2.840.10008.1.2.4.63\":\"JPEG Full Progression, Hierarchical (Process 24 & 26) (Retired)\",\"1.2.840.10008.1.2.4.64\":\"JPEG Full Progression, Hierarchical (Process 25 & 27) (Retired)\",\"1.2.840.10008.1.2.4.65\":\"JPEG Lossless, Hierarchical (Process 28) (Retired)\",\"1.2.840.10008.1.2.4.66\":\"JPEG Lossless, Hierarchical (Process 29) (Retired)\",\"1.2.840.10008.1.2.4.70\":\"JPEG Lossless, Non-Hierarchical, First-Order Prediction (Process 14 [Selection Value 1])\",\"1.2.840.10008.1.2.4.80\":\"JPEG-LS Lossless Image Compression\",\"1.2.840.10008.1.2.4.81\":\"JPEG-LS Lossy (Near-Lossless) Image Compression\",\"1.2.840.10008.1.2.4.90\":\"JPEG 2000 Image Compression (Lossless Only)\",\"1.2.840.10008.1.2.4.91\":\"JPEG 2000 Image Compression\",\"1.2.840.10008.1.2.4.92\":\"JPEG 2000 Part 2 Multi-component Image Compression (Lossless Only)\",\"1.2.840.10008.1.2.4.93\":\"JPEG 2000 Part 2 Multi-component Image Compression\",\"1.2.840.10008.1.2.4.94\":\"JPIP Referenced\",\"1.2.840.10008.1.2.4.95\":\"JPIP Referenced Deflate\",\"1.2.840.10008.1.2.4.100\":\"MPEG2 Main Profile / Main Level\",\"1.2.840.10008.1.2.4.101\":\"MPEG2 Main Profile / High Level\",\"1.2.840.10008.1.2.4.102\":\"MPEG-4 AVC/H.264 High Profile / Level 4.1\",\"1.2.840.10008.1.2.4.103\":\"MPEG-4 AVC/H.264 BD-compatible High Profile / Level 4.1\",\"1.2.840.10008.1.2.4.104\":\"MPEG-4 AVC/H.264 High Profile / Level 4.2 For 2D Video\",\"1.2.840.10008.1.2.4.105\":\"MPEG-4 AVC/H.264 High Profile / Level 4.2 For 3D Video\",\"1.2.840.10008.1.2.4.106\":\"MPEG-4 AVC/H.264 Stereo High Profile / Level 4.2\",\"1.2.840.10008.1.2.4.107\":\"HEVC/H.265 Main Profile / Level 5.1\",\"1.2.840.10008.1.2.4.108\":\"HEVC/H.265 Main 10 Profile / Level 5.1\",\"1.2.840.10008.1.2.5\":\"RLE Lossless\",\"1.2.840.10008.1.2.6.1\":\"RFC 2557 MIME encapsulation (Retired)\",\"1.2.840.10008.1.2.6.2\":\"XML Encoding (Retired)\",\"1.2.840.10008.1.2.7.1\":\"SMPTE ST 2110-20 Uncompressed Progressive Active Video\",\"1.2.840.10008.1.2.7.2\":\"SMPTE ST 2110-20 Uncompressed Interlaced Active Video\",\"1.2.840.10008.1.2.7.3\":\"SMPTE ST 2110-30 PCM Digital Audio\",\"1.2.840.10008.1.20\":\"Papyrus 3 Implicit VR Little Endian (Retired)\"},re=\"1.2.840.10008.1.2\",oe=\"1.2.840.10008.1.2.1\",ae=\"1.2.840.10008.1.2.2\",se=\"1.2.840.10008.1.2.4.50\",le=\"1.2.840.10008.1.2.4.51\",ce=\"1.2.840.10008.1.2.4.57\",ue=\"1.2.840.10008.1.2.4.70\",de=\"1.2.840.10008.1.2.5\";class he{#T;#L;constructor(e,t){if(!e||void 0===e)throw new Error(\"Cannot create tag with no group.\");if(4!==e.length)throw new Error(\"Cannot create tag with badly sized group: \"+e);if(!t||void 0===t)throw new Error(\"Cannot create tag with no element.\");if(4!==t.length)throw new Error(\"Cannot create tag with badly sized element: \"+t);this.#T=e,this.#L=t}getGroup(){return this.#T}getElement(){return this.#L}toString(){return this.getKey()+\": \"+this.getNameFromDictionary()}equals(e){return null!=e&&this.#T===e.getGroup()&&this.#L===e.getElement()}getKey(){return this.#T+this.#L}getGroupName(){return K[this.#T]}isWithVR(){return!(\"FFFE\"===this.#T&&(\"E000\"===this.#L||\"E00D\"===this.#L||\"E0DD\"===this.#L))}isPrivate(){return parseInt(this.#T,16)%2==1}#P(){let e;return void 0!==Z[this.#T]&&void 0!==Z[this.#T][this.#L]&&(e=Z[this.#T][this.#L]),e}getVrFromDictionary(){let e;const t=this.#P();return void 0!==t&&(e=t[0]),e}getNameFromDictionary(){let e;const t=this.#P();return void 0!==t&&(e=t[2]),e}}function Se(e,t){let n=parseInt(e.getGroup(),16)-parseInt(t.getGroup(),16);return 0===n&&(n=parseInt(e.getElement(),16)-parseInt(t.getElement(),16)),n}function ge(e){if(!e||void 0===e)throw new Error(\"Cannot create tag with no key.\");if(8!==e.length)throw new Error(\"Cannot create tag with badly sized key: \"+e);return new he(e.substring(0,4),e.substring(4,8))}function pe(){return new he(\"FFFE\",\"E000\")}function me(e){return\"FFFEE000\"===e.getKey()}function fe(e){return\"FFFEE00D\"===e.getKey()}function De(e){return\"FFFEE0DD\"===e.getKey()}function ye(){return new he(\"7FE0\",\"0010\")}function Ce(e){return\"7FE00010\"===e.getKey()}function ve(e){if(null==e)return null;let t=null,n=null;const i=Z,r=Object.keys(i);let o,a=null,s=!1;for(let o=0,l=r.length;o<l;++o){t=r[o],a=Object.keys(i[t]);for(let r=0,o=a.length;r<o;++r)if(n=a[r],i[t][n][2]===e){s=!0;break}if(s)break}return s&&(o=new he(t,n)),o}class Ie{vr;value;tag;vl;undefinedLength;startOffset;endOffset;items;constructor(e){this.vr=e}}function Te(e){const t=e.byteLength,n=new Uint8Array(e.buffer,e.byteOffset,t),i=e.BYTES_PER_ELEMENT;let r;for(let e=0;e<t;e+=i)for(let t=e+i-1,o=e;t>o;t--,o++)r=n[o],n[o]=n[t],n[t]=r}class Le{#w;#O=!0;#A=function(){return new Int8Array(new Int16Array([1]).buffer)[0]>0}();#b;#x;constructor(e,t){this.#w=e,void 0!==t&&(this.#O=t),this.#b=this.#O!==this.#A,this.#x=new DataView(e)}readUint16(e){return this.#x.getUint16(e,this.#O)}readInt16(e){return this.#x.getInt16(e,this.#O)}readUint32(e){return this.#x.getUint32(e,this.#O)}readBigUint64(e){return this.#x.getBigUint64(e,this.#O)}readInt32(e){return this.#x.getInt32(e,this.#O)}readBigInt64(e){return this.#x.getBigInt64(e,this.#O)}readFloat32(e){return this.#x.getFloat32(e,this.#O)}readFloat64(e){return this.#x.getFloat64(e,this.#O)}readBinaryArray(e,t){const n=new Uint8Array(this.#w,e,t),i=8*n.length,r=new Uint8Array(i);let o=0,a=0;for(let e=0;e<i;++e)o=e%8,a=Math.floor(e/8),r[e]=255*!!(n[a]&1<<o);return r}readUint8Array(e,t){return new Uint8Array(this.#w,e,t)}readInt8Array(e,t){return new Int8Array(this.#w,e,t)}readUint16Array(e,t){const n=Uint16Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Uint16Array(this.#w,e,i),this.#b&&Te(r);else{r=new Uint16Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readUint16(t),t+=n}return r}readInt16Array(e,t){const n=Int16Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Int16Array(this.#w,e,i),this.#b&&Te(r);else{r=new Int16Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readInt16(t),t+=n}return r}readUint32Array(e,t){const n=Uint32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Uint32Array(this.#w,e,i),this.#b&&Te(r);else{r=new Uint32Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readUint32(t),t+=n}return r}readUint64Array(e,t){const n=BigUint64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new BigUint64Array(this.#w,e,i),this.#b&&Te(r);else{r=new BigUint64Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readBigUint64(t),t+=n}return r}readInt32Array(e,t){const n=Int32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Int32Array(this.#w,e,i),this.#b&&Te(r);else{r=new Int32Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readInt32(t),t+=n}return r}readInt64Array(e,t){const n=BigInt64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new BigInt64Array(this.#w,e,i),this.#b&&Te(r);else{r=new BigInt64Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readBigInt64(t),t+=n}return r}readFloat32Array(e,t){const n=Float32Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Float32Array(this.#w,e,i),this.#b&&Te(r);else{r=new Float32Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readFloat32(t),t+=n}return r}readFloat64Array(e,t){const n=Float64Array.BYTES_PER_ELEMENT,i=t/n;let r=null;if(e%n==0)r=new Float64Array(this.#w,e,i),this.#b&&Te(r);else{r=new Float64Array(i);let t=e;for(let e=0;e<i;++e)r[e]=this.readFloat64(t),t+=n}return r}readHex(e){const t=this.readUint16(e).toString(16);return\"0000\".substring(0,4-t.length)+t.toUpperCase()}}function Pe(){return\"0.34.0\"}function we(e){return!(e.byteLength<132)&&\"DICM\"===new Uint8Array(e,128,4).reduce((function(e,t){return e+String.fromCharCode(t)}),\"\")}const Oe=String.fromCharCode(\"u200B\");class Ae{decode(e){let t=\"\";for(let n=0,i=e.length;n<i;++n)t+=String.fromCharCode(e[n]);return t}}function be(e){if(!e)return null;const t={L:\"R\",R:\"L\",A:\"P\",P:\"A\",H:\"F\",F:\"H\"};let n=\"\";for(let i=0;i<e.length;i++){const r=t[e.substring(i,i+1)];r&&(n+=r)}return n}function xe(e){return e===re}function Re(e){return e===ae}function Fe(e){return e===se||e===le}function Ee(e){return e===ce||e===ue}function qe(e){return null!==e.match(/1.2.840.10008.1.2.4.9/)}function Ue(e){return e===de}function Me(e,t,n){let i=null;try{1===e||8===e?i=0===t?new Uint8Array(n):new Int8Array(n):16===e?i=0===t?new Uint16Array(n):new Int16Array(n):32===e&&(i=0===t?new Uint32Array(n):new Int32Array(n))}catch(e){if(e instanceof RangeError){const e=Math.floor(Math.log(n)/Math.log(2));c.error(\"Cannot allocate array of size: \"+n+\" (>2^\"+e+\").\")}}return i}function Qe(e,t){return t?8:$(e)?12:8}const Ve=\"00280008\",Ne=\"00280100\",Be=\"00280103\",Ge=\"7FE00010\";class ke{#R={};#F;#E=new Ae;#q=this.#E;#U(e){return this.#E.decode(e)}#M(e){return this.#q.decode(e)}getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}setDecoderCharacterSet(e){this.#q=new TextDecoder(e)}getDicomElements(){return this.#R}#Q(e,t){const n=e.readHex(t);t+=Uint16Array.BYTES_PER_ELEMENT;const i=e.readHex(t);return t+=Uint16Array.BYTES_PER_ELEMENT,{tag:new he(n,i),endOffset:t}}#V(e,t,n){const i={};let r=this.#N(e,t,n);if(t=r.endOffset,De(r.tag))return{data:i,endOffset:r.endOffset,isSeqDelim:!0};if(i[r.tag.getKey()]={tag:r.tag,vr:\"NONE\",vl:r.vl,undefinedLength:r.undefinedLength},r.undefinedLength){let o=!1;for(;!o;)r=this.#N(e,t,n),t=r.endOffset,o=fe(r.tag),o||(i[r.tag.getKey()]=r)}else{const o=t;for(t-=r.vl;t<o;)r=this.#N(e,t,n),t=r.endOffset,i[r.tag.getKey()]=r}return{data:i,endOffset:t,isSeqDelim:!1}}#B(e,t,n){const i=[];let r=this.#N(e,t,n);const o=r.vl;t=r.endOffset;let a=!1;for(;!a;)r=this.#N(e,t,n),t=r.endOffset,a=De(r.tag),a||(r.vr=\"OB\",i.push(r));return{data:i,endOffset:t,offsetTableVl:o}}#N(e,t,n){const i=this.#Q(e,t),r=i.tag;t=i.endOffset;let o=null,a=!1;r.isWithVR()?n?(o=r.getVrFromDictionary(),void 0===o&&(o=\"UN\"),a=!0):(o=this.#U(e.readUint8Array(t,2)),t+=2*Uint8Array.BYTES_PER_ELEMENT,a=$(o),a&&(t+=2*Uint8Array.BYTES_PER_ELEMENT)):(o=\"NONE\",a=!0),function(e){return Object.keys(ne).concat([\"NONE\",\"ox\",\"xx\",\"xs\"]).includes(e)}(o)||(c.warn(\"Unknown VR: \"+o+\" (for tag \"+r.getKey()+\"), treating as 'UN'\"),o=\"UN\");let s=0;a?(s=e.readUint32(t),t+=Uint32Array.BYTES_PER_ELEMENT):(s=e.readUint16(t),t+=Uint16Array.BYTES_PER_ELEMENT);let l=!1;4294967295===s&&(l=!0,s=0),r.isPrivate()&&\"UN\"===o&&0===s&&(o=\"SQ\");let u,d=t,h=d+s;if(Ce(r)&&l){const i=this.#B(e,t,n);t=i.endOffset,d+=i.offsetTableVl,u=i.data,h=t,s=t-d}else if(\"SQ\"===o){let i;if(u=[],l){let r=!1;for(;!r;)i=this.#V(e,t,n),r=i.isSeqDelim,t=i.endOffset,r||u.push(i.data);h=t,s=t-d}else if(0!==s){const r=t+s;for(;t<r;)i=this.#V(e,t,n),u.push(i.data),t=i.endOffset;h=t,s=t-d}}const S=new Ie(o);return S.tag=r,S.vl=s,S.startOffset=d,S.endOffset=h,l&&(S.undefinedLength=l),u&&(S.items=u),S}#G(e,t,n,i){const r=e.tag,o=e.vl,a=e.vr,s=e.startOffset;let l=null;const u=ne[a];if(Ce(r))if(e.undefinedLength){l=[];for(let r=0;r<e.items.length;++r)l.push(this.#G(e.items[r],t,n,i));delete e.items}else if(i>8&&\"OB\"===a&&(c.warn(\"Reading DICOM pixel data with bitsAllocated>8 and OB VR, treating as OW\"),e.vr=\"OW\"),l=[],1===i)l.push(t.readBinaryArray(s,o));else if(8===i)0===n?l.push(t.readUint8Array(s,o)):l.push(t.readInt8Array(s,o));else{if(16!==i)throw new Error(\"Unsupported bits allocated: \"+i);0===n?l.push(t.readUint16Array(s,o)):l.push(t.readInt16Array(s,o))}else if(void 0!==u)if(\"Uint8\"===u)l=t.readUint8Array(s,o);else if(\"Uint16\"===u)l=t.readUint16Array(s,o),\"O\"!==a[0]&&(l=Array.from(l));else if(\"Uint32\"===u)l=t.readUint32Array(s,o),\"O\"!==a[0]&&(l=Array.from(l));else if(\"Uint64\"===u)l=t.readUint64Array(s,o);else if(\"Int16\"===u)l=Array.from(t.readInt16Array(s,o));else if(\"Int32\"===u)l=Array.from(t.readInt32Array(s,o));else if(\"Int64\"===u)l=t.readInt64Array(s,o);else if(\"Float32\"===u)l=Array.from(t.readFloat32Array(s,o));else if(\"Float64\"===u)l=Array.from(t.readFloat64Array(s,o));else{if(\"string\"!==u)throw new Error(\"Unknown VR type: \"+u);{const e=t.readUint8Array(s,o);l=te(a)?this.#M(e):this.#U(e),l=function(e){let t=e;const n=e.length-1;return e[n]===Oe&&(t=e.substring(0,n)),t=t.trim(),t}(l).split(\"\\\\\")}}else if(\"xx\"===a)l=Array.from(t.readUint16Array(s,o));else if(\"ox\"===a)l=8===i?0===n?Array.from(t.readUint8Array(s,o)):Array.from(t.readInt8Array(s,o)):0===n?Array.from(t.readUint16Array(s,o)):Array.from(t.readInt16Array(s,o));else if(\"xs\"===a)l=0===n?Array.from(t.readUint16Array(s,o)):Array.from(t.readInt16Array(s,o));else if(\"AT\"===a){const e=t.readUint16Array(s,o);l=[];for(let t=0,n=e.length;t<n;t+=2){const n=e[t].toString(16),i=e[t+1].toString(16);let r=\"(\";r+=\"0000\".substring(0,4-n.length)+n.toUpperCase(),r+=\",\",r+=\"0000\".substring(0,4-i.length)+i.toUpperCase(),r+=\")\",l.push(r)}}else if(\"SQ\"===a){l=[];for(let r=0;r<e.items.length;++r){const o=e.items[r],a={},s=Object.keys(o);let c=i,u=n;for(let e=0;e<s.length;++e){let n=o[Ne];void 0!==n&&void 0!==n.value&&(c=n.value[0]),n=o[Be],void 0!==n&&void 0!==n.value&&(u=n.value[0]);const i=o[s[e]];i.value=this.#G(i,t,u,c),delete i.tag,delete i.vl,delete i.startOffset,delete i.endOffset,a[s[e]]=i}l.push(a)}delete e.items}else\"NONE\"===a||c.warn(\"Unknown VR: \"+a+\" (for tag \"+e.tag.getKey()+\")\"),l=[];return l}#k(e,t,n,i){const r=Object.keys(e);for(let o=0;o<r.length;++o){const a=e[r[o]];void 0===a.value&&(a.value=this.#G(a,t,n,i)),delete a.tag,delete a.vl,delete a.startOffset,delete a.endOffset}}parse(e){let t=0,n=\"\",i=null;const r=new Le(e);let o=new Le(e);t=128;const a=this.#U(r.readUint8Array(t,4));if(t+=4*Uint8Array.BYTES_PER_ELEMENT,\"DICM\"===a){i=this.#N(r,t,!1),i.value=this.#G(i,r),t=i.endOffset,this.#R[i.tag.getKey()]=i;const e=t+i.value[0];for(;t<e;)i=this.#N(r,t,!1),t=i.endOffset,this.#R[i.tag.getKey()]=i;if(i=this.#R[\"00020010\"],void 0===i)throw new Error(\"Not a valid DICOM file (no TransferSyntaxUID found)\");i.value=this.#G(i,r),n=i.value[0]}else{c.warn(\"No DICM prefix, trying to guess tansfer syntax.\"),i=this.#N(o,0,!1);const e=function(e){const t=\"0008\",n=e.tag.getGroup();if(\"0800\"!==n&&n!==t)throw new Error(\"Not a valid DICOM file (no magic DICM word found and first element not in 0008 group)\");const i=e.vr,r=i.charCodeAt(0),o=i.charCodeAt(1),a=!(r>=65&&r<=90&&o>=65&&o<=90);let s=null;if(n===t)s=a?re:oe;else{if(a)throw new Error(\"Not a valid DICOM file (no magic DICM word foundand implicit VR big endian detected)\");s=ae}const l=new Ie(\"UI\");return l.tag=new he(\"0002\",\"0010\"),l.value=[s],l.vl=l.value[0].length,l.startOffset=e.startOffset,l.endOffset=l.startOffset+l.vl,l}(i);this.#R[e.tag.getKey()]=e,n=e.value[0],t=0}if(!function(e){return e===re||e===oe||e===ae||Fe(e)||Ee(e)||qe(e)||Ue(e)}(n))throw new Error(\"Unsupported DICOM transfer syntax: '\"+n+\"' (\"+function(e){let t=\"Unknown\";return void 0!==ie[e]&&(t=ie[e]),t}(n)+\")\");let s=!1;for(xe(n)&&(s=!0),Re(n)&&(o=new Le(e,!1));t<e.byteLength;){i=this.#N(o,t,s),t=i.endOffset;const e=i.tag.getKey();void 0===this.#R[e]?this.#R[e]=i:c.warn(\"Not saving duplicate tag: \"+e)}if(isNaN(t))throw new Error(\"Problem while parsing, bad offset\");e.byteLength!==t&&c.warn(\"Did not reach the end of the buffer: \"+t+\" != \"+e.byteLength);let l=0,u=16;if(void 0!==this.#R[Ge]&&(i=this.#R[Be],void 0!==i?(i.value=this.#G(i,o),l=i.value[0]):c.warn(\"Reading DICOM pixel data with default pixelRepresentation.\"),i=this.#R[Ne],void 0!==i?(i.value=this.#G(i,o),u=i.value[0]):c.warn(\"Reading DICOM pixel data with default bitsAllocated.\")),void 0!==this.#F&&this.setDecoderCharacterSet(this.#F),i=this.#R[\"00080005\"],void 0!==i){let e;i.value=this.#G(i,o),1===i.value.length?e=i.value[0]:(e=i.value[1],c.warn(\"Unsupported character set with code extensions: '\"+e+\"'.\")),this.setDecoderCharacterSet(function(e){let t=\"utf-8\";return\"ISO_IR 100\"===e?t=\"iso-8859-1\":\"ISO_IR 101\"===e?t=\"iso-8859-2\":\"ISO_IR 109\"===e?t=\"iso-8859-3\":\"ISO_IR 110\"===e?t=\"iso-8859-4\":\"ISO_IR 144\"===e?t=\"iso-8859-5\":\"ISO_IR 127\"===e?t=\"iso-8859-6\":\"ISO_IR 126\"===e?t=\"iso-8859-7\":\"ISO_IR 138\"===e?t=\"iso-8859-8\":\"ISO_IR 148\"===e?t=\"iso-8859-9\":\"ISO_IR 13\"===e?t=\"shift-jis\":\"ISO_IR 166\"===e?t=\"iso-8859-11\":\"ISO 2022 IR 87\"===e?t=\"iso-2022-jp\":\"ISO 2022 IR 149\"===e||\"ISO 2022 IR 58\"===e||(\"ISO_IR 192\"===e?t=\"utf-8\":\"GB18030\"===e?t=\"gb18030\":\"GB2312\"===e?t=\"gb2312\":\"GBK\"===e&&(t=\"chinese\")),t}(e))}if(this.#k(this.#R,o,l,u),i=this.#R[Ge],void 0!==i&&i.undefinedLength){let e=1;void 0!==this.#R[Ve]&&(e=Number(this.#R[Ve].value[0]));const t=i.value;if(t.length>1&&t.length>e){const n=t.length/e,r=[];let o=0;for(let i=0;i<e;++i){o=i*n;let e=0;for(let i=0;i<n;++i)e+=t[o+i].length;const a=new t[0].constructor(e);let s=0;for(let e=0;e<n;++e)a.set(t[o+e],s),s+=t[o+e].length;r[i]=a}i.value=r}}}}class He{#H={};add(e,t){void 0===this.#H[e]&&(this.#H[e]=[]),this.#H[e].push(t)}remove(e,t){if(void 0===this.#H[e])return;let n=0;for(let i=0;i<this.#H[e].length;++i)this.#H[e][i]===t&&(++n,this.#H[e].splice(i,1));0===n&&c.debug(\"No callback found on remove listener for type \"+e)}fireEvent=e=>{if(void 0===this.#H[e.type])return;const t=this.#H[e.type].slice();for(let n=0;n<t.length;++n)t[n](e)}}function ze(e,t,n,i,r,o,a,s){void 0===a&&(a=!1),void 0===s&&(s=!1);let l=t;a?(o*=-1,s?l-=(r-1)*i:i*=-1):s&&(l+=(r-1)*i,i*=-1);const c=o-r*i;let u=0,d=0;return{next:function(){if(u<n){const t={value:e(l),done:!1,index:l};return l+=i,++u,++d,d===r&&(d=0,l+=c),t}return{done:!0,index:l}}}}function We(e){const t=[];let n=e.next();for(;!n.done;)t.push(n.value),n=e.next();return t}function Ye(e,t,n,i){const r=e.getGeometry().getSize();let o=2;i&&void 0!==i&&(o=i.getColAbsMax(2).index);const a=t.getValues(),l=new s(a.map((function(e,t){return t===o||t>2?e:0})));let c=r.indexToOffset(l);void 0===n&&(n=!1);let u=null;u=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const d=r.get(0),h=r.get(1),S=r.get(2);let g=r.getDimSize(2);const p=e.getNumberOfComponents(),m=1===e.getPlanarConfiguration(),f=function(e,t,n,i,r,o,a,s){return 1===p?ze(e,t,n,i,r,o,a,s):3===p?function(e,t,n,i,r,o,a,s,l){const c=[];return l?(c.push(ze(e,t,n,i,r,o,a,s)),c.push(ze(e,t+n*i,n,i,r,o,a,s)),c.push(ze(e,t+2*n*i,n,i,r,o,a,s))):(i*=3,o*=3,c.push(ze(e,t,n,i,r,o,a,s)),c.push(ze(e,t+1,n,i,r,o,a,s)),c.push(ze(e,t+2,n,i,r,o,a,s))),{next:function(){const e=c[0].next(),t=c[1].next(),n=c[2].next();return e.done?{done:!0,index:n.index}:{value:[e.value,t.value,n.value],done:!1,index:[e.index,t.index,n.index]}}}}(e,3*t,n,i,r,o,a,s,m):void 0};let D=null;if(i&&void 0!==i){const e=i.getColAbsMax(0),t=i.getColAbsMax(2),n=!1,r=!1;let o=null;if(2===t.index)o=d*h,D=0===e.index?f(u,c,o,1,d,d,n,r):f(u,c,o,d,h,1,n,r);else if(0===t.index)o=S*h,D=1===e.index?f(u,c,o,d,h,g,n,r):f(u,c,o,g,S,d,n,r);else{if(1!==t.index)throw new Error(\"Unknown direction: \"+t.index);o=S*d,D=0===e.index?f(u,c,o,1,d,g,n,r):f(u,c,o,g,S,1,n,r)}}else if(1===e.getNumberOfComponents())D=function(e,t,n,i){void 0===i&&(i=1);let r=t;return{next:function(){if(r<n){const t={value:e(r),done:!1,index:r};return r+=i,t}return{done:!0,index:n}}}}(u,c,c+g);else{if(3!==e.getNumberOfComponents())throw new Error(\"Unsupported number of components: \"+e.getNumberOfComponents());c*=3,g*=3,D=function(e,t,n,i,r){void 0===i&&(i=1),void 0===r&&(r=!1);let o=t,a=1;r?a=(n-t)/3:i*=3;let s=o+a,l=o+2*a;return{next:function(){if(o<n){const t={value:[e(o),e(s),e(l)],done:!1,index:[o,s,l]};return o+=i,s+=i,l+=i,t}return{done:!0,index:[n]}}}}(u,c,c+g,1,m)}return D}function Xe(e,t){let n=0,i=0;return{next:function(){if(n<t){i+1<e.length&&n>=e[i+1].index&&++i;const t={value:e[i].colour,done:!1,index:n};return++n,t}return{done:!0,index:t}}}}class je{#d;#z;constructor(e,t){this.#d=e,this.#z=t}getSlope(){return this.#d}getIntercept(){return this.#z}apply(e){return e*this.#d+this.#z}equals(e){return null!=e&&this.getSlope()===e.getSlope()&&this.getIntercept()===e.getIntercept()}isID(){return 1===this.getSlope()&&0===this.getIntercept()}}class Ze{#e;constructor(e){if(!e||void 0===e)throw new Error(\"Cannot create size with no values.\");if(0===e.length)throw new Error(\"Cannot create size with empty values.\");if(!e.every((function(e){return!isNaN(e)&&0!==e})))throw new Error(\"Cannot create size with non number or zero values.\");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return\"(\"+this.#e.toString()+\")\"}getValues(){return this.#e.slice()}moreThanOne(e){return this.length()>=e+1&&1!==this.get(e)}canScroll3D(e){let t=2;return void 0!==e&&(t=e.getThirdColMajorDirection()),this.moreThanOne(t)}canScroll(e){let t=this.canScroll3D(e);for(let e=3;e<this.length();++e)t=t||this.moreThanOne(e);return t}getDimSize(e,t){if(e>this.length())return null;if(void 0===t)t=0;else if(t<0||t>e)throw new Error(\"Invalid start value for getDimSize\");let n=1;for(let i=t;i<e;++i)n*=this.get(i);return n}getTotalSize(e){return this.getDimSize(this.length(),e)}equals(e){if(!e)return!1;const t=this.length();if(t!==e.length())return!1;for(let n=0;n<t;++n)if(this.get(n)!==e.get(n))return!1;return!0}isInBounds(e,t){if(!e)return!1;const n=this.length();if(n!==e.length())return!1;if(void 0===t){t=[];for(let e=0;e<n;++e)t.push(e)}else for(let e=0;e<n;++e)if(t[e]>n-1)throw new Error(\"Wrong input dir value: \"+t[e]);for(let n=0;n<t.length;++n)if(i=e.get(t[n]),r=this.get(t[n]),!(i>=0&&i<r))return!1;var i,r;return!0}indexToOffset(e,t){if(e.length()<this.length())throw new Error(\"Incompatible index and size length\");if(void 0===t)t=0;else if(t<0||t>this.length()-1)throw new Error(\"Invalid start value for indexToOffset\");let n=0;for(let i=t;i<this.length();++i)n+=e.get(i)*this.getDimSize(i,t);return n}offsetToIndex(e){const t=new Array(this.length());let n=e,i=0;for(let e=this.length()-1;e>0;--e)i=this.getDimSize(e),t[e]=Math.floor(n/i),n-=t[e]*i;return t[0]=n,new s(t)}get2D(){return{x:this.get(0),y:this.get(1)}}}class _e{min;max;mean;stdDev;median;p25;p75;constructor(e,t,n,i){this.min=e,this.max=t,this.mean=n,this.stdDev=i}}function Ke(e,t){return function(e){return null!=e&&(e.includes(\"median\")||e.includes(\"p25\")||e.includes(\"p75\"))}(t)?function(e){const t=Je(e);return e.sort((function(e,t){return e-t})),t.median=$e(e,.5),t.p25=$e(e,.25),t.p75=$e(e,.75),t}(e):Je(e)}function Je(e){let t=e[0],n=t,i=0,r=0,o=0;const a=e.length;for(let s=0;s<a;++s)o=e[s],o<t?t=o:o>n&&(n=o),i+=o,r+=o*o;const s=i/a;let l=r/a-s*s;l<0&&(l=0);const c=Math.sqrt(l);return new _e(t,n,s,c)}function $e(e,t){if(0===e.length)throw new Error(\"Empty array provided for percentile calculation.\");if(t<0||t>1)throw new Error(\"Invalid ratio provided for percentile calculation: \"+t);if(0===t)return e[0];if(1===t)return e[e.length-1];const n=(e.length-1)*t,i=Math.floor(n),r=e[i];return r+(e[i+1]-r)*(n-i)}function et(){return Math.random().toString(36).substring(2,15)}class tt{min;max;constructor(e,t){this.min=e,this.max=t}}class nt{#e;constructor(e){if(!e||void 0===e)throw new Error(\"Cannot create spacing with no values.\");if(0===e.length)throw new Error(\"Cannot create spacing with empty values.\");if(!e.every((function(e){return!isNaN(e)&&0!==e})))throw new Error(\"Cannot create spacing with non number or zero values.\");this.#e=e}get(e){return this.#e[e]}length(){return this.#e.length}toString(){return\"(\"+this.#e.toString()+\")\"}getValues(){return this.#e.slice()}equals(e){if(!e)return!1;const t=this.length();if(t!==e.length())return!1;for(let n=0;n<t;++n)if(this.get(n)!==e.get(n))return!1;return!0}get2D(){return{x:this.get(0),y:this.get(1)}}}class it{#W;#Y;#X;#j={};#Z;#_=x();#K=!1;constructor(e,t,n,i,r){this.#W=[e],this.#Y=t,this.#X=n,void 0!==r&&(this.#Z=r,this.#j[r]=[e]),void 0!==i&&(this.#_=i)}getInitialTime(){return this.#Z}getCurrentTotalNumberOfSlices(){const e=Object.keys(this.#j);if(0===e.length)return this.#W.length;let t=0;for(let n=0;n<e.length;++n)t+=this.#j[e[n]].length;return t}hasSlicesAtTime(e){return void 0!==this.#j[e]}getCurrentNumberOfSlicesBeforeTime(e){const t=Object.keys(this.#j);if(0===t.length)return;let n=0;for(let i=0;i<t.length;++i){const r=t[i];if(parseInt(r,10)===e)break;n+=this.#j[r].length}return n}getOrigin(){return this.#W[0]}getOrigins(){return this.#W}includesOrigin(e,t){for(let n=0;n<this.#W.length;++n)if(this.#W[n].isSimilar(e,t))return!0;return!1}getSize(e){let t=this.#Y;if(e&&void 0!==e){let n=rt([this.#Y.get(0),this.#Y.get(1),this.#Y.get(2)],e);n=n.map(Math.abs),t=new Ze(n.concat(this.#Y.getValues().slice(3)))}return t}#J(){const e=function(e){if(e.length<=1)return;const t=[];for(let n=0;n<e.length-1;++n){const i=e[n],r=e[n+1],o=i.getDistance(r);if(0===o)throw new Error(\"Zero slice spacing \"+i.toString()+\" \"+r.toString());t.push(o)}const n=Je(t),i=G(n.mean,4);return n.stdDev>O&&c.warn(\"Varying slice spacing, value: \"+i+\" (mean: \"+n.mean+\", min: \"+n.min+\", max: \"+n.max+\", stdDev: \"+n.stdDev+\")\"),i}(this.#W);if(void 0!==e&&this.#X.get(2)!==e){c.trace(\"Using geometric spacing \"+e+\" instead of tag spacing \"+this.#X.get(2));const t=this.#X.getValues();t[2]=e,this.#X=new nt(t)}}getSpacing(e){this.#K&&(this.#J(),this.#K=!1);let t=this.#X;if(e&&void 0!==e){let n=rt([this.#X.get(0),this.#X.get(1),this.#X.get(2)],e);n=n.map(Math.abs),t=new nt(n)}return t}getRealSpacing(){return this.getSpacing(this.#_.getInverse().asOneAndZeros())}getOrientation(){return this.#_}getSliceIndex(e,t){let n=this.#W;void 0!==t&&(n=this.#j[t]);const i=e.getClosest(n),r=n[i],o=e.minus(r);return new w(this.#_.get(0,2),this.#_.get(1,2),this.#_.get(2,2)).isCodirectional(o)?i+1:i}appendOrigin(e,t,n){const i=function(t){return t.equals(e)};if(void 0!==n){if(void 0!==this.#j[n].find(i))throw new Error(\"Cannot append same time origin twice\");this.#j[n].splice(t,0,e)}if(void 0===n||n===this.#Z){if(void 0!==this.#W.find(i))throw new Error(\"Cannot append same origin twice\");this.#K=!0,this.#W.splice(t,0,e);const n=this.#Y.getValues();n[2]+=1,this.#Y=new Ze(n)}}appendFrame(e,t){this.#j[t]=[e];const n=this.#Y.getValues(),i=this.#X.getValues();4===n.length?n[3]+=1:(n.push(2),i.push(1)),this.#Y=new Ze(n),this.#X=new nt(i)}toString(){return\"Origin: \"+this.getOrigin()+\", Size: \"+this.getSize()+\", Spacing: \"+this.getSpacing()+\", Orientation: \"+this.getOrientation()}equals(e){return null!==e&&this.getOrigin().equals(e.getOrigin())&&this.getSize().equals(e.getSize())&&this.getSpacing().equals(e.getSpacing())}isInBounds(e){return this.isIndexInBounds(this.worldToIndex(e))}isIndexInBounds(e,t){return this.getSize().isInBounds(e,t)}indexToWorld(e){const t=this.getSpacing(),n=new E(e.get(0)*t.get(0),e.get(1)*t.get(1),e.get(2)*t.get(2)),i=this.getOrientation().multiplyPoint3D(n),r=e.getValues(),o=this.getOrigin();return r[0]=o.getX()+i.getX(),r[1]=o.getY()+i.getY(),r[2]=o.getZ()+i.getZ(),new q(r)}pointToWorld(e){const t=this.getSpacing(),n=new E(e.getX()*t.get(0),e.getY()*t.get(1),e.getZ()*t.get(2)),i=this.getOrientation().multiplyPoint3D(n),r=this.getOrigin();return new E(r.getX()+i.getX(),r.getY()+i.getY(),r.getZ()+i.getZ())}worldToIndex(e){const t=this.getOrigin(),n=new E(e.get(0)-t.getX(),e.get(1)-t.getY(),e.get(2)-t.getZ()),i=this.getOrientation().getInverse().multiplyPoint3D(n),r=e.getValues(),o=this.getSpacing();return r[0]=Math.round(i.getX()/o.get(0)),r[1]=Math.round(i.getY()/o.get(1)),r[2]=Math.round(i.getZ()/o.get(2)),new s(r)}worldToPoint(e){const t=this.getOrigin(),n=new E(e.get(0)-t.getX(),e.get(1)-t.getY(),e.get(2)-t.getZ()),i=this.getOrientation().getInverse().multiplyPoint3D(n),r=e.getValues(),o=this.getSpacing();return r[0]=i.getX()/o.get(0),r[1]=i.getY()/o.get(1),r[2]=i.getZ()/o.get(2),new E(r[0],r[1],r[2])}}function rt(e,t){return t.getInverse().multiplyArray3D(e)}function ot(e,t){return t.multiplyArray3D(e)}function at(e){return(\"0\"+e).slice(-2)}function st(e){if(void 0===e)return;if(1!==e.value.length)return;const t=e.value[0];let n=4,i=6;return 10===t.length&&(n=5,i=8),{year:parseInt(t.substring(0,4),10),monthIndex:t.length>=n+2?parseInt(t.substring(n,n+2),10)-1:0,day:t.length===i+2?parseInt(t.substring(i,i+2),10):0}}function lt(e){if(void 0===e)return;if(1!==e.value.length)return;const t=e.value[0],n=parseInt(t.substring(0,2),10),i=t.length>=4?parseInt(t.substring(2,4),10):0,r=t.length>=6?parseInt(t.substring(4,6),10):0,o=t.length>=8?t.substring(7,10):0;return{hours:n,minutes:i,seconds:r,milliseconds:0===o?0:parseInt(o,10)*Math.pow(10,3-o.length)}}function ct(e){return{year:e.getFullYear().toString(),monthIndex:at((e.getMonth()+1).toString()),day:at(e.getDate().toString())}}function ut(e){return{hours:at(e.getHours().toString()),minutes:at(e.getMinutes().toString()),seconds:at(e.getSeconds().toString())}}function dt(e){return e.year+e.monthIndex+e.day}function ht(e){return e.hours+e.minutes+e.seconds}function St(){return new b([1,0,0,0,0,1,0,-1,0])}const gt={Axial:\"axial\",Coronal:\"coronal\",Sagittal:\"sagittal\"};function pt(e){let t;return e===gt.Axial?t=x():e===gt.Coronal?t=St():e===gt.Sagittal&&(t=new b([0,0,-1,1,0,0,0,-1,0])),t}function mt(e){const t=new w(e.get(0,0),e.get(1,0),e.get(2,0)),n=new w(e.get(0,1),e.get(1,1),e.get(2,1)),i=new w(e.get(0,2),e.get(1,2),e.get(2,2));return ft(t)+ft(n)+ft(i)}function ft(e){let t=new w(Math.abs(e.getX()),Math.abs(e.getY()),Math.abs(e.getZ())),n=\"\";const i=e.getX()<0?\"R\":\"L\",r=e.getY()<0?\"A\":\"P\",o=e.getZ()<0?\"I\":\"S\",a=1e-4;for(let e=0;e<3;e++)if(t.getX()>a&&t.getX()>t.getY()&&t.getX()>t.getZ())n+=i,t=new w(0,t.getY(),t.getZ());else if(t.getY()>a&&t.getY()>t.getX()&&t.getY()>t.getZ())n+=r,t=new w(t.getX(),0,t.getZ());else{if(!(t.getZ()>a&&t.getZ()>t.getX()&&t.getZ()>t.getY()))break;n+=o,t=new w(t.getX(),t.getY(),0)}return n}function Dt(e){let t;const n=yt(e);return void 0!==n&&(t=function(e){let t;return[\"LPS\",\"LAI\",\"RPI\",\"RAS\",\"ALS\",\"ARI\",\"PLI\",\"PRS\"].includes(e)?t=gt.Axial:[\"LSA\",\"LIP\",\"RSP\",\"RIA\",\"ILA\",\"IRP\",\"SLP\",\"SRA\"].includes(e)?t=gt.Coronal:[\"PSL\",\"PIR\",\"ASR\",\"AIL\",\"IAR\",\"IPL\",\"SAL\",\"SPR\"].includes(e)&&(t=gt.Sagittal),t}(mt(n.asOneAndZeros()))),t}function yt(e){let t;if(void 0!==e&&6===e.length){const n=new w(e[0],e[1],e[2]),i=new w(e[3],e[4],e[5]),r=n.crossProduct(i);t=new b([n.getX(),i.getX(),r.getX(),n.getY(),i.getY(),r.getY(),n.getZ(),i.getZ(),r.getZ()])}return t}function Ct(e,t){let n=x();return void 0!==t&&(n=e.asOneAndZeros().getInverse().multiply(t)),n.getAbs()}function vt(e){const t=e[\"00280010\"];if(void 0===t)throw new Error(\"Missing DICOM image number of rows\");if(0===t.value.length)throw new Error(\"Empty DICOM image number of rows\");const n=e[\"00280011\"];if(void 0===n)throw new Error(\"Missing DICOM image number of columns\");if(0===n.value.length)throw new Error(\"Empty DICOM image number of columns\");return[n.value[0],t.value[0]]}function It(e){if(void 0===e[\"00280030\"])return null;const t=e[\"00280030\"],n=[parseFloat(t.value[1]),parseFloat(t.value[0])];return void 0!==e[\"00180088\"]&&n.push(parseFloat(e[\"00180088\"].value[0])),new nt(n)}function Tt(e,t,n){let i=\"\";if(void 0===e)i+=\" \"+t+\" is undefined,\";else if(0===e.value.length)i+=\" \"+t+\" is empty,\";else if(void 0!==n)for(let r=0;r<n.length;++r)e.value.includes(n[r])||(i+=\" \"+t+\" does not contain \"+n[r]+\" (value: \"+e.value+\"),\");return i}class Lt{getTime(e){}}class Pt{#$;#ee;getWarning(){return this.#$}checkElements(e){let t;this.#$=void 0,vt(e);const n=e[\"00080060\"];if(void 0!==n&&(t=n.value[0],\"PT\"===t)){const t=function(e){let t,n=\"\";n+=Tt(e[\"00280051\"],\"Corrected Image (00280051)\",[\"ATTN\",\"DECY\"]),n+=Tt(e[\"00541102\"],\"Decay Correction (00541102)\",[\"START\"]),n+=Tt(e[\"00541001\"],\"Units (00541001)\",[\"BQML\"]);const i=e[\"00101030\"],r=Tt(i,\" PatientWeight (00101030)\");if(0===r.length){const e=parseFloat(i.value[0]);isNaN(e)?n+=\" PatientWeight is not a number\":t=e}else n+=r;const o=function(e){let t,n=\"\";const i=st(e[\"00080021\"]);let r,o,a;const s=e[\"00540016\"];if(n+=Tt(s,\"RadiopharmaceuticalInformationSequence (00540016)\"),void 0!==s){1!==s.value.length&&c.warn(\"Found more than 1 istopes in RadiopharmaceuticalInformation Sequence.\");const e=\"RadionuclideTotalDose (00181074)\",l=s.value[0][\"00181074\"];if(t=Tt(l,e),0===t.length){const e=parseFloat(l.value[0]);isNaN(e)?n+=\" TotalDose is not a number\":r=e}else n+=t;const u=\"RadionuclideHalfLife (00181075)\",d=s.value[0][\"00181075\"];if(t=Tt(d,u),0===t.length){const e=parseFloat(d.value[0]);isNaN(e)?n+=\" HalfLife is not a number\":o=e}else n+=t;const h=s.value[0][\"00181078\"];let S,g;if(void 0===h)S=i,g=lt(s.value[0][\"00181072\"]);else{const e=function(e){if(void 0===e)return;if(1!==e.value.length)return;const t=e.value[0].split(\"&\")[0],n=new Ie(\"DA\");n.value=[t.substring(0,8)];const i=st(n),r=new Ie(\"TM\");return r.value=[t.substring(8)],{date:i,time:t.length>=9?lt(r):void 0}}(h);S=e.date,g=e.time}void 0===g&&(g={hours:0,minutes:0,seconds:0,milliseconds:0}),a=new Date(S.year,S.monthIndex,S.day,g.hours,g.minutes,g.seconds,g.milliseconds)}const l=lt(e[\"00080031\"]);let u=new Date(i.year,i.monthIndex,i.day,l.hours,l.minutes,l.seconds,l.milliseconds);const d=e[\"00080022\"],h=e[\"00080032\"];if(void 0!==d&&void 0!==h){const t=st(d),i=lt(h),r=new Date(t.year,t.monthIndex,t.day,i.hours,i.minutes,i.seconds,i.milliseconds);if(u>r){const a=\"Series date/time is after Aquisition date/time (diff=\"+(u.getTime()-r.getTime()).toString()+\"ms) \";c.debug(a);let s=0;const l=\"FrameReferenceTime (00541300)\",d=e[\"00541300\"];n+=Tt(d,l),void 0!==d&&(s=d.value[0]);let h=0;const S=\"ActualFrameDuration (0018,1242)\",g=e[\"00181242\"];if(n+=Tt(g,S),void 0!==g&&(h=g.value[0]),s>0&&h>0){h/=1e3,s/=1e3;const e=Math.log(2)/o,n=e*h,r=1/e*Math.log(n/(1-Math.exp(-n)))-s;u=new Date(t.year,t.monthIndex,t.day,i.hours,i.minutes,i.seconds+r,i.milliseconds)}}}let S;if(void 0!==u&&void 0!==a&&void 0!==r&&void 0!==o){const e=(u.getTime()-a.getTime())/1e3;S=r*Math.pow(2,-e/o)}return{value:S,warning:n}}(e);n+=o.warning;const a={};return 0!==n.length?a.warning=\"Cannot calculate PET SUV:\"+n:a.value=1e3*t/o.value,a}(e);this.#ee=t.value,this.#$=t.warning}return this.#$}create(e,t,n){const i=vt(e),r=[i[0],i[1],1],o=e[\"00280008\"];if(void 0!==o){const e=parseInt(o.value[0],10);e>1&&r.push(e)}const a=new Ze(r),s=function(e){let t=1,n=1;const i=[\"00280030\",\"00181164\",\"00182010\",\"00280034\"];for(let r=0;r<i.length;++r){const o=e[i[r]];if(o&&2===o.value.length){t=parseFloat(o.value[0]),n=parseFloat(o.value[1]);break}}return 0===n&&(c.warn(\"Zero column spacing.\"),n=1),0===t&&(c.warn(\"Zero row spacing.\"),t=1),new nt([n,t,1])}(e),l=e[\"00020010\"].value[0],d=qe(l),h=Fe(l),S=Ee(l),g=e[\"00200032\"];let p=new Array(0,0,0);void 0!==g&&(p=[parseFloat(g.value[0]),parseFloat(g.value[1]),parseFloat(g.value[2])]);const m=function(e){const t=e[\"00200037\"];let n;return void 0!==t&&(n=yt(t.value.map((e=>parseFloat(e))))),n}(e),f=new E(p[0],p[1],p[2]),y=(new Lt).getTime(e),C=new it(f,a,s,m,y);let v;const I=e[\"00080018\"];void 0!==I&&(v=I.value[0]);let T=1;const L=e[\"00280002\"];void 0!==L&&(T=L.value[0]);const P=a.getTotalSize()*T;if(P!==t.length){if(c.warn(\"Badly sized pixel buffer: \"+t.length+\" != \"+P),!(P<t.length))throw new Error(\"Underestimated buffer size, can't fix it...\");t=t.slice(0,a.getTotalSize())}const w=new Un(C,t,[v]),O=e[\"00280004\"];if(void 0!==O){let e=O.value[0].toUpperCase();(d||h||S)&&\"MONOCHROME1\"!==e&&\"MONOCHROME2\"!==e&&(e=\"RGB\"),\"RGB\"===e&&1===T&&(e=\"PALETTE COLOR\"),w.setPhotometricInterpretation(e)}const A=e[\"00280006\"];void 0!==A&&w.setPlanarConfiguration(A.value[0]);let b=1;const x=e[\"00281053\"];if(void 0!==x){const e=parseFloat(x.value[0]);isNaN(e)||(b=e)}let R=0;const F=e[\"00281052\"];if(void 0!==F){const e=parseFloat(F.value[0]);isNaN(e)||(R=e)}const q={numberOfFiles:n},U=e[\"00080060\"];void 0!==U&&(q.Modality=U.value[0]);let M=!1,Q=1;void 0!==this.#ee&&(M=!0,Q=this.#ee,c.info(\"Applying PET SUV calibration: \"+Q),b*=Q,R*=Q);const V=new je(b,R);w.setRescaleSlopeAndIntercept(V);const N=function(t){let n;const i=e[t];return void 0!==i&&(n=i.value[0]),n};if(q.TransferSyntaxUID=N(\"00020010\"),q.MediaStorageSOPClassUID=N(\"00020002\"),q.SOPClassUID=N(\"00080016\"),q.Modality=N(\"00080060\"),q.ImageType=N(\"00080008\"),q.SamplesPerPixel=N(\"00280002\"),q.PhotometricInterpretation=N(\"00280004\"),q.PixelRepresentation=N(\"00280103\"),q.BitsAllocated=N(\"00280100\"),q.BitsStored=N(\"00280101\"),q.HighBit=N(\"00280102\"),q.StudyDate=N(\"00080020\"),q.StudyTime=N(\"00080030\"),q.StudyInstanceUID=N(\"0020000D\"),q.StudyID=N(\"00200010\"),q.SeriesInstanceUID=N(\"0020000E\"),q.SeriesNumber=N(\"00200011\"),q.ReferringPhysicianName=N(\"00080090\"),q.PatientName=N(\"00100010\"),q.PatientID=N(\"00100020\"),q.PatientBirthDate=N(\"00100030\"),q.PatientSex=N(\"00100040\"),q.Manufacturer=N(\"00080070\"),q.ManufacturerModelName=N(\"00081090\"),q.DeviceSerialNumber=N(\"00181000\"),q.SoftwareVersions=N(\"00181020\"),q.ImageOrientationPatient=N(\"00200037\"),q.FrameOfReferenceUID=N(\"00200052\"),q.IsSigned=1===q.PixelRepresentation,M)q.pixelUnit=\"SUV\";else{const t=function(e){let t;const n=[\"00281054\",\"00541001\"];for(let i=0;i<n.length;++i){const r=e[n[i]];if(void 0!==r){t=r.value[0];break}}if(void 0===t){const n=e[\"00080060\"];void 0!==n&&\"CT\"===n.value[0]&&(t=\"HU\")}return t}(e);void 0!==t&&(q.pixelUnit=t)}const B={},G=e[\"00281050\"],k=e[\"00281051\"],H=e[\"00281055\"];if(void 0!==G&&void 0!==k){let e;for(let t=0;t<G.value.length;++t){const n=parseFloat(G.value[t]);let i=parseFloat(k.value[t]);n&&i&&0!==i&&(e=\"\",void 0!==H&&(e=H.value[t]),\"\"===e&&(e=\"Default\"+t),i*=Q,i<1&&(i=1),B[e]={wl:[new u(n*Q,i)],name:e}),0===i&&c.warn(\"Zero window width found in DICOM.\")}}if(q.windowPresets=B,\"PALETTE COLOR\"===w.getPhotometricInterpretation()){const t=e[\"00281201\"],n=e[\"00281202\"],i=e[\"00281203\"];let r,o,a;const s=e[\"00281101\"];if(void 0!==s&&3===s.value.length)if(16===s.value[2]){let l=!1,u=s.value[0];0===u&&(u=65536);const d=t.vl;if(d!==2*u&&(l=!0,c.info(\"16bits lut but size is not double. desc: \"+u+\" vl: \"+d)),8===parseInt(e[\"00280100\"].value[0],10)&&(l=!0,c.info(\"Scaling 16bits color lut since bits allocated is 8.\")),l){const e=function(e){return e>>8};r=t.value.map(e),o=n.value.map(e),a=i.value.map(e)}}else if(8===s.value[2]){c.info(\"Scaling 16bits color lut since the lut descriptor is 8.\");let e=t.value.slice(0);r=Array.from(new Uint8Array(e.buffer)),e=n.value.slice(0),o=Array.from(new Uint8Array(e.buffer)),e=i.value.slice(0),a=Array.from(new Uint8Array(e.buffer))}D.palette={red:r,green:o,blue:a}}const z=e[\"00082144\"];return void 0!==z&&(q.RecommendedDisplayFrameRate=parseInt(z.value[0],10)),w.setMeta(q),w}}class wt{#O=!0;#x;constructor(e,t){void 0!==t&&(this.#O=t),this.#x=new DataView(e)}writeUint8(e,t){return this.#x.setUint8(e,t),e+Uint8Array.BYTES_PER_ELEMENT}writeInt8(e,t){return this.#x.setInt8(e,t),e+Int8Array.BYTES_PER_ELEMENT}writeUint16(e,t){return this.#x.setUint16(e,t,this.#O),e+Uint16Array.BYTES_PER_ELEMENT}writeInt16(e,t){return this.#x.setInt16(e,t,this.#O),e+Int16Array.BYTES_PER_ELEMENT}writeUint32(e,t){return this.#x.setUint32(e,t,this.#O),e+Uint32Array.BYTES_PER_ELEMENT}writeUint64(e,t){return this.#x.setBigUint64(e,t,this.#O),e+BigUint64Array.BYTES_PER_ELEMENT}writeInt32(e,t){return this.#x.setInt32(e,t,this.#O),e+Int32Array.BYTES_PER_ELEMENT}writeInt64(e,t){return this.#x.setBigInt64(e,t,this.#O),e+BigInt64Array.BYTES_PER_ELEMENT}writeFloat32(e,t){return this.#x.setFloat32(e,t,this.#O),e+Float32Array.BYTES_PER_ELEMENT}writeFloat64(e,t){return this.#x.setFloat64(e,t,this.#O),e+Float64Array.BYTES_PER_ELEMENT}writeHex(e,t){const n=parseInt(t,16);return this.#x.setUint16(e,n,this.#O),e+Uint16Array.BYTES_PER_ELEMENT}writeBinaryArray(e,t){if(t.length%8!=0)throw new Error(\"Cannot write boolean array as binary.\");let n=null,i=null;for(let r=0,o=t.length;r<o;r+=8){n=0;for(let e=0;e<8;++e)i=0===t[r+e]?0:1,n+=i<<e;e=this.writeUint8(e,n)}return e}writeUint8Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint8(e,t[n]);return e}writeInt8Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt8(e,t[n]);return e}writeUint16Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint16(e,t[n]);return e}writeInt16Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt16(e,t[n]);return e}writeUint32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint32(e,t[n]);return e}writeUint64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeUint64(e,t[n]);return e}writeInt32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt32(e,t[n]);return e}writeInt64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeInt64(e,t[n]);return e}writeFloat32Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeFloat32(e,t[n]);return e}writeFloat64Array(e,t){for(let n=0,i=t.length;n<i;++n)e=this.writeFloat64(e,t[n]);return e}}let Ot=0;class At{action;value;constructor(e){this.action=e}}const bt={copy:function(e){return e},remove:function(){return null},clear:function(e){return e.value=[],e},replace:function(e,t){return e.value=[t],e}};function xt(e){const t=\"1.2.826.0.1.3680043.9.7278.1.\";let n=\"\";if(\"ImplementationClassUID\"===e)n=t+\"0.34.0\";else{const i=\".\"+(new Date).toISOString().replace(/\\D/g,\"\").substring(0,14);Ot+=1;const r=\".\"+Ot;n=t;const o=29+r.length+i.length,a=Math.min(e.length,64-o);if(a>1){let t=\"\";for(let n=0;n<a;++n)t+=e.charCodeAt(n);n+=t.substring(0,a)}n+=i+r}return n}function Rt(e){return e%2==0}function Ft(e){const t=ne[e];return void 0!==t&&\"string\"===t}function Et(e,t){const n=new Uint8Array(e.length+1);return n.set(e),n.set(t,e.length),n}class qt{encode(e){const t=new Uint8Array(e.length);for(let n=0,i=e.length;n<i;++n)t[n]=e.charCodeAt(n);return t}}const Ut=\"00080005\",Mt=\"00280100\";class Qt{#te=!1;#ne=!0;#ie={default:{action:\"copy\",value:null}};#re=this.#ie;#oe=[];#ae=new qt;#se=this.#ae;setUseUnVrForPrivateSq(e){this.#te=e}setFixUnknownVR(e){this.#ne=e}setRules(e,t){if(this.#re=e,this.#oe=[],t){const t=Object.keys(e);for(const n of t){const t=e[n];if(\"replace\"===t.action&&void 0!==t.value&&null!==t.value){let e,t=!1;if(8===n.length&&(t=void 0!==ge(n).getNameFromDictionary()),t)e=n;else{const t=ve(n);void 0!==t&&(e=t.getKey())}void 0!==e&&this.#oe.push(e)}}}}#le(e){return this.#ae.encode(e)}#ce(e){return this.#se.encode(e)}useSpecialTextEncoder(){this.#se=new TextEncoder}getElementToWrite(e){const t=e.tag.getGroupName(),n=e.tag.getNameFromDictionary();let i;return i=void 0!==this.#re[e.tag.getKey()]?this.#re[e.tag.getKey()]:void 0!==n&&void 0!==this.#re[n]?this.#re[n]:void 0!==this.#re[t]?this.#re[t]:this.#re.default,bt[i.action](e,i.value)}#ue(e,t,n,i){let r;for(let o=0;o<n.length;++o){if(r=n[o],0===r.length)continue;let a=!1;const s=r.find((e=>me(e.tag)));void 0!==s&&void 0!==s.undefinedLength&&(a=s.undefinedLength);const l=new Ie(\"NONE\");l.vl=a?4294967295:s.vl,l.tag=pe(),l.value=[],t=this.#de(e,l,t,i);for(const n of r)me(n.tag)||fe(n.tag)||(t=this.#de(e,n,t,i));if(a){const n=new Ie(\"NONE\");n.vl=0,n.tag=new he(\"FFFE\",\"E00D\"),n.value=[],t=this.#de(e,n,t,i)}}return t}#he(e,t,n,i,r){const o=n;if(\"NONE\"===t.vr);else if(i instanceof Uint8Array)n=i.length===8*t.vl?e.writeBinaryArray(n,i):e.writeUint8Array(n,i);else if(i instanceof Int8Array)n=e.writeInt8Array(n,i);else if(i instanceof Uint16Array)n=e.writeUint16Array(n,i);else if(i instanceof Int16Array)n=e.writeInt16Array(n,i);else if(i instanceof Uint32Array)n=e.writeUint32Array(n,i);else if(i instanceof Int32Array)n=e.writeInt32Array(n,i);else if(i instanceof BigUint64Array)n=e.writeUint64Array(n,i);else if(i instanceof BigInt64Array)n=e.writeInt64Array(n,i);else{const o=ne[t.vr];if(void 0!==o)if(\"Uint8\"===o)n=e.writeUint8Array(n,i);else if(\"Uint16\"===o)n=e.writeUint16Array(n,i);else if(\"Int16\"===o)n=e.writeInt16Array(n,i);else if(\"Uint32\"===o)n=e.writeUint32Array(n,i);else if(\"Int32\"===o)n=e.writeInt32Array(n,i);else if(\"Uint64\"===o)n=e.writeUint64Array(n,i);else if(\"Int64\"===o)n=e.writeInt64Array(n,i);else if(\"Float32\"===o)n=e.writeFloat32Array(n,i);else if(\"Float64\"===o)n=e.writeFloat64Array(n,i);else{if(\"string\"!==o)throw new Error(\"Unknown VR type: \"+o);n=e.writeUint8Array(n,i)}else if(\"SQ\"===t.vr)n=this.#ue(e,n,i,r);else if(\"AT\"===t.vr)for(let t=0;t<i.length;++t){const r=i[t]+\"\",o=r.substring(1,5),a=r.substring(6,10),s=[parseInt(o,16),parseInt(a,16)];n=e.writeUint16Array(n,s)}else\"xs\"===t.vr?n=i instanceof Int16Array?e.writeInt16Array(n,i):e.writeUint16Array(n,i):c.warn(\"Unknown VR: \"+t.vr)}if(\"SQ\"!==t.vr&&\"NONE\"!==t.vr){const e=n-o;if(e!==t.vl){let n=\"Offset difference and VL are not equal: \"+e+\" != \"+t.vl;n+=\" (\",void 0!==t.tag&&(n+=t.tag+\", \"),n+=\"vr:\"+t.vr+\")\",c.warn(n)}}return n}#Se(e,t,n,i,r){let o=!1;if(void 0!==t.undefinedLength&&(o=t.undefinedLength),o){const o={};o.FFFEE000={tag:pe(),vr:\"NONE\",vl:0,value:[]};for(let e=0;e<i.length;++e)o[e]={tag:pe(),vr:t.vr,vl:i[e].length,value:i[e]};n=this.#ue(e,n,[o],r)}else{let o=i[0];i.length>1&&(o=function(e){const t=e.length,n=e[0].length;if(void 0===n)return e;const i=t*n,r=new e[0].constructor(i);for(let i=0;i<t;i++){const t=i*n;r.set(e[i],t)}return r}(i)),n=this.#he(e,t,n,o,r)}return n}#de(e,t,n,i){const r=t.tag.isWithVR(),o=!(!i&&r)||$(t.vr);n=e.writeHex(n,t.tag.getGroup()),n=e.writeHex(n,t.tag.getElement());let a=t.vr;this.#te&&t.tag.isPrivate()&&\"SQ\"===a&&(c.warn(\"Write element using VR=UN for private sequence.\"),a=\"UN\"),r&&!i&&(n=e.writeUint8Array(n,this.#le(a)),o&&(n+=2));let s=!1;(\"SQ\"===t.vr||Ce(t.tag))&&void 0!==t.undefinedLength&&(s=t.undefinedLength);let l=!1;me(t.tag)&&void 0!==t.undefinedLength&&(l=t.undefinedLength);let u=t.vl;(s||l)&&(u=4294967295),n=o?e.writeUint32(n,u):e.writeUint16(n,u);let d=t.value;if(void 0===d&&(d=[]),n=Ce(t.tag)?this.#Se(e,t,n,d,i):this.#he(e,t,n,d,i),s){const t=new Ie(\"NONE\");t.vl=0,t.tag=new he(\"FFFE\",\"E0DD\"),t.value=[],n=this.#de(e,t,n,i)}return n}getBuffer(e){const t=e[\"00020010\"].value[0],n=xe(t),i=Re(t);if(void 0!==e[Ut]){const t=e[Ut].value[0];void 0!==t&&\"ISO-IR 6\"!==t&&(c.debug(\"Change charset to UTF, was: \"+t),this.useSpecialTextEncoder(),e[Ut].value=[\"ISO_IR 192\"])}let r;void 0!==e[Mt]&&(r=e[Mt].value[0]);let o=132,a=0;const s=[],l=[];let u,d,h=0;const S=new he(\"0002\",\"0000\"),g=new he(\"0002\",\"0001\"),p=new he(\"0002\",\"0012\"),m=new he(\"0002\",\"0013\"),f=this.#oe.slice(),D=Object.keys(e);for(let t=0,c=D.length;t<c;++t){const c=e[D[t]];if(c.tag=ge(D[t]),u=this.getElementToWrite(c),!(null===u||S.equals(u.tag)||g.equals(u.tag)||p.equals(u.tag)||m.equals(u.tag))){a=0;const e=f.indexOf(u.tag.getKey());-1!==e&&f.splice(e,1),this.#ne&&Vt(u,!i),this.#ge(u,u.value,n,r),d=u.tag.getGroupName(),a+=Qe(u.vr,\"Meta Element\"!==d&&n),a+=u.vl,\"Meta Element\"===d?(s.push(u),h+=a):l.push(u),o+=a}}for(const e of f){const t=ge(e),i=new Ie(t.getVrFromDictionary());let r;if(i.tag=t,void 0!==this.#re[e])r=this.#re[e].value;else{const e=t.getNameFromDictionary();r=this.#re[e].value}let a=Qe(i.vr,n);a+=this.#ge(i,[r],n),l.push(i),o+=a}const y=Nt(\"FileMetaInformationVersion\");let C=Qe(y.vr,!1);C+=this.#ge(y,[0,1],!1),s.push(y),h+=C,o+=C;const v=Nt(\"ImplementationClassUID\");let I=Qe(v.vr,!1);const T=xt(\"ImplementationClassUID\").replace(\"-beta\",\".99\");I+=this.#ge(v,[T],!1),s.push(v),h+=I,o+=I;const L=Nt(\"ImplementationVersionName\");let P=Qe(L.vr,!1);const w=\"DWV_\"+\"0.34.0\".replace(\"-beta\",\".99\");P+=this.#ge(L,[w],!1),s.push(L),h+=P,o+=P;const O=function(e,t){return Se(e.tag,t.tag)};s.sort(O),l.sort(O);const A=Nt(\"FileMetaInformationGroupLength\");let b=Qe(A.vr,!1);b+=this.#ge(A,new Uint32Array([h]),!1),o+=b;const x=new ArrayBuffer(o),R=new wt(x),F=new wt(x,!i);let E=128;E=R.writeUint8Array(E,this.#le(\"DICM\")),E=this.#de(R,A,E,!1);for(let e=0,t=s.length;e<t;++e)E=this.#de(R,s[e],E,!1);const q=132+b+h;E!==q&&c.warn(\"Bad size calculation... meta offset: \"+E+\", calculated size:\"+q+\" (diff:\"+(E-q)+\")\");for(let e=0,t=l.length;e<t;++e)E=this.#de(F,l[e],E,n);return E!==o&&c.warn(\"Bad size calculation... final offset: \"+E+\", calculated size:\"+o+\" (diff:\"+(E-o)+\")\"),x}#ge(e,t,n,i){let r=0;if(\"SQ\"===e.vr){if(null!==t&&0!==t){const o=[];let a=!1;void 0!==e.undefinedLength&&(a=e.undefinedLength,delete e.undefinedLength);for(let e=0;e<t.length;++e){const s=t[e],l=[];let c=0;if(null===s||0===s)continue;let u=i;const d=s[Mt];void 0!==d&&void 0!==d.value&&(u=d.value[0]);const h=Object.keys(s);for(let e=0,t=h.length;e<t;++e){const t=h[e],i=s[t];i.tag=ge(t),me(i.tag)||(c+=this.#ge(i,i.value,n,u),l.push(i),c+=Qe(i.vr,n))}const S={tag:pe(),vr:\"NONE\",vl:c,value:[]};a&&(S.undefinedLength=a),l.push(S),c+=Qe(S.vr,n),a&&(c+=Qe(\"NONE\",n));const g=function(e,t){return Se(e.tag,t.tag)};l.sort(g),r+=c,o.push(l)}a&&(r+=Qe(\"NONE\",n)),e.value=o,e.vl=r,a&&(e.undefinedLength=a)}}else{if(Ft(o=e.vr)||\"OB\"===o){const n=function(e){let t=\"\";return Ft(e)&&(t=\"UI\"===e?\"\\0\":\" \"),t}(e.vr);if(Ft(e.vr)){let i;te(e.vr)?(t=this.#ce(t.join(\"\\\\\")),i=this.#ce(n)):(t=this.#le(t.join(\"\\\\\")),i=this.#le(n)),Rt(t.length)||(t=Et(t,i))}else\"OB\"===e.vr&&(t=function(e){if(null==e||void 0===e.length)throw new Error(\"Cannot pad undefined or null OB value.\");if(0!==e.length&&void 0!==e[0].length){let t=0;for(let n=0;n<e.length;++n)t+=e[n].length;Rt(t)||(e[e.length-1]=Et(e[e.length-1],[0]))}else Rt(e.length)||(e=Et(e,[0]));return e}(t))}if(r=0,\"AT\"===e.vr)r=4*t.length;else if(\"xs\"===e.vr)r=t.length*Uint16Array.BYTES_PER_ELEMENT;else if(function(e){const t=ne[e];return void 0!==t&&\"string\"!==t}(e.vr)||\"ox\"===e.vr){if(Ce(e.tag)&&Array.isArray(t)){r=0;for(let e=0;e<t.length;++e)r+=t[e].length}else r=t.length;const o=ne[e.vr];if(Ce(e.tag)||\"ox\"===e.vr)if(e.undefinedLength){const e=Qe(\"NONE\",n);r+=e,r+=e*t.length,r+=e}else void 0!==i&&(1===i?r/=8:16===i&&(r*=Uint16Array.BYTES_PER_ELEMENT));else{if(void 0===o)throw new Error(\"Unsupported element: \"+e.vr);{const e=function(e){let t;return\"Uint8\"===e?t=Uint8Array.BYTES_PER_ELEMENT:\"Uint16\"===e?t=Uint16Array.BYTES_PER_ELEMENT:\"Int16\"===e?t=Int16Array.BYTES_PER_ELEMENT:\"Uint32\"===e?t=Uint32Array.BYTES_PER_ELEMENT:\"Int32\"===e?t=Int32Array.BYTES_PER_ELEMENT:\"Float32\"===e?t=Float32Array.BYTES_PER_ELEMENT:\"Float64\"===e?t=Float64Array.BYTES_PER_ELEMENT:\"Uint64\"===e?t=BigUint64Array.BYTES_PER_ELEMENT:\"Int64\"===e&&(t=BigInt64Array.BYTES_PER_ELEMENT),t}(o);if(void 0===e)throw new Error(\"Unknown bytes per element for VR type: \"+o);r*=e}}}else r=t.length;e.value=t,e.vl=r}var o;return r}}function Vt(e,t){if(\"UN\"===e.vr){const n=e.tag.getVrFromDictionary();if(void 0!==n&&e.vr!==n){e.vr=n;const i=ne[e.vr];if(void 0!==i&&\"Uint8\"!==i&&\"string\"!==i){const n=function(e,t,n){let i;if(void 0===e.buffer)return i;const r=new Le(e.buffer,n),o=e.byteOffset,a=e.length,s=ne[t];return\"Uint16\"===s?i=r.readUint16Array(o,a):\"Uint32\"===s?i=r.readUint32Array(o,a):\"Uint64\"===s?i=r.readUint64Array(o,a):\"Int16\"===s?i=Array.from(r.readInt16Array(o,a)):\"Int32\"===s?i=Array.from(r.readInt32Array(o,a)):\"Int64\"===s?i=r.readInt64Array(o,a):\"Float32\"===s?i=Array.from(r.readFloat32Array(o,a)):\"Float64\"===s&&(i=Array.from(r.readFloat64Array(o,a))),i}(e.value,e.vr,t);void 0!==n&&(e.value=n)}c.info(\"Element \"+e.tag.getGroup()+\" \"+e.tag.getElement()+\" VR changed from UN to \"+e.vr)}}}function Nt(e){const t=ve(e),n=new Ie(t.getVrFromDictionary());return n.tag=t,n}function Bt(e){const t=Object.keys(e),n={};for(let i=0,r=t.length;i<r;++i){const r=ve(t[i]);if(void 0===r)continue;const o=r.getVrFromDictionary();let a,s=!1;const l=e[t[i]];if(\"SQ\"===o){const e=[];if(void 0!==l.undefinedLength&&(s=l.undefinedLength),void 0!==l.value&&null!==l.value)for(let t=0;t<l.value.length;++t)e.push(Bt(l.value[t]));else c.trace(\"Undefined or null simpleTag SQ value.\");a=e}else a=Array.isArray(l)?l:[l];const u=new Ie(o);u.tag=r,u.value=a,s&&(u.undefinedLength=s),n[r.getKey()]=u}return n}const Gt={CodeValue:\"00080100\",CodingSchemeDesignator:\"00080102\",CodeMeaning:\"00080104\",LongCodeValue:\"00080119\",URNCodeValue:\"00080120\"};class kt{meaning;value;longValue;urnValue;schemeDesignator;constructor(e){this.meaning=e}toString(){return\"(\"+this.value+\", \"+this.schemeDesignator+\", '\"+this.meaning+\"')\"}}function Ht(e,t){return Object.keys(e).length===Object.keys(t).length&&Object.keys(e).every((n=>Object.prototype.hasOwnProperty.call(t,n)&&e[n]===t[n]))}function zt(e){const t=new kt(e[Gt.CodeMeaning].value[0]);if(void 0!==e[Gt.CodeValue])t.value=e[Gt.CodeValue].value[0];else if(void 0!==e[Gt.LongCodeValue])t.longValue=e[Gt.LongCodeValue].value[0];else{if(void 0===e[Gt.URNCodeValue])throw new Error(\"Invalid code with no value, no long value and no urn value.\");t.urnValue=e[Gt.URNCodeValue].value[0]}if(void 0!==t.value||void 0!==t.longValue){if(void 0===e[Gt.CodingSchemeDesignator])throw new Error(\"No coding sheme designator when code value or long value is present\");t.schemeDesignator=e[Gt.CodingSchemeDesignator].value[0]}return t}function Wt(e){const t={};return void 0!==e.value?t.CodeValue=e.value:void 0!==e.longValue?t.LongCodeValue=e.longValue:void 0!==e.urnValue&&(t.URNCodeValue=e.urnValue),void 0!==e.schemeDesignator&&(t.CodingSchemeDesignator=e.schemeDesignator),t.CodeMeaning=e.meaning,t}const Yt={111030:\"Image Region\",112039:\"Tracking Identifier\",112040:\"Tracking Unique Identifier\",113048:\"Pixel by pixel Maximum\",113049:\"Pixel by pixel mean\",113051:\"Pixel by pixel Minimum\",113061:\"Standard Deviation\",113076:\"Segmentation\",121055:\"Path\",121207:\"Height\",121322:\"Source image for image processing operation\",121324:\"Source Image\",122438:\"Reference Points\",125007:\"Measurement Group\",125309:\"Short label\",128773:\"Reference Geometry\"},Xt={1483009:\"Angle\",42798e3:\"Area\",103355008:\"Width\",103339001:\"Long axis\",103340004:\"Short axis\",131190003:\"Radius\",261665006:\"Unknown\",410668003:\"Length\",718499004:\"Color\"},jt={1:\"No units\",mm:\"Millimeter\",deg:\"Degree - plane angle\",cm2:\"Square centimeter\",\"cm2/ml\":\"Square centimeter per milliliter\",\"/cm\":\"Per centimeter\",\"g/ml\":\"Gram per milliliter\",\"g/ml{SUVbw}\":\"Standardized Uptake Value body weight\",\"mg/ml\":\"Milligram per milliliter\",\"umol/ml\":\"Micromole per milliliter\",\"Bq/ml\":\"Becquerels per milliliter\",\"mg/min/ml\":\"Milligrams per minute per milliliter\",\"umol/min/ml\":\"Micromole per minute per milliliter\",\"ml/min/g\":\"Milliliter per minute per gram\",\"ml/g\":\"Milliliter per gram\",\"ml/min/ml\":\"Milliliter per minute per milliliter\",\"ml/ml\":\"Milliliter per milliliter\",\"%\":\"Percentage\",\"[hnsf'U]\":\"Hounsfield unit\",\"10*23/ml\":\"Electron density\",\"{counts}\":\"Counts\",\"{counts}/s\":\"Counts per second\",\"{propcounts}\":\"Proportional to counts\",\"{propcounts}/s\":\"Proportional to counts per second\"};function Zt(e,t){let n,i;return\"DCM\"===t?n=Yt[e]:\"SCT\"===t?n=Xt[e]:\"UCUM\"===t&&(n=jt[e]),void 0!==n&&(i=new kt(n),i.schemeDesignator=t,i.value=e),i}function _t(){return Zt(\"125007\",\"DCM\")}function Kt(){return Zt(\"128773\",\"DCM\")}function Jt(){return Zt(\"121324\",\"DCM\")}function $t(){return Zt(\"112039\",\"DCM\")}function en(){return Zt(\"125309\",\"DCM\")}function tn(){return Zt(\"122438\",\"DCM\")}function nn(){return Zt(\"718499004\",\"SCT\")}const rn={angle:{key:\"1483009\",scheme:\"SCT\"},length:{key:\"410668003\",scheme:\"SCT\"},surface:{key:\"42798000\",scheme:\"SCT\"},height:{key:\"121207\",scheme:\"DCM\"},width:{key:\"103355008\",scheme:\"SCT\"},radius:{key:\"131190003\",scheme:\"SCT\"},a:{key:\"103339001\",scheme:\"SCT\"},b:{key:\"103340004\",scheme:\"SCT\"},min:{key:\"113051\",scheme:\"DCM\"},max:{key:\"113048\",scheme:\"DCM\"},mean:{key:\"113049\",scheme:\"DCM\"},stddev:{key:\"113061\",scheme:\"DCM\"}};function on(e){let t;for(const n in rn){const i=rn[n];if(i.scheme===e.schemeDesignator&&i.key===e.value){t=n;break}}return t}const an={\"unit.mm\":\"mm\",\"unit.cm2\":\"cm2\",\"unit.degree\":\"deg\",HU:\"[hnsf'U]\",MGML:\"mg/ml\",ED:\"10*23/ml\",PCT:\"%\",CNTS:\"{counts}\",NONE:\"1\",CM2:\"cm2\",CM2ML:\"cm2/ml\",PCNT:\"%\",CPS:\"{counts}/s\",BQML:\"Bq/ml\",MGMINML:\"mg/min/ml\",UMOLMINML:\"umol/min/ml\",MLMING:\"ml/min/g\",MLG:\"ml/g\",\"1CM\":\"/cm\",UMOLML:\"umol/ml\",PROPCNTS:\"{propcounts}\",PROPCPS:\"{propcounts}/s\",MLMINML:\"ml/min/ml\",MLML:\"ml/ml\",GML:\"g/ml\",SUV:\"g/ml{SUVbw}\"};function sn(e){let t;for(const n in an){const i=an[n];if(\"UCUM\"===e.schemeDesignator&&i===e.value){t=n;break}}return t}const ln=\"00620005\",cn=\"00620009\",un=\"0062000C\",dn=\"0062000D\",hn=\"00620003\",Sn=\"0062000F\",gn=\"00620020\";class pn{number;label;algorithmType;algorithmName;displayValue;displayRGBValue;propertyTypeCode;propertyCategoryCode;trackingUid;trackingId;constructor(e,t,n){this.number=e,this.label=t,this.algorithmType=n}}function mn(e){const t=new pn(e[\"00620004\"].value[0],e[ln]?e[ln].value[0]:\"n/a\",e[\"00620008\"].value[0]);if(void 0!==e[cn]&&(t.algorithmName=e[cn].value[0]),void 0!==e[un])t.displayValue=e[un].value[0];else if(void 0!==e[dn]){const i=e[dn].value,r=function(e){return function(e){function t(e){let t=null;return t=e<=.0031308?12.92*e:1.055*Math.pow(e,.416666667)-.055,Math.min(1,Math.max(0,t))}const n=e.x/100,i=e.y/100,r=e.z/100;return{r:Math.round(255*t(3.2406*n-1.5372*i-.4986*r)),g:Math.round(255*t(-.9689*n+1.8758*i+.0415*r)),b:Math.round(255*t(.0557*n-.204*i+1.057*r))}}(function(e){function t(e){let t=null;return t=e>.206896552?Math.pow(e,3):.128418549*e-.017712903,t}const n=T,i=(e.l+16)/116;return{x:n.x*t(i+e.a/500),y:n.y*t(i),z:n.z*t(i-e.b/200)}}(e))}({l:.001525902*(n={l:i[0],a:i[1],b:i[2]}).l,a:.003891051*n.a-128,b:.003891051*n.b-128});t.displayRGBValue=r}var n;if(void 0===e[hn])throw new Error(\"Missing Segmented Property Category Code Sequence.\");if(t.propertyCategoryCode=zt(e[hn].value[0]),void 0===e[Sn])throw new Error(\"Missing Segmented Property Type Code Sequence.\");return t.propertyTypeCode=zt(e[Sn].value[0]),void 0!==e[gn]&&(t.trackingId=e[gn].value[0],t.trackingUid=e[\"00620021\"].value[0]),t}function fn(e){let t=e.algorithmType;void 0===t&&(t=\"MANUAL\");const n={SegmentNumber:e.number,SegmentLabel:e.label,SegmentAlgorithmType:t};if(\"MANUAL\"!==t&&void 0!==e.algorithmName&&(n.SegmentAlgorithmName=e.algorithmName),e.displayRGBValue){const t=I(L(e.displayRGBValue));n.RecommendedDisplayCIELabValue=[Math.round(t.l),Math.round(t.a),Math.round(t.b)]}else n.RecommendedDisplayGrayscaleValue=e.displayValue;return e.propertyCategoryCode&&(n.SegmentedPropertyCategoryCodeSequence={value:[Wt(e.propertyCategoryCode)]}),e.propertyTypeCode&&(n.SegmentedPropertyTypeCodeSequence={value:[Wt(e.propertyTypeCode)]}),e.trackingId&&(n.TrackingID=e.trackingId,n.TrackingUID=e.trackingUid),n}const Dn=\"00089124\",yn=\"00082112\",Cn=\"00081150\",vn=\"00081155\",In=\"00209116\",Tn=\"00289110\";class Ln{dimIndex;imagePosPat;derivationImages;refSegmentNumber;imageOrientationPatient;spacing;constructor(e,t,n,i){this.dimIndex=e,this.imagePosPat=t,this.derivationImages=n,this.refSegmentNumber=i}}function Pn(e){const t=[];if(void 0!==e[Dn]){const n=e[Dn].value;for(let e=0;e<n.length;++e){const i=[];if(void 0!==n[e][yn]){const t=n[e][yn].value;for(let e=0;e<t.length;++e){const n={};void 0!==t[e][Cn]&&(n.referencedSOPClassUID=t[e][Cn].value[0]),void 0!==t[e][vn]&&(n.referencedSOPInstanceUID=t[e][vn].value[0]),i.push(n)}}t.push({sourceImages:i})}}const n=e[\"00209111\"].value[0][\"00209157\"].value,i=e[\"0062000A\"].value,r=parseInt(i[0][\"0062000B\"].value[0],0),o=e[\"00209113\"].value[0][\"00200032\"].value;for(let e=0;e<o.length;++e)o[e]=parseFloat(o[e]);const a=new Ln(n,o,t,r);if(void 0!==e[In]){const t=e[In];if(0!==t.value.length){const e=t.value[0][\"00200037\"].value;void 0!==e&&(a.imageOrientationPatient=e)}}if(void 0!==e[Tn]){const t=e[Tn];if(0!==t.value.length){const e=It(t.value[0]);void 0!==e&&(a.spacing=e)}else c.warn(\"No shared functional group pixel measure sequence items.\")}return a}function wn(e){const t={FrameContentSequence:{value:[{DimensionIndexValues:e.dimIndex}]},PlanePositionSequence:{value:[{ImagePositionPatient:e.imagePosPat}]},SegmentIdentificationSequence:{value:[{ReferencedSegmentNumber:e.refSegmentNumber}]}};if(void 0!==e.derivationImages){const n=Wt(Zt(\"121322\",\"DCM\")),i=Wt(Zt(\"113076\",\"DCM\")),r=[];for(const t of e.derivationImages){const e=[];for(const i of t.sourceImages)e.push({PurposeOfReferenceCodeSequence:{value:[n]},ReferencedSOPClassUID:i.referencedSOPClassUID,ReferencedSOPInstanceUID:i.referencedSOPInstanceUID});r.push({DerivationCodeSequence:{value:[i]},SourceImageSequence:{value:e}})}t.DerivationImageSequence={value:r}}return t}function On(e,t){return JSON.stringify(e)===JSON.stringify(t)}function An(e,t){const n=e[t.tag];if(1===t.type||2===t.type){if(void 0===n)throw new Error(\"Missing or empty \"+t.name)}else if(void 0===n)return;let i,r=!1;if(i=1===n.value.length?n.value[0]:n.value,Array.isArray(i))for(let e=0;e<t.enum.length;++e){if(!Array.isArray(t.enum[e]))throw new Error(\"Cannot compare array and non array tag value.\");if(H(t.enum[e],i)){r=!0;break}}else r=t.enum.includes(i);if(!r)throw new Error(\"Unsupported \"+t.name+\" value: \"+i)}function bn(e,t,n){const i=e.getNumberOfComponents();let r,o;3===i?(r=function(t){return{r:e.getValueAtOffset(t),g:e.getValueAtOffset(t+1),b:e.getValueAtOffset(t+2)}},o=function(e,t){return void 0!==t.displayRGBValue&&e.r===t.displayRGBValue.r&&e.g===t.displayRGBValue.g&&e.b===t.displayRGBValue.b}):(r=function(t){return e.getValueAtOffset(t)},o=function(e,t){return e===t.displayValue});const a=e.getGeometry().getSize().getDimSize(2),s={};for(let e=0;e<a;++e){const l=r((n+e)*i);for(const n of t){const t=n.number-1;o(l,n)&&(void 0===s[t]&&(s[t]=new Uint8Array(a)),s[t][e]=1)}}return s}const xn=[{name:\"TransferSyntaxUID\",tag:\"00020010\",type:\"1\",enum:[re,oe,ae]},{name:\"MediaStorageSOPClassUID\",tag:\"00020002\",type:\"1\",enum:[\"1.2.840.10008.5.1.4.1.1.66.4\"]},{name:\"SOPClassUID\",tag:\"00020002\",type:\"1\",enum:[\"1.2.840.10008.5.1.4.1.1.66.4\"]},{name:\"Modality\",tag:\"00080060\",type:\"1\",enum:[\"SEG\"]},{name:\"SegmentationType\",tag:\"00620001\",type:\"1\",enum:[\"BINARY\"]},{name:\"DimensionOrganizationType\",tag:\"00209311\",type:\"3\",enum:[\"3D\"]},{name:\"ImageType\",tag:\"00080008\",type:\"1\",enum:[[\"DERIVED\",\"PRIMARY\"]]},{name:\"SamplesPerPixel\",tag:\"00280002\",type:\"1\",enum:[1]},{name:\"PhotometricInterpretation\",tag:\"00280004\",type:\"1\",enum:[\"MONOCHROME2\"]},{name:\"PixelRepresentation\",tag:\"00280103\",type:\"1\",enum:[0]},{name:\"BitsAllocated\",tag:\"00280100\",type:\"1\",enum:[1]},{name:\"BitsStored\",tag:\"00280101\",type:\"1\",enum:[1]},{name:\"HighBit\",tag:\"00280102\",type:\"1\",enum:[0]}];function Rn(){const e={};for(let t=0;t<xn.length;++t){const n=xn[t];e[n.name]=n.enum[0]}return e}class Fn{#$;getWarning(){return this.#$}checkElements(e){}create(e,t){for(let t=0;t<xn.length;++t)An(e,xn[t]);const n=vt(e),i=new Ze([n[0],n[1],1]),r=i.getTotalSize();let o=1;const a=e[\"00280008\"];if(void 0!==a&&(o=parseInt(a.value[0],10)),o!==t.length/r)throw new Error(\"Buffer and numberOfFrames meta are not equal.\"+o+\" \"+t.length/r);const l=function(e){const t=e[\"00209221\"];if(void 0===t||1!==t.value.length)throw new Error(\"Unsupported dimension organization sequence length\");const n=t.value[0][\"00209164\"].value[0],i=[],r=e[\"00209222\"];if(void 0!==r){const e=r.value;if(2!==e.length)throw new Error(\"Unsupported dimension index sequence length\");let t;for(let r=0;r<e.length;++r){const o=e[r][\"00209164\"].value[0];if(o!==n)throw new Error(\"Dimension Index Sequence contains a unknown Dimension Organization\");t=e[r][\"00209165\"].value[0];const a={DimensionOrganizationUID:o,DimensionIndexPointer:t};void 0!==e[r][\"00209421\"]&&(a.DimensionDescriptionLabel=e[r][\"00209421\"].value[0]),i.push(a)}if(\"(0020,0032)\"!==t)throw new Error(\"Unsupported non image position as last index\")}return{organizations:{value:[{DimensionOrganizationUID:n}]},indices:{value:i}}}(e),u=e[\"00620002\"];if(void 0===u)throw new Error(\"Missing or empty segmentation sequence\");const d=[];let h,S,g=!1;for(let e=0;e<u.value.length;++e){const t=mn(u.value[e]);void 0!==t.displayRGBValue&&(g=!0),d.push(t)}const p=e[52009229];if(void 0!==p){const e=p.value[0];if(void 0!==e[\"00209116\"]){const t=e[\"00209116\"];0!==t.value.length?S=t.value[0][\"00200037\"].value:c.warn(\"No shared functional group plane orientation sequence items.\")}if(void 0!==e[\"00289110\"]){const t=e[\"00289110\"];0!==t.value.length?h=It(t.value[0]):c.warn(\"No shared functional group pixel measure sequence items.\")}}const m=function(e,t){return e.some((function(e){return On(t,e)}))},f=function(e,t){return e.findIndex((function(e){return On(t,e)}))},D=e[52009230];if(void 0===D)throw new Error(\"Missing or empty per frame functional sequence\");if(o!==D.value.length)throw new Error(\"perFrameFuncGroupSequence meta and numberOfFrames are not equal.\");const y=[];for(let e=0;e<D.value.length;++e)y.push(Pn(D.value[e]));const C=[];for(let e=0;e<y.length;++e){if(m(C,y[e].imagePosPat)||C.push(y[e].imagePosPat),void 0!==y[e].imageOrientationPatient)if(void 0===S)S=y[e].imageOrientationPatient;else if(!H(S,y[e].imageOrientationPatient))throw new Error(\"Unsupported multi orientation dicom seg.\");if(void 0!==y[e].spacing)if(void 0===h)h=y[e].spacing;else if(!h.equals(y[e].spacing))throw new Error(\"Unsupported multi resolution dicom seg.\")}if(void 0===h)throw new Error(\"No spacing found for DICOM SEG\");if(3!==h.length())throw new Error(\"Incomplete spacing found for DICOM SEG\");if(void 0===S)throw new Error(\"No imageOrientationPatient found for DICOM SEG\");if(6!==S.length)throw new Error(\"Incomplete imageOrientationPatient found for DICOM SEG\");const v=new w(parseFloat(S[0]),parseFloat(S[1]),parseFloat(S[2])),I=new w(parseFloat(S[3]),parseFloat(S[4]),parseFloat(S[5])),T=v.crossProduct(I),L=new b([v.getX(),I.getX(),T.getX(),v.getY(),I.getY(),T.getY(),v.getZ(),I.getZ(),T.getZ()]);C.sort(function(e){const t=e.getInverse();return function(e,n){const i=t.multiplyArray3D(e),r=t.multiplyArray3D(n);return i[2]-r[2]}}(L));const P=function(e){return new E(e[0],e[1],e[2])},A=[];for(let e=0;e<C.length;++e)A.push(P(C[e]));const x=new it(A[0],i,h,L),R=function(e){let t=e>O;return t&&(t=e>10*O,t?(t=e>100*O,t||c.warn(\"Using larger+ real world epsilon in SEG pos pat adding\")):c.warn(\"Using larger real world epsilon in SEG pos pat adding\")),t},F=[];F.push(C[0]);let q=0;for(let e=1;e<C.length;++e){++q;let t=new s([0,0,q]),n=x.indexToWorld(t).get3D();const i=A[e];let r=i.getDistance(n);const o=r;for(;R(r);)if(c.debug(\"Adding intermediate pos pats for DICOM seg at \"+n.toString()),F.push([n.getX(),n.getY(),n.getZ()]),++q,t=new s([0,0,q]),n=x.indexToWorld(t).get3D(),r=i.getDistance(n),r>o)throw new Error(\"Test distance is increasing when adding intermediate pos pats\");F.push(C[e])}const U=F.length,M=new it(A[0],i,h,L),Q=[\"0\"];for(let e=1;e<U;++e)M.appendOrigin(P(F[e]),e),Q.push(e.toString());const V=function(e){return function(t){return t.number===e}},N=g?3:1,B=new t.constructor(N*r*U);B.fill(0);let G=null,k=null;for(let e=0;e<y.length;++e){q=f(F,y[e].imagePosPat),k=r*e,G=r*q;const n=d.find(V(y[e].refSegmentNumber));for(let e=0;e<r;++e)if(0!==t[k+e]){const t=N*(G+e);g?(B[t]=n.displayRGBValue.r,B[t+1]=n.displayRGBValue.g,B[t+2]=n.displayRGBValue.b):B[t]=n.displayValue}}const z=new Un(M,B,Q);g&&z.setPhotometricInterpretation(\"RGB\");const W=Rn(),Y=function(t){let n;const i=e[t];return void 0!==i&&(n=i.value[0]),n};W.StudyDate=Y(\"00080020\"),W.StudyTime=Y(\"00080030\"),W.StudyInstanceUID=Y(\"0020000D\"),W.StudyID=Y(\"00200010\"),W.SeriesDate=Y(\"00080021\"),W.SeriesTime=Y(\"00080031\"),W.SeriesInstanceUID=Y(\"0020000E\"),W.SeriesNumber=Y(\"00200011\"),W.ReferringPhysicianName=Y(\"00080090\"),W.PatientName=Y(\"00100010\"),W.PatientID=Y(\"00100020\"),W.PatientBirthDate=Y(\"00100030\"),W.PatientSex=Y(\"00100040\"),W.Manufacturer=Y(\"00080070\"),W.ManufacturerModelName=Y(\"00081090\"),W.DeviceSerialNumber=Y(\"00181000\"),W.SoftwareVersions=Y(\"00181020\"),W.DimensionOrganizationSequence=l.organizations,W.DimensionIndexSequence=l.indices,W.custom={segments:d,frameInfos:y,SOPInstanceUID:e[\"00080018\"].value[0]},W.numberOfFiles=U;const X=e[\"00200052\"];X&&(W.FrameOfReferenceUID=X.value[0]);const j=e[\"00282110\"];return j&&(W.LossyImageCompression=j.value[0]),z.setMeta(W),z}toDicom(e,t,n,i){const r=e.getMeta();void 0===t&&(t=r.segments);const o=e.getGeometry(),a=o.getSize();r.Rows=a.get(1),r.Columns=a.get(0);const s=new Date;r.ContentDate=dt(ct(s)),r.ContentTime=ht(ut(s)),void 0!==n&&(r.StudyInstanceUID=n.getMeta().StudyInstanceUID);const l=[];for(const e of t)l.push(fn(e));var u,d;r.SegmentSequence={value:l},r.SharedFunctionalGroupsSequence={value:[{PlaneOrientationSequence:{value:[(d=o.getOrientation(),{ImageOrientationPatient:[d.get(0,0),d.get(1,0),d.get(2,0),d.get(0,1),d.get(1,1),d.get(2,1)]})]},PixelMeasuresSequence:{value:[(u=o.getSpacing(),{SpacingBetweenSlices:u.get(2),PixelSpacing:[u.get(1),u.get(0)]})]}}]};const h=function(e,t){const n=e.getGeometry().getSize(),i=n.getDimSize(2),r={};for(let o=0;o<n.get(2);++o){const n=bn(e,t,o*i),a=Object.keys(n);for(const e of a)void 0===r[e]&&(r[e]={}),r[e][o]=n[e]}return r}(e,t),S=[],g=[],p=[];for(const i of t){const t=i.number,r=t-1;if(void 0===h[r])continue;const o=Object.keys(h[r]);for(let i=o.length-1;i>=0;--i){const a=Number.parseInt(o[i],10);g.push(h[r][a]);const s=e.getGeometry().getOrigins()[a],l=[s.getX(),s.getY(),s.getZ()],c={dimIndex:[t,o.length-i],imagePosPat:l,refSegmentNumber:t};if(void 0!==n){const e=n.getGeometry().worldToIndex(new q([s.getX(),s.getY(),s.getZ()]));c.derivationImages=[{sourceImages:[{referencedSOPInstanceUID:n.getImageUid(e),referencedSOPClassUID:n.getMeta().SOPClassUID}]}],p.push({ReferencedSOPInstanceUID:n.getImageUid(e),ReferencedSOPClassUID:n.getMeta().SOPClassUID})}S.push(c)}}r.NumberOfFrames=g.length.toString();const m=[];for(const e of S)m.push(wn(e));if(r.PerFrameFunctionalGroupsSequence={value:m},void 0!==n){const e=[];e.push({ReferencedInstanceSequence:{value:p},SeriesInstanceUID:n.getMeta().SeriesInstanceUID}),r.ReferencedSeriesSequence={value:e}}void 0!==i&&function(e,t){const n=Object.keys(t);for(const i of n)void 0!==e[i]&&c.trace(\"Overwritting tag: \"+i),e[i]=t[i]}(r,i);const f=Bt(r),D=a.getDimSize(2),y=g.length*D/8,C=new Ie(\"OB\");return C.tag=new he(\"7FE0\",\"0010\"),C.vl=y,C.value=g,f[\"7FE00010\"]=C,f}}function En(e){return(new Pt).create(e,e[\"7FE00010\"].value[0],1)}function qn(e){return(new Fn).create(e,e[\"7FE00010\"].value[0])}class Un{#pe;#w;#me;#t=new je(1,0);#fe=null;#De=!0;#ye=!0;#Ce=\"MONOCHROME2\";#ve=0;#Ie;#Te={};#Le=null;#Pe=null;#we=null;#Oe=new He;constructor(e,t,n){this.#pe=e,this.#w=t,this.#me=n,this.#Ie=this.#w.length/this.#pe.getSize().getTotalSize()}getImageUid(e){let t=this.#me[0];return 1!==this.#me.length&&void 0!==e&&(t=this.#me[this.getSecondaryOffset(e)]),t}getOriginForImageUid(e){let t;const n=this.#me.indexOf(e);return-1!==n&&(t=this.getGeometry().getOrigins()[n]),t}includesImageUid(e){return this.#me.includes(e)}containsImageUids(e){return function(e,t){if(null===e||null===t||void 0===e||void 0===t)return!1;if(0===e.length||0===t.length||t.length>e.length)return!1;for(const n of t)if(!e.includes(n))return!1;return!0}(this.#me,e)}getGeometry(){return this.#pe}getBuffer(){return this.#w}canQuantify(){return 1===this.getNumberOfComponents()}canWindowLevel(){return this.isMonochrome()}isMonochrome(){return null!==this.getPhotometricInterpretation().match(/MONOCHROME/)}canScroll(e){const t=this.getGeometry().getSize();let n=1;return void 0!==this.#Te.numberOfFiles&&(n=this.#Te.numberOfFiles),t.canScroll(e)||1!==n}#Ae(){return this.#pe.getSize().getTotalSize(2)}getSecondaryOffset(e){return this.#pe.getSize().indexToOffset(e,2)}getRescaleSlopeAndIntercept(e){let t=this.#t;if(!this.isConstantRSI()){if(void 0===e)throw new Error(\"Cannot get non constant RSI with empty slice index.\");const n=this.getSecondaryOffset(e);void 0!==this.#fe[n]?t=this.#fe[n]:c.warn(\"undefined non constant rsi at \"+n)}return t}#be(e){return this.#fe[e]}setRescaleSlopeAndIntercept(e,t){if(this.#De=this.#De&&e.isID(),this.#ye){if(!this.#t.equals(e))if(void 0===t)this.#t=e;else{this.#ye=!1,this.#fe=[];for(let e=0,t=this.#Ae();e<t;++e)this.#fe.push(this.#t);this.#t=null,this.#fe.splice(t,0,e)}}else{if(void 0===t)throw new Error(\"Cannot store non constant RSI with empty slice index.\");this.#fe.splice(t,0,e)}}isIdentityRSI(){return this.#De}isConstantRSI(){return this.#ye}getPhotometricInterpretation(){return this.#Ce}setPhotometricInterpretation(e){this.#Ce=e}getPlanarConfiguration(){return this.#ve}setPlanarConfiguration(e){this.#ve=e}getNumberOfComponents(){return this.#Ie}getMeta(){return this.#Te}setMeta(e){this.#Te=e}getValueAtOffset(e){return this.#w[e]}getOffsets(e){let t;if(\"number\"==typeof e){if(1!==this.#Ie)throw new Error(\"Number of components is not 1 for getting single value.\");t=[e]}else if(void 0!==e.r&&void 0!==e.g&&void 0!==e.b){if(3!==this.#Ie)throw new Error(\"Number of components is not 3 for getting RGB value.\");t=[e.r,e.g,e.b]}const n=[];let i;for(let e=0;e<this.#w.length;e+=this.#Ie){i=!0;for(let n=0;n<this.#Ie;++n)if(this.#w[e+n]!==t[n]){i=!1;break}i&&n.push(e)}return n}hasValues(e){if(void 0===e||0===e.length)return[];const t=[];for(let n=0;n<e.length;++n)1===this.#Ie?t.push([e[n]]):3===this.#Ie&&t.push([e[n].r,e[n].g,e[n].b]);let n;1===this.#Ie?n=function(e,t){return e[0]===t[0]}:3===this.#Ie&&(n=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]});const i=function(e){return function(t){return n(t,e)}},r=new Array(e.length);r.fill(!1);const o=t.slice();let a,s;for(let e=0,n=this.#w.length;e<n;e+=this.#Ie){s=[];for(let n=0;n<o.length;++n){a=!0;for(let t=0;t<this.#Ie;++t)if(this.#w[e+t]!==o[n][t]){a=!1;break}a&&(r[t.findIndex(i(o[n]))]=!0,s.push(n))}for(let e=0;e<s.length;++e)o.splice(s[e],1);if(0===o.length)break}return r}clone(){const e=this.#w.slice(0),t=new Un(this.getGeometry(),e,this.#me);if(this.isConstantRSI())t.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());else for(let e=0;e<this.#Ae();++e)t.setRescaleSlopeAndIntercept(this.#be(e),e);return t.setPhotometricInterpretation(this.getPhotometricInterpretation()),t.setPlanarConfiguration(this.getPlanarConfiguration()),t.setMeta(this.getMeta()),t}#xe(e){let t=this.#w;if(this.#w=Me(8*this.#w.BYTES_PER_ELEMENT,this.#Te.IsSigned?1:0,e),null===this.#w)throw new Error(\"Cannot reallocate data for image.\");this.#w.set(t),t=null}appendSlice(e){if(null===e)throw new Error(\"Cannot append null slice\");const t=e.getGeometry().getSize();let n=this.#pe.getSize();if(1!==t.get(2))throw new Error(\"Cannot append more than one slice\");if(n.get(0)!==t.get(0))throw new Error(\"Cannot append a slice with different number of columns\");if(n.get(1)!==t.get(1))throw new Error(\"Cannot append a slice with different number of rows\");if(!this.#pe.getOrientation().equals(e.getGeometry().getOrientation(),1e-4))throw new Error(\"Cannot append a slice with different orientation\");if(this.#Ce!==e.getPhotometricInterpretation())throw new Error(\"Cannot append a slice with different photometric interpretation\");for(const t in this.#Te)if(\"windowPresets\"!==t&&\"numberOfFiles\"!==t&&\"custom\"!==t&&this.#Te[t]!==e.getMeta()[t])throw new Error(\"Cannot append a slice with different \"+t+\": \"+this.#Te[t]+\" != \"+e.getMeta()[t]);const i=e.getDataRange(),r=this.getDataRange();this.#Le={min:Math.min(i.min,r.min),max:Math.max(i.max,r.max)};const o=e.getRescaledDataRange(),a=this.getRescaledDataRange();this.#Pe={min:Math.min(o.min,a.min),max:Math.max(o.max,a.max)};const l=e.getGeometry().getInitialTime();let c=!1;void 0===l||this.#pe.hasSlicesAtTime(l)||(this.appendFrame(l,e.getGeometry().getOrigin()),n=this.#pe.getSize(),c=!0);const u=function(e,t){const n=t.getInitialTime(),i=[];return i.push(0),i.push(0),i.push(e.getSliceIndex(t.getOrigin(),n)),void 0!==n&&i.push(n),new s(i)}(this.#pe,e.getGeometry()),d=this.#Ie*n.getDimSize(2);if(void 0===this.#Te.numberOfFiles)throw new Error(\"Missing number of files for buffer manipulation.\");const h=d*this.#Te.numberOfFiles;this.#w.length!==h&&this.#xe(h);const S=u.get(2);let g=S;void 0!==l&&(g+=this.#pe.getCurrentNumberOfSlicesBeforeTime(l));const p=g*d,m=this.#pe.getCurrentTotalNumberOfSlices()*d;p<m&&this.#w.set(this.#w.subarray(p,m),p+d),this.#w.set(e.getBuffer(),p),c||this.#pe.appendOrigin(e.getGeometry().getOrigin(),S,l),this.setRescaleSlopeAndIntercept(e.getRescaleSlopeAndIntercept(),g);const f=this.#me.length;if(this.#me.splice(g,0,e.getImageUid()),void 0!==this.#Te.windowPresets){const t=this.#Te.windowPresets,n=e.getMeta().windowPresets,i=Object.keys(n);let r=null;for(let e=0;e<i.length;++e){r=i[e];const o=n[r],a=t[r];if(void 0!==a){if((void 0===a.perslice||!1===a.perslice)&&!a.wl[0].equals(o.wl[0])){a.perslice=!0;for(let e=0;e<f-1;++e)a.wl.push(a.wl[0])}void 0!==a.perslice&&!0===a.perslice&&t[r].wl.splice(g,0,o.wl[0])}else t[r]=n[r]}}this.#Re({type:\"imagegeometrychange\"})}appendFrameBuffer(e,t){const n=this.#pe.getSize(),i=this.#Ie*n.getDimSize(2);if(void 0===this.#Te.numberOfFiles)throw new Error(\"Missing number of files for frame buffer manipulation.\");const r=i*this.#Te.numberOfFiles;this.#w.length!==r&&this.#xe(r),t>=this.#Te.numberOfFiles?c.warn(\"Ignoring frame at index \"+t+\" (size: \"+this.#Te.numberOfFiles+\")\"):(this.#w.set(e,i*t),this.appendFrame(t,new E(0,0,0)))}appendFrame(e,t){this.#pe.appendFrame(t,e),this.#Re({type:\"appendframe\"})}getDataRange(){return this.#Le||(this.#Le=this.calculateDataRange()),this.#Le}getRescaledDataRange(){return this.#Pe||(this.#Pe=this.calculateRescaledDataRange()),this.#Pe}getHistogram(){if(!this.#we){const e=this.calculateHistogram();this.#Le=e.dataRange,this.#Pe=e.rescaledDataRange,this.#we=e.histogram}return this.#we}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)};setAtOffsets(e,t){let n,i;if(\"number\"==typeof t){if(1!==this.#Ie)throw new Error(\"Number of components is not 1 for setting single value.\");n=[t]}else if(void 0!==t.r&&void 0!==t.g&&void 0!==t.b){if(3!==this.#Ie)throw new Error(\"Number of components is not 3 for setting RGB value.\");n=[t.r,t.g,t.b]}for(let t=0,r=e.length;t<r;++t){i=e[t];for(let e=0;e<this.#Ie;++e)this.#w[i+e]=n[e]}this.#Re({type:\"imagecontentchange\"})}setAtOffsetsAndGetOriginals(e,t){const n=[];for(let i=0;i<e.length;++i){const r=e[i];let o=3*r[0],a={r:this.#w[o],g:this.#w[o+1],b:this.#w[o+2]};const s=[];s.push({index:0,colour:a});for(let e=0;e<r.length;++e){o=3*r[e];const n={r:this.#w[o],g:this.#w[o+1],b:this.#w[o+2]};a.r===n.r&&a.g===n.g&&a.b===n.b||(s.push({index:e,colour:n}),a=n),this.#w[o]=t.r,this.#w[o+1]=t.g,this.#w[o+2]=t.b}n.push(s)}return this.#Re({type:\"imagecontentchange\"}),n}setAtOffsetsWithIterator(e,t){for(let n=0;n<e.length;++n){const i=e[n];let r;Array.isArray(t)?r=Xe(t[n],i.length):void 0!==t.r&&void 0!==t.g&&void 0!==t.b&&(r=Xe([{index:0,colour:t}],i.length));let o=r.next();for(;!o.done;){const e=3*i[o.index];this.#w[e]=o.value.r,this.#w[e+1]=o.value.g,this.#w[e+2]=o.value.b,o=r.next()}}this.#Re({type:\"imagecontentchange\"})}getValue(e,t,n,i){const r=new s([e,t,n,i||0]);return this.getValueAtOffset(this.getGeometry().getSize().indexToOffset(r))}getValueAtIndex(e){return this.getValueAtOffset(this.getGeometry().getSize().indexToOffset(e))}getRescaledValue(e,t,n,i){void 0===i&&(i=0);let r=this.getValue(e,t,n,i);if(!this.isIdentityRSI())if(this.isConstantRSI())r=this.getRescaleSlopeAndIntercept().apply(r);else{const o=new s([e,t,n,i]);r=this.getRescaleSlopeAndIntercept(o).apply(r)}return r}getRescaledValueAtIndex(e){return this.getRescaledValueAtOffset(this.getGeometry().getSize().indexToOffset(e))}getRescaledValueAtOffset(e){let t=this.getValueAtOffset(e);if(!this.isIdentityRSI())if(this.isConstantRSI())t=this.getRescaleSlopeAndIntercept().apply(t);else{const n=this.getGeometry().getSize().offsetToIndex(e);t=this.getRescaleSlopeAndIntercept(n).apply(t)}return t}calculateDataRange(){let e=this.getValueAtOffset(0),t=e,n=0;const i=this.getGeometry().getSize();let r=i.getTotalSize();i.length()>=3&&(r=i.getDimSize(3));for(let i=0;i<r;++i)n=this.getValueAtOffset(i),n>t&&(t=n),n<e&&(e=n);return{min:e,max:t}}calculateRescaledDataRange(){if(this.isIdentityRSI())return this.getDataRange();if(this.isConstantRSI()){const e=this.getDataRange(),t=this.getRescaleSlopeAndIntercept().apply(e.min),n=this.getRescaleSlopeAndIntercept().apply(e.max);return{min:t<n?t:n,max:t>n?t:n}}{let e=this.getRescaledValueAtOffset(0),t=e,n=0;const i=this.getGeometry().getSize();let r=i.getTotalSize();3===i.length()&&(r=i.getDimSize(3));for(let i=0;i<r;++i)n=this.getRescaledValueAtOffset(i),n>t&&(t=n),n<e&&(e=n);return{min:e,max:t}}}calculateHistogram(){const e=this.getGeometry().getSize(),t=[];let n=this.getValueAtOffset(0),i=n,r=0,o=this.getRescaledValueAtOffset(0),a=o,s=0;for(let l=0,c=e.getTotalSize();l<c;++l)r=this.getValueAtOffset(l),r>i&&(i=r),r<n&&(n=r),s=this.getRescaledValueAtOffset(l),s>a&&(a=s),s<o&&(o=s),t[s]=(t[s]||0)+1;const l={min:n,max:i},c={min:o,max:a},u=[];for(let e=o;e<=a;++e)u.push([e,t[e]||0]);return{dataRange:l,rescaledDataRange:c,histogram:u}}convolute2D(e){if(9!==e.length)throw new Error(\"The convolution matrix does not have a length of 9; it has \"+e.length);const t=this.clone(),n=t.getBuffer(),i=this.getGeometry().getSize(),r=i.getDimSize(2)*this.getNumberOfComponents();for(let t=0;t<i.get(2);++t)this.convoluteBuffer(e,n,t*r);return t}convoluteBuffer(e,t,n){const i=this.getGeometry().getSize(),r=i.get(0),o=i.get(1),a=this.getNumberOfComponents();let s=1,l=1;3===a&&(0===this.getPlanarConfiguration()?s=3:l=i.getDimSize(2));const c=[];c[0]=(-r-1)*s,c[1]=-r*s,c[2]=(1-r)*s,c[3]=-s,c[4]=0,c[5]=1*s,c[6]=(r-1)*s,c[7]=r*s,c[8]=(r+1)*s;const u=[];u[0]=c[4],u[1]=c[4],u[2]=c[5],u[3]=c[4],u[4]=c[4],u[5]=c[5],u[6]=c[7],u[7]=c[7],u[8]=c[8];const d=[];d[0]=c[1],d[1]=c[1],d[2]=c[2],d[3]=c[4],d[4]=c[4],d[5]=c[5],d[6]=c[7],d[7]=c[7],d[8]=c[8];const h=[];h[0]=c[1],h[1]=c[1],h[2]=c[2],h[3]=c[4],h[4]=c[4],h[5]=c[5],h[6]=c[4],h[7]=c[4],h[8]=c[5];const S=[];S[0]=c[3],S[1]=c[4],S[2]=c[5],S[3]=c[3],S[4]=c[4],S[5]=c[5],S[6]=c[6],S[7]=c[7],S[8]=c[8];const g=[];g[0]=c[0],g[1]=c[1],g[2]=c[2],g[3]=c[3],g[4]=c[4],g[5]=c[5],g[6]=c[3],g[7]=c[4],g[8]=c[5];const p=[];p[0]=c[3],p[1]=c[4],p[2]=c[4],p[3]=c[3],p[4]=c[4],p[5]=c[4],p[6]=c[6],p[7]=c[7],p[8]=c[7];const m=[];m[0]=c[0],m[1]=c[1],m[2]=c[1],m[3]=c[3],m[4]=c[4],m[5]=c[4],m[6]=c[6],m[7]=c[7],m[8]=c[7];const f=[];f[0]=c[0],f[1]=c[1],f[2]=c[1],f[3]=c[3],f[4]=c[4],f[5]=c[4],f[6]=c[3],f[7]=c[4],f[8]=c[4];let D=n,y=0,C=[];for(let n=0;n<a;++n){D+=n*l;for(let n=0;n<o;++n)for(let i=0;i<r;++i){C=c,0===i&&0===n?C=u:0===i&&n===o-1?C=h:i===r-1&&0===n?C=p:i===r-1&&n===o-1?C=f:0===i&&n!==o-1&&0!==n?C=d:i===r-1&&n!==o-1&&0!==n?C=m:0!==i&&i!==r-1&&0===n?C=S:0!==i&&i!==r-1&&n===o-1&&(C=g),y=0;for(let t=0;t<9;++t)y+=this.getValueAtOffset(D+C[t])*e[t];t[D]=y,D+=s}}}transform(e){const t=this.clone(),n=t.getBuffer();for(let i=0,r=n.length;i<r;++i)n[i]=e(t.getValueAtOffset(i));return t}compose(e,t){const n=this.clone(),i=n.getBuffer();for(let n=0,r=i.length;n<r;++n)i[n]=Math.floor(t(this.getValueAtOffset(n),e.getValueAtOffset(n)));return n}}class Mn{create(e,t){const n=new Nn(t);\"MONOCHROME1\"===t.getPhotometricInterpretation()?n.setColourMap(\"invPlain\"):\"PALETTE COLOR\"===t.getPhotometricInterpretation()&&(void 0!==D.palette?n.setColourMap(\"palette\"):c.warn(\"Cannot find Palette lut\"));let i={};if(void 0!==t.getMeta().windowPresets&&(i=t.getMeta().windowPresets),i.minmax={name:\"minmax\"},void 0!==d){const e=t.getMeta().Modality;for(const t in d[e]){const n=d[e][t];i[t]={wl:[new u(n.center,n.width)],name:t}}}return n.setWindowPresets(i),n.init(),n}}const Qn=[\"wlchange\",\"wlpresetadd\",\"colourmapchange\",\"positionchange\",\"opacitychange\",\"alphafuncchange\"];function Vn(e,t){return(new Mn).create(e,t)}class Nn{#Fe;#Ee;#ye;#qe={minmax:{name:\"minmax\"}};#Ue=null;#Me;#Qe=\"plain\";#Ve=null;#_;#Oe=new He;constructor(e){this.#Fe=e,this.#Fe.addEventListener(\"appendframe\",(()=>{const e=this.getCurrentIndex();if(3===e.length()){const t=e.getValues();t.push(0),this.setCurrentIndex(new s(t))}}))}getImage(){return this.#Fe}setImage(e){this.#Fe=e}getOrientation(){return this.#_}setOrientation(e){this.#_=e}init(){this.setInitialIndex()}setInitialIndex(){const e=this.#Fe.getGeometry().getSize(),t=new Array(e.length());t.fill(0),t[0]=Math.floor(e.get(0)/2),t[1]=Math.floor(e.get(1)/2),t[2]=Math.floor(e.get(2)/2),this.setCurrentIndex(new s(t),!0)}getPlaybackMilliseconds(e){return e||(e=10),Math.round(1e3/e)}#Ne=function(e,t){return 255};getAlphaFunction(){return this.#Ne}setAlphaFunction(e){this.#Ne=e,this.#Re({type:\"alphafuncchange\"})}#Be(){if(this.#Ue&&void 0!==this.#qe[this.#Ue]&&void 0!==this.#qe[this.#Ue].perslice&&!0===this.#qe[this.#Ue].perslice){this.getCurrentIndex()||this.setInitialIndex();const e=this.getCurrentIndex(),t=this.#Fe.getSecondaryOffset(e),n=this.#qe[this.#Ue].wl[t];this.setWindowLevel(n,this.#Ue,!0)}if(void 0===this.#Me&&this.setWindowLevelPresetById(0,!0),void 0===this.#ye||this.#Fe.isConstantRSI()!==this.#ye){let e,t;this.#ye=this.#Fe.isConstantRSI(),this.#ye?(e=this.#Fe.getRescaleSlopeAndIntercept(),t=!0):(e=new je(1,0),t=!1);const n=new l(e,this.#Fe.getMeta().BitsStored);this.#Ee=new S(n,this.#Fe.getMeta().IsSigned,t)}const e=this.#Ee.getVoiLut();let t;if(void 0!==e&&(t=e.getWindowLevel()),void 0===e||!this.#Me.equals(t)){const e=new h(this.#Me);this.#Ee.setVoiLut(e)}return this.#Ee}getWindowPresets(){return this.#qe}getWindowPresetsNames(){return Object.keys(this.#qe)}setWindowPresets(e){this.#qe=e}addWindowPresets(e){const t=Object.keys(e);let n=null;for(let i=0;i<t.length;++i)if(n=t[i],void 0!==this.#qe[n]){if(void 0!==this.#qe[n].perslice&&!0===this.#qe[n].perslice)throw new Error(\"Cannot add perslice preset\");this.#qe[n]=e[n]}else this.#qe[n]=e[n],this.#Re({type:\"wlpresetadd\",name:n})}getCurrentWindowPresetName(){return this.#Ue}getColourMap(){return this.#Qe}#Ge(){return D[this.#Qe]}setColourMap(e){if(!D[e])throw new Error(\"Unknown colour map: '\"+e+\"'\");this.#Qe=e,this.#Re({type:\"colourmapchange\",value:[e]})}getCurrentPosition(){return this.#Ve}getCurrentIndex(){const e=this.getCurrentPosition();return e?this.getImage().getGeometry().worldToIndex(e):null}getCurrentImageUid(){return this.#Fe.getImageUid(this.getCurrentIndex())}getOriginForImageUid(e){return this.#Fe.getOriginForImageUid(e)}includesImageUid(e){return this.#Fe.includesImageUid(e)}isPositionInBounds(e){void 0===e&&(e=this.#Ve);const t=this.#Fe.getGeometry(),n=t.worldToIndex(e),i=[this.getScrollIndex()];return 4===n.length()&&i.push(3),t.isIndexInBounds(n,i)}getOrigin(e){const t=this.#Fe.getGeometry();let n=0;return void 0!==e&&(n=t.worldToIndex(e).get(2)),t.getOrigins()[n]}setCurrentPosition(e,t){const n=this.#Fe.getGeometry(),i=n.worldToIndex(e),r=[this.getScrollIndex()];return 4===i.length()&&r.push(3),n.isIndexInBounds(i,r)?this.setCurrentIndex(i,t):(t||(this.#Ve=e,this.#Re({type:\"positionchange\",value:[i.getValues(),e.getValues()],valid:!1})),!1)}setCurrentIndex(e,t){void 0===t&&(t=!1);const n=this.#Fe.getGeometry(),i=n.indexToWorld(e),r=[this.getScrollIndex()];if(4===e.length()&&r.push(3),!n.isIndexInBounds(e,r))return t||(this.#Ve=i,this.#Re({type:\"positionchange\",value:[e.getValues(),i.getValues()],valid:!1})),!1;let o=null,a=null;if(this.getCurrentPosition()&&(a=this.getCurrentIndex()),a)if(a.canCompare(e))o=a.compare(e);else{o=[];const t=Math.min(a.length(),e.length());for(let n=0;n<t;++n)a.get(n)!==e.get(n)&&o.push(n);const n=Math.max(a.length(),e.length());for(let e=t;e<n;++e)o.push(e)}else{o=[];for(let t=0;t<e.length();++t)o.push(t)}if(this.#Ve=i,!t){const t={type:\"positionchange\",value:[e.getValues(),i.getValues()],diffDims:o,data:{imageUid:this.#Fe.getImageUid(e)}};if(this.#Fe.canQuantify()){const n=this.#Fe.getRescaledValueAtIndex(e);t.value.push(n)}this.#Re(t)}return!0}setWindowLevel(e,t,n){if(void 0===t&&(t=\"manual\"),\"manual\"!==t&&void 0===this.#qe[t])throw new Error(\"Unknown window level preset: '\"+t+\"'\");void 0===n&&(n=!1);const i=!e.equals(this.#Me),r=this.#Ue!==t;(i||r)&&(this.#Me=e,this.#Ue=t,\"manual\"===t&&(void 0!==this.#qe[t]?this.#qe[t].wl[0]=e:this.addWindowPresets({manual:{wl:[e],name:\"manual\"}})),this.#Re({type:\"wlchange\",value:[e.center,e.width,t],wc:e.center,ww:e.width,skipGenerate:n}))}getWindowLevel(){return this.#Be().getVoiLut().getWindowLevel()}setWindowLevelPreset(e,t){const n=this.getWindowPresets()[e];if(void 0===n)throw new Error(\"Unknown window level preset: '\"+e+\"'\");\"minmax\"===e&&void 0===n.wl&&(n.wl=[this.getWindowLevelMinMax()]);let i=n.wl[0];if(void 0!==n.perslice&&!0===n.perslice){const e=this.#Fe.getSecondaryOffset(this.getCurrentIndex());i=n.wl[e]}this.setWindowLevel(i,e,t)}setWindowLevelPresetById(e,t){const n=Object.keys(this.getWindowPresets());this.setWindowLevelPreset(n[e],t)}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)};getWindowLevelMinMax(){const e=this.getImage().getRescaledDataRange(),t=e.min;let n=e.max-t;return n<1&&(c.warn(\"Zero or negative window width, defaulting to one.\"),n=1),new u(t+n/2,n)}setWindowLevelMinMax(){const e=this.getWindowLevelMinMax();this.setWindowLevel(e,\"minmax\")}generateImageData(e,t){void 0===t&&(this.getCurrentIndex()||this.setInitialIndex(),t=this.getCurrentIndex());const n=this.getImage(),i=!n.isConstantRSI(),r=Ye(n,t,i,this.getOrientation()),o=n.getPhotometricInterpretation();switch(o){case\"MONOCHROME1\":case\"MONOCHROME2\":!function(e,t,n,i,r){let o=0,a=0,s=t.next();for(;!s.done;)a=i.getValue(s.value),e.data[o]=r.red[a],e.data[o+1]=r.green[a],e.data[o+2]=r.blue[a],e.data[o+3]=n(s.value,s.index),o+=4,s=t.next()}(e,r,this.getAlphaFunction(),this.#Be(),this.#Ge());break;case\"PALETTE COLOR\":!function(e,t,n,i,r){const o=function(e){return e>>8};r&&c.info(\"Scaling 16bits data to 8bits.\");let a=0,s=0,l=t.next();for(;!l.done;)s=l.value,r?(e.data[a]=o(i.red[s]),e.data[a+1]=o(i.green[s]),e.data[a+2]=o(i.blue[s])):(e.data[a]=i.red[s],e.data[a+1]=i.green[s],e.data[a+2]=i.blue[s]),e.data[a+3]=n(s,l.index),a+=4,l=t.next()}(e,r,this.getAlphaFunction(),this.#Ge(),16===n.getMeta().BitsStored);break;case\"RGB\":!function(e,t,n){let i=0,r=t.next();for(;!r.done;)e.data[i]=r.value[0],e.data[i+1]=r.value[1],e.data[i+2]=r.value[2],e.data[i+3]=n(r.value,r.index),i+=4,r=t.next()}(e,r,this.getAlphaFunction());break;case\"YBR_FULL\":!function(e,t,n){let i=0,r=null,o=t.next();for(;!o.done;)a=o.value[0],s=o.value[1],r={r:a+1.402*((l=o.value[2])-128),g:a-.34414*(s-128)-.71414*(l-128),b:a+1.772*(s-128)},e.data[i]=r.r,e.data[i+1]=r.g,e.data[i+2]=r.b,e.data[i+3]=n(o.value,o.index),i+=4,o=t.next();var a,s,l}(e,r,this.getAlphaFunction());break;default:throw new Error(\"Unsupported photometric interpretation: \"+o)}}getScrollIndex(){let e=null;const t=this.getOrientation();return e=void 0!==t?t.getThirdColMajorDirection():2,e}isAquisitionOrientation(){return R(this.#_)}}class Bn{#ke;#X;#He;#ze;#We;constructor(e,t){this.#ke=e,this.#X=e.getRealSpacing(),this.#He=e.getOrientation(),this.#ze=t,this.#We=function(e,t){let n=e.asOneAndZeros().multiply(t);return e.asOneAndZeros().getAbs().equals(St().getAbs())&&(n=n.getAbs()),n}(this.#He,t)}getViewOrientation(){return this.#ze}getTargetOrientation(){return this.#We}getOffset3DFromPlaneOffset(e){const t=new w(e.x,e.y,0),n=this.getTargetDeOrientedVector3D(t);return new w(n.getX()*this.#X.get(0),n.getY()*this.#X.get(1),n.getZ()*this.#X.get(2))}getPlaneOffsetFromOffset3D(e){const t=new w(e.x/this.#X.get(0),e.y/this.#X.get(1),e.z/this.#X.get(2)),n=this.getTargetOrientedVector3D(t);return{x:n.getX(),y:n.getY()}}getTargetOrientedVector3D(e){let t=e;return void 0!==this.#We&&(t=this.#We.getInverse().multiplyVector3D(e)),t}getTargetDeOrientedVector3D(e){let t=e;return void 0!==this.#We&&(t=this.#We.multiplyVector3D(e)),t}getTargetDeOrientedPoint3D(e){let t=e;return void 0!==this.#We&&(t=this.#We.multiplyPoint3D(e)),t}getImageOrientedVector3D(e){let t=e;if(void 0!==this.#ze){const n=ot([e.getX(),e.getY(),e.getZ()],this.#ze);t=new w(n[0],n[1],n[2])}return t}getImageOrientedPoint3D(e){let t=e;if(void 0!==this.#ze){const n=ot([e.getX(),e.getY(),e.getZ()],this.#ze);t=new E(n[0],n[1],n[2])}return t}getImageDeOrientedVector3D(e){let t=e;if(void 0!==this.#ze){const n=rt([e.getX(),e.getY(),e.getZ()],this.#ze);t=new w(n[0],n[1],n[2])}return t}getImageDeOrientedPoint3D(e){let t=e;if(void 0!==this.#ze){const n=rt([e.getX(),e.getY(),e.getZ()],this.#ze);t=new E(n[0],n[1],n[2])}return t}getPositionFromPlanePoint(e,t){const n=new E(e.getX(),e.getY(),t),i=this.getImageOrientedPoint3D(n);return this.#ke.pointToWorld(i)}getPlanePointFromPosition(e){const t=this.#ke.worldToPoint(e);return this.getImageDeOrientedPoint3D(t)}getCosines(){return[(e=this.#We).get(0,0),e.get(1,0),e.get(2,0),e.get(0,1),e.get(1,1),e.get(2,1)];var e}getPlanePoints(e){const t=this.getPlanePointFromPosition(e),n=this.getPositionFromPlanePoint(new F(0,0),t.getZ()),i=this.getCosines();return[n,new E(i[0],i[1],i[2]),new E(i[3],i[4],i[5])]}worldToIndex(e){return this.#ke.worldToIndex(e)}isAquisitionOrientation(){return R(this.#ze)}getTargetOrientedPositiveXYZ(e){const t=rt([e.x,e.y,e.z],this.#We);return{x:t[0],y:t[1],z:t[2]}}getScrollIndex(){let e=null;return e=void 0!==this.#ze?this.#ze.getThirdColMajorDirection():2,e}getNativeScrollIndex(){let e=null;return e=void 0!==this.#He?this.#He.getThirdColMajorDirection():2,e}}class Gn{#x;#Ye;#Xe;#je=!1;constructor(e){if(void 0===e.getImage())throw new Error(\"View does not have an image, cannot setup controller\");this.#x=e,this.#Ye=new Bn(e.getImage().getGeometry(),e.getOrientation()),\"SEG\"===e.getImage().getMeta().Modality&&(this.#je=!0)}getPlaneHelper(){return this.#Ye}isMask(){return this.#je}initialise(){this.setWindowLevelPresetById(0),this.setCurrentPosition(this.getPositionFromPlanePoint(new F(0,0)))}getModality(){return this.#x.getImage().getMeta().Modality}getWindowLevelPresetsNames(){return this.#x.getWindowPresetsNames()}addWindowLevelPresets(e){return this.#x.addWindowPresets(e)}setWindowLevelPreset(e){this.#x.setWindowLevelPreset(e)}setWindowLevelPresetById(e){this.#x.setWindowLevelPresetById(e)}isPlaying(){return void 0!==this.#Xe}getCurrentPosition(){return this.#x.getCurrentPosition()}getCurrentIndex(){return this.#x.getCurrentIndex()}getCurrentImageUid(){return this.#x.getCurrentImageUid()}getOriginForImageUid(e){return this.#x.getOriginForImageUid(e)}includesImageUid(e){return this.#x.includesImageUid(e)}getCurrentOrientedIndex(){let e=this.#x.getCurrentIndex();if(void 0!==this.#x.getOrientation()){const t=this.#Ye.getImageDeOrientedVector3D(new w(e.get(0),e.get(1),e.get(2)));e=new s([t.getX(),t.getY(),t.getZ()])}return e}getScrollIndex(){return this.#x.getScrollIndex()}getCurrentScrollIndexValue(){return this.#x.getCurrentIndex().get(this.#x.getScrollIndex())}getOrigin(e){return this.#x.getOrigin(e)}isAquisitionOrientation(){return this.#x.isAquisitionOrientation()}getPlanePoints(e){return this.#Ye.getPlanePoints(e)}getCurrentScrollPosition(){const e=this.#x.getScrollIndex();return this.#x.getCurrentPosition().get(e)}generateImageData(e,t){this.#x.generateImageData(e,t)}setImage(e){this.#x.setImage(e)}get2DSpacing(){return this.#x.getImage().getGeometry().getSpacing(this.#x.getOrientation()).get2D()}getRescaledImageValue(e){const t=this.#x.getImage();if(!t.canQuantify())return;const n=t.getGeometry(),i=n.worldToIndex(e);let r;return n.isIndexInBounds(i)&&(r=t.getRescaledValueAtIndex(i)),r}getPixelUnit(){return this.#x.getImage().getMeta().pixelUnit}#Ze(e,t,n,i){const r=We(Ye(e,t,n,i)),o=e.getGeometry().getSize(i).getValues();o[2]=1;const a=new Ze(o),s=e.getGeometry().getSpacing(i).getValues();s[2]=1;const l=new nt(s),c=new E(0,0,0),u=new it(c,a,l);return new Un(u,r)}getImageRegionValues(e,t){let n=this.#x.getImage();const i=this.#x.getOrientation();let r=this.getCurrentIndex(),o=!0;R(i)||(n=this.#Ze(n,r,o,i),r=new s([0,0,0]),o=!1);const a=function(e,t,n,i,r){if(1!==e.getNumberOfComponents())throw new Error(\"Unsupported number of components for region iterator: \"+e.getNumberOfComponents());void 0===n&&(n=!1);let o=null;o=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const a=e.getGeometry().getSize();void 0===i&&(i=new F(0,0)),void 0===r&&(r=new F(a.get(0)-1,a.get(1)));const s=a.indexToOffset(t.getWithNew2D(i.getX(),i.getY())),l=a.indexToOffset(t.getWithNew2D(r.getX(),r.getY()-1)),c=Math.max(1,r.getX()-i.getX());return function(e,t,n,i,r,o){let a=t,s=0;return{next:function(){if(a<n){const t={value:e(a),done:!1,index:a};return s+=1,a+=1,s===r&&(s=0,a+=o),t}return{done:!0,index:n}}}}(o,s,l+1,0,c,a.get(0)-c)}(n,r,o,e,t);let l=[];return a&&(l=We(a)),l}getImageVariableRegionValues(e){let t=this.#x.getImage();const n=this.#x.getOrientation();let i=this.getCurrentIndex(),r=!0;R(n)||(t=this.#Ze(t,i,r,n),i=new s([0,0,0]),r=!1);const o=function(e,t,n,i){if(1!==e.getNumberOfComponents())throw new Error(\"Unsupported number of components for region iterator: \"+e.getNumberOfComponents());void 0===n&&(n=!1);let r=null;r=n?function(t){return e.getRescaledValueAtOffset(t)}:function(t){return e.getValueAtOffset(t)};const o=e.getGeometry().getSize(),a=[];let s,l=null,c=null,u=null;for(let e=0;e<i.length;++e){s=i[e];const t=s[1][0]-s[0][0];0!==t&&(u=e,l||(l=s[0]),a.push([s[0][0],t,o.get(0)-s[1][0]]))}if(null!==u&&(c=i[u][1]),0!==a.length)return function(e,t,n,i,r){let o=t,a=0,s=0;return{next:function(){if(o<n){const t={value:e(o),done:!1,index:o};return s+=1,o+=1,s===r[a][1]&&(s=0,o+=r[a][2],a+=1,a<r.length&&(o+=r[a][0])),t}return{done:!0,index:n}}}}(r,o.indexToOffset(t.getWithNew2D(l[0],l[1])),o.indexToOffset(t.getWithNew2D(c[0],c[1]))+1,0,a)}(t,i,r,e);let a=[];return o&&(a=We(o)),a}canQuantifyImage(){return this.#x.getImage().canQuantify()}canWindowLevel(){return this.isMonochrome()}isMonochrome(){return this.#x.getImage().isMonochrome()}canScroll(){return this.#x.getImage().canScroll(this.#x.getOrientation())}getImageSize(){return this.#x.getImage().getGeometry().getSize(this.#x.getOrientation())}moreThanOne(e){return this.getImageSize().moreThanOne(e)}getImageWorldSize(){const e=this.#x.getImage().getGeometry(),t=e.getSize(this.#x.getOrientation()).get2D(),n=e.getSpacing(this.#x.getOrientation()).get2D();return{x:t.x*n.x,y:t.y*n.y}}getImageRescaledDataRange(){return this.#x.getImage().getRescaledDataRange()}equalImageMeta(e){const t=this.#x.getImage().getMeta(),n=Object.keys(e);for(let i=0;i<n.length;++i){const r=n[i];if(void 0===t[r])return!1;if(t[r]!==e[r])return!1}return!0}isPositionInBounds(e){return this.#x.isPositionInBounds(e)}setCurrentPosition(e,t){return this.#x.setCurrentPosition(e,t)}getPositionFromPlanePoint(e,t){void 0===t&&(t=this.getCurrentScrollIndexValue());const n=new E(e.getX(),e.getY(),t),i=this.#Ye.getImageOrientedPoint3D(n),r=this.#x.getImage().getGeometry().pointToWorld(i);return this.getCurrentPosition().mergeWith3D(r)}getPlanePositionFromPosition(e){const t=this.#x.getImage().getGeometry().worldToPoint(e),n=this.#Ye.getImageDeOrientedPoint3D(t);return new F(n.getX(),n.getY())}getIndexFromPosition(e){return this.#x.getImage().getGeometry().worldToIndex(e)}setCurrentIndex(e,t){return this.#x.setCurrentIndex(e,t)}getPlanePositionFromPlanePoint(e){const t=this.getCurrentScrollIndexValue(),n=new E(e.getX(),e.getY(),t),i=this.#Ye.getTargetDeOrientedPoint3D(n),r=this.#x.getImage().getGeometry().getRealSpacing();return new E(i.getX()*r.get(0),i.getY()*r.get(1),i.getZ()*r.get(2))}getOffset3DFromPlaneOffset(e){return this.#Ye.getOffset3DFromPlaneOffset(e)}#_e(e){const t=this.getCurrentIndex(),n=new Array(t.length());n.fill(0),e<n.length?n[e]=1:console.warn(\"Cannot increment given index: \",e,n.length);const i=new s(n);return t.add(i)}#Ke(e){const t=this.getCurrentIndex(),n=new Array(t.length());n.fill(0),e<n.length?n[e]=-1:console.warn(\"Cannot decrement given index: \",e,n.length);const i=new s(n);return t.add(i)}#Je(){return this.#_e(this.getScrollIndex())}#$e(){return this.#Ke(this.getScrollIndex())}getIncrementPosition(e){return this.#x.getImage().getGeometry().indexToWorld(this.#_e(e))}getDecrementPosition(e){return this.#x.getImage().getGeometry().indexToWorld(this.#Ke(e))}getIncrementScrollPosition(){return this.#x.getImage().getGeometry().indexToWorld(this.#Je())}getDecrementScrollPosition(){return this.#x.getImage().getGeometry().indexToWorld(this.#$e())}incrementIndex(e,t){return this.setCurrentIndex(this.#_e(e),t)}decrementIndex(e,t){return this.setCurrentIndex(this.#Ke(e),t)}decrementScrollIndex(e){return this.setCurrentIndex(this.#$e(),e)}incrementScrollIndex(e){return this.setCurrentIndex(this.#Je(),e)}play(){if(this.canScroll())if(void 0===this.#Xe){const e=this.#x.getImage(),t=e.getMeta().RecommendedDisplayFrameRate,n=this.#x.getPlaybackMilliseconds(t),i=e.getGeometry().getSize().canScroll3D();this.#Xe=window.setInterval((()=>{let e=!1;if(e=i?this.incrementScrollIndex():this.incrementIndex(3),!e){const e=this.getCurrentIndex().getValues(),t=this.#x.getOrientation();i?e[t.getThirdColMajorDirection()]=0:e[3]=0;const n=new s(e),r=this.#x.getImage().getGeometry();this.setCurrentPosition(r.indexToWorld(n))}}),n)}else this.stop()}stop(){void 0!==this.#Xe&&(clearInterval(this.#Xe),this.#Xe=void 0)}getWindowLevel(){return this.#x.getWindowLevel()}getCurrentWindowPresetName(){return this.#x.getCurrentWindowPresetName()}setWindowLevel(e){this.#x.setWindowLevel(e)}getColourMap(){return this.#x.getColourMap()}setColourMap(e){this.#x.setColourMap(e)}setViewAlphaFunction(e){this.#x.setAlphaFunction(e)}bindImageAndLayer(e){const t=this.#x.getImage();t.addEventListener(\"imagecontentchange\",e.onimagecontentchange),t.addEventListener(\"imagegeometrychange\",e.onimagegeometrychange)}unbindImageAndLayer(e){const t=this.#x.getImage();t.removeEventListener(\"imagecontentchange\",e.onimagecontentchange),t.removeEventListener(\"imagegeometrychange\",e.onimagegeometrychange)}}class kn{#et=0;getSum(){return this.#et}add(e){this.#et+=function(e){if(void 0===e.wheelDeltaY)return-e.deltaY;{const t=45;return e.wheelDeltaY>t?1:e.wheelDeltaY<-t?-1:-e.deltaY/60}}(e)}clear(){this.#et=0}isTick(){return Math.abs(this.#et)>=1}}class Hn{#tt;#nt=new kn;constructor(e){this.#tt=e}wheel(e){this.#nt.add(e);const t=this.#nt.getSum()>=0;if(!this.#nt.isTick())return;this.#nt.clear(),e.preventDefault();const n=Zi(e),i=this.#tt.getLayerGroupByDivId(n.groupDivId),r=i.getActiveViewLayer().getViewController();let o;i.canScroll()?o=t?r.getIncrementScrollPosition():r.getDecrementScrollPosition():i.moreThanOne(3)&&(o=t?r.getIncrementPosition(3):r.getDecrementPosition(3)),void 0!==o&&i.isPositionInBounds(o)&&r.setCurrentPosition(o)}}class zn{#it;#rt;constructor(e,t){this.#it=e,this.#rt=t}getBegin(){return this.#it}getEnd(){return this.#rt}equals(e){return null!==e&&this.getBegin().equals(e.getBegin())&&this.getEnd().equals(e.getEnd())}getDeltaX(){return this.getEnd().getX()-this.getBegin().getX()}getDeltaY(){return this.getEnd().getY()-this.getBegin().getY()}getLength(){return Math.sqrt(this.getDeltaX()*this.getDeltaX()+this.getDeltaY()*this.getDeltaY())}getWorldLength(e){let t=null;if(null!==e){const n=this.getDeltaX()*e.x,i=this.getDeltaY()*e.y;t=Math.sqrt(n*n+i*i)}return t}getMidpoint(){return new F((this.getBegin().getX()+this.getEnd().getX())/2,(this.getBegin().getY()+this.getEnd().getY())/2)}getCentroid(){return this.getMidpoint()}getSlope(){return this.getDeltaY()/this.getDeltaX()}getIntercept(){return(this.getEnd().getX()*this.getBegin().getY()-this.getBegin().getX()*this.getEnd().getY())/this.getDeltaX()}getInclination(){return 180-180*Math.atan2(this.getDeltaY(),this.getDeltaX())/Math.PI}quantify(e){const t={},n=e.get2DSpacing(),i=this.getWorldLength(n);return null!==i&&(t.length={value:i,unit:\"unit.mm\"}),t}}function Wn(e,t){const n=e.getDeltaX(),i=e.getDeltaY(),r=t.getDeltaX(),o=t.getDeltaY(),a=n*r+i*o,s=n*o-i*r;return 360-(180-180*Math.atan2(s,a)/Math.PI)}function Yn(e,t){const n=e.getDeltaX(),i=e.getDeltaY();return n*t.getDeltaX()+i*t.getDeltaY()==0}function Xn(e,t,n,i){void 0===i&&(i={x:1,y:1});const r=-i.x*i.x/(i.y*i.y*e.getSlope());return Zn(r,t.getY()-r*t.getX(),t,n,i)}function jn(e,t,n,i){const r=Zn(e.getSlope(),e.getIntercept(),e.getBegin(),t,i);let o;return o=function(e,t){const n=Math.min(t.getBegin().getX(),t.getEnd().getX()),i=Math.max(t.getBegin().getX(),t.getEnd().getX()),r=Math.min(t.getBegin().getY(),t.getEnd().getY()),o=Math.max(t.getBegin().getY(),t.getEnd().getY());return e.getX()>=n&&e.getX()<=i&&e.getY()>=r&&e.getY()<=o}(r.getBegin(),e)?r.getBegin():r.getEnd(),Xn(e,o,n,i)}function Zn(e,t,n,i,r){void 0===r&&(r={x:1,y:1});let o=0,a=0,s=0,l=0;if(A(e,0,O))o=n.getX()-i/(2*r.x),a=n.getY(),s=n.getX()+i/(2*r.x),l=n.getY();else if(Math.abs(e)>1e6)o=n.getX(),a=n.getY()-i/(2*r.y),s=n.getX(),l=n.getY()+i/(2*r.y);else{const c=r.x*r.x,u=r.y*r.y,d=i/(2*Math.sqrt(c+u*e*e));o=n.getX()-d,a=e*o+t,s=n.getX()+d,l=e*s+t}return new zn(new F(o,a),new F(s,l))}var _n=o(944),Kn=o.n(_n);class Jn{#ot;#Te={};#Oe=new He;#at;#st;constructor(e){this.#ot=void 0!==e?e:[],this.#at=!0}getList(){return this.#ot}getLength(){return this.#ot.length}isEditable(){return this.#at}setEditable(e){this.#at=e,this.#Re({type:\"annotationgroupeditablechange\",data:e})}getColour(){return this.#st}setColour(e){this.#st=e}add(e){this.#ot.push(e),this.#Re({type:\"annotationadd\",data:e})}update(e,t){const n=this.#ot.findIndex((t=>t.id===e.id));-1!==n?(this.#ot[n]=e,this.#Re({type:\"annotationupdate\",data:e,keys:t})):c.warn(\"Cannot find annotation to update\")}remove(e){const t=this.#ot.findIndex((t=>t.id===e));if(-1!==t){const e=this.#ot.splice(t,1)[0];this.#Re({type:\"annotationremove\",data:e})}else c.warn(\"Cannot find annotation to remove\")}setViewController(e){for(const t of this.#ot)t.setViewController(e),t.updateQuantification()}find(e){return this.#ot.find((t=>t.id===e))}getMeta(){return this.#Te}hasMeta(e){return void 0!==this.#Te[e]}getMetaValue(e){return this.#Te[e]}setMetaValue(e,t){this.#Te[e]=t}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)}}class $n{#lt;getAnnotation(e){return this.#lt.find(e)}getAnnotationGroup(){return this.#lt}isAnnotationGroupEditable(){return this.#lt.isEditable()}setAnnotationGroupEditable(e){this.#lt.setEditable(e)}addAnnotation(e){this.#lt.add(e)}updateAnnotation(e,t){this.#lt.update(e,t)}removeAnnotation(e){this.#lt.remove(e)}removeAnnotationWithCommand(e,t){const n=this.getAnnotation(e);if(void 0===n)return void c.warn(\"Cannot create remove command for undefined annotation: \"+e);const i=new vi(n,this);t(i),i.execute()}updateAnnotationWithCommand(e,t,n,i){const r=this.getAnnotation(e);if(void 0===r)return void c.warn(\"Cannot create update command for undefined annotation: \"+e);const o=new Ii(r,t,n,this);i(o),o.execute()}removeAllAnnotationsWithCommand(e){for(const t of this.#lt.getList())this.removeAnnotationWithCommand(t.id,e)}constructor(e){this.#lt=void 0!==e?e:new Jn}hasAnnotationMeta(e){return this.#lt.hasMeta(e)}setAnnotationMeta(e,t){this.#lt.setMetaValue(e,t)}}class ei{#ct=10;#ut=\"Verdana\";#dt=\"#fff\";#ht=\"#ffff80\";#St={x:1,y:1};#gt={x:1,y:1};#pt=2;#mt={x:.25,y:.25};#ft=.2;#Dt=3;getFontFamily(){return this.#ut}getFontSize(){return this.#ct}getStrokeWidth(){return this.#pt}getTextColour(){return this.#dt}getLineColour(){return this.#ht}setLineColour(e){this.#ht=e}setBaseScale(e){this.#St=e}setZoomScale(e){this.#gt=e}getBaseScale(){return this.#St}getZoomScale(){return this.#gt}scale(e){return e/this.#St.x}applyZoomScale(e){return{x:e/this.#gt.x,y:e/this.#gt.y}}applyZoomRatio(e){return e*this.#gt.x/this.#gt.y}getShadowOffset(){return this.#mt}getTagOpacity(){return this.#ft}getTextPadding(){return this.#Dt}getFontStr(){return\"normal \"+this.getFontSize()+\"px sans-serif\"}getLineHeight(){return this.getFontSize()+this.getFontSize()/5}getScaledFontSize(){return this.scale(this.getFontSize())}getScaledStrokeWidth(){return this.scale(this.getStrokeWidth())}getShadowLineColour(){return e=this.getLineColour(),n=e,.001172549*(t={r:parseInt(n.substring(1,3),16),g:parseInt(n.substring(3,5),16),b:parseInt(n.substring(5,7),16)}).r+.002301961*t.g+447059e-9*t.b<.5?\"#fff\":\"#000\";var e,t,n}}function ti(e){return\"label\"===e.name()}function ni(e){return\"shape\"===e.name()}function ii(e){return\"position-group\"===e.name()}function ri(e){const t=e.getChildren(ni)[0];if(t instanceof Kn().Line)return t}function oi(e,t){const n=e.getChildren((function(e){return e.id()===\"anchor\"+t}))[0];if(n instanceof Kn().Ellipse)return n}function ai(e){return function(t){return t.id()===e}}function si(e,t,n,i){const r=i.applyZoomScale(6),o={x:Math.abs(r.x),y:Math.abs(r.y)};return new(Kn().Ellipse)({x:e,y:t,stroke:\"#999\",fill:\"rgba(100,100,100,0.7\",strokeWidth:i.getStrokeWidth(),strokeScaleEnabled:!1,radius:o,radiusX:o.x,radiusY:o.y,name:\"anchor\",id:n.toString(),dragOnTop:!1,draggable:!0,visible:!1})}function li(e){return parseInt(e.substring(6),10)}class ci{#it;#rt;constructor(e,t){this.#it=new F(Math.min(e.getX(),t.getX()),Math.min(e.getY(),t.getY())),this.#rt=new F(Math.max(e.getX(),t.getX()),Math.max(e.getY(),t.getY()))}getBegin(){return this.#it}getEnd(){return this.#rt}equals(e){return null!==e&&this.getBegin().equals(e.getBegin())&&this.getEnd().equals(e.getEnd())}getSurface(){const e=this.getBegin(),t=this.getEnd();return Math.abs(t.getX()-e.getX())*Math.abs(t.getY()-e.getY())}getWorldSurface(e){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e.x,e.y)}getRealWidth(){return this.getEnd().getX()-this.getBegin().getX()}getRealHeight(){return this.getEnd().getY()-this.getBegin().getY()}getWidth(){return Math.abs(this.getRealWidth())}getHeight(){return Math.abs(this.getRealHeight())}getRound(){return{min:new F(Math.round(this.getBegin().getX()),Math.round(this.getBegin().getY())),max:new F(Math.round(this.getEnd().getX()),Math.round(this.getEnd().getY()))}}getCentroid(){return new F(this.getBegin().getX()+this.getWidth()/2,this.getBegin().getY()+this.getHeight()/2)}quantify(e,t){const n={},i=e.get2DSpacing();n.width={value:this.getWidth()*i.x,unit:\"unit.mm\"},n.height={value:this.getHeight()*i.y,unit:\"unit.mm\"};const r=this.getWorldSurface(i);if(null!==r&&(n.surface={value:r/100,unit:\"unit.cm2\"}),e.canQuantifyImage()){const i=this.getRound(),r=e.getImageRegionValues(i.min,i.max),o=e.getPixelUnit(),a=Ke(r,t);n.min={value:a.min,unit:o},n.max={value:a.max,unit:o},n.mean={value:a.mean,unit:o},n.stdDev={value:a.stdDev,unit:o},void 0!==a.median&&(n.median={value:a.median,unit:o}),void 0!==a.p25&&(n.p25={value:a.p25,unit:o}),void 0!==a.p75&&(n.p75={value:a.p75,unit:o})}return n}}function ui(e,t,n){const i=e.getValues(),r=i.slice(),o=[],a=t[0],l=Math.floor(a/2),c=t[1],u=Math.floor(c/2),d=n[0],h=n[1];for(let e=0;e<c;++e){r[h]=i[h]-u+e;for(let e=0;e<a;++e)r[d]=i[d]-l+e,o.push(new s(r.slice()))}return o}class di{#yt=[];constructor(e){void 0!==e&&(this.#yt=e)}getPoint(e){return this.#yt[e]}getPoints(){return this.#yt}getLength(){return this.#yt.length}addPoint(e){this.#yt.push(e)}addPoints(e){this.#yt=this.#yt.concat(e)}getCentroid(){let e=0,t=0,n=0;for(let i=0;i<this.#yt.length;++i){const r=this.#yt[i];let o;o=i===this.#yt.length-1?this.#yt[0]:this.#yt[i+1];const a=r.getX()*o.getY()-o.getX()*r.getY();e+=a,t+=(r.getX()+o.getX())*a,n+=(r.getY()+o.getY())*a}e*=.5;const i=1/(6*e);return t*=i,n*=i,new F(t,n)}}class hi{#yt;constructor(e){if(e.length>3)throw new Error(\"Too many points for a protractor\");this.#yt=e.slice(0,3)}getPoint(e){return this.#yt[e]}getLength(){return this.#yt.length}getCentroid(){return this.#yt[1]}quantify(e,t){const n={};if(3===this.#yt.length){let e=Wn(new zn(this.#yt[0],this.#yt[1]),new zn(this.#yt[1],this.#yt[2]));e>180&&(e=360-e),n.angle={value:e,unit:\"unit.degree\"}}return n}}class Si{#Ct;#vt;#It;constructor(e,t,n){this.#Ct=e,this.#vt=t,this.#It=n}getCenter(){return this.#Ct}getCentroid(){return this.#Ct}getA(){return this.#vt}getB(){return this.#It}equals(e){return null!==e&&this.getCenter().equals(e.getCenter())&&this.getA()===e.getA()&&this.getB()===e.getB()}getSurface(){return Math.PI*this.getA()*this.getB()}getWorldSurface(e){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e.x,e.y)}getRound(){const e=this.getCenter().getX(),t=this.getCenter().getY(),n=this.getA(),i=this.getB(),r=n/i,o=Math.pow(i,2),a=t+i,s=[];for(let n=t-i;n<a;++n){const i=o-Math.pow(n-t,2);if(Math.abs(i)<1e-7)continue;const a=r*Math.sqrt(i);a<.5||s.push([[Math.round(e-a),Math.round(n)],[Math.round(e+a),Math.round(n)]])}return s}quantify(e,t){const n={},i=e.get2DSpacing();n.a={value:this.getA()*i.x,unit:\"unit.mm\"},n.b={value:this.getB()*i.y,unit:\"unit.mm\"};const r=this.getWorldSurface(i);if(null!==r&&(n.surface={value:r/100,unit:\"unit.cm2\"}),e.canQuantifyImage()){const i=this.getRound();if(0!==i.length){const r=e.getImageVariableRegionValues(i),o=e.getPixelUnit(),a=Ke(r,t);n.min={value:a.min,unit:o},n.max={value:a.max,unit:o},n.mean={value:a.mean,unit:o},n.stdDev={value:a.stdDev,unit:o},void 0!==a.median&&(n.median={value:a.median,unit:o}),void 0!==a.p25&&(n.p25={value:a.p25,unit:o}),void 0!==a.p75&&(n.p75={value:a.p75,unit:o})}}return n}}function gi(e,t,n){const i=e.getValues(),r=i.slice(),o=[],a=t[0],l=t[1],c=a/l,u=Math.pow(l,2),d=n[0],h=n[1];for(let e=0;e<l;++e){const t=Math.round(c*Math.sqrt(u-Math.pow(e,2))),n=i[h]+e,a=i[h]-e;for(let e=0;e<t;++e){const t=i[d]+e,l=i[d]-e;r[d]=t,r[h]=n,o.push(new s(r.slice())),a!==n&&(r[h]=a,o.push(new s(r.slice()))),l!==t&&(r[d]=l,r[h]=n,o.push(new s(r.slice())),a!==n&&(r[h]=a,o.push(new s(r.slice()))))}}return o}class pi{#Ct;#Tt;constructor(e,t){this.#Ct=e,this.#Tt=t}getCenter(){return this.#Ct}getCentroid(){return this.#Ct}getRadius(){return this.#Tt}equals(e){return null!==e&&this.getCenter().equals(e.getCenter())&&this.getRadius()===e.getRadius()}getSurface(){return Math.PI*this.getRadius()*this.getRadius()}getWorldSurface(e){return function(e,t,n){let i=null;return null!==t&&null!==n&&(i=e*t*n),i}(this.getSurface(),e.x,e.y)}getRound(){const e=this.getCenter().getX(),t=this.getCenter().getY(),n=this.getRadius(),i=Math.pow(n,2),r=t+n,o=[];for(let a=t-n;a<r;++a){const n=i-Math.pow(a-t,2);if(Math.abs(n)<1e-7)continue;const r=Math.sqrt(n);r<.5||o.push([[Math.round(e-r),Math.round(a)],[Math.round(e+r),Math.round(a)]])}return o}quantify(e,t){const n={},i=e.get2DSpacing();n.radius={value:this.getRadius()*i.x,unit:\"unit.mm\"};const r=this.getWorldSurface(i);if(null!==r&&(n.surface={value:r/100,unit:\"unit.cm2\"}),e.canQuantifyImage()){const i=this.getRound();if(0!==i.length){const r=e.getImageVariableRegionValues(i),o=e.getPixelUnit(),a=Ke(r,t);n.min={value:a.min,unit:o},n.max={value:a.max,unit:o},n.mean={value:a.mean,unit:o},n.stdDev={value:a.stdDev,unit:o},void 0!==a.median&&(n.median={value:a.median,unit:o}),void 0!==a.p25&&(n.p25={value:a.p25,unit:o}),void 0!==a.p75&&(n.p75={value:a.p75,unit:o})}}return n}}class mi{#tt;#Lt;constructor(e,t){this.#tt=e,this.#Lt=t}#Pt=null;#wt=null;#Ot;#At;#bt=!1;setShape(e,t,n){if(this.#wt=e,this.#Ot=t,this.#At=n,this.#wt){if(this.#xt(),this.#Pt=n.getFactory(),null===this.#Pt)throw new Error(\"Could not find a factory to update shape.\");this.#Rt()}}getShape(){return this.#wt}getAnnotation(){return this.#At}isActive(){return this.#bt}enable(){this.#bt=!0,this.#wt&&(this.#Ft(!0),this.#wt.getLayer()&&this.#wt.getLayer().draw())}disable(){this.#bt=!1,this.#wt&&(this.#Ft(!1),this.#wt.getLayer()&&this.#wt.getLayer().draw())}reset(){this.#wt=void 0,this.#Ot=void 0,this.#At=void 0}resetAnchors(){this.#xt(),this.#Rt(),this.#Ft(!0)}#Et(e){this.#wt&&this.#wt.getParent()&&this.#wt.getParent().find(\".anchor\").forEach(e)}#Ft(e){this.#Et((function(t){t.visible(e)}))}setAnchorsActive(e){let t=null;t=e?e=>{this.#qt(e)}:e=>{this.#Ut(e)},this.#Et(t)}#xt(){this.#Et((function(e){e.remove()}))}#Rt(){if(!this.#wt||!this.#wt.getLayer())return;const e=this.#wt.getParent(),t=this.#Pt.getAnchors(this.#wt,this.#tt.getStyle());for(let n=0;n<t.length;++n)this.#qt(t[n]),e.add(t[n])}#qt(e){let t;e.on(\"dragstart.edit\",(e=>{e.cancelBubble=!0,t={mathShape:this.#At.mathShape,referencePoints:this.#At.referencePoints}})),e.on(\"dragmove.edit\",(e=>{const t=e.target;t instanceof Kn().Shape&&(function(e,t){const n=t.getParent();!function(e,t,n){let i=!1;e.x()<t.getX()?(e.x(t.getX()),i=!0):e.x()>n.getX()&&(e.x(n.getX()),i=!0),e.y()<t.getY()?(e.y(t.getY()),i=!0):e.y()>n.getY()&&(e.y(n.getY()),i=!0)}(t,new F(-n.x(),-n.y()),new F(e.x-n.x(),e.y-n.y()))}(this.#Ot.getBaseSize(),t),void 0!==this.#Pt.constrainAnchorMove&&this.#Pt.constrainAnchorMove(t),this.#Pt.updateAnnotationOnAnchorMove(this.#At,t),this.#Pt.updateShapeGroupOnAnchorMove(this.#At,t,this.#tt.getStyle()),t.getLayer()?t.getLayer().draw():c.warn(\"No layer to draw the anchor!\"),e.cancelBubble=!0)})),e.on(\"dragend.edit\",(e=>{const n={mathShape:this.#At.mathShape,referencePoints:this.#At.referencePoints},i=new Ii(this.#At,t,n,this.#Ot.getDrawController());this.#tt.addToUndoStack(i),this.#Lt({type:\"annotationupdate\",data:this.#At,dataid:this.#Ot.getDataId(),keys:Object.keys(n)}),t={mathShape:n.mathShape,referencePoints:n.referencePoints},e.cancelBubble=!0})),e.on(\"mousedown touchstart\",(e=>{e.target.moveToTop()})),e.on(\"mouseover.edit\",(e=>{const t=e.target;t instanceof Kn().Shape&&(t.stroke(\"#ddd\"),t.getLayer()?t.getLayer().draw():c.warn(\"No layer to draw the anchor!\"))})),e.on(\"mouseout.edit\",(e=>{const t=e.target;t instanceof Kn().Shape&&(t.stroke(\"#999\"),t.getLayer()?t.getLayer().draw():c.warn(\"No layer to draw the anchor!\"))}))}#Ut(e){e.off(\"dragstart.edit\"),e.off(\"dragmove.edit\"),e.off(\"dragend.edit\"),e.off(\"mousedown touchstart\"),e.off(\"mouseover.edit\"),e.off(\"mouseout.edit\")}}class fi{#Mt;constructor(){this.createTrashIcon()}createTrashIcon(){this.#Mt=new(Kn().Group);const e=new(Kn().Line)({points:[-10,-10,10,10],stroke:\"red\"}),t=new(Kn().Line)({points:[10,-10,-10,10],stroke:\"red\"});this.#Mt.width(20),this.#Mt.height(20),this.#Mt.add(e),this.#Mt.add(t)}activate(e){const t=e.getKonvaStage(),n=t.scale(),i=e.getKonvaLayer(),r={x:1/n.x,y:1/n.y};this.#Mt.x(t.offset().x+t.width()/(2*n.x)),this.#Mt.y(t.offset().y+t.height()/(15*n.y)),this.#Mt.scale(r),i.add(this.#Mt),i.draw()}changeChildrenColourOnTrashHover(e,t,n){if(this.isOverTrash(e))return this.changeGroupChildrenColour(this.#Mt,\"orange\"),void this.changeGroupChildrenColour(t,\"red\");this.changeGroupChildrenColour(this.#Mt,\"red\"),this.changeGroupChildrenColour(t,n)}changeGroupChildrenColour(e,t){e.getChildren().forEach((function(e){e instanceof Kn().Shape&&void 0!==e.stroke&&e.stroke(t)}))}remove(){this.#Mt.remove()}isOverTrash(e){const t=this.#Mt.width()*Math.abs(this.#Mt.scaleX())/2,n=this.#Mt.height()*Math.abs(this.#Mt.scaleY())/2;return Math.abs(e.x-this.#Mt.x())<t&&Math.abs(e.y-this.#Mt.y())<n}}class Di{#tt;#Qt;#Mt;#Vt=\"pointer\";#Nt;#Bt;#Lt;constructor(e,t){this.#tt=e,this.#Lt=t,this.#Qt=new mi(e,t),this.#Mt=new fi}setEditorShape(e,t){const n=t.getDrawController();e&&e instanceof Kn().Shape&&e!==this.#Qt.getShape()&&n.isAnnotationGroupEditable()&&(this.#Qt.disable(),this.#Qt.setShape(e,t,t.getDrawController().getAnnotation(e.getParent().id())),this.#Qt.enable())}getEditorShapeGroup(){let e;if(!this.#Qt.isActive()||(e=this.#Qt.getShape().getParent(),e instanceof Kn().Group))return e}getEditorAnnotation(){let e;return this.#Qt.isActive()&&(e=this.#Qt.getAnnotation()),e}disableAndResetEditor(){this.#Qt.disable(),this.#Qt.reset()}#Gt(e,t){const n=t.getKonvaStage();return{x:n.offset().x+e.x/n.scale().x,y:n.offset().y+e.y/n.scale().y}}storeMouseOverCursor(e){this.#Vt=e}#kt(){this.#Nt=document.body.style.cursor,document.body.style.cursor=this.#Vt,this.#Bt.opacity(.75)}onMouseOutShapeGroup(){void 0!==this.#Nt&&(document.body.style.cursor=this.#Nt,this.#Nt=void 0),void 0!==this.#Bt&&this.#Bt.opacity(1)}#Ht(e){e.on(\"mouseover\",(()=>{this.#Bt=e,this.#kt()})),e.on(\"mouseout\",(()=>{this.onMouseOutShapeGroup(),this.#Bt=void 0}))}#zt(e){e.off(\"mouseover\"),e.off(\"mouseout\")}addShapeGroupListeners(e,t,n){this.#Ht(e),this.#Wt(e,t,n),this.#Yt(e,t,n),e.on(\"dblclick\",(()=>{const e=t.textExpr;ki.openRoiDialog(t,(t=>{const i=t.textExpr,r=new Ii(t,{textExpr:e},{textExpr:i},n.getDrawController());this.#tt.addToUndoStack(r),r.execute()}))}))}#Wt(e,t,n){const i=n.getKonvaLayer(),r=e.getChildren(ni)[0];if(!(r instanceof Kn().Shape))return;let o,a,s,l;r.draggable(!0),r.on(\"dragstart.draw\",(e=>{l=r.stroke(),o={x:r.x(),y:r.y()},a={x:e.target.x(),y:e.target.y()},s={mathShape:t.mathShape,referencePoints:t.referencePoints},this.#Mt.activate(n),this.#Qt.setAnchorsActive(!1),i.draw()})),r.on(\"dragmove.draw\",(o=>{const s=function(e,t){return{min:new F(0,0),max:new F(e.x-Math.abs(t.width()),e.y-Math.abs(t.height()))}}(n.getBaseSize(),r);if(s&&!function(e,t,n){const i=e.getClientRect({relativeTo:e.getParent()});return i.x>t.getX()&&i.x<n.getX()&&i.y>t.getY()&&i.y<n.getY()}(r,s.min,s.max))return r.x(a.x),void r.y(a.y);const c={x:o.target.x()-a.x,y:o.target.y()-a.y},u=e.getChildren(),d=void 0===t.labelPosition;for(const e of u)e===o.target||\"label\"===e.name()&&!d||\"connector\"===e.name()||e.move(c);a={x:o.target.x(),y:o.target.y()};const h=t.getFactory();h.updateAnnotationOnTranslation(t,c),h.updateLabelContent(t,e,this.#tt.getStyle()),h.updateConnector(e);const S=Wi(o.evt),g={x:S.getX(),y:S.getY()},p=this.#Gt(g,n);this.#Mt.changeChildrenColourOnTrashHover(p,e,l),i.draw()})),r.on(\"dragend.draw\",(a=>{if(this.#Mt.remove(),void 0===a||void 0===a.evt)return;const c=r.x(),u=r.y(),d=Wi(a.evt),h={x:d.getX(),y:d.getY()},S=this.#Gt(h,n);if(this.#Mt.isOverTrash(S)){e.x(o.x),e.y(o.y),this.#Qt.disable(),this.#Qt.reset(),this.#Mt.changeGroupChildrenColour(e,l),t.mathShape=s.mathShape,t.referencePoints=s.referencePoints;const i=new vi(t,n.getDrawController());this.#tt.addToUndoStack(i),i.execute(),this.onMouseOutShapeGroup()}else{const e={x:c-o.x,y:u-o.y};if(0!==e.x||0!==e.y){const e={mathShape:t.mathShape,referencePoints:t.referencePoints},i=new Ii(t,s,e,n.getDrawController());this.#tt.addToUndoStack(i),this.#Lt({type:\"annotationupdate\",data:t,dataid:n.getDataId(),keys:Object.keys(e)}),s={mathShape:e.mathShape,referencePoints:e.referencePoints}}this.#Qt.setAnchorsActive(!0),this.#Qt.resetAnchors()}i.draw(),o={x:r.x(),y:r.y()}}))}#Yt(e,t,n){const i=e.getChildren(ti)[0];if(!(i instanceof Kn().Label))return;let r,o;i.draggable(!0),i.on(\"dragstart.draw\",(()=>{r={x:i.x(),y:i.y()},o=t.labelPosition})),i.on(\"dragmove.draw\",(()=>{t.getFactory().updateConnector(e)})),i.on(\"dragend.draw\",(()=>{const e=i.x()-r.x,a=i.y()-r.y;if(0!==e||0!==a){const e=new F(i.x(),i.y());t.labelPosition=e;const r=new Ii(t,{labelPosition:o},{labelPosition:e},n.getDrawController());this.#tt.addToUndoStack(r),this.#Lt({type:\"annotationupdate\",data:t,dataid:n.getDataId(),keys:[\"labelPosition\"]}),o=e}r={x:i.x(),y:i.y()}}))}removeShapeListeners(e){this.#zt(e),e.off(\"dblclick\");const t=e.getChildren(ni)[0];t instanceof Kn().Shape&&(t.draggable(!1),t.off(\"dragstart.draw\"),t.off(\"dragmove.draw\"),t.off(\"dragend.draw\"));const n=e.getChildren(ti)[0];n instanceof Kn().Label&&(n.draggable(!1),n.off(\"dragstart.draw\"),n.off(\"dragend.draw\"))}}class yi{#Xt;#jt=null;#Zt;#_t;#Kt={x:1,y:1};#Jt={x:1,y:1,z:1};#$t={x:0,y:0};#en={x:0,y:0};#tn={x:0,y:0};#nn={x:0,y:0};#in;#Ye;#rn;#on;#an;#sn;#ln=!0;constructor(e){this.#Xt=e,this.#Xt.className+=\" drawLayer\"}setShapeHandler(e){this.#sn=e}getDataId(){return this.#rn}getReferenceLayerId(){return this.#on}#Oe=new He;getKonvaStage(){return this.#jt}getKonvaLayer(){return this.#jt.getLayers()[0]}getDrawController(){return this.#in}setPlaneHelper(e){this.#Ye=e}getId(){return this.#Xt.id}removeFromDOM(){this.#Xt.remove()}getBaseSize(){return this.#Zt}getOpacity(){return this.#jt.opacity()}setOpacity(e){this.#jt.opacity(Math.min(Math.max(e,0),1))}addFlipOffsetX(){const e=this.#jt.scale(),t=this.#jt.size();this.#nn.x+=t.width/e.x;const n=this.#jt.offset();n.x+=this.#nn.x,this.#jt.offset(n)}addFlipOffsetY(){const e=this.#jt.scale(),t=this.#jt.size();this.#nn.y+=t.height/e.y;const n=this.#jt.offset();n.y+=this.#nn.y,this.#jt.offset(n)}flipScaleX(){this.#Jt.x*=-1}flipScaleY(){this.#Jt.y*=-1}flipScaleZ(){this.#Jt.z*=-1}setScale(e,t){const n=this.#Ye.getTargetOrientedPositiveXYZ({x:e.x*this.#Jt.x,y:e.y*this.#Jt.y,z:e.z*this.#Jt.z}),i={x:this.#Kt.x*n.x,y:this.#Kt.y*n.y},r=this.#jt.offset();if(1===Math.abs(e.x)&&1===Math.abs(e.y)&&1===Math.abs(e.z)){const e={x:r.x-this.#tn.x,y:r.y-this.#tn.y};this.#tn={x:0,y:0},this.#jt.offset(e)}else if(void 0!==t){let e=this.#Ye.getPlaneOffsetFromOffset3D({x:t.getX(),y:t.getY(),z:t.getZ()});e={x:e.x+this.#$t.x,y:e.y+this.#$t.y};const n=_i(r,this.#jt.scale(),i,e),o={x:this.#tn.x+n.x-r.x,y:this.#tn.y+n.y-r.y};this.#tn=o,this.#jt.offset(n)}this.#jt.scale(i),this.#cn(i)}initScale(e,t){const n=this.#Ye.getTargetOrientedPositiveXYZ({x:e.x*this.#Jt.x,y:e.y*this.#Jt.y,z:e.z*this.#Jt.z}),i={x:this.#Kt.x*n.x,y:this.#Kt.y*n.y};this.#jt.scale(i),this.#tn={x:t.x/this.#Kt.x,y:t.y/this.#Kt.y};const r=this.#jt.offset();this.#jt.offset({x:r.x+this.#tn.x,y:r.y+this.#tn.y})}setOffset(e){const t=this.#Ye.getPlaneOffsetFromOffset3D(e);this.#jt.offset({x:t.x+this.#en.x+this.#$t.x+this.#tn.x+this.#nn.x,y:t.y+this.#en.y+this.#$t.y+this.#tn.y+this.#nn.y})}setBaseOffset(e,t){const n=this.#Ye.getNativeScrollIndex(),i=this.#Ye.getPlaneOffsetFromOffset3D({x:0===n?e.getX():t.getX(),y:1===n?e.getY():t.getY(),z:2===n?e.getZ():t.getZ()}),r=this.#$t.x!==i.x||this.#$t.y!==i.y;if(r){const e=this.#jt.offset();this.#jt.offset({x:e.x-this.#$t.x+i.x,y:e.y-this.#$t.y+i.y}),this.#$t=i}return r}display(e){this.#Xt.style.display=e?\"\":\"none\"}isVisible(){return\"\"===this.#Xt.style.display}draw(){this.#jt.draw()}initialise(e,t,n){this.#Zt=e,this.#_t=t,this.#on=n,this.#jt=new(Kn().Stage)({container:this.#Xt,width:this.#Zt.x,height:this.#Zt.y,listening:!1}),this.#jt.getContent().setAttribute(\"style\",\"\");const i=new(Kn().Layer)({listening:!1,visible:!0});this.#jt.add(i)}setAnnotationGroup(e,t,n){if(this.#rn=t,e.addEventListener(\"annotationadd\",(e=>{this.#un(e.data,!0),this.getKonvaLayer().draw()})),e.addEventListener(\"annotationupdate\",(e=>{this.#dn(e.data),this.getKonvaLayer().draw()})),e.addEventListener(\"annotationremove\",(e=>{this.#hn(e.data),this.getKonvaLayer().draw()})),e.addEventListener(\"annotationgroupeditablechange\",(e=>{this.activateCurrentPositionShapes(e.data)})),this.#in=new $n(e),0!==e.getLength())for(const t of e.getList())this.#un(t,!1),n(new Ci(t,this.getDrawController()))}activateCurrentPositionShapes(e){const t=this.getKonvaLayer();if(this.#jt.listening(!1),void 0!==this.#sn){this.#sn.disableAndResetEditor();const e=t.getChildren();for(const t of e)t instanceof Kn().Group&&t.getChildren().forEach((e=>{e instanceof Kn().Group&&this.#sn.removeShapeListeners(e)}))}const n=this.getDrawController();if(e&&n.getAnnotationGroup().isEditable()){const e=this.getCurrentPosGroup().getChildren();0!==e.length&&(this.#jt.listening(!0),t.listening(!0)),void 0!==this.#sn&&e.forEach((e=>{if(e instanceof Kn().Group){const t=n.getAnnotation(e.id());this.#sn.addShapeGroupListeners(e,t,this)}}))}t.draw()}#Sn(e){let t;return t=void 0!==e.planePoints?e.planePoints:[e.planeOrigin],this.#gn(t)}#gn(e){let t=\"\";for(const n of e)0!==t.length&&(t+=\"-\"),t+=k([G(n.getX(),2),G(n.getY(),2),G(n.getZ(),2)]);return t}#pn(e){let t;const n=this.#Sn(e),i=this.getKonvaLayer().getChildren(ai(n));if(0!==i.length){const n=i[0];if(!(n instanceof Kn().Group))return;const r=n.getChildren(ai(e.id));0!==r.length&&r[0]instanceof Kn().Group&&(t=r[0])}return t}#un(e,t){if(!e.isCompatibleView(this.#Ye))return;const n=this.#Sn(e);let i=this.getKonvaLayer().getChildren(ai(n))[0];if(void 0===i&&(i=new(Kn().Group)({id:n,name:\"position-group\",visible:t}),this.getKonvaLayer().add(i)),!(i instanceof Kn().Group))return;const r=new ei,o=this.getKonvaStage();r.setZoomScale(o.scale());const a=e.getFactory().createShapeGroup(e,r);i.add(a),t&&void 0!==this.#sn&&this.#sn.addShapeGroupListeners(a,e,this),this.setLabelVisibility(a)}#hn(e){const t=this.#pn(e);return t instanceof Kn().Group?(t.remove(),!0):(c.debug(\"No shape group to remove\"),!1)}#dn(e){e.updateQuantification(),this.#hn(e)&&this.#un(e,!0)}fitToContainer(e,t,n){this.#jt.width(e.x),this.#jt.height(e.y);const i={x:t*this.#_t.x,y:t*this.#_t.y},r={x:this.#jt.scale().x*i.x/this.#Kt.x,y:this.#jt.scale().y*i.y/this.#Kt.y};this.#jt.scale().x===r.x&&this.#jt.scale().y===r.y||(this.#Kt=i,this.#jt.scale(r));const o={x:n.x/i.x,y:n.y/i.y},a={x:e.x/i.x,y:e.y/i.y},s={x:0!==this.#nn.x?a.x:0,y:0!==this.#nn.y?a.y:0};this.#en.x===o.x&&this.#en.y===o.y&&this.#nn.x===s.x&&this.#nn.y===s.y||(this.#jt.offset({x:this.#jt.offset().x+o.x-this.#en.x+s.x-this.#nn.x,y:this.#jt.offset().y+o.y-this.#en.y+s.y-this.#nn.y}),this.#nn=s,this.#en=o)}isAnnotationVisible(e){const t=this.getGroup(e);return void 0!==t&&t.isVisible()}setAnnotationVisibility(e,t){const n=this.getGroup(e);return void 0!==n&&(void 0===t&&(t=!n.isVisible()),n.visible(t),this.draw(),!0)}setLabelsVisibility(e){this.#ln=e;const t=this.getKonvaLayer().getChildren();for(const n of t)if(n instanceof Kn().Group){const t=n.getChildren();for(const n of t)n instanceof Kn().Group&&this.#mn(n,e)}}#mn(e,t){const n=e.getChildren(ti)[0];if(n instanceof Kn().Label&&(void 0===t&&(t=!n.isVisible()),void 0!==n.getText()&&0!==n.getText().text().length)){n.visible(t);const i=e.getChildren((e=>\"Line\"===e.className&&\"connector\"===e.name()))[0];i&&i.visible(t)}}setLabelVisibility(e){this.#mn(e,this.#ln)}deleteDraw(e,t){}deleteDraws(e){}getNumberOfDraws(){const e=this.getKonvaLayer().getChildren();let t=0;for(const n of e)n instanceof Kn().Group&&(t+=n.getChildren().length);return t}bindInteraction(){this.#jt.listening(!0),this.#Xt.style.pointerEvents=\"auto\";const e=Gi;for(let t=0;t<e.length;++t)this.#Xt.addEventListener(e[t],this.#Re)}unbindInteraction(){this.#jt.listening(!1),this.#Xt.style.pointerEvents=\"none\";const e=Gi;for(let t=0;t<e.length;++t)this.#Xt.removeEventListener(e[t],this.#Re)}setCurrentPosition(e,t){void 0===t&&(t=this.#Ye.worldToIndex(e));const n=this.#Ye.getPlanePoints(e);let i;i=this.#Ye.isAquisitionOrientation()?[n[0]]:n;const r=this.#gn(i);return this.#fn(r),this.#Re({type:\"positionchange\",value:[t.getValues(),e.getValues()],valid:!0}),!0}#fn(e){this.#an=e;const t=this.getKonvaLayer().getChildren(ii);let n;for(let i=0,r=t.length;i<r;++i)n=!1,void 0!==e&&t[i].id()===e&&(n=!0),t[i].visible(n);this.getKonvaLayer().draw()}getCurrentPosGroup(){if(void 0===this.#an)return;const e=this.getKonvaLayer().getChildren((e=>e.id()===this.#an));let t;return 1===e.length?e[0]instanceof Kn().Group&&(t=e[0]):0===e.length?(t=new(Kn().Group),t.name(\"position-group\"),t.id(this.#an),t.visible(!0),this.getKonvaLayer().add(t)):c.warn(\"Unexpected number of draw position groups\"),t}getGroup(e){const t=this.getKonvaLayer().findOne(\"#\"+e);return void 0===t&&c.warn(\"Cannot find node with id: \"+e),t}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{e.srclayerid=this.getId(),e.dataid=this.#rn,this.#Oe.fireEvent(e)};#cn(e){const t=2/e.x,n=2/e.y,i=this.#jt.find(\"Label\");for(let e=0;e<i.length;++e)i[e].scale({x:t,y:n})}}class Ci{#At;#in;constructor(e,t){this.#At=e,this.#in=t}getName(){return\"AddAnnotation-\"+this.#At.id}execute(){this.#in.addAnnotation(this.#At)}undo(){this.#in.removeAnnotation(this.#At.id)}}class vi{#At;#in;constructor(e,t){this.#At=e,this.#in=t}getName(){return\"RemoveAnnotation-\"+this.#At.id}execute(){this.#in.removeAnnotation(this.#At.id)}undo(){this.#in.addAnnotation(this.#At)}}class Ii{#At;#in;#Dn;#yn;constructor(e,t,n,i){this.#At=e,this.#in=i,this.#Dn=t,this.#yn=n}getName(){return\"UpdateAnnotation-\"+this.#At.id}execute(){const e=Object.keys(this.#yn);for(const t of e)this.#At[t]=this.#yn[t];this.#in.updateAnnotation(this.#At,e)}undo(){const e=Object.keys(this.#Dn);for(const t of e)this.#At[t]=this.#Dn[t];this.#in.updateAnnotation(this.#At,e)}}var Ti=o(324),Li=o.n(Ti);class Pi{constructor(e,t){this.pointArray=e?e.slice():[],this.controlPointIndexArray=t?t.slice():[]}getPoint(e){return this.pointArray[e]}isControlPoint(e){const t=this.pointArray.indexOf(e);if(-1!==t)return-1!==this.controlPointIndexArray.indexOf(t);throw new Error(\"Error: isControlPoint called with not in list point.\")}getLength(){return this.pointArray.length}addPoint(e){this.pointArray.push(e)}addControlPoint(e){const t=this.pointArray.indexOf(e);if(-1===t)throw new Error(\"Cannot mark a non registered point as control point.\");this.controlPointIndexArray.push(t)}addPoints(e){this.pointArray=this.pointArray.concat(e)}appenPath(e){const t=this.pointArray.length;this.pointArray=this.pointArray.concat(e.pointArray);const n=[];for(let i=0;i<e.controlPointIndexArray.length;++i)n[i]=e.controlPointIndexArray[i]+t;this.controlPointIndexArray=this.controlPointIndexArray.concat(n)}}class wi{constructor(e,t){this.bucketCount=1<<e,this.mask=this.bucketCount-1,this.size=0,this.loc=0,this.cost=void 0!==t?t:function(e){return e},this.buckets=this.buildArray(this.bucketCount)}push(e){const t=this.getBucket(e);e.next=this.buckets[t],this.buckets[t]=e,this.size++}pop(){if(0===this.size)throw new Error(\"Cannot pop, bucketQueue is empty.\");for(;null===this.buckets[this.loc];)this.loc=(this.loc+1)%this.bucketCount;const e=this.buckets[this.loc];return this.buckets[this.loc]=e.next,e.next=null,this.size--,e}remove(e){if(!e)return!1;const t=this.getBucket(e);let n=this.buckets[t];for(;null!==n&&(null===n.next||e.x!==n.next.x||e.y!==n.next.y);)n=n.next;return null!==n&&(n.next=n.next.next,this.size--,!0)}isEmpty(){return 0===this.size}getBucket(e){return this.cost(e)&this.mask}buildArray(e){const t=new Array(e);for(let e=0;e<t.length;e++)t[e]=null;return t}}const Oi=2/(3*Math.PI);function Ai(e,t,n,i,r){const o=e[i][n],a=t[i][n];let s=Math.sqrt(o*o+a*a);s=Math.max(s,1e-100),r.x=o/s,r.y=a/s}class bi{constructor(){this.width=-1,this.height=-1,this.curPoint=null,this.searchGranBits=8,this.searchGran=1<<this.searchGranBits,this.pointsPerPost=500,this.greyscale=null,this.laplace=null,this.gradient=null,this.gradX=null,this.gradY=null,this.parents=null,this.working=!1,this.trained=!1,this.trainingPoints=null,this.edgeWidth=2,this.trainingLength=32,this.edgeGran=256,this.edgeTraining=null,this.gradPointsNeeded=32,this.gradGran=1024,this.gradTraining=null,this.insideGran=256,this.insideTraining=null,this.outsideGran=256,this.outsideTraining=null}getTrainingIdx(e,t){return Math.round((e-1)*t)}getTrainedEdge(e){return this.edgeTraining[this.getTrainingIdx(this.edgeGran,e)]}getTrainedGrad(e){return this.gradTraining[this.getTrainingIdx(this.gradGran,e)]}getTrainedInside(e){return this.insideTraining[this.getTrainingIdx(this.insideGran,e)]}getTrainedOutside(e){return this.outsideTraining[this.getTrainingIdx(this.outsideGran,e)]}setWorking(e){this.working=e}setDimensions(e,t){this.width=e,this.height=t}setData(e){if(-1===this.width||-1===this.height)throw new Error(\"Dimensions have not been set.\");this.greyscale=function(e,t,n){const i={data:[]};for(let r=0;r<n;r++){i.data[r]=[];for(let n=0;n<t;n++){const o=4*(r*t+n);i.data[r][n]=(e[o]+e[o+1]+e[o+2])/765}}return i.dx=function(e,t){return e+1===this.data[t].length&&e--,this.data[t][e+1]-this.data[t][e]},i.dy=function(e,t){return t+1===this.data.length&&t--,this.data[t][e]-this.data[t+1][e]},i.gradMagnitude=function(e,t){const n=this.dx(e,t),i=this.dy(e,t);return Math.sqrt(n*n+i*i)},i.laplace=function(e,t){let n=-16*this.data[t][e];return n+=this.data[t-2][e],n+=this.data[t-1][e-1]+2*this.data[t-1][e]+this.data[t-1][e+1],n+=this.data[t][e-2]+2*this.data[t][e-1]+2*this.data[t][e+1]+this.data[t][e+2],n+=this.data[t+1][e-1]+2*this.data[t+1][e]+this.data[t+1][e+1],n+=this.data[t+2][e],n},i}(e,this.width,this.height),this.laplace=function(e){const t=[];t[0]=[],t[1]=[];for(let n=1;n<e.data.length;n++)t[0][n]=1,t[1][n]=1;for(let n=2;n<e.data.length-2;n++){t[n]=[],t[n][0]=1,t[n][1]=1;for(let i=2;i<e.data[n].length-2;i++)t[n][i]=e.laplace(i,n)>.33?0:1;t[n][e.data[n].length-2]=1,t[n][e.data[n].length-1]=1}t[e.data.length-2]=[],t[e.data.length-1]=[];for(let n=1;n<e.data.length;n++)t[e.data.length-2][n]=1,t[e.data.length-1][n]=1;return t}(this.greyscale),this.gradient=function(e){const t=[];let n=0,i=0,r=0;for(r=0;r<e.data.length-1;r++){for(t[r]=[],i=0;i<e.data[r].length-1;i++)t[r][i]=e.gradMagnitude(i,r),n=Math.max(t[r][i],n);t[r][e.data[r].length-1]=t[r][e.data.length-2]}t[e.data.length-1]=[];for(let n=0;n<t[0].length;n++)t[e.data.length-1][n]=t[e.data.length-2][n];for(r=0;r<t.length;r++)for(i=0;i<t[r].length;i++)t[r][i]=1-t[r][i]/n;return t}(this.greyscale),this.gradX=function(e){const t=[];for(let n=0;n<e.data.length;n++){t[n]=[];for(let i=0;i<e.data[n].length-1;i++)t[n][i]=e.dx(i,n);t[n][e.data[n].length-1]=t[n][e.data[n].length-2]}return t}(this.greyscale),this.gradY=function(e){const t=[];for(let n=0;n<e.data.length-1;n++){t[n]=[];for(let i=0;i<e.data[n].length;i++)t[n][i]=e.dy(i,n)}t[e.data.length-1]=[];for(let n=0;n<e.data[0].length;n++)t[e.data.length-1][n]=t[e.data.length-2][n];return t}(this.greyscale);const t=function(e,t,n,i){const r={inside:[],outside:[]},o={x:-1,y:-1};for(let a=0;a<t.length;a++){r.inside[a]=[],r.outside[a]=[];for(let s=0;s<t[a].length;s++){Ai(t,n,s,a,o);let l=Math.round(s+e*o.y),c=Math.round(a-e*o.x),u=Math.round(s-e*o.y),d=Math.round(a+e*o.x);l=Math.max(Math.min(l,t[a].length-1),0),u=Math.max(Math.min(u,t[a].length-1),0),c=Math.max(Math.min(c,t.length-1),0),d=Math.max(Math.min(d,t.length-1),0),r.inside[a][s]=i.data[c][l],r.outside[a][s]=i.data[d][u]}}return r}(this.edgeWidth,this.gradX,this.gradY,this.greyscale);this.inside=t.inside,this.outside=t.outside,this.edgeTraining=[],this.gradTraining=[],this.insideTraining=[],this.outsideTraining=[]}findTrainingPoints(e){const t=[];if(null!==this.parents)for(let n=0;n<this.trainingLength&&e;n++)t.push(e),e=this.parents[e.y][e.x];return t}resetTraining(){this.trained=!1}doTraining(e){if(this.trainingPoints=this.findTrainingPoints(e),this.trainingPoints.length<8)return;const t=[];this.calculateTraining(t,this.edgeGran,this.greyscale,this.edgeTraining),this.calculateTraining(t,this.gradGran,this.gradient,this.gradTraining),this.calculateTraining(t,this.insideGran,this.inside,this.insideTraining),this.calculateTraining(t,this.outsideGran,this.outside,this.outsideTraining),this.trainingPoints.length<this.gradPointsNeeded&&this.addInStaticGrad(this.trainingPoints.length,this.gradPointsNeeded),this.trained=!0}calculateTraining(e,t,n,i){let r=0;for(e.length=t,r=0;r<t;r++)e[r]=0;let o=1;for(r=0;r<this.trainingPoints.length;r++){const i=this.trainingPoints[r],a=this.getTrainingIdx(t,n[i.y][i.x]);e[a]+=1,o=Math.max(o,e[a])}for(r=0;r<t;r++)e[r]=1-e[r]/o;!function(e,t){t[0]=.4*e[0]+.5*e[1]+.1*e[1],t[1]=.25*e[0]+.4*e[1]+.25*e[2]+.1*e[3];for(let n=2;n<e.length-2;n++)t[n]=.05*e[n-2]+.25*e[n-1]+.4*e[n]+.25*e[n+1]+.05*e[n+2];const n=e.length;t[n-2]=.25*e[n-1]+.4*e[n-2]+.25*e[n-3]+.1*e[n-4],t[n-1]=.4*e[n-1]+.5*e[n-2]+.1*e[n-3]}(e,i)}addInStaticGrad(e,t){for(let n=0;n<this.gradGran;n++)this.gradTraining[n]=Math.min(this.gradTraining[n],1-n*(t-e)/(t*this.gradGran))}gradDirection(e,t,n,i){return function(e,t,n,i,r,o){const a={x:-1,y:-1},s={x:-1,y:-1};Ai(e,t,n,i,a),Ai(e,t,r,o,s);let l=a.y*(r-n)-a.x*(o-i),c=s.y*(r-n)-s.x*(o-i);return l<0&&(l=-l,c=-c),n!==r&&i!==o&&(l*=Math.SQRT1_2,c*=Math.SQRT1_2),Oi*(Math.acos(l)+Math.acos(c))}(this.gradX,this.gradY,e,t,n,i)}dist(e,t,n,i){let r=this.gradient[i][n];e!==n&&t!==i||(r*=Math.SQRT1_2);const o=this.laplace[i][n],a=this.gradDirection(e,t,n,i);return this.trained?.3*this.getTrainedGrad(r)+.3*o+.1*(a+this.getTrainedEdge(this.greyscale.data[t][e])+this.getTrainedInside(this.inside[t][e])+this.getTrainedOutside(this.outside[t][e])):.43*r+.43*o+.11*a}adj(e){const t=[],n=Math.max(e.x-1,0),i=Math.max(e.y-1,0),r=Math.min(e.x+1,this.greyscale.data[0].length-1),o=Math.min(e.y+1,this.greyscale.data.length-1);let a=0;for(let s=i;s<=o;s++)for(let i=n;i<=r;i++)i===e.x&&s===e.y||(t[a++]={x:i,y:s});return t}#Cn=e=>Math.round(this.searchGran*this.cost[e.y][e.x]);setPoint(e){this.setWorking(!0),this.curPoint=e;let t=0,n=0;for(this.visited=[],n=0;n<this.height;n++)for(this.visited[n]=[],t=0;t<this.width;t++)this.visited[n][t]=!1;for(this.parents=[],n=0;n<this.height;n++)this.parents[n]=[];for(this.cost=[],n=0;n<this.height;n++)for(this.cost[n]=[],t=0;t<this.width;t++)this.cost[n][t]=Number.MAX_VALUE;this.cost[e.y][e.x]=0,this.pq=new wi(this.searchGranBits,this.#Cn),this.pq.push(e)}doWork(){if(!this.working)return;this.timeout=null;let e=0;const t=[];for(;!this.pq.isEmpty()&&e<this.pointsPerPost;){const n=this.pq.pop();t.push(n),t.push(this.parents[n.y][n.x]),this.visited[n.y][n.x]=!0;const i=this.adj(n);for(let e=0;e<i.length;e++){const t=i[e],r=this.cost[n.y][n.x]+this.dist(n.x,n.y,t.x,t.y);r<this.cost[t.y][t.x]&&(this.cost[t.y][t.x]!==Number.MAX_VALUE&&this.pq.remove(t),this.cost[t.y][t.x]=r,this.parents[t.y][t.x]=n,this.pq.push(t))}e++}return t}}const xi={labelText:{arrow:{\"*\":\"\"},circle:{\"*\":\"{surface}\"},ellipse:{\"*\":\"{surface}\"},protractor:{\"*\":\"{angle}\"},rectangle:{\"*\":\"{surface}\"},roi:{\"*\":\"\"},ruler:{\"*\":\"{length}\"}}};class Ri{#vn;constructor(e){this.#vn=e}getPosition(e){let t=e.labelPosition;return void 0===t&&(t=this.#vn(e)),t}create(e,t){const n=new(Kn().Text)({fontSize:t.getFontSize(),fontFamily:t.getFontFamily(),fill:e.colour,padding:t.getTextPadding(),shadowColor:t.getShadowLineColour(),shadowOffset:t.getShadowOffset(),name:\"text\"}),i=e.getText();n.setText(i);const r=t.applyZoomScale(1),o={x:2*r.x,y:2*r.y},a=this.getPosition(e),s=new(Kn().Label)({x:a.getX(),y:a.getY(),scale:o,visible:0!==i.length,name:\"label\"});return s.add(n),s.add(new(Kn().Tag)({fill:e.colour,opacity:t.getTagOpacity()})),s}updatePosition(e,t){const n=t.getChildren((function(e){return\"label\"===e.name()}))[0];if(!(n instanceof Kn().Label))return;const i=this.getPosition(e);n.position({x:i.getX(),y:i.getY()})}getLabelAnchorsPosition(e){const t=e.x(),n=e.y(),i=e.width()*e.scale().x,r=e.height()*e.scale().y;return[new F(t+i/2,n),new F(t,n+r/2),new F(t+i/2,n+r),new F(t+i,n+r/2)]}getClosestPoints(e,t){let n=e[0].getDistance(t[0]),i=e[0],r=t[0];for(const o of e)for(const e of t){const t=o.getDistance(e);t<n&&(n=t,i=o,r=e)}return[i,r]}getConnector(e,t,n){const i=this.getLabelAnchorsPosition(t),r=this.getClosestPoints(e,i);return new(Kn().Line)({points:[r[0].getX(),r[0].getY(),r[1].getX(),r[1].getY()],stroke:t.getText().fill(),strokeWidth:n.getStrokeWidth(),strokeScaleEnabled:!1,visible:t.visible(),dash:[10,7],name:\"connector\"})}updateConnector(e,t){const n=e.getChildren((function(e){return\"label\"===e.name()}))[0];if(!(n instanceof Kn().Label))return;const i=this.getLabelAnchorsPosition(n),r=this.getClosestPoints(t,i),o=e.getChildren((function(e){return\"connector\"===e.name()}))[0];o instanceof Kn().Line&&o.points([r[0].getX(),r[0].getY(),r[1].getX(),r[1].getY()])}updateContent(e,t){const n=t.getChildren((function(e){return\"label\"===e.name()}))[0];if(!(n instanceof Kn().Label))return;const i=e.getText();n.getText().setText(i),n.visible()&&n.visible(0!==i.length)}}class Fi{#In=0;#Tn=0;getMin(){return this.#In}setMin(e){this.#In=e}getMax(){return this.#Tn}setMax(e){this.#Tn=e}getName(){return\"Threshold\"}#Ln=null;setOriginalImage(e){this.#Ln=e}getOriginalImage(){return this.#Ln}update(){const e=this.getOriginalImage(),t=e.getDataRange().min;return e.transform((e=>e<this.getMin()||e>this.getMax()?t:e))}}class Ei{getName(){return\"Sharpen\"}#Ln=null;setOriginalImage(e){this.#Ln=e}getOriginalImage(){return this.#Ln}update(){return this.getOriginalImage().convolute2D([0,-1,0,-1,5,-1,0,-1,0])}}class qi{getName(){return\"Sobel\"}#Ln=null;setOriginalImage(e){this.#Ln=e}getOriginalImage(){return this.#Ln}update(){const e=this.getOriginalImage(),t=e.convolute2D([1,0,-1,2,0,-2,1,0,-1]),n=e.convolute2D([1,2,1,0,0,0,-1,-2,-1]);return t.compose(n,(function(e,t){return Math.sqrt(e*e+t*t)}))}}class Ui{#Pn;#rn;#tt;constructor(e,t,n){this.#Pn=e,this.#rn=t,this.#tt=n}getName(){return\"Filter-\"+this.#Pn.getName()}execute(){this.#tt.setImage(this.#rn,this.#Pn.update()),this.#tt.render(this.#rn);const e={type:\"filterrun\",id:this.getName(),dataId:this.#rn};this.onExecute(e)}undo(){this.#tt.setImage(this.#rn,this.#Pn.getOriginalImage()),this.#tt.render(this.#rn);const e={type:\"filterundo\",id:this.getName(),dataid:this.#rn};this.onUndo(e)}onExecute(e){}onUndo(e){}}const Mi={},Qi={},Vi={WindowLevel:class{#tt;#wn=!1;#On;#An;constructor(e){this.#tt=e,this.#An=new Hn(e)}#bn(e,t){this.#tt.getLayerGroupByDivId(t).getActiveViewLayer().getViewController().isMonochrome()&&(this.#wn=!0,this.#On=e)}#xn(e,t){if(!this.#wn)return;const n=this.#tt.getLayerGroupByDivId(t).getActiveViewLayer().getViewController(),i=e.getX()-this.#On.getX(),r=this.#On.getY()-e.getY(),o=n.getImageRescaledDataRange(),a=.01*(o.max-o.min),s=n.getWindowLevel().center,l=n.getWindowLevel().width,c=s+Math.round(r*a);let d=l+Math.round(i*a);var h;d=(h=d)<1?1:h;const S=new u(c,d);n.setWindowLevel(S),this.#On=e}#Rn(){this.#wn&&(this.#wn=!1)}mousedown=e=>{const t=Wi(e),n=Zi(e);this.#bn(t,n.groupDivId)};mousemove=e=>{const t=Wi(e),n=Zi(e);this.#xn(t,n.groupDivId)};mouseup=e=>{this.#Rn()};mouseout=e=>{this.#Rn()};touchstart=e=>{const t=zi(e),n=Zi(e);this.#bn(t[0],n.groupDivId)};touchmove=e=>{const t=zi(e),n=Zi(e);this.#xn(t[0],n.groupDivId)};touchend=e=>{this.#Rn()};dblclick=e=>{const t=Zi(e),n=Wi(e),i=this.#tt.getLayerGroupByDivId(t.groupDivId).getActiveViewLayer(),r=i.displayToPlaneIndex(n),o=i.getViewController();if(!o.isMonochrome())return;const a=this.#tt.getData(i.getDataId()).image,s=new u(a.getRescaledValueAtIndex(o.getCurrentIndex().getWithNew2D(r.get(0),r.get(1))),o.getWindowLevel().width);o.setWindowLevel(s)};wheel=e=>{this.#An.wheel(e)};keydown=e=>{e.context=\"WindowLevel\",this.#tt.onKeydown(e)};activate(e){}init(){}setFeatures(e){}},Scroll:class{#tt;#wn=!1;#On;#An;#Fn;#En=!1;#qn;constructor(e){this.#tt=e,this.#An=new Hn(e)}#bn(e,t){this.#Un();const n=this.#tt.getLayerGroupByDivId(t).getActiveViewLayer(),i=n.getViewController();i.isPlaying()&&i.stop(),this.#wn=!0,this.#On=e;const r=n.displayToPlanePos(e),o=i.getPositionFromPlanePoint(r);i.setCurrentPosition(o)}#xn(e,t){if(!this.#wn)return void(this.#En&&this.#Mn(e,t));const n=this.#tt.getLayerGroupByDivId(t),i=n.getActiveViewLayer().getViewController();let r;const o=e.getY()-this.#On.getY(),a=Math.abs(o)>15;a&&n.canScroll()&&(r=o>0?i.getDecrementScrollPosition():i.getIncrementScrollPosition());const s=e.getX()-this.#On.getX(),l=Math.abs(s)>15;l&&n.moreThanOne(3)&&(r=s>0?i.getIncrementPosition(3):i.getDecrementPosition(3)),void 0!==r&&n.isPositionInBounds(r)&&i.setCurrentPosition(r),(l||a)&&(this.#On=e)}#Rn(){this.#wn&&(this.#wn=!1)}mousedown=e=>{const t=Wi(e),n=Zi(e);this.#bn(t,n.groupDivId)};mousemove=e=>{const t=Wi(e),n=Zi(e);this.#xn(t,n.groupDivId)};mouseup=e=>{this.#Rn()};mouseout=e=>{this.#Rn(),this.#Un()};touchstart=e=>{this.#Fn=setTimeout((()=>{this.dblclick(e)}),500);const t=zi(e),n=Zi(e);this.#bn(t[0],n.groupDivId)};touchmove=e=>{null!==this.#Fn&&(clearTimeout(this.#Fn),this.#Fn=null);const t=zi(e),n=Zi(e);this.#xn(t[0],n.groupDivId)};touchend=e=>{null!==this.#Fn&&(clearTimeout(this.#Fn),this.#Fn=null),this.#Rn()};wheel=e=>{this.#An.wheel(e)};keydown=e=>{e.context=\"Scroll\",this.#tt.onKeydown(e)};dblclick=e=>{const t=Zi(e);this.#tt.getLayerGroupByDivId(t.groupDivId).getActiveViewLayer().getViewController().play()};#Mn(e,t){const n=this.#tt.getLayerGroupByDivId(t);this.#qn=t,n.showTooltip(e)}#Un(){void 0!==this.#qn&&(this.#tt.getLayerGroupByDivId(this.#qn).removeTooltipDiv(),this.#qn=void 0)}activate(e){e||this.#Un()}setFeatures(e){void 0!==e.displayTooltip&&(this.#En=e.displayTooltip)}init(){}},ZoomAndPan:class{#tt;#wn=!1;#On;#Qn;#Vn;#Nn;constructor(e){this.#tt=e}#bn(e){this.#wn=!0,this.#On=e,this.#Qn=!1}#Bn=e=>{this.#wn=!0,this.#On=e[0],this.#Qn=!1,this.#Vn=new zn(e[0],e[1]),this.#Nn=this.#Vn.getMidpoint()};#xn(e,t){if(!this.#wn)return;this.#Qn=!0;const n=e.getX()-this.#On.getX(),i=e.getY()-this.#On.getY(),r=this.#tt.getLayerGroupByDivId(t),o=r.getActiveViewLayer(),a=o.getViewController(),s=o.displayToPlaneScale(new F(n,i)),l=a.getOffset3DFromPlaneOffset({x:s.getX(),y:s.getY()});r.addTranslation({x:l.getX(),y:l.getY(),z:l.getZ()}),r.draw(),this.#On=e}#Gn=(e,t)=>{if(!this.#wn)return;this.#Qn=!0;const n=new zn(e[0],e[1]).getLength()/this.#Vn.getLength(),i=this.#tt.getLayerGroupByDivId(t),r=i.getActiveViewLayer(),o=r.getViewController();if(1===n){const t=e[0].getY()-this.#On.getY();if(Math.abs(t)<15)return;if(i.canScroll()){let e;e=t>0?o.getIncrementScrollPosition():o.getDecrementScrollPosition(),void 0!==e&&i.isPositionInBounds(e)&&o.setCurrentPosition(e)}}else{const e=(n-1)/10;if(Math.abs(e)%.1<=.05&&void 0!==this.#Nn){const t=r.displayToMainPlanePos(this.#Nn),n=o.getPlanePositionFromPlanePoint(t);i.addScale(e,n),i.draw()}}};#kn(e,t){const n=this.#tt.getLayerGroupByDivId(t).getActiveViewLayer(),i=n.getViewController(),r=n.displayToPlanePos(e),o=i.getPositionFromPlanePoint(r);i.setCurrentPosition(o)}#Rn(){this.#wn&&(this.#wn=!1)}mousedown=e=>{const t=Wi(e);this.#bn(t)};mousemove=e=>{const t=Wi(e),n=Zi(e);this.#xn(t,n.groupDivId)};mouseup=e=>{if(!this.#Qn){const t=Wi(e),n=Zi(e);this.#kn(t,n.groupDivId)}this.#Rn()};mouseout=e=>{this.#Rn()};touchstart=e=>{const t=zi(e);1===t.length?this.#bn(t[0]):2===t.length&&this.#Bn(t)};touchmove=e=>{const t=zi(e),n=Zi(e);1===t.length?this.#xn(t[0],n.groupDivId):2===t.length&&this.#Gn(t,n.groupDivId)};touchend=e=>{if(!this.#Qn){const t=Wi(e),n=Zi(e);this.#kn(t,n.groupDivId)}this.#Rn()};wheel=e=>{e.preventDefault();const t=-e.deltaY/500,n=Zi(e),i=Wi(e),r=this.#tt.getLayerGroupByDivId(n.groupDivId),o=r.getActiveViewLayer(),a=o.getViewController(),s=o.displayToMainPlanePos(i),l=a.getPlanePositionFromPlanePoint(s);r.addScale(t,l),r.draw()};keydown=e=>{e.context=\"ZoomAndPan\",this.#tt.onKeydown(e)};activate(e){}init(){}setFeatures(e){}},Opacity:class{#tt;#wn=!1;#On;#An;constructor(e){this.#tt=e,this.#An=new Hn(e)}#bn(e){this.#wn=!0,this.#On=e}#xn(e,t){if(!this.#wn)return;const n=e.getX()-this.#On.getX();if(Math.abs(n)>15){const i=this.#tt.getLayerGroupByDivId(t).getActiveViewLayer(),r=i.getOpacity();i.setOpacity(r+n/200),i.draw(),this.#On=e}}#Rn(){this.#wn&&(this.#wn=!1)}mousedown=e=>{const t=Wi(e);this.#bn(t)};mousemove=e=>{const t=Wi(e),n=Zi(e);this.#xn(t,n.groupDivId)};mouseup=e=>{this.#Rn()};mouseout=e=>{this.#Rn()};touchstart=e=>{const t=zi(e);this.#bn(t[0])};touchmove=e=>{const t=zi(e),n=Zi(e);this.#xn(t[0],n.groupDivId)};touchend=e=>{this.#Rn()};wheel=e=>{this.#An.wheel(e)};keydown=e=>{e.context=\"Opacity\",this.#tt.onKeydown(e)};activate(e){}init(){}setFeatures(e){}},Draw:class{#tt;#An;#Hn;#zn=!1;#Wn=null;#Pt=null;#Yn=null;#Xn;#yt=[];#jn=null;#Zn=!0;#_n=[];#sn;#Kn=!1;#H={};#Jn=!1;#$n=[];constructor(e){this.#tt=e,this.#An=new Hn(e),this.#sn=new Di(e,this.#Re),this.#Hn=e.getStyle()}#ei(e,t){const n=this.#tt.getLayerGroupByDivId(t);let i=n.getActiveDrawLayer();if(void 0===i){const e=n.getActiveViewLayer().getDataId(),r=this.#tt.getData(e).image.getMeta().SeriesInstanceUID;if(this.#_n.includes(r))return void this.#Re({type:\"warn\",message:\"Cannot create draw layer, data is in black list\"});const o=this.#tt.createAnnotationData(e);this.#tt.addAndRenderAnnotationData(o,t,e),i=n.getActiveDrawLayer(),i.setShapeHandler(this.#sn),n.setActiveDrawLayerByDataId(i.getDataId())}const r=i.getDrawController().getAnnotationGroup(),o=i.getKonvaStage();if(this.#Hn.setZoomScale(o.scale()),r.isEditable()){const t=o.getIntersection({x:e.getX(),y:e.getY()});t?this.#ti(i,t):this.#ni(n,e)}}#ni(e,t){this.#sn.disableAndResetEditor(),this.#ii();const n=e.getActiveViewLayer();this.#jn=n.displayToPlanePos(t),this.#yt.push(this.#jn)}#ii(){this.#zn=!0,this.#Pt=new this.#Wn[this.#Xn],this.#yt=[]}#ri(){this.#zn=!1,this.#yt=[]}#ti(e,t){let n=t.getParent();t instanceof Kn().Tag&&(n=n.getParent());const i=n.find(\".shape\")[0];i instanceof Kn().Shape&&(this.#Re({type:\"annotationselect\",annotationid:n.id(),dataid:e.getDataId()}),this.#sn.setEditorShape(i,e))}#oi(e,t){const n=this.#tt.getLayerGroupByDivId(t),i=n.getActiveViewLayer().displayToPlanePos(e);(Math.abs(i.getX()-this.#jn.getX())>0||Math.abs(i.getY()-this.#jn.getY())>0)&&(this.#Jn&&this.#yt.pop(),this.#jn=i,this.#Jn=!0,this.#yt.push(this.#jn),this.#ai(this.#yt,n))}#si(e){if(0!==this.#yt.length){if(this.#yt.length===this.#Pt.getNPoints()){const t=this.#tt.getLayerGroupByDivId(e);this.#li(this.#yt,t),this.#ri()}this.#Jn=!1}else c.warn(\"Draw mouseup but no points...\")}mousedown=e=>{if(this.#zn)return;const t=Wi(e),n=Zi(e);this.#ei(t,n.groupDivId)};mousemove=e=>{if(!this.#zn)return;const t=Wi(e),n=Zi(e);this.#oi(t,n.groupDivId)};mouseup=e=>{if(!this.#zn)return;const t=Zi(e);this.#si(t.groupDivId)};dblclick=e=>{if(this.#Pt&&void 0!==this.#Pt.getNPoints())return;if(!this.#zn)return;if(0===this.#yt.length)return void c.warn(\"Draw dblclick but no points...\");const t=Zi(e),n=this.#tt.getLayerGroupByDivId(t.groupDivId);this.#li(this.#yt,n),this.#ri()};mouseout=e=>{if(!this.#zn)return;const t=Zi(e);this.#si(t.groupDivId)};touchstart=e=>{if(this.#zn)return;const t=zi(e),n=Zi(e);this.#ei(t[0],n.groupDivId)};touchmove=e=>{if(!this.#zn)return;const t=Zi(e),n=zi(e),i=this.#tt.getLayerGroupByDivId(t.groupDivId),r=i.getActiveViewLayer().displayToPlanePos(n[0]);(Math.abs(r.getX()-this.#jn.getX())>0||Math.abs(r.getY()-this.#jn.getY())>0)&&(1!==this.#yt.length&&this.#yt.pop(),this.#jn=r,this.#yt.push(this.#jn),this.#yt.length<this.#Pt.getNPoints()&&(clearTimeout(this.timer),this.timer=setTimeout((()=>{this.#yt.push(this.#jn)}),this.#Pt.getTimeout())),this.#ai(this.#yt,i))};touchend=e=>{this.dblclick(e)};wheel=e=>{this.#Zn&&this.#An.wheel(e)};keydown=e=>{this.#zn||(e.context=\"Draw\",this.#tt.onKeydown(e));const t=this.#sn.getEditorAnnotation();if((\"Delete\"===e.key||\"Backspace\"===e.key)&&void 0!==t){const e=this.#tt.getActiveLayerGroup().getActiveDrawLayer().getDrawController(),n=new vi(t,e);this.#tt.addToUndoStack(n),n.execute(),this.#sn.onMouseOutShapeGroup()}if(\"Escape\"===e.key&&null!==this.#Yn){const e=this.#Yn.getLayer();this.#Yn.destroy(),this.#Yn=null,this.#ri(),e.draw()}};#ai(e,t){this.#Yn&&(this.#Yn.destroy(),this.#Yn=null);const n=t.getActiveDrawLayer(),i=n.getDrawController(),r=n.getKonvaLayer(),o=t.getActiveViewLayer().getViewController();if(this.#Kn){const e=[\"#ffff80\",\"#ff80ff\",\"#80ffff\",\"#80ff80\",\"8080ff\",\"ff8080\"],t=n.getId(),i=t.substring(t.length-1),r=e[parseInt(i,10)-1];void 0!==r&&this.#Hn.setLineColour(r)}const a=new Bi,s=i.getAnnotationGroup().getColour();a.colour=void 0!==s?s:this.#Hn.getLineColour(),a.init(o),this.#Pt.setAnnotationMathShape(a,e),this.#Yn=this.#Pt.createShapeGroup(a,this.#Hn),n.setLabelVisibility(this.#Yn),this.#Yn.getChildren(ni)[0].listening(!1),r.listening(!1),r.add(this.#Yn),r.draw()}#li(e,t){this.#Yn&&(this.#Yn.destroy(),this.#Yn=null);const n=t.getActiveDrawLayer(),i=n.getKonvaLayer(),r=n.getDrawController(),o=t.getActiveViewLayer().getViewController(),a=new Bi,s=r.getAnnotationGroup().getColour();a.colour=void 0!==s?s:this.#Hn.getLineColour(),a.id=et(),a.init(o),this.#Pt.setAnnotationMathShape(a,e);const l=new Ci(a,r);this.#tt.addToUndoStack(l),l.execute(),i.listening(!0)}#ci(e){const t=e.getId();return void 0===this.#$n[t]&&(this.#$n[t]=()=>{e.activateCurrentPositionShapes(!0)}),this.#$n[t]}#ui(e,t){e.setShapeHandler(this.#sn),e.activateCurrentPositionShapes(t),t?this.#tt.addEventListener(\"positionchange\",this.#ci(e)):this.#tt.removeEventListener(\"positionchange\",this.#ci(e))}activate(e){e||this.#sn.onMouseOutShapeGroup();const t=this.#tt.getDrawLayers();for(const n of t)void 0!==n&&this.#ui(n,e);this.#tt.addEventListener(\"drawlayeradd\",(t=>{const n=this.#tt.getDrawLayers((function(e){return e.getId()===t.layerid}));1===n.length&&this.#ui(n[0],e)}))}setOptions(e){this.#Wn=e}getOptionsType(){return\"factory\"}setFeatures(e){if(void 0!==e.autoShapeColour&&(this.#Kn=e.autoShapeColour),void 0!==e.shapeColour&&(this.#Hn.setLineColour(e.shapeColour),this.#Kn=!1),void 0!==e.shapeName){if(!this.hasShape(e.shapeName))throw new Error(\"Unknown shape: '\"+e.shapeName+\"'\");this.#Xn=e.shapeName}void 0!==e.mouseOverCursor&&this.#sn.storeMouseOverCursor(e.mouseOverCursor),void 0!==e.withScroll&&(this.#Zn=e.withScroll),void 0!==e.blacklist&&(this.#_n=e.blacklist)}init(){}getEventNames(){return[\"annotationupdate\",\"annotationselect\",\"warn\"]}addEventListener(e,t){void 0===this.#H[e]&&(this.#H[e]=[]),this.#H[e].push(t)}removeEventListener(e,t){if(void 0!==this.#H[e])for(let n=0;n<this.#H[e].length;++n)this.#H[e][n]===t&&this.#H[e].splice(n,1)}#Re=e=>{if(void 0!==this.#H[e.type])for(let t=0;t<this.#H[e.type].length;++t)this.#H[e.type][t](e)};hasShape(e){return void 0!==this.#Wn[e]}},Filter:class{#tt;constructor(e){this.#tt=e}#di=null;#hi=0;#Oe=new He;activate(e){for(const t in this.#di)e?(this.#di[t].addEventListener(\"filterrun\",this.#Re),this.#di[t].addEventListener(\"filter-undo\",this.#Re)):(this.#di[t].removeEventListener(\"filterrun\",this.#Re),this.#di[t].removeEventListener(\"filter-undo\",this.#Re))}setOptions(e){this.#di={};for(const t in e)this.#di[t]=new e[t](this.#tt)}getOptionsType(){return\"instance\"}init(){for(const e in this.#di)this.#di[e].init()}keydown=e=>{e.context=\"Filter\",this.#tt.onKeydown(e)};getEventNames(){return[\"filterrun\",\"filterundo\"]}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)};getSelectedFilter(){return this.#hi}setFeatures(e){if(void 0!==e.filterName){if(!this.hasFilter(e.filterName))throw new Error(\"Unknown filter: '\"+e.filterName+\"'\");this.#hi&&this.#hi.activate(!1),this.#hi=this.#di[e.filterName],this.#hi.activate(!0)}if(void 0!==e.run&&e.run){let t={};void 0!==e.runArgs&&(t=e.runArgs),this.getSelectedFilter().run(t)}}getFilterList(){return this.#di}hasFilter(e){return this.#di[e]}},Floodfill:class{#tt;constructor(e){this.#tt=e}#Si=5;#gi=0;#pi=2e3;#mi=null;#fi=null;#Di=10;#yi=null;#wn=!1;#At;#Ci;#vi=null;#Ii=[];#Ti=!1;#Hn=new ei;#Oe=new He;setExtend(e){this.#Ti=e}getExtend(){return this.#Ti}#Li=(e,t)=>{const n=this.#tt.getLayerGroupByDivId(t).getActiveViewLayer().displayToPlaneIndex(e);return{x:n.get(0),y:n.get(1)}};#Pi(e,t,n){this.#Ii=[];const i={data:this.#mi.data,width:this.#mi.width,height:this.#mi.height,bytes:4};this.#fi=Li().floodFill(i,e.x,e.y,t),this.#fi=Li().gaussBlurOnlyBorder(this.#fi,this.#Si);let r=Li().traceContours(this.#fi);if(r=Li().simplifyContours(r,this.#gi,this.#pi),r.length>0&&r[0].points[0].x){if(n)return r[0].points;for(let e=0,t=r[0].points.length;e<t;e++)this.#Ii.push(new F(r[0].points[e].x,r[0].points[e].y));return this.#Ii}return[]}#wi(e,t,n){if(this.#vi=this.#Pi(e,t,!1),0!==this.#vi.length){const e=n.getActiveDrawLayer().getDrawController(),t=new di(this.#vi);let i;if(void 0===this.#At){this.#At=new Bi,this.#At.colour=this.#Hn.getLineColour(),this.#At.id=et();const r=n.getActiveViewLayer().getViewController();this.#At.init(r),this.#At.mathShape=t,i=new Ci(this.#At,e)}else{const n=this.#At.mathShape;i=new Ii(this.#At,{mathShape:n},{mathShape:t},e)}this.#tt.addToUndoStack(i),i.execute()}return 0!==this.#vi.length}extend(e,t,n){if(!this.#Ci)throw\"'initialpoint' not found. User must click before use extend!\";const i=n.getActiveViewLayer().getViewController(),r=i.getCurrentIndex(),o=i.getImageSize(),a=this.#yi||this.#Di;for(let e=r.get(2),s=t||o.get(2);e<s&&this.#wi(this.#Ci,a,n);e++)i.incrementIndex(2);i.setCurrentPosition(r);for(let t=r.get(2),o=e||0;t>o&&this.#wi(this.#Ci,a,n);t--)i.decrementIndex(2);i.setCurrentPosition(r)}onThresholdChange(e){}#bn(e,t){const n=this.#tt.getLayerGroupByDivId(t),i=n.getActiveViewLayer();let r=n.getActiveDrawLayer();if(void 0===r){const e=n.getActiveViewLayer().getDataId(),i=this.#tt.createAnnotationData(e);this.#tt.addAndRenderAnnotationData(i,t,e),r=n.getActiveDrawLayer(),n.setActiveDrawLayerByDataId(r.getDataId())}this.#mi=i.getImageData(),this.#mi?(this.#Hn.setZoomScale(r.getKonvaLayer().getAbsoluteScale()),this.#wn=!0,this.#Ci=this.#Li(e,t),this.#wi(this.#Ci,this.#Di,n),this.onThresholdChange(this.#Di)):c.error(\"No image found\")}#xn(e,t){if(!this.#wn)return;const n=this.#Li(e,t);this.#yi=Math.round(Math.sqrt(Math.pow(this.#Ci.x-n.x,2)+Math.pow(this.#Ci.y-n.y,2))/2),this.#yi=this.#yi<this.#Di?this.#Di:this.#yi-this.#Di,this.#wi(this.#Ci,this.#yi,this.#tt.getLayerGroupByDivId(t)),this.onThresholdChange(this.#yi)}#Rn(){this.#wn&&(this.#wn=!1)}mousedown=e=>{const t=Wi(e),n=Zi(e);this.#bn(t,n.groupDivId)};mousemove=e=>{const t=Wi(e),n=Zi(e);this.#xn(t,n.groupDivId)};mouseup=e=>{this.#Rn()};mouseout=e=>{this.#Rn()};touchstart=e=>{const t=zi(e),n=Zi(e);this.#bn(t[0],n.groupDivId)};touchmove=e=>{const t=zi(e),n=Zi(e);this.#xn(t[0],n.groupDivId)};touchend=e=>{this.#Rn()};keydown=e=>{e.context=\"Floodfill\",this.#tt.onKeydown(e)};activate(e){e&&(this.#Hn.setBaseScale(this.#tt.getBaseScale()),this.setFeatures({shapeColour:this.#Hn.getLineColour()}))}init(){}getEventNames(){return[\"drawcreate\",\"drawchange\",\"drawmove\",\"drawdelete\"]}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}setFeatures(e){void 0!==e.shapeColour&&this.#Hn.setLineColour(e.shapeColour)}},Livewire:class{#tt;constructor(e){this.#tt=e}#wn=!1;#On;#At;#Hn=new ei;#Oi=new Pi;#Ai=new Pi;#Ii=[];#bi=5;#Oe=new He;#xi(e){const t=e.get(1);for(let e=0;e<t;++e)this.#Ii[e]=[]}#Ri(){this.#Oi=new Pi,this.#Ai=new Pi}#Fi=new bi;#bn(e,t){const n=this.#tt.getLayerGroupByDivId(t),i=n.getActiveViewLayer(),r=i.getViewController().getImageSize(),o=i.displayToPlaneIndex(e);if(this.#wn){const e=Math.abs(o.get(0)-this.#On.getX()),t=Math.abs(o.get(1)-this.#On.getY());if(e<this.#bi&&t<this.#bi)this.#Ei();else{this.#Oi=this.#Ai,this.#xi(r);const e={x:o.get(0),y:o.get(1)};this.#Fi.doTraining(e),this.#Oi.addControlPoint(this.#Ai.getPoint(0))}}else{this.#wn=!0,this.#On=new F(o.get(0),o.get(1)),this.#Ri(),this.#xi(r);let e=n.getActiveDrawLayer();if(void 0===e){const i=n.getActiveViewLayer().getDataId(),r=this.#tt.createAnnotationData(i);this.#tt.addAndRenderAnnotationData(r,t,i),e=n.getActiveDrawLayer(),n.setActiveDrawLayerByDataId(e.getDataId())}this.#Hn.setZoomScale(e.getKonvaLayer().getAbsoluteScale());const i={x:o.get(0),y:o.get(1)};this.#Fi.doTraining(i);const a=new F(o.get(0),o.get(1));this.#Oi.addPoint(a),this.#Oi.addControlPoint(a)}}#xn(e,t){if(!this.#wn)return;const n=this.#tt.getLayerGroupByDivId(t),i=n.getActiveViewLayer().displayToPlaneIndex(e);let r={x:i.get(0),y:i.get(1)};this.#Fi.setPoint(r);let o=[],a=!1;for(;!this.#Ii[r.y][r.x]&&!a;)if(o=this.#Fi.doWork(),0===o.length)a=!0;else for(let e=0;e<o.length-1;e+=2){const t=o[e],n=o[e+1];this.#Ii[t.y][t.x]=n}for(this.#Ai=new Pi,a=!1;r&&!a;)this.#Ai.addPoint(new F(r.x,r.y)),this.#Ii[r.y]&&this.#Ii[r.y][r.x]?r=this.#Ii[r.y][r.x]:a=!0;this.#Ai.appenPath(this.#Oi);const s=n.getActiveDrawLayer().getDrawController(),l=new di(this.#Ai.pointArray);let c;if(void 0===this.#At){this.#At=new Bi,this.#At.colour=this.#Hn.getLineColour(),this.#At.id=et();const e=n.getActiveViewLayer().getViewController();this.#At.init(e),this.#At.mathShape=l,c=new Ci(this.#At,s)}else{const e=this.#At.mathShape;c=new Ii(this.#At,{mathShape:e},{mathShape:l},s)}this.#tt.addToUndoStack(c),c.execute()}#Ei(){this.#wn=!1}mousedown=e=>{const t=Wi(e),n=Zi(e);this.#bn(t,n.groupDivId)};mousemove=e=>{const t=Wi(e),n=Zi(e);this.#xn(t,n.groupDivId)};mouseup(e){}mouseout=e=>{};dblclick=e=>{this.#Ei()};touchstart=e=>{const t=zi(e),n=Zi(e);this.#bn(t[0],n.groupDivId)};touchmove=e=>{const t=zi(e),n=Zi(e);this.#xn(t[0],n.groupDivId)};touchend=e=>{};keydown=e=>{e.context=\"Livewire\",this.#tt.onKeydown(e)};activate(e){if(e){const e=this.#tt.getActiveLayerGroup().getActiveViewLayer(),t=e.getViewController().getImageSize();this.#Fi.setDimensions(t.get(0),t.get(1)),this.#Fi.setData(e.getImageData().data),this.#Hn.setBaseScale(this.#tt.getBaseScale()),this.setFeatures({shapeColour:this.#Hn.getLineColour()})}}init(){}getEventNames(){return[\"drawcreate\",\"drawchange\",\"drawmove\",\"drawdelete\"]}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}setFeatures(e){void 0!==e.shapeColour&&this.#Hn.setLineColour(e.shapeColour)}}},Ni={draw:{ArrowFactory:class{#qi=\"arrow\";#Ui=new Ri(this.#Mi);static supports(e){return e instanceof F}getName(){return this.#qi}getGroupName(){return this.#qi+\"-group\"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qi(t),e.referencePoints=[t[1]],e.setTextExpr(this.#Vi()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Kn().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.id);const i=this.#Ni(e,t);n.add(i);const r=this.#Bi(e,t);for(const e of r)n.add(e);const o=this.#Ui.create(e,t);n.add(o);const a=this.#Gi(i);return n.add(this.#Ui.getConnector(a,o,t)),n}#Gi(e){const t=e.points(),n=e.x(),i=e.y(),r=(t[0]+t[2])/2+n,o=(t[1]+t[3])/2+i;return[new F(r,o)]}#ki(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[0]+n,t[1]+i),new F(t[2]+n,t[3]+i)]}getAnchors(e,t){const n=this.#ki(e),i=[];for(let e=0;e<n.length;++e)i.push(si(n[e].getX(),n[e].getY(),\"anchor\"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Kn().Group&&(this.#Hi(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ui.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Kn().Group))return;const i=this.#zi(n),r=oi(n,0),o=oi(n,1),a=new F(r.x()-i.x(),r.y()-i.y()),s=new F(o.x()-i.x(),o.y()-i.y());e.mathShape=a,e.referencePoints=[s],e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=e.referencePoints[0],r=new zn(n,i),o=r.getBegin(),a=new F(o.getX()+t.x,o.getY()+t.y),s=r.getEnd(),l=new F(s.getX()+t.x,s.getY()+t.y);e.mathShape=a,e.referencePoints=[l],e.updateQuantification()}updateLabelContent(e,t,n){this.#Ui.updateContent(e,t)}updateConnector(e){const t=this.#zi(e),n=this.#Gi(t);this.#Ui.updateConnector(e,n)}#Qi(e){return e[0]}#Vi(){return xi.labelText.arrow}#Ni(e,t){const n=e.mathShape,i=e.referencePoints[0],r=new zn(n,i),o=new(Kn().Line)({points:[n.getX(),n.getY(),i.getX(),i.getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape\"}),a=Xn(r,n,20,t.getZoomScale()),s=Xn(r,i,20,t.getZoomScale());return o.hitFunc((function(e){e.beginPath(),e.moveTo(a.getBegin().getX(),a.getBegin().getY()),e.lineTo(a.getEnd().getX(),a.getEnd().getY()),e.lineTo(s.getEnd().getX(),s.getEnd().getY()),e.lineTo(s.getBegin().getX(),s.getBegin().getY()),e.closePath(),e.fillStrokeShape(o)})),o}#zi(e){return ri(e)}#Bi(e,t){const n=e.mathShape,i=e.referencePoints[0],r=new zn(n,i),o=jn(r,40,20,t.getZoomScale());return[new(Kn().Line)({points:[r.getBegin().getX(),r.getBegin().getY(),o.getBegin().getX(),o.getBegin().getY(),o.getEnd().getX(),o.getEnd().getY()],fill:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,closed:!0,name:\"shape-triangle\"})]}#Mi(e){return e.mathShape}#Hi(e,t,n){const i=e.mathShape,r=e.referencePoints[0],o=new zn(i,r),a=t.getParent();if(!(a instanceof Kn().Group))return;const s=this.#zi(a);s.position({x:0,y:0}),s.points([i.getX(),i.getY(),r.getX(),r.getY()]);const l=a.getChildren((function(e){return\"shape-triangle\"===e.name()}))[0];if(!(l instanceof Kn().Line))return;const u=oi(a,0),d=oi(a,1);switch(t.id()){case\"anchor0\":u.x(t.x()),u.y(t.y());break;case\"anchor1\":d.x(t.x()),d.y(t.y());break;default:c.error(\"Unhandled anchor id: \"+t.id())}const h=jn(o,40,20,n.getZoomScale());l.position({x:0,y:0}),l.points([o.getBegin().getX(),o.getBegin().getY(),h.getBegin().getX(),h.getBegin().getY(),h.getEnd().getX(),h.getEnd().getY()]);const S=Xn(o,i,20,n.getZoomScale()),g=Xn(o,r,20,n.getZoomScale());s.hitFunc((function(e){e.beginPath(),e.moveTo(S.getBegin().getX(),S.getBegin().getY()),e.lineTo(S.getEnd().getX(),S.getEnd().getY()),e.lineTo(g.getEnd().getX(),g.getEnd().getY()),e.lineTo(g.getBegin().getX(),g.getBegin().getY()),e.closePath(),e.fillStrokeShape(s)}))}#Wi(e,t){}#Yi(e,t){}},CircleFactory:class{#qi=\"circle\";#Ui=new Ri(this.#Mi);static supports(e){return e instanceof pi}getName(){return this.#qi}getGroupName(){return this.#qi+\"-group\"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qi(t),e.setTextExpr(this.#Vi()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Kn().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.id);const i=this.#Ni(e,t);n.add(this.#Ni(e,t));const r=this.#Ui.create(e,t);n.add(this.#Ui.create(e,t));const o=this.#Gi(i);return n.add(this.#Ui.getConnector(o,r,t)),n}#Gi(e){const t=e.x(),n=e.y(),i=e.radius()*Math.sqrt(2)/2;return[new F(t-i,n-i),new F(t+i,n-i),new F(t-i,n+i),new F(t+i,n+i)]}#ki(e){const t=e.x(),n=e.y(),i=e.radius();return[new F(t-i,n),new F(t+i,n),new F(t,n+i),new F(t,n-i)]}getAnchors(e,t){const n=this.#ki(e),i=[];for(let e=0;e<n.length;++e)i.push(si(n[e].getX(),n[e].getY(),\"anchor\"+e,t));return i}constrainAnchorMove(e){const t=e.getParent();if(!(t instanceof Kn().Group))return;const n=oi(t,0),i=oi(t,1),r=oi(t,2),o=oi(t,3);switch(e.id()){case\"anchor0\":n.y(i.y());break;case\"anchor1\":i.y(n.y());break;case\"anchor2\":r.x(o.x());break;case\"anchor3\":o.x(r.x());break;default:c.error(\"Unhandled anchor id: \"+e.id())}}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Kn().Group&&(this.#Hi(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ui.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=e.mathShape,i=new F(n.getCenter().getX(),n.getCenter().getY()),r=new F(t.x(),t.y()),o=i.getDistance(r);e.mathShape=new pi(i,o),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getCenter(),r=new F(i.getX()+t.x,i.getY()+t.y);e.mathShape=new pi(r,n.getRadius()),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ui.updateContent(e,t)}updateConnector(e){const t=this.#zi(e),n=this.#Gi(t);this.#Ui.updateConnector(e,n)}#Qi(e){const t=Math.abs(e[0].getX()-e[1].getX()),n=Math.abs(e[0].getY()-e[1].getY()),i=Math.round(Math.sqrt(t*t+n*n));return new pi(e[0],i)}#Vi(){return xi.labelText.circle}#Ni(e,t){const n=e.mathShape;return new(Kn().Circle)({x:n.getCenter().getX(),y:n.getCenter().getY(),radius:n.getRadius(),stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape\"})}#zi(e){const t=e.getChildren(ni)[0];if(t instanceof Kn().Circle)return t}#Mi(e){const t=e.mathShape,n=t.getCenter(),i=t.getRadius();return new F(n.getX()-i,n.getY()+i)}#Hi(e,t,n){const i=e.mathShape,r=i.getCenter(),o=i.getRadius(),a=t.getParent();if(!(a instanceof Kn().Group))return;this.#zi(a).radius(o);const s=oi(a,0),l=oi(a,1),u=oi(a,2),d=oi(a,3),h=l.x()<s.x()?-1:1,S=d.y()<u.y()?1:-1;switch(t.id()){case\"anchor0\":s.x(t.x()),l.x(r.getX()+h*o),u.y(r.getY()+o),d.y(r.getY()-o);break;case\"anchor1\":l.x(t.x()),s.x(r.getX()-h*o),u.y(r.getY()+o),d.y(r.getY()-o);break;case\"anchor2\":u.y(t.y()),s.x(r.getX()-o),l.x(r.getX()+o),d.y(r.getY()-S*o);break;case\"anchor3\":d.y(t.y()),s.x(r.getX()-o),l.x(r.getX()+o),u.y(r.getY()+S*o);break;default:c.error(\"Unhandled anchor id: \"+t.id())}}#Wi(e,t){const n=e.mathShape;let i=0,r=0;void 0!==t&&(i=t.x(),r=t.y());const o=new(Kn().Group);o.name(\"shadow\");const a=n.getRound();for(let e=0;e<a.length;++e){const t=a[e],n=t[0][0],s=t[0][1],l=t[1][0],c=new(Kn().Rect)({x:n-i,y:s-r,width:l-n,height:1,fill:\"grey\",strokeWidth:0,strokeScaleEnabled:!1,opacity:.3,name:\"shadow-element\"});o.add(c)}return o}#Yi(e,t){const n=t.getChildren((function(e){return\"shadow\"===e.name()}))[0];void 0!==n&&(n.destroy(),t.add(this.#Wi(e,t)))}},EllipseFactory:class{#qi=\"ellipse\";#Ui=new Ri(this.#Mi);static supports(e){return e instanceof Si}getName(){return this.#qi}getGroupName(){return this.#qi+\"-group\"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qi(t),e.setTextExpr(this.#Vi()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Kn().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.id);const i=this.#Ni(e,t);n.add(this.#Ni(e,t));const r=this.#Ui.create(e,t);n.add(this.#Ui.create(e,t));const o=this.#Gi(i);return n.add(this.#Ui.getConnector(o,r,t)),n}#Gi(e){const t=e.x(),n=e.y(),i=e.radiusX()*Math.sqrt(2)/2,r=e.radiusY()*Math.sqrt(2)/2;return[new F(t-i,n-r),new F(t+i,n-r),new F(t-i,n+r),new F(t+i,n+r)]}#ki(e){const t=e.x(),n=e.y(),i=e.radius();return[new F(t-i.x,n),new F(t+i.x,n),new F(t,n+i.y),new F(t,n-i.y)]}getAnchors(e,t){const n=this.#ki(e),i=[];for(let e=0;e<n.length;++e)i.push(si(n[e].getX(),n[e].getY(),\"anchor\"+e,t));return i}constrainAnchorMove(e){const t=e.getParent();if(!(t instanceof Kn().Group))return;const n=oi(t,0),i=oi(t,1),r=oi(t,2),o=oi(t,3);switch(e.id()){case\"anchor0\":n.y(i.y());break;case\"anchor1\":i.y(n.y());break;case\"anchor2\":r.x(o.x());break;case\"anchor3\":o.x(r.x());break;default:c.error(\"Unhandled anchor id: \"+e.id())}}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Kn().Group&&(this.#Hi(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ui.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=e.mathShape,i=n.getCenter();let r=n.getA(),o=n.getB();switch(t.id()){case\"anchor0\":r=i.getX()-t.x();break;case\"anchor1\":r=t.x()-i.getX();break;case\"anchor2\":o=t.y()-i.getY();break;case\"anchor3\":o=i.getY()-t.y();break;default:c.error(\"Unhandled anchor id: \"+t.id())}e.mathShape=new Si(i,Math.abs(r),Math.abs(o)),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getCenter(),r=new F(i.getX()+t.x,i.getY()+t.y);e.mathShape=new Si(r,n.getA(),n.getB()),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ui.updateContent(e,t)}updateConnector(e){const t=this.#zi(e),n=this.#Gi(t);this.#Ui.updateConnector(e,n)}#Qi(e){const t=Math.abs(e[0].getX()-e[1].getX()),n=Math.abs(e[0].getY()-e[1].getY());return new Si(e[0],t,n)}#Vi(){return xi.labelText.ellipse}#Ni(e,t){const n=e.mathShape,i=n.getCenter(),r={x:n.getA(),y:n.getB()};return new(Kn().Ellipse)({x:i.getX(),y:i.getY(),radius:r,radiusX:r.x,radiusY:r.y,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape\"})}#zi(e){const t=e.getChildren(ni)[0];if(t instanceof Kn().Ellipse)return t}#Mi(e){const t=e.mathShape,n=t.getCenter();return new F(n.getX()-t.getA(),n.getY()+t.getB())}#Hi(e,t,n){const i=e.mathShape,r=i.getCenter(),o=i.getA(),a=i.getB(),s=t.getParent();if(!(s instanceof Kn().Group))return;this.#zi(s).radius({x:o,y:a});const l=oi(s,0),u=oi(s,1),d=oi(s,2),h=oi(s,3),S=u.x()<l.x()?-1:1,g=h.y()<d.y()?1:-1;switch(t.id()){case\"anchor0\":l.x(t.x()),u.x(r.getX()+S*o),d.y(r.getY()+a),h.y(r.getY()-a);break;case\"anchor1\":u.x(t.x()),l.x(r.getX()-S*o),d.y(r.getY()+a),h.y(r.getY()-a);break;case\"anchor2\":d.y(t.y()),l.x(r.getX()-o),u.x(r.getX()+o),h.y(r.getY()-g*a);break;case\"anchor3\":h.y(t.y()),l.x(r.getX()-o),u.x(r.getX()+o),d.y(r.getY()+g*a);break;default:c.error(\"Unhandled anchor id: \"+t.id())}}#Wi(e,t){const n=e.mathShape;let i=0,r=0;void 0!==t&&(i=t.x(),r=t.y());const o=new(Kn().Group);o.name(\"shadow\");const a=n.getRound();for(let e=0;e<a.length;++e){const t=a[e],n=t[0][0],s=t[0][1],l=t[1][0],c=new(Kn().Rect)({x:n-i,y:s-r,width:l-n,height:1,fill:\"grey\",strokeWidth:0,strokeScaleEnabled:!1,opacity:.3,name:\"shadow-element\"});o.add(c)}return o}#Yi(e,t){const n=t.getChildren((function(e){return\"shadow\"===e.name()}))[0];void 0!==n&&(n.destroy(),t.add(this.#Wi(e,t)))}},ProtractorFactory:class{#qi=\"protractor\";#Ui=new Ri(this.#Mi);static supports(e){return e instanceof hi}getName(){return this.#qi}getGroupName(){return this.#qi+\"-group\"}getNPoints(){return 3}getTimeout(){return 500}setAnnotationMathShape(e,t){e.mathShape=this.#Qi(t),e.setTextExpr(this.#Vi()),e.updateQuantification()}createShapeGroup(e,t){const n=e.mathShape,i=new(Kn().Group);i.name(this.getGroupName()),i.visible(!0),i.id(e.id);const r=this.#Ni(e,t);if(i.add(this.#Ni(e,t)),n.getLength()===this.getNPoints()){const n=this.#Bi(e,t);for(const e of n)i.add(e);const o=this.#Ui.create(e,t);i.add(this.#Ui.create(e,t));const a=this.#Gi(r);i.add(this.#Ui.getConnector(a,o,t))}return i}#Gi(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[2]+n,t[3]+i)]}#ki(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[0]+n,t[1]+i),new F(t[2]+n,t[3]+i),new F(t[4]+n,t[5]+i)]}getAnchors(e,t){const n=this.#ki(e),i=[];for(let e=0;e<n.length;++e)i.push(si(n[e].getX(),n[e].getY(),\"anchor\"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Kn().Group&&(this.#Hi(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ui.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Kn().Group))return;const i=this.#zi(n),r=oi(n,0),o=oi(n,1),a=oi(n,2),s=new F(r.x()-i.x(),r.y()-i.y()),l=new F(o.x()-i.x(),o.y()-i.y()),c=new F(a.x()-i.x(),a.y()-i.y());e.mathShape=new hi([s,l,c]),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=[];for(let e=0;e<3;++e)i.push(new F(n.getPoint(e).getX()+t.x,n.getPoint(e).getY()+t.y));e.mathShape=new hi(i),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ui.updateContent(e,t)}updateConnector(e){const t=this.#zi(e),n=this.#Gi(t);this.#Ui.updateConnector(e,n)}#Qi(e){return new hi(e)}#Vi(){return xi.labelText.protractor}#Ni(e,t){const n=e.mathShape,i=[];for(let e=0;e<n.getLength();++e)i.push(n.getPoint(e).getX()),i.push(n.getPoint(e).getY());const r=new(Kn().Line)({points:i,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape\"});return n.getLength()===this.getNPoints()&&r.hitFunc((function(e){e.beginPath(),e.moveTo(n.getPoint(0).getX(),n.getPoint(0).getY()),e.lineTo(n.getPoint(1).getX(),n.getPoint(1).getY()),e.lineTo(n.getPoint(2).getX(),n.getPoint(2).getY()),e.closePath(),e.fillStrokeShape(r)})),r}#zi(e){return ri(e)}#Bi(e,t){const n=e.mathShape,i=new zn(n.getPoint(0),n.getPoint(1)),r=new zn(n.getPoint(1),n.getPoint(2));let o=Wn(i,r),a=i.getInclination();o>180&&(o=360-o,a+=o);const s=33*Math.min(i.getLength(),r.getLength())/100;return[new(Kn().Arc)({innerRadius:s,outerRadius:s,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,angle:o,rotation:-a,x:n.getPoint(1).getX(),y:n.getPoint(1).getY(),name:\"shape-arc\"})]}#Mi(e){const t=e.mathShape,n=new zn(t.getPoint(0),t.getPoint(1)),i=new zn(t.getPoint(1),t.getPoint(2)),r=(n.getMidpoint().getX()+i.getMidpoint().getX())/2,o=(n.getMidpoint().getY()+i.getMidpoint().getY())/2;return new F(r,o)}#Hi(e,t,n){const i=e.mathShape,r=new zn(i.getPoint(0),i.getPoint(1)),o=new zn(i.getPoint(1),i.getPoint(2)),a=t.getParent();if(!(a instanceof Kn().Group))return;const s=this.#zi(a);s.position({x:0,y:0}),s.points([i.getPoint(0).getX(),i.getPoint(0).getY(),i.getPoint(1).getX(),i.getPoint(1).getY(),i.getPoint(2).getX(),i.getPoint(2).getY()]);const l=a.getChildren((function(e){return\"shape-arc\"===e.name()}))[0];if(!(l instanceof Kn().Arc))return;const c=oi(a,0),u=oi(a,1),d=oi(a,2);switch(t.id()){case\"anchor0\":c.x(t.x()),c.y(t.y());break;case\"anchor1\":u.x(t.x()),u.y(t.y());break;case\"anchor2\":d.x(t.x()),d.y(t.y())}let h=Wn(r,o),S=r.getInclination();h>180&&(h=360-h,S+=h);const g=33*Math.min(r.getLength(),o.getLength())/100;l.innerRadius(g),l.outerRadius(g),l.angle(h),l.rotation(-S);const p={x:u.x(),y:u.y()};l.position(p),s.hitFunc((function(e){e.beginPath(),e.moveTo(i.getPoint(0).getX(),i.getPoint(0).getY()),e.lineTo(i.getPoint(1).getX(),i.getPoint(1).getY()),e.lineTo(i.getPoint(2).getX(),i.getPoint(2).getY()),e.closePath(),e.fillStrokeShape(s)}))}#Wi(e,t){}#Yi(e,t){}},RectangleFactory:class{#qi=\"rectangle\";#Ui=new Ri(this.#Mi);static supports(e){return e instanceof ci}getName(){return this.#qi}getGroupName(){return this.#qi+\"-group\"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qi(t),e.setTextExpr(this.#Vi()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Kn().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.id);const i=this.#Ni(e,t);n.add(i);const r=this.#Ui.create(e,t);n.add(r);const o=this.#Gi(i);return n.add(this.#Ui.getConnector(o,r,t)),n}#Gi(e){const t=e.x(),n=e.y(),i=e.width(),r=e.height();return[new F(t+i/2,n),new F(t,n+r/2),new F(t+i/2,n+r),new F(t+i,n+r/2)]}#ki(e){const t=e.x(),n=e.y(),i=e.width(),r=e.height();return[new F(t,n),new F(t+i,n),new F(t+i,n+r),new F(t,n+r)]}getAnchors(e,t){const n=this.#ki(e),i=[];for(let e=0;e<n.length;++e)i.push(si(n[e].getX(),n[e].getY(),\"anchor\"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Kn().Group&&(this.#Hi(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ui.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Kn().Group))return;const i=oi(n,0),r=oi(n,2),o=new F(i.x(),i.y()),a=new F(r.x(),r.y());e.mathShape=new ci(o,a),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getBegin(),r=new F(i.getX()+t.x,i.getY()+t.y),o=n.getEnd(),a=new F(o.getX()+t.x,o.getY()+t.y);e.mathShape=new ci(r,a),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ui.updateContent(e,t)}updateConnector(e){const t=this.#zi(e),n=this.#Gi(t);this.#Ui.updateConnector(e,n)}#Qi(e){return new ci(e[0],e[1])}#Vi(){return xi.labelText.rectangle}#Ni(e,t){const n=e.mathShape;return new(Kn().Rect)({x:n.getBegin().getX(),y:n.getBegin().getY(),width:n.getWidth(),height:n.getHeight(),stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape\"})}#zi(e){const t=e.getChildren(ni)[0];if(t instanceof Kn().Rect)return t}#Mi(e){const t=e.mathShape;return new F(t.getBegin().getX(),t.getEnd().getY())}#Hi(e,t,n){const i=e.mathShape,r=i.getBegin(),o=t.getParent();if(!(o instanceof Kn().Group))return;const a=this.#zi(o);a.position({x:r.getX(),y:r.getY()}),a.size({width:i.getWidth(),height:i.getHeight()});const s=oi(o,0),l=oi(o,1),u=oi(o,2),d=oi(o,3);switch(t.id()){case\"anchor0\":s.x(t.x()),s.y(t.y()),l.y(t.y()),d.x(t.x());break;case\"anchor1\":l.x(t.x()),l.y(t.y()),s.y(t.y()),u.x(t.x());break;case\"anchor2\":u.x(t.x()),u.y(t.y()),d.y(t.y()),l.x(t.x());break;case\"anchor3\":d.x(t.x()),d.y(t.y()),u.y(t.y()),s.x(t.x());break;default:c.error(\"Unhandled anchor id: \"+t.id())}}#Wi(e,t){const n=e.mathShape.getRound(),i=n.max.getX()-n.min.getX(),r=n.max.getY()-n.min.getY();return new(Kn().Rect)({x:n.min.getX(),y:n.min.getY(),width:i,height:r,fill:\"grey\",strokeWidth:0,strokeScaleEnabled:!1,opacity:.3,name:\"shadow\"})}#Yi(e,t){const n=t.getChildren((function(e){return\"shadow\"===e.name()}))[0];void 0!==n&&(n.destroy(),t.add(this.#Wi(e,t)))}},RoiFactory:class{#qi=\"roi\";#Ui=new Ri(this.#Mi);static supports(e){return e instanceof di}getName(){return this.#qi}getGroupName(){return this.#qi+\"-group\"}getNPoints(){}getTimeout(){return 100}setAnnotationMathShape(e,t){e.mathShape=this.#Qi(t),e.setTextExpr(this.#Vi()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Kn().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.id);const i=this.#Ni(e,t);n.add(this.#Ni(e,t));const r=this.#Ui.create(e,t);n.add(this.#Ui.create(e,t));const o=this.#Gi(i);return n.add(this.#Ui.getConnector(o,r,t)),n}#ki(e){const t=e.points(),n=e.x(),i=e.y(),r=[];for(let e=0;e<t.length;e+=2)r.push(new F(t[e]+n,t[e+1]+i));return r}#Gi(e){const t=e.points(),n=e.x(),i=e.y(),r=[];for(let e=0;e<t.length;e+=2){const o=(e+2)%t.length,a=(t[e]+t[o])/2+n,s=(t[e+1]+t[o+1])/2+i;r.push(new F(a,s))}return r}getAnchors(e,t){const n=this.#ki(e),i=[];for(let e=0;e<n.length;++e)i.push(si(n[e].getX(),n[e].getY(),\"anchor\"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Kn().Group&&(this.#Hi(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ui.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Kn().Group))return;const i=this.#zi(n),r=e.mathShape.getPoints().slice(),o=new F(t.x()-i.x(),t.y()-i.y());r[li(t.id())]=o,e.mathShape=new di(r),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=[];for(let e=0;e<n.getLength();++e)i.push(new F(n.getPoint(e).getX()+t.x,n.getPoint(e).getY()+t.y));e.mathShape=new di(i),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ui.updateContent(e,t)}updateConnector(e){const t=this.#zi(e),n=this.#Gi(t);this.#Ui.updateConnector(e,n)}#Qi(e){return new di(e)}#Vi(){return xi.labelText.roi}#Ni(e,t){const n=e.mathShape,i=[];for(let e=0;e<n.getLength();++e)i.push(n.getPoint(e).getX()),i.push(n.getPoint(e).getY());return new(Kn().Line)({points:i,stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape\",closed:!0})}#zi(e){return ri(e)}#Mi(e){const t=e.mathShape;return new F(t.getPoint(0).getX(),t.getPoint(0).getY())}#Hi(e,t,n){const i=t.getParent();if(!(i instanceof Kn().Group))return;const r=this.#zi(i),o=r.points(),a=2*li(t.id());o[a]=t.x()-r.x(),o[a+1]=t.y()-r.y(),r.points(o);const s=i.getChildren((function(e){return e.id()===t.id()}))[0];s.x(t.x()),s.y(t.y())}#Wi(e,t){}#Yi(e,t){}},RulerFactory:class{#qi=\"ruler\";#Ui=new Ri(this.#Mi);static supports(e){return e instanceof zn}getName(){return this.#qi}getGroupName(){return this.#qi+\"-group\"}getNPoints(){return 2}getTimeout(){return 0}setAnnotationMathShape(e,t){e.mathShape=this.#Qi(t),e.setTextExpr(this.#Vi()),e.updateQuantification()}createShapeGroup(e,t){const n=new(Kn().Group);n.name(this.getGroupName()),n.visible(!0),n.id(e.id);const i=this.#Ni(e,t);n.add(this.#Ni(e,t));const r=this.#Bi(e,t);for(const e of r)n.add(e);const o=this.#Ui.create(e,t);n.add(this.#Ui.create(e,t));const a=this.#Gi(i);return n.add(this.#Ui.getConnector(a,o,t)),n}#Gi(e){const t=e.points(),n=e.x(),i=e.y(),r=(t[0]+t[2])/2+n,o=(t[1]+t[3])/2+i;return[new F(r,o)]}#ki(e){const t=e.points(),n=e.x(),i=e.y();return[new F(t[0]+n,t[1]+i),new F(t[2]+n,t[3]+i)]}getAnchors(e,t){const n=this.#ki(e),i=[];for(let e=0;e<n.length;++e)i.push(si(n[e].getX(),n[e].getY(),\"anchor\"+e,t));return i}constrainAnchorMove(e){}updateShapeGroupOnAnchorMove(e,t,n){const i=t.getParent();i instanceof Kn().Group&&(this.#Hi(e,t,n),this.updateLabelContent(e,i,n),void 0===e.labelPosition?this.#Ui.updatePosition(e,i):this.updateConnector(i))}updateAnnotationOnAnchorMove(e,t){const n=t.getParent();if(!(n instanceof Kn().Group))return;const i=this.#zi(n),r=oi(n,0),o=oi(n,1),a=new F(r.x()-i.x(),r.y()-i.y()),s=new F(o.x()-i.x(),o.y()-i.y());e.mathShape=new zn(a,s),e.updateQuantification()}updateAnnotationOnTranslation(e,t){const n=e.mathShape,i=n.getBegin(),r=new F(i.getX()+t.x,i.getY()+t.y),o=n.getEnd(),a=new F(o.getX()+t.x,o.getY()+t.y);e.mathShape=new zn(r,a),e.updateQuantification()}updateLabelContent(e,t,n){this.#Ui.updateContent(e,t)}updateConnector(e){const t=this.#zi(e),n=this.#Gi(t);this.#Ui.updateConnector(e,n)}#Qi(e){return new zn(e[0],e[1])}#Vi(){return xi.labelText.ruler}#Ni(e,t){const n=e.mathShape,i=new(Kn().Line)({points:[n.getBegin().getX(),n.getBegin().getY(),n.getEnd().getX(),n.getEnd().getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape\"}),r=Xn(n,n.getBegin(),20,t.getZoomScale()),o=Xn(n,n.getEnd(),20,t.getZoomScale());return i.hitFunc((function(e){e.beginPath(),e.moveTo(r.getBegin().getX(),r.getBegin().getY()),e.lineTo(r.getEnd().getX(),r.getEnd().getY()),e.lineTo(o.getEnd().getX(),o.getEnd().getY()),e.lineTo(o.getBegin().getX(),o.getBegin().getY()),e.closePath(),e.fillStrokeShape(i)})),i}#zi(e){return ri(e)}#Bi(e,t){const n=e.mathShape,i=Xn(n,n.getBegin(),20,t.getZoomScale()),r=new(Kn().Line)({points:[i.getBegin().getX(),i.getBegin().getY(),i.getEnd().getX(),i.getEnd().getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape-tick0\"}),o=Xn(n,n.getEnd(),20,t.getZoomScale());return[r,new(Kn().Line)({points:[o.getBegin().getX(),o.getBegin().getY(),o.getEnd().getX(),o.getEnd().getY()],stroke:e.colour,strokeWidth:t.getStrokeWidth(),strokeScaleEnabled:!1,name:\"shape-tick1\"})]}#Mi(e){const t=e.mathShape,n=t.getBegin(),i=t.getEnd();let r=n;return n.getY()<i.getY()&&(r=i),r}#Hi(e,t,n){const i=e.mathShape,r=t.getParent();if(!(r instanceof Kn().Group))return;const o=this.#zi(r);o.position({x:0,y:0}),o.points([i.getBegin().getX(),i.getBegin().getY(),i.getEnd().getX(),i.getEnd().getY()]);const a=r.getChildren((function(e){return\"shape-tick0\"===e.name()}))[0];if(!(a instanceof Kn().Line))return;const s=r.getChildren((function(e){return\"shape-tick1\"===e.name()}))[0];if(!(s instanceof Kn().Line))return;const l=oi(r,0),u=oi(r,1);switch(t.id()){case\"anchor0\":l.x(t.x()),l.y(t.y());break;case\"anchor1\":u.x(t.x()),u.y(t.y());break;default:c.error(\"Unhandled anchor id: \"+t.id())}const d=Xn(i,i.getBegin(),20,n.getZoomScale());a.position({x:0,y:0}),a.points([d.getBegin().getX(),d.getBegin().getY(),d.getEnd().getX(),d.getEnd().getY()]);const h=Xn(i,i.getEnd(),20,n.getZoomScale());s.position({x:0,y:0}),s.points([h.getBegin().getX(),h.getBegin().getY(),h.getEnd().getX(),h.getEnd().getY()]),o.hitFunc((function(e){e.beginPath(),e.moveTo(d.getBegin().getX(),d.getBegin().getY()),e.lineTo(d.getEnd().getX(),d.getEnd().getY()),e.lineTo(h.getEnd().getX(),h.getEnd().getY()),e.lineTo(h.getBegin().getX(),h.getBegin().getY()),e.closePath(),e.fillStrokeShape(o)}))}#Wi(e,t){}#Yi(e,t){}}},filter:{Threshold:class{#tt;constructor(e){this.#tt=e}#Pn=new Fi;#Xi=!0;#Oe=new He;activate(e){e&&(this.#Xi=!0)}init(){}run(e){if(void 0===e.dataId)throw new Error(\"No dataId to run threshod filter on.\");if(this.#Pn.setMin(e.min),this.#Pn.setMax(e.max),this.#Xi){const t=this.#tt.getData(e.dataId).image;this.#Pn.setOriginalImage(t),this.#Xi=!1}const t=new Ui(this.#Pn,e.dataId,this.#tt);t.onExecute=this.#Re,t.onUndo=this.#Re,t.execute(),this.#tt.addToUndoStack(t)}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)}},Sobel:class{#tt;constructor(e){this.#tt=e}#Oe=new He;activate(e){}init(){}run(e){if(void 0===e.dataId)throw new Error(\"No dataId to run sobel filter on.\");const t=new qi,n=this.#tt.getData(e.dataId).image;t.setOriginalImage(n);const i=new Ui(t,e.dataId,this.#tt);i.onExecute=this.#Re,i.onUndo=this.#Re,i.execute(),this.#tt.addToUndoStack(i)}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)}},Sharpen:class{#tt;constructor(e){this.#tt=e}#Oe=new He;activate(e){}init(){}run(e){if(void 0===e.dataId)throw new Error(\"No dataId to run sharpen filter on.\");const t=new Ei,n=this.#tt.getData(e.dataId).image;t.setOriginalImage(n);const i=new Ui(t,e.dataId,this.#tt);i.onExecute=this.#Re,i.onUndo=this.#Re,i.execute(),this.#tt.addToUndoStack(i)}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)}}}};class Bi{id;referenceSopUID;mathShape;referencePoints;colour;quantification;textExpr;labelPosition;planeOrigin;planePoints;#ji;getOrientationName(){let e;return void 0!==this.planePoints&&(e=Dt(this.planePoints[1].getValues().concat(this.planePoints[2].getValues()))),e}init(e){void 0===this.referenceSopUID?(this.#ji=e,this.referenceSopUID=e.getCurrentImageUid(),this.planeOrigin=e.getOriginForImageUid(this.referenceSopUID),e.isAquisitionOrientation()||(this.planePoints=e.getPlanePoints(e.getCurrentPosition()))):c.debug(\"Cannot initialise annotation twice\")}isCompatibleView(e){let t=!1;if(void 0===this.planePoints)e.isAquisitionOrientation()&&(t=!0);else{const n=e.getCosines(),i=new E(n[0],n[1],n[2]),r=new E(n[3],n[4],n[5]);i.equals(this.planePoints[1])&&r.equals(this.planePoints[2])&&(t=!0)}return t}setViewController(e){e.includesImageUid(this.referenceSopUID)&&this.isCompatibleView(e.getPlaneHelper())&&(this.#ji=e,this.planeOrigin=e.getOriginForImageUid(this.referenceSopUID))}getCentroid(){let e;if(void 0!==this.#ji&&void 0!==this.mathShape.getCentroid){let t=this.planeOrigin;void 0!==this.planePoints&&(t=this.planePoints[0]);const n=new q([t.getX(),t.getY(),t.getZ()]),i=this.#ji.getIndexFromPosition(n),r=this.#ji.getScrollIndex(),o=i.getValues()[r],a=this.mathShape.getCentroid();e=this.#ji.getPositionFromPlanePoint(a,o)}return e}setTextExpr(e){if(void 0!==this.#ji){const t=this.#ji.getModality();void 0!==e[t]?this.textExpr=e[t]:this.textExpr=e[\"*\"]}else c.warn(\"Cannot set text expr without a view controller\")}getText(){return function(e,t){let n=\"\";if(null==e)return n;if(n=e,null==t)return n;const i=V(e);for(let e=0;e<i.length;++e){const r=t[i[e]];if(null!=r&&null!==r.value&&void 0!==r.value){let t=r.value.toPrecision(4);null!==r.unit&&void 0!==r.unit&&0!==r.unit.length&&(\"unit.degree\"!==r.unit&&(t+=\" \"),t+=U.t(r.unit));const o=\"{\"+i[e]+\"}\";n=n.replace(o,t)}}return n}(this.textExpr,this.quantification)}updateQuantification(){void 0!==this.#ji&&void 0!==this.mathShape.quantify&&(this.quantification=this.mathShape.quantify(this.#ji,V(this.textExpr)))}getFactory(){let e;if(void 0!==Qi.draw)for(const t in Qi.draw){const n=Qi.draw[t];if(n.supports(this.mathShape)){e=new n;break}}if(void 0===e)for(const t in Ni.draw){const n=Ni.draw[t];if(n.supports(this.mathShape)){e=new n;break}}return void 0===e&&c.warn(\"No shape factory found for math shape\"),e}}const Gi=[\"mousedown\",\"mousemove\",\"mouseup\",\"mouseout\",\"wheel\",\"dblclick\",\"touchstart\",\"touchmove\",\"touchend\"],ki={openRoiDialog(e,t){const n=prompt(\"Label\",e.textExpr);null!==n&&(e.textExpr=n,t(e))}};function Hi(e){let t=0,n=0;if(0!==e.length&&void 0!==e[0].target){let i=e[0].target.offsetParent;for(;i;)isNaN(i.offsetLeft)||(t+=i.offsetLeft),isNaN(i.offsetTop)||(n+=i.offsetTop),i=i.offsetParent}else c.debug(\"No touch target offset parent.\");const i=[];for(let r=0;r<e.length;++r)i.push(new F(e[r].pageX-t,e[r].pageY-n));return i}function zi(e){let t=[];return void 0!==e.targetTouches&&0!==e.targetTouches.length?t=Hi(e.targetTouches):void 0!==e.changedTouches&&0!==e.changedTouches.length&&(t=Hi(e.changedTouches)),t}function Wi(e){return new F(e.offsetX,e.offsetY)}function Yi(e,t){const n=document.createElement(\"canvas\");n.width=e,n.height=t;const i=document.createElement(\"canvas\");i.width=1,i.height=1;const r=n.getContext(\"2d\"),o=i.getContext(\"2d\");return r&&(r.fillRect(e-1,t-1,1,1),o.drawImage(n,e-1,t-1,1,1,0,0,1,1)),o&&0!==o.getImageData(0,0,1,1).data[3]}class Xi{#Xt;#ji=null;#Zi=null;#_i=null;#Ki=null;#Ji=!0;#$i=null;#Zt;#_t;#er=1;#tr={x:1,y:1};#Kt={x:1,y:1};#Jt={x:1,y:1,z:1};#nr={x:0,y:0};#$t={x:0,y:0};#en={x:0,y:0};#tn={x:0,y:0};#nn={x:0,y:0};#ir=null;#rn;#Oe=new He;#rr=!1;#or;#ar;constructor(e){this.#Xt=e,this.#Xt.className+=\" viewLayer\"}getDataId(){return this.#rn}getScale(){return this.#tr}getAbsoluteZoomOffset(){return{x:this.#tn.x*this.#Kt.x,y:this.#tn.y*this.#Kt.y}}setImageSmoothing(e){this.#rr=e}setView(e,t){this.#rn=t,e.addEventListener(\"wlchange\",this.#sr),e.addEventListener(\"colourmapchange\",this.#lr),e.addEventListener(\"positionchange\",this.#cr),e.addEventListener(\"alphafuncchange\",this.#ur);for(let t=0;t<Qn.length;++t)e.addEventListener(Qn[t],this.#Re);this.#ji=new Gn(e),this.bindImage()}getViewController(){return this.#ji}getImageData(){return this.#$i}onimageset=e=>{this.#rn===e.dataid&&(this.#ji.setImage(e.value[0]),this.#dr(this.#ji.getImageSize().get2D()),this.#ir=!0)};bindImage(){this.#ji&&this.#ji.bindImageAndLayer(this)}unbindImage(){this.#ji&&this.#ji.unbindImageAndLayer(this)}onimagecontentchange=e=>{this.#rn===e.dataid&&(this.#Ji=this.#ji.isPositionInBounds(),this.#ir=!0,this.draw())};onimagegeometrychange=e=>{if(this.#rn===e.dataid){const e=this.#ji.getImageSize().get2D();if(this.#Zt.x!==e.x||this.#Zt.y!==e.y){if(void 0!==this.#or&&void 0!==this.#ar){const e=this.#ji.getOrigin(),t=this.#ar.minus(e),n=this.#ji.getOrigin(this.#ji.getCurrentPosition()),i=this.#or.minus(n);this.setBaseOffset(t,i)}this.#dr(e),this.#ir=!0,this.draw()}}};getId(){return this.#Xt.id}removeFromDOM(){this.#Xt.remove()}getBaseSize(){return this.#Zt}getImageWorldSize(){return this.#ji.getImageWorldSize()}getOpacity(){return this.#er}setOpacity(e){if(e===this.#er)return;this.#er=Math.min(Math.max(e,0),1);const t={type:\"opacitychange\",value:[this.#er]};this.#Re(t)}addFlipOffsetX(){this.#nn.x+=this.#Zi.width/this.#tr.x,this.#nr.x+=this.#nn.x}addFlipOffsetY(){this.#nn.y+=this.#Zi.height/this.#tr.y,this.#nr.y+=this.#nn.y}flipScaleX(){this.#Jt.x*=-1}flipScaleY(){this.#Jt.y*=-1}flipScaleZ(){this.#Jt.z*=-1}setScale(e,t){const n=this.#ji.getPlaneHelper(),i=n.getTargetOrientedPositiveXYZ({x:e.x*this.#Jt.x,y:e.y*this.#Jt.y,z:e.z*this.#Jt.z}),r={x:this.#Kt.x*i.x,y:this.#Kt.y*i.y};if(1===Math.abs(e.x)&&1===Math.abs(e.y)&&1===Math.abs(e.z)){const e={x:this.#nr.x-this.#tn.x,y:this.#nr.y-this.#tn.y};this.#tn={x:0,y:0},this.#nr=e}else if(void 0!==t){let e=n.getPlaneOffsetFromOffset3D({x:t.getX(),y:t.getY(),z:t.getZ()});e={x:e.x+this.#$t.x,y:e.y+this.#$t.y};const i=_i(this.#nr,this.#tr,r,e),o={x:this.#tn.x+i.x-this.#nr.x,y:this.#tn.y+i.y-this.#nr.y};this.#tn=o,this.#nr=i}this.#tr=r}initScale(e,t){const n=this.#ji.getPlaneHelper().getTargetOrientedPositiveXYZ({x:e.x*this.#Jt.x,y:e.y*this.#Jt.y,z:e.z*this.#Jt.z}),i={x:this.#Kt.x*n.x,y:this.#Kt.y*n.y};this.#tr=i,this.#tn={x:t.x/this.#Kt.x,y:t.y/this.#Kt.y},this.#nr={x:this.#nr.x+this.#tn.x,y:this.#nr.y+this.#tn.y}}setBaseOffset(e,t,n,i){const r=this.#ji.getPlaneHelper(),o=r.getNativeScrollIndex(),a=r.getPlaneOffsetFromOffset3D({x:0===o?e.getX():t.getX(),y:1===o?e.getY():t.getY(),z:2===o?e.getZ():t.getZ()}),s=this.#$t.x!==a.x||this.#$t.y!==a.y;return void 0!==n&&void 0!==i&&(this.#or=n,this.#ar=i),s&&(this.#nr={x:this.#nr.x-this.#$t.x+a.x,y:this.#nr.y-this.#$t.y+a.y},this.#$t=a),s}setOffset(e){const t=this.#ji.getPlaneHelper().getPlaneOffsetFromOffset3D(e);this.#nr={x:t.x+this.#en.x+this.#$t.x+this.#tn.x+this.#nn.x,y:t.y+this.#en.y+this.#$t.y+this.#tn.y+this.#nn.y}}displayToPlaneIndex(e){const t=this.displayToPlanePos(e);return new s([Math.floor(t.getX()),Math.floor(t.getY())])}displayToPlaneScale(e){return new F(e.getX()/this.#tr.x,e.getY()/this.#tr.y)}displayToPlanePos(e){const t=this.displayToPlaneScale(e);return new F(t.getX()+this.#nr.x,t.getY()+this.#nr.y)}planePosToDisplay(e){let t=(e.getX()-this.#nr.x+this.#$t.x)*this.#tr.x,n=(e.getY()-this.#nr.y+this.#$t.y)*this.#tr.y;return(t<0||t>=this.#Zi.width)&&(t=void 0),(n<0||n>=this.#Zi.height)&&(n=void 0),new F(t,n)}displayToMainPlanePos(e){const t=this.displayToPlanePos(e);return new F(t.getX()-this.#$t.x,t.getY()-this.#$t.y)}display(e){this.#Xt.style.display=e?\"\":\"none\"}isVisible(){return\"\"===this.#Xt.style.display}draw(){if(!this.#Ji)return;let e={type:\"renderstart\",layerid:this.getId(),dataid:this.getDataId()};this.#Re(e),this.#ir&&this.#hr(),this.#Ki.globalAlpha=this.#er,this.clear(),this.#Ki.setTransform(this.#tr.x,0,0,this.#tr.y,-1*this.#nr.x*this.#tr.x,-1*this.#nr.y*this.#tr.y),this.#Ki.imageSmoothingEnabled=this.#rr,this.#Ki.drawImage(this.#_i,0,0),e={type:\"renderend\",layerid:this.getId(),dataid:this.getDataId()},this.#Re(e)}initialise(e,t,n){this.#_t=t,this.#er=Math.min(Math.max(n,0),1),this.#Zi=document.createElement(\"canvas\"),this.#Xt.appendChild(this.#Zi),this.#Zi.getContext?(this.#Ki=this.#Zi.getContext(\"2d\"),this.#Ki?(this.#_i=document.createElement(\"canvas\"),this.#dr(e),this.#ir=!0):alert(\"Error: failed to get the 2D context.\")):alert(\"Error: no canvas.getContext method.\")}#dr(e){if(!Yi(e.x,e.y))throw new Error(\"Cannot create canvas with size \"+e.x+\", \"+e.y);this.#Zt=e,this.#_i.width=this.#Zt.x,this.#_i.height=this.#Zt.y,this.#Ki.clearRect(0,0,this.#Zt.x,this.#Zt.y),this.#$i=this.#Ki.createImageData(this.#Zt.x,this.#Zt.y)}fitToContainer(e,t,n){let i=!1;if(this.#Zi.width!==e.x||this.#Zi.height!==e.y){if(!Yi(e.x,e.y))throw new Error(\"Cannot resize canvas \"+e.x+\", \"+e.y);this.#Zi.width=e.x,this.#Zi.height=e.y,i=!0}const r={x:t*this.#_t.x,y:t*this.#_t.y},o={x:this.#tr.x*r.x/this.#Kt.x,y:this.#tr.y*r.y/this.#Kt.y};this.#tr.x===o.x&&this.#tr.y===o.y||(this.#Kt=r,this.#tr=o,i=!0);const a={x:n.x/r.x,y:n.y/r.y},s={x:e.x/r.x,y:e.y/r.y},l={x:0!==this.#nn.x?s.x:0,y:0!==this.#nn.y?s.y:0};this.#en.x===a.x&&this.#en.y===a.y&&this.#nn.x===l.x&&this.#nn.y===l.y||(this.#nr={x:this.#nr.x+a.x-this.#en.x+l.x-this.#nn.x,y:this.#nr.y+a.y-this.#en.y+l.y-this.#nn.y},this.#nn=l,this.#en=a,i=!0),i&&this.draw()}bindInteraction(){this.#Xt.style.pointerEvents=\"auto\";const e=Gi;for(let t=0;t<e.length;++t){const n=e[t],i=\"wheel\"!==n;this.#Xt.addEventListener(n,this.#Re,{passive:i})}}unbindInteraction(){this.#Xt.style.pointerEvents=\"none\";const e=Gi;for(let t=0;t<e.length;++t)this.#Xt.removeEventListener(e[t],this.#Re)}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{e.srclayerid=this.getId(),e.dataid=this.#rn,this.#Oe.fireEvent(e)};#hr(){this.#ji.generateImageData(this.#$i),this.#_i.getContext(\"2d\").putImageData(this.#$i,0,0),this.#ir=!1}#sr=e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(this.#ir=!0,this.draw())};#lr=e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(this.#ir=!0,this.draw())};#cr=e=>{if(void 0===e.skipGenerate||!0!==e.skipGenerate){let t=!0;if(void 0!==e.valid&&(t=e.valid),t){const t=[0,1,2],n=t.indexOf(this.#ji.getScrollIndex());t.splice(n,1),0===e.diffDims.filter((function(e){return-1===t.indexOf(e)})).length&&this.#Ji||(this.#Ji=!0,this.#ir=!0,this.draw())}else this.#Ji&&(this.#Ji=!1,this.clear())}};#ur=e=>{void 0!==e.skipGenerate&&!0===e.skipGenerate||(this.#ir=!0,this.draw())};setCurrentPosition(e,t){return this.#ji.setCurrentPosition(e)}clear(){this.#Ki.save(),this.#Ki.setTransform(1,0,0,1,0,0),this.#Ki.clearRect(0,0,this.#Zi.width,this.#Zi.height),this.#Ki.restore()}}function ji(e){const t=e.split(\"-layer-\");return 2!==t.length&&c.warn(\"Not the expected layer div id format...\"),{groupDivId:t[0],layerIndex:t[1],layerId:e}}function Zi(e){let t=null;const n=e.target.closest(\".layer\");return n&&void 0!==n.id&&(t=ji(n.id)),t}function _i(e,t,n,i){const r=(i.x-e.x)*t.x,o=(i.y-e.y)*t.y;return{x:i.x-r/n.x,y:i.y-o/n.y}}class Ki{#Xt;#Sr=[];#tr={x:1,y:1,z:1};#St={x:1,y:1,z:1};#nr={x:0,y:0,z:0};#gr=void 0;#pr=void 0;#Oe=new He;#mr=!1;#fr=[];#Dr;#Ve;#rr=!1;constructor(e){this.#Xt=e}getShowCrosshair(){return this.#mr}setShowCrosshair(e){this.#mr=e,e?(this.addEventListener(\"offsetchange\",this.#yr),this.addEventListener(\"zoomchange\",this.#yr),this.#Cr()):(this.removeEventListener(\"offsetchange\",this.#yr),this.removeEventListener(\"zoomchange\",this.#yr),this.#vr())}setImageSmoothing(e){this.#rr=e;for(const t of this.#Sr)t instanceof Xi&&t.setImageSmoothing(e)}#yr=e=>{this.#Cr()};getDivId(){return this.#Xt.id}getScale(){return this.#tr}getBaseScale(){return this.#St}getAddedScale(){return{x:this.#tr.x/this.#St.x,y:this.#tr.y/this.#St.y,z:this.#tr.z/this.#St.z}}getOffset(){return this.#nr}getNumberOfLayers(){let e=0;return this.#Sr.forEach((t=>{void 0!==t&&e++})),e}includes(e){if(void 0===e)return!1;for(const t of this.#Sr)if(void 0!==t&&t.getId()===e)return!0;return!1}getViewLayers(e){void 0===e&&(e=function(){return!0});const t=[];for(const n of this.#Sr)n instanceof Xi&&e(n)&&t.push(n);return t}someViewLayer(e){let t=!1;for(const n of this.#Sr)if(n instanceof Xi&&e(n)){t=!0;break}return t}getDrawLayers(e){void 0===e&&(e=function(){return!0});const t=[];for(const n of this.#Sr)n instanceof yi&&e(n)&&t.push(n);return t}getNumberOfViewLayers(){let e=0;return this.#Sr.forEach((t=>{void 0!==t&&t instanceof Xi&&e++})),e}getActiveViewLayer(){let e;if(void 0!==this.#gr){const t=this.#Sr[this.#gr];t instanceof Xi&&(e=t)}return e}getBaseViewLayer(){let e;for(const t of this.#Sr)if(t instanceof Xi){e=t;break}if(void 0!==e)return e;c.warn(\"No layer found\")}getViewLayersByDataId(e){return this.getViewLayers((function(t){return t.getDataId()===e}))}searchViewLayers(e){const t=[];for(const n of this.#Sr)n instanceof Xi&&n.getViewController().equalImageMeta(e)&&t.push(n);return t}getViewDataIndices(){const e=[];for(const t of this.#Sr)t instanceof Xi&&e.push(t.getDataId());return e}getActiveDrawLayer(){let e;if(void 0!==this.#pr){const t=this.#Sr[this.#pr];t instanceof yi&&(e=t)}return e}getDrawLayersByDataId(e){return this.getDrawLayers((function(t){return t.getDataId()===e}))}setActiveViewLayer(e){this.#Sr[e]instanceof Xi?(this.#gr=e,this.#Re({type:\"activelayerchange\",value:[this.#Sr[e]]})):c.warn(\"No view layer to set as active with index: \"+e)}setActiveViewLayerByDataId(e){let t;for(let n=0;n<this.#Sr.length;++n)if(this.#Sr[n]instanceof Xi&&this.#Sr[n].getDataId()===e){t=n;break}void 0!==t?this.setActiveViewLayer(t):c.warn(\"No view layer to set as active with dataId: \"+e)}setActiveDrawLayer(e){this.#pr=e,this.#Re({type:\"activelayerchange\",value:[this.#Sr[e]]})}setActiveDrawLayerByDataId(e){let t;for(let n=0;n<this.#Sr.length;++n)if(this.#Sr[n]instanceof yi&&this.#Sr[n].getDataId()===e){t=n;break}void 0!==t?this.setActiveDrawLayer(t):c.warn(\"No draw layer to set as active with dataId: \"+e)}addViewLayer(){const e=this.#Sr.length,t=this.#Ir();this.#Xt.append(t);const n=new Xi(t);return n.setImageSmoothing(this.#rr),this.#Sr.push(n),this.setActiveViewLayer(e),this.#Tr(n),n}addDrawLayer(){this.#pr=this.#Sr.length;const e=this.#Ir();this.#Xt.append(e);const t=new yi(e);return this.#Sr.push(t),this.#Lr(t),t}#Tr(e){e.addEventListener(\"positionchange\",this.updateLayersToPositionChange);for(const t of Qn)e.addEventListener(t,this.#Re);e.addEventListener(\"renderstart\",this.#Re),e.addEventListener(\"renderend\",this.#Re)}#Pr(e){e.removeEventListener(\"positionchange\",this.updateLayersToPositionChange);for(const t of Qn)e.removeEventListener(t,this.#Re);e.removeEventListener(\"renderstart\",this.#Re),e.removeEventListener(\"renderend\",this.#Re),e.unbindImage()}#Lr(e){e.addEventListener(\"positionchange\",this.updateLayersToPositionChange),e.addEventListener(\"positionchange\",this.#Re),e.addEventListener(\"drawcreate\",this.#Re),e.addEventListener(\"drawdelete\",this.#Re)}#wr(e){e.removeEventListener(\"positionchange\",this.updateLayersToPositionChange),e.removeEventListener(\"positionchange\",this.#Re),e.removeEventListener(\"drawcreate\",this.#Re),e.removeEventListener(\"drawdelete\",this.#Re)}#Ir(){const e=document.createElement(\"div\");return e.id=this.getDivId()+\"-layer-\"+this.#Sr.length,e.className=\"layer\",e.style.pointerEvents=\"none\",e}empty(){this.#Sr=[],this.#gr=void 0,this.#pr=void 0,this.#vr();const e=this.#Xt.getElementsByClassName(\"layer\");if(e)for(;e.length>0;)e[0].remove()}removeLayersByDataId(e){for(const t of this.#Sr)void 0!==t&&t.getDataId()===e&&this.removeLayer(t)}removeLayer(e){const t=this.#Sr.findIndex((t=>t===e));if(-1===t)throw new Error(\"Cannot find layer to remove\");e instanceof Xi?(this.#Pr(e),this.#gr===t&&(this.#gr=void 0)):(this.#wr(e),this.#pr===t&&(this.#pr=void 0)),this.#Sr[t]=void 0,e.removeFromDOM()}#Cr(e){let t;void 0===e&&(e=this.#Ve),this.#vr();for(const e of this.#Sr)if(e instanceof Xi){t=e;break}if(void 0===t)return void c.warn(\"No layer to show crosshair\");const n=t.getViewController().getPlanePositionFromPosition(e),i=t.planePosToDisplay(n);if(void 0!==i.getY()){const e=document.createElement(\"hr\");e.id=this.getDivId()+\"-scroll-crosshair-horizontal\",e.className=\"horizontal\",e.style.width=this.#Xt.offsetWidth+\"px\",e.style.left=\"0px\",e.style.top=i.getY()+\"px\",this.#fr.push(e),this.#Xt.appendChild(e)}if(void 0!==i.getX()){const e=document.createElement(\"hr\");e.id=this.getDivId()+\"-scroll-crosshair-vertical\",e.className=\"vertical\",e.style.width=this.#Xt.offsetHeight+\"px\",e.style.left=i.getX()+\"px\",e.style.top=\"0px\",this.#fr.push(e),this.#Xt.appendChild(e)}}#vr(){for(const e of this.#fr)e.remove();this.#fr=[]}showTooltip(e){this.removeTooltipDiv();const t=this.getActiveViewLayer(),n=t.getViewController(),i=t.displayToPlanePos(e),r=n.getPositionFromPlanePoint(i),o=n.getRescaledImageValue(r);if(void 0!==o){const t=document.createElement(\"span\");t.id=\"scroll-tooltip\",t.style.left=e.getX()+10+\"px\",t.style.top=e.getY()+10+\"px\";let i=G(o,3).toString();void 0!==n.getPixelUnit()&&(i+=\" \"+n.getPixelUnit()),t.appendChild(document.createTextNode(i)),this.#Dr=t,this.#Xt.appendChild(t)}}removeTooltipDiv(){void 0!==this.#Dr&&(this.#Dr.remove(),this.#Dr=void 0)}isPositionInBounds(e){return this.someViewLayer((function(t){return t.getViewController().isPositionInBounds(e)}))}canScroll(){return this.someViewLayer((function(e){return e.getViewController().canScroll()}))}moreThanOne(e){return this.someViewLayer((function(t){return t.getViewController().moreThanOne(e)}))}updateLayersToPositionChange=e=>{for(const e of this.#Sr)void 0!==e&&(e.removeEventListener(\"positionchange\",this.updateLayersToPositionChange),e.removeEventListener(\"positionchange\",this.#Re));const t=new s(e.value[0]),n=new q(e.value[1]);this.#Ve=n,this.#mr&&this.#Cr(n);const i={};let r,o;for(const a of this.#Sr){if(void 0===a)continue;let s=!1;if(a instanceof Xi){const e=a.getViewController(),t=e.getOrigin(),l=e.getOrigin(n);let c,u;if(void 0===o)r=t,o=l,c=new w(0,0,0),u=new w(0,0,0);else if(e.isPositionInBounds(n)&&void 0!==l){const e=r.minus(t);c=new w(e.getX(),e.getY(),e.getZ());const n=o.minus(l);u=new w(n.getX(),n.getY(),n.getZ())}void 0!==c&&void 0!==u&&(s=a.setBaseOffset(c,u,o,r),i[a.getId()]={scroll:c,plane:u})}if(a instanceof yi){const e=i[a.getReferenceLayerId()];void 0!==e&&(s=a.setBaseOffset(e.scroll,e.plane))}let l=!1;a.getId()!==e.srclayerid&&(l=a.setCurrentPosition(n,t)),!l&&s&&a.draw()}for(const e of this.#Sr)void 0!==e&&(e.addEventListener(\"positionchange\",this.updateLayersToPositionChange),e.addEventListener(\"positionchange\",this.#Re))};getDivToWorldSizeRatio(){if(0===this.#Xt.offsetWidth&&0===this.#Xt.offsetHeight)throw new Error(\"Cannot fit to zero sized container.\");const e=this.getMaxWorldSize();if(void 0!==e){if(0===this.#Xt.offsetHeight){const t=this.#Xt.offsetWidth/e.x,n=e.y*t;this.#Xt.style.height=n+\"px\"}return Math.min(this.#Xt.offsetWidth/e.x,this.#Xt.offsetHeight/e.y)}}fitToContainer(e){const t=this.getMaxWorldSize();if(void 0===t)return;const n={x:this.#Xt.offsetWidth,y:this.#Xt.offsetHeight},i={x:-.5*(n.x-Math.floor(t.x*e)),y:-.5*(n.y-Math.floor(t.y*e))};for(const t of this.#Sr)void 0!==t&&t.fitToContainer(n,e,i);this.#mr&&this.#Cr()}getMaxWorldSize(){let e={x:0,y:0};for(const t of this.#Sr)if(t instanceof Xi){const n=t.getImageWorldSize();n.x>e.x&&(e.x=n.x),n.y>e.y&&(e.y=n.y)}return 0===e.x&&0===e.y&&(e=void 0),e}flipScaleZ(){this.#St.z*=-1,this.setScale(this.#St)}addScale(e,t){const n={x:this.#tr.x*(1+e),y:this.#tr.y*(1+e),z:this.#tr.z*(1+e)};this.setScale(n,t)}setScale(e,t){this.#tr=e;for(const e of this.#Sr)void 0!==e&&e.setScale(this.#tr,t);const n=[e.x,e.y,e.z];void 0!==t&&(n.push(t.getX()),n.push(t.getY()),n.push(t.getZ())),this.#Re({type:\"zoomchange\",value:n})}addTranslation(e){this.setOffset({x:this.#nr.x-e.x,y:this.#nr.y-e.y,z:this.#nr.z-e.z})}setOffset(e){this.#nr=e;for(const e of this.#Sr)void 0!==e&&e.setOffset(this.#nr);this.#Re({type:\"offsetchange\",value:[this.#nr.x,this.#nr.y,this.#nr.z]})}reset(){this.setScale(this.#St),this.setOffset({x:0,y:0,z:0})}draw(){for(const e of this.#Sr)void 0!==e&&e.draw()}display(e){for(const t of this.#Sr)void 0!==t&&t.display(e)}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)}}const Ji={WindowLevelBinder:class{getEventType=function(){return\"wlchange\"};getCallback=function(e){return function(t){const n=e.getViewLayersByDataId(t.dataid);if(0!==n.length){const e=n[0].getViewController();if(2===t.value.length){const n=new u(t.value[0],t.value[1]);e.setWindowLevel(n)}3===t.value.length&&e.setWindowLevelPreset(t.value[2])}}}},PositionBinder:class{getEventType=function(){return\"positionchange\"};getCallback=function(e){return function(t){const n=t.value[1],i=e.getActiveViewLayer().getViewController(),r=i.getCurrentPosition(),o=r.length(),a=n.length;a!==o&&(a===o-1?n.push(r.get(o-1)):a===o+1&&n.pop()),i.setCurrentPosition(new q(n))}}},ZoomBinder:class{getEventType=function(){return\"zoomchange\"};getCallback=function(e){return function(t){const n={x:t.value[0],y:t.value[1],z:t.value[2]};let i;6===t.value.length&&(i=new E(t.value[3],t.value[4],t.value[5])),e.setScale(n,i),e.draw()}}},OffsetBinder:class{getEventType=function(){return\"offsetchange\"};getCallback=function(e){return function(t){e.setOffset({x:t.value[0],y:t.value[1],z:t.value[2]}),e.draw()}}},OpacityBinder:class{getEventType=function(){return\"opacitychange\"};getCallback=function(e){return function(t){if(void 0===t.dataid)return;const n=e.getViewLayersByDataId(t.dataid),i=e.getBaseViewLayer();0!==n.length&&i!==n[0]&&(n[0].setOpacity(t.value),n[0].draw())}}},ColourMapBinder:class{getEventType=function(){return\"colourmapchange\"};getCallback=function(e){return function(t){const n=e.getViewLayersByDataId(t.dataid);0!==n.length&&n[0].getViewController().setColourMap(t.value[0])}}}};class $i{#Or=[];#Ar;#rr=!1;#br=[];#$n=null;getLayerGroup(e){return this.#Or[e]}getNumberOfLayerGroups(){return this.#Or.length}getActiveLayerGroup(){return this.getLayerGroup(this.#Ar)}setActiveLayerGroup(e){void 0!==this.getLayerGroup(e)?this.#Ar=e:c.warn(\"No layer group to set as active with index: \"+e)}getViewLayersByDataId(e){let t=[];for(let n=0;n<this.#Or.length;++n)t=t.concat(this.#Or[n].getViewLayersByDataId(e));return t}getViewLayers(e){let t=[];for(let n=0;n<this.#Or.length;++n)t=t.concat(this.#Or[n].getViewLayers(e));return t}getDrawLayersByDataId(e){let t=[];for(let n=0;n<this.#Or.length;++n)t=t.concat(this.#Or[n].getDrawLayersByDataId(e));return t}getDrawLayers(e){let t=[];for(let n=0;n<this.#Or.length;++n)t=t.concat(this.#Or[n].getDrawLayers(e));return t}addLayerGroup(e){this.#Ar=this.#Or.length;const t=new Ki(e);t.setImageSmoothing(this.#rr);const n=this.#$n&&0!==this.#$n.length;return n&&this.unbindLayerGroups(),this.#Or.push(t),n&&this.bindLayerGroups(),t}getLayerGroupByDivId(e){return this.#Or.find((function(t){return t.getDivId()===e}))}setBinders(e){if(null==e)throw new Error(\"Cannot set null or undefined binders\");0!==this.#br.length&&this.unbindLayerGroups(),this.#br=e.slice(),this.bindLayerGroups()}empty(){this.unbindLayerGroups();for(let e=0;e<this.#Or.length;++e)this.#Or[e].empty();this.#Or=[],this.#Ar=void 0}removeLayersByDataId(e){for(const t of this.#Or)t.removeLayersByDataId(e)}removeLayerGroup(e){const t=this.#Or.findIndex((t=>t===e));if(-1===t)throw new Error(\"Cannot find layerGroup to remove\");this.unbindLayerGroups(),e.empty(),this.#Or.splice(t,1),this.#Ar===t&&(this.#Ar=void 0),this.bindLayerGroups()}reset(){for(let e=0;e<this.#Or.length;++e)this.#Or[e].reset()}draw(){for(let e=0;e<this.#Or.length;++e)this.#Or[e].draw()}fitToContainer(){let e;const t=[];for(let n=0;n<this.#Or.length;++n){const i=this.#Or[n].getDivToWorldSizeRatio();void 0!==i&&(t.push(n),(void 0===e||i<e)&&(e=i))}if(void 0!==e)for(let n=0;n<this.#Or.length;++n)t.includes(n)&&this.#Or[n].fitToContainer(e)}bindLayerGroups(){if(0!==this.#Or.length&&1!==this.#Or.length&&0!==this.#br.length){this.#$n=new Array(this.#Or.length);for(let e=0;e<this.#Or.length;++e)for(let t=0;t<this.#br.length;++t)this.#xr(e,this.#br[t])}}unbindLayerGroups(){if(0!==this.#Or.length&&1!==this.#Or.length&&0!==this.#br.length&&this.#$n){for(let e=0;e<this.#Or.length;++e)for(let t=0;t<this.#br.length;++t)this.#Rr(e,this.#br[t]);this.#$n=null}}setImageSmoothing(e){this.#rr=e;for(let t=0;t<this.#Or.length;++t)this.#Or[t].setImageSmoothing(e)}#Fr(e,t){void 0===this.#$n[t]&&(this.#$n[t]=[]);let n=this.#$n[t].find((function(t){return t.binder===e}));return void 0===n&&(n={binder:e,callback:n=>{this.#Rr(t,e),e.getCallback(this.#Or[t])(n),this.#xr(t,e)}},this.#$n[t].push(n)),n.callback}#xr(e,t){for(let n=0;n<this.#Or.length;++n)n!==e&&this.#Or[e].addEventListener(t.getEventType(),this.#Fr(t,n))}#Rr(e,t){for(let n=0;n<this.#Or.length;++n)n!==e&&this.#Or[e].removeEventListener(t.getEventType(),this.#Fr(t,n))}}class er{#rn;constructor(e){this.#rn=e}fromJSON(e){const t=JSON.parse(e);let n=null;if(\"0.1\"===t.version)n=this.#Er(t);else if(\"0.2\"===t.version)n=this.#qr(t);else if(\"0.3\"===t.version)n=this.#Ur(t);else if(\"0.4\"===t.version)n=this.#Mr(t);else{if(\"0.5\"!==t.version)throw new Error(\"Unknown state file format version: '\"+t.version+\"'.\");n=this.#Qr(t)}return n}apply(e,t){const n=e.getActiveLayerGroup().getActiveViewLayer().getViewController(),i=new u(t[\"window-center\"],t[\"window-width\"]);n.setWindowLevel(i),n.setCurrentIndex(new s(t.position));const r=e.getActiveLayerGroup().getBaseScale();let o=null,a=null;if(void 0!==t.scaleCenter){o={x:t.scale*r.x,y:t.scale*r.y,z:1};const e=t.scaleCenter.x-t.scaleCenter.x*t.scale,n=t.scaleCenter.y-t.scaleCenter.y*t.scale,i=e+t.translation.x*o.x,s=n+t.translation.y*o.y;a={x:-i/o.x,y:-s/o.y,z:0}}else o={x:t.scale.x*r.x,y:t.scale.y*r.y,z:r.z},a={x:t.offset.x,y:t.offset.y,z:0};e.getActiveLayerGroup().setScale(o),e.getActiveLayerGroup().setOffset(a),e.setDrawings(t.drawings,t.drawingsDetails,this.#rn)}#Er(e){const t=function(e){const t=[],n={};let i,r;for(let o=0,a=e.length;o<a;++o){t[o]=[];for(let a=0,s=e[o].length;a<s;++a){i=e[o][a];const s=[];for(let e=0,t=i.length;e<t;++e){r=Kn().Node.create(i[e]),r.visible(!0);let t={x:0,y:0};const o=r.getChildren((function(e){return\"shape\"===e.name()}))[0];if(o.stroke(P(o.stroke())),\"line-group\"===r.name()){r.name(\"ruler-group\");const e=new(Kn().Line)({points:[o.points()[0],o.points()[1],o.points()[0],o.points()[1]],name:\"shape-tick0\"});r.add(e);const t=new(Kn().Line)({points:[o.points()[2],o.points()[3],o.points()[2],o.points()[3]],name:\"shape-tick1\"});r.add(t)}const a=r.getChildren((function(e){return\"arc\"===e.name()}));1===a.length&&a[0].name(\"shape-arc\");const l=r.getChildren((function(e){return\"text\"===e.name()}));let c=new(Kn().Text)({name:\"text\",text:\"\"});1===l.length?(t.x=l[0].x(),t.y=l[0].y(),l[0].remove(),c=l[0]):0!==o.points().length&&(t={x:o.points()[0],y:o.points()[1]});const u=new(Kn().Label)({x:t.x,y:t.y,name:\"label\"});u.add(c),u.add(new(Kn().Tag)),r.add(u),s.push(JSON.stringify(r.toObject()));let d=c.text();const h=d.length;let S=null;\"ruler-group\"===r.name()?(S={length:{value:parseFloat(d.substring(0,h-2)),unit:d.substring(-2)}},d=\"{length}\"):\"ellipse-group\"===r.name()||\"rectangle-group\"===r.name()?(S={surface:{value:parseFloat(d.substring(0,h-3)),unit:d.substring(-3)}},d=\"{surface}\"):\"protractor-group\"!==r.name()&&\"rectangle-group\"!==r.name()||(S={angle:{value:parseFloat(d.substring(0,h-1)),unit:d.substring(-1)}},d=\"{angle}\"),n[r.id()]={textExpr:d,longText:\"\",quant:S}}t[o].push(s)}}return{drawings:t,drawingsDetails:n}}(e.drawings);return e.drawings=tr(t.drawings).toObject(),e.drawingsDetails=nr(t.drawingsDetails),(e=ir(e)).drawings=rr(e.drawings),e}#qr(e){return e.drawings=tr(e.drawings).toObject(),e.drawingsDetails=nr(function(e){const t={},n=\"string\"==typeof e?JSON.parse(e):e;for(let e=0,i=n.length;e<i;++e)for(let i=0,r=n[e].length;i<r;++i)for(let r=0,o=n[e][i].length;r<o;++r){const o=n[e][i][r];t[o.id]={textExpr:o.textExpr,longText:o.longText,quant:o.quant}}return t}(e.drawingsDetails)),(e=ir(e)).drawings=rr(e.drawings),e}#Ur(e){return e.drawingsDetails=nr(e.drawingsDetails),(e=ir(e)).drawings=rr(e.drawings),e}#Mr(e){return(e=ir(e)).drawings=rr(e.drawings),e}#Qr(e){return e}}function tr(e){let t,n,i;const r=new(Kn().Layer)({listening:!1,visible:!0}),o=\"string\"==typeof e?JSON.parse(e):e;for(let e=0,l=o.length;e<l;++e)for(let l=0,c=o[e].length;l<c;++l)if(n=o[e][l],0!==n.length){i=new(Kn().Group)({id:(a=new s([1,1,e,l]),\"slice-\"+a.get(2)+\"_frame-\"+(4===a.length()?a.get(3):0)),name:\"position-group\",visible:!1});for(let e=0,r=n.length;e<r;++e)t=Kn().Node.create(n[e]),t.draggable(!0),t.getChildren().forEach((function(e){e.draggable(!1)})),i.add(t);r.add(i)}var a;return r}function nr(e){const t={},n=Object.keys(e);for(let i=0,r=n.length;i<r;++i){const r=e[n[i]];t[n[i]]={meta:{textExpr:r.textExpr,longText:r.longText,quantification:r.quant}}}return t}function ir(e){const t=e.position;return e.position=[t.i,t.j,t.k],e}function rr(e){const t=e.children;for(let e=0,n=t.length;e<n;++e){const n=t[e],i=n.attrs.id.split(\"_\"),r=parseInt(i[0].substring(6),10),o=parseInt(i[1].substring(6),10);let a=\"#2-\";a+=0===r&&0!==o?o:r,n.attrs.id=a}return e}function or(e){let t;return\"null\"!==window.location.origin&&(t=window.location.origin),new URL(e,t)}function ar(e){const t={};let n=null;if(e&&-1!==(n=e.indexOf(\"?\"))){t.base=e.substring(0,n);let i=e.indexOf(\"#\");-1===i&&(i=e.length);const r=e.substring(n+1,i);t.query=function(e){const t={};if(e){const n=e.split(\"&\");for(let e=0;e<n.length;++e){const i=n[e].split(\"=\");t[i[0]]?(t[i[0]]instanceof Array||(t[i[0]]=[t[i[0]]]),t[i[0]].push(i[1])):t[i[0]]=i[1]}}return t}(r)}return t}class sr{#Vr=[];#Nr=0;#Oe=new He;getStackSize(){return this.#Vr.length}getCurrentStackIndex(){return this.#Nr}add(e){this.#Vr=this.#Vr.slice(0,this.#Nr),this.#Vr.push(e),++this.#Nr,this.#Re({type:\"undoadd\",command:e.getName()})}remove(e){let t=!1;const n=this.#Vr.findIndex((function(t){return t.getName()===e}));return-1!==n&&(this.#Vr.splice(n,1),--this.#Nr,t=!0,this.#Re({type:\"undoremove\",command:e})),t}undo(){this.#Nr>0&&(--this.#Nr,this.#Vr[this.#Nr].undo(),this.#Re({type:\"undo\",command:this.#Vr[this.#Nr].getName()}))}redo(){this.#Nr<this.#Vr.length&&(this.#Vr[this.#Nr].execute(),this.#Re({type:\"redo\",command:this.#Vr[this.#Nr].getName()}),++this.#Nr)}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)}}class lr{#Br;#Gr=null;#$n=[];#kr={};constructor(e){this.#Br=e}init(){for(const e in this.#Br)this.#Br[e].init();this.enableShortcuts(!0)}enableShortcuts(e){e?window.addEventListener(\"keydown\",this.#Hr(\"window\",\"keydown\"),!0):window.removeEventListener(\"keydown\",this.#Hr(\"window\",\"keydown\"),!0)}getToolList(){return this.#Br}hasTool(e){return void 0!==this.getToolList()[e]}getSelectedTool(){return this.#Gr}getSelectedToolEventHandler(e){return this.getSelectedTool()[e]}setSelectedTool(e){if(!this.hasTool(e))throw new Error(\"Unknown tool: '\"+e+\"'\");this.#Gr&&this.#Gr.activate(!1),this.#Gr=this.#Br[e],this.#Gr.activate(!0)}setToolFeatures(e){this.getSelectedTool()&&this.getSelectedTool().setFeatures(e)}bindLayerGroup(e,t){const n=e.getDivId();e.addEventListener(\"activelayerchange\",this.#zr(n)),this.#Wr(n,t)}#Wr(e,t){void 0!==this.#kr[e]&&this.#Yr(this.#kr[e]),this.#kr[e]=t,this.#Xr(t)}#zr(e){return t=>{const n=t.value[0];void 0!==n&&this.#Wr(e,n)}}#Xr(e){e.bindInteraction();const t=Gi;for(let n=0;n<t.length;++n)e.addEventListener(t[n],this.#Hr(e.getId(),t[n]))}#Yr(e){e.unbindInteraction();const t=Gi;for(let n=0;n<t.length;++n)e.removeEventListener(t[n],this.#Hr(e.getId(),t[n]))}#Hr(e,t){if(void 0===this.#$n[e]&&(this.#$n[e]=[]),void 0===this.#$n[e][t]){const n=e=>{if(this.#Gr){const t=this.#Gr[e.type];t&&t(e)}};this.#$n[e][t]=n}return this.#$n[e][t]}}class cr{#jr=[];#Zr=2;#_r;constructor(e){this.#_r=e}setNumberOfDimensions(e){this.#Zr=e}setNToLoad(e){for(let t=0;t<e;++t){this.#jr[t]=[];for(let e=0;e<this.#Zr;++e)this.#jr[t][e]=0}}onprogress=e=>{if(!e.lengthComputable)return;if(void 0===e.subindex)return;if(void 0===e.index)return;const t=100*e.loaded/e.total;this.#jr[e.index][e.subindex]=t;let n=null;n=void 0!==e.item?e.item:{loaded:this.#Kr(e.index),total:100,source:e.source},this.#_r({lengthComputable:!0,loaded:this.#Jr(),total:100,item:n})};#Kr(e){let t=0;for(let n=0;n<this.#Zr;++n)t+=this.#jr[e][n];return t/this.#Zr}#Jr(){let e=0;const t=this.#jr.length;for(let n=0;n<t;++n)e+=this.#Kr(n);return Math.round(e/t)}getMonoProgressHandler(e,t){return n=>{n.index=e,n.subindex=t,this.onprogress(n)}}getUndefinedMonoProgressHandler(e){return t=>{t.subindex=e,this.onprogress(t)}}}class ur{#$r=null;#eo=[];#to=null;#no=0;#io=0;#ro;#F;getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}#oo(e){this.#$r=e,this.#no=0,this.#io=0,this.#ro=!1,this.#ao(),this.#so()}#lo(e){this.#eo.push(e)}#ao(){this.#eo=[]}#co(e){this.#to=e}#so(){this.#to=null}#uo=e=>{this.#no++,this.#no===this.#$r.length&&this.onload({source:this.#$r})};#do=e=>{this.#io++,this.#io===this.#$r.length&&this.onloadend({source:this.#$r})};#ho(e,t){return n=>{n.source=t,e(n)}}load(e,t){this.onloadstart({source:e}),1===e.length&&(Q(e[0],\"DICOMDIR\")||Q(e[0],\".dcmdir\"))?this.#So(e[0],t):this.#go(e,t)}#po(e,t,n){return i=>{const r=i.target.status;200!==r&&0!==r?(this.onerror({source:t,error:\"GET \"+i.target.responseURL+\" \"+i.target.status+\" (\"+i.target.statusText+\")\",target:i.target}),this.#do()):e.load(i.target.response,t,n)}}#go(e,t){if(void 0===e||0===e.length)return;this.#oo(e);const n=new cr(this.onprogress);n.setNToLoad(e.length);const i=[];for(let e=0;e<uo.length;++e)i.push(new uo[e]);let r=e[0],o=null,a=!1;for(let s=0;s<i.length;++s)if(o=i[s],o.canLoadUrl(r,t)){a=!0,o.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),o.onprogress=n.getUndefinedMonoProgressHandler(1),o.onloaditem=this.onloaditem,o.onload=this.#uo,o.onloadend=this.#do,o.onerror=this.onerror,o.onabort=this.onabort,this.#co(o);break}if(!a)throw new Error(\"No loader found for url: \"+r);let s=0;const l=()=>{s<this.#eo.length-1&&!this.#ro&&(++s,this.#eo[s].send(null))};for(let i=0;i<e.length;++i){if(r=e[i],!o.canLoadUrl(r,t))throw new Error(\"Input url of different type: \"+r);const a=new XMLHttpRequest;if(a.open(\"GET\",r,!0),void 0!==t){if(void 0!==t.requestHeaders){const e=t.requestHeaders;for(let t=0;t<e.length;++t)void 0!==e[t].name&&void 0!==e[t].value&&a.setRequestHeader(e[t].name,e[t].value)}void 0!==t.withCredentials&&(a.withCredentials=t.withCredentials)}a.onprogress=this.#ho(n.getMonoProgressHandler(i,0),r),a.onload=this.#po(o,r,i),a.onloadend=l;const s=this.#ho(this.onerror,r);a.onerror=e=>{this.#do(),s(e)};const c=this.#ho(this.onabort,r);a.onabort=e=>{this.#do(),c(e)},1===o.loadUrlAs()&&(a.responseType=\"arraybuffer\"),this.#lo(a)}let c=this.#eo.length;void 0!==t&&void 0!==t.batchSize&&0!==c&&(c=Math.min(t.batchSize,this.#eo.length));for(let e=0;e<c;++e)this.#ro||(s=e,this.#eo[s].send(null))}#So(e,t){const n=new XMLHttpRequest;n.open(\"GET\",e,!0),n.responseType=\"arraybuffer\",n.onload=n=>{const i=n.target.status;if(200!==i&&0!==i)this.onerror({source:e,error:\"GET \"+n.target.responseURL+\" \"+n.target.status+\" (\"+n.target.statusText+\")\",target:n.target}),this.onloadend({});else{const i=function(e){const t=new ke;t.parse(e);const n=t.getDicomElements();if(void 0===n[\"00041220\"]||void 0===n[\"00041220\"].value)return void c.warn(\"No Directory Record Sequence found in DICOMDIR.\");const i=n[\"00041220\"].value;if(0===i.length)return void c.warn(\"The Directory Record Sequence of the DICOMDIR is empty.\");const r=[];let o=null,a=null;for(let e=0;e<i.length;++e){if(void 0===i[e][\"00041430\"]||void 0===i[e][\"00041430\"].value)continue;const t=i[e][\"00041430\"].value[0];if(\"STUDY\"===t)a=[],r.push(a);else if(\"SERIES\"===t)o=[],a.push(o);else if(\"IMAGE\"===t){if(void 0===i[e][\"00041500\"]||void 0===i[e][\"00041500\"].value)continue;const t=i[e][\"00041500\"].value;o.push(t.join(\"/\"))}}return r}(n.target.response)[0][0],r=e.split(\"/\").slice(0,-1).join(\"/\"),o=[];for(let e=0;e<i.length;++e)o.push(r+\"/\"+i[e]);this.#go(o,t)}},n.onerror=t=>{this.#ho(this.onerror,e)(t),this.onloadend({})},n.onabort=t=>{this.#ho(this.onabort,e)(t),this.onloadend({})},n.send(null)}abort(){this.#ro=!0;for(let e=0;e<this.#eo.length;++e)4!==this.#eo[e].readyState&&this.#eo[e].abort();this.#to&&this.#to.isLoading()&&this.#to.abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}class dr{constructor(e){this.poolSize=e,this.taskQueue=[],this.freeThreads=[];for(let t=0;t<e;++t)this.freeThreads.push(new hr(this));this.runningThreads=[]}addWorkerTask(e){if(this.freeThreads.length===this.poolSize&&this.onworkstart({type:\"work-start\"}),this.freeThreads.length>0){const t=this.freeThreads.shift();this.runningThreads.push(t),t.run(e)}else this.taskQueue.push(e)}abort(){this.#mo(),this.onabort({type:\"work-abort\"}),this.onworkend({type:\"work-end\"})}onTaskEnd(e){if(this.taskQueue.length>0){const t=this.taskQueue.shift();e.run(t)}else{e.stop(),this.freeThreads.push(e);for(let t=0;t<this.runningThreads.length;++t)this.runningThreads[t].getId()===e.getId()&&this.runningThreads.splice(t,1);this.freeThreads.length===this.poolSize&&(this.onwork({type:\"work\"}),this.onworkend({type:\"work-end\"}))}}handleWorkerError=e=>{this.#mo(),this.onerror({error:e}),this.onworkend({type:\"work-end\"})};#mo(){this.taskQueue=[];for(let e=0;e<this.runningThreads.length;++e)this.runningThreads[e].stop();this.runningThreads=[]}onworkstart(e){}onworkitem(e){}onwork(e){}onworkend(e){}onerror(e){}onabort(e){}}class hr{constructor(e){this.parentPool=e,this.id=Math.random().toString(36).substring(2,15),this.runningTask=null,this.worker}getId(){return this.id}run(e){this.runningTask=e,void 0===this.worker&&(this.worker=new Worker(this.runningTask.script),this.worker.onmessage=this.onmessage,this.worker.onerror=this.onerror),this.worker.postMessage(this.runningTask.startMessage)}stop(){void 0!==this.worker&&(this.worker.terminate(),this.worker=void 0)}onmessage=e=>{e.itemNumber=this.runningTask.info.itemNumber,e.numberOfItems=this.runningTask.info.numberOfItems,e.index=this.runningTask.info.index,this.parentPool.onworkitem(e),this.parentPool.onTaskEnd(this)};onerror=e=>{e.itemNumber=this.runningTask.info.itemNumber,e.numberOfItems=this.runningTask.info.numberOfItems,e.index=this.runningTask.info.index,this.parentPool.handleWorkerError(e),this.stop()}}class Sr{constructor(e,t,n){this.script=e,this.startMessage=t,this.info=n}}const gr=\"undefined\"!=typeof JpegImage,pr=\"undefined\"!=typeof jpeg&&void 0!==jpeg.lossless,mr=\"undefined\"!=typeof JpxImage,fr={jpeg2000:\"\",\"jpeg-lossless\":\"\",\"jpeg-baseline\":\"\",rle:\"\"};class Dr{#fo;#Do=new dr(10);#yo=!1;constructor(e,t){this.#fo=e}decode(e,t,n){this.#yo||(this.#yo=!0,this.#Do.onworkstart=this.ondecodestart,this.#Do.onworkitem=this.ondecodeditem,this.#Do.onwork=this.ondecoded,this.#Do.onworkend=this.ondecodeend,this.#Do.onerror=this.onerror,this.#Do.onabort=this.onabort);const i=new Sr(this.#fo,{buffer:e,meta:t},n);this.#Do.addWorkerTask(i)}abort(){this.#Do.abort()}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}class yr{#Co;#vo;constructor(e,t){this.#Co=e,this.#vo=t}#Io=0;decode(e,t,n){++this.#Io;let i=null,r=null;if(\"jpeg-lossless\"===this.#Co){if(!pr)throw new Error(\"No JPEG Lossless decoder provided\");const n=t.bitsAllocated/8,o=new Uint8Array(e);i=new jpeg.lossless.Decoder;const a=i.decode(o.buffer,0,o.buffer.byteLength,n);8===t.bitsAllocated?r=t.isSigned?new Int8Array(a.buffer):new Uint8Array(a.buffer):16===t.bitsAllocated&&(r=t.isSigned?new Int16Array(a.buffer):new Uint16Array(a.buffer))}else if(\"jpeg-baseline\"===this.#Co){if(!gr)throw new Error(\"No JPEG Baseline decoder provided\");i=new JpegImage,i.parse(e),r=i.getData(i.width,i.height)}else if(\"jpeg2000\"===this.#Co){if(!mr)throw new Error(\"No JPEG 2000 decoder provided\");i=new JpxImage,i.parse(e),r=i.tiles[0].items}else\"rle\"===this.#Co&&(i=new dwvdecoder.RleDecoder,r=i.decode(e,t.bitsAllocated,t.isSigned,t.sliceSize,t.samplesPerPixel,t.planarConfiguration));this.ondecodeditem({data:[r],index:n.index,numberOfItems:n.numberOfItems,itemNumber:n.itemNumber}),this.#Io===this.#vo&&(this.ondecoded({}),this.ondecodeend({}))}abort(){this.onabort({}),this.ondecodeend({})}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}class Cr{#yo=!1;#To=null;constructor(e,t){void 0!==fr&&void 0!==fr[e]?this.#To=new Dr(fr[e],t):this.#To=new yr(e,t)}decode(e,t,n){this.#yo||(this.#yo=!0,this.#To.ondecodestart=this.ondecodestart,this.#To.ondecodeditem=this.ondecodeditem,this.#To.ondecoded=this.ondecoded,this.#To.ondecodeend=this.ondecodeend,this.#To.onerror=this.onerror,this.#To.onabort=this.onabort),this.#To.decode(e,t,n)}abort(){this.#To.abort()}ondecodestart(e){}ondecodeditem(e){}ondecoded(e){}ondecodeend(e){}onerror(e){}onabort(e){}}const vr={NumericValue:\"0040A30A\",FloatingPointValue:\"0040A161\",RationalNumeratorValue:\"0040A162\",RationalDenominatorValue:\"0040A163\",MeasurementUnitsCodeSequence:\"004008EA\"};class Ir{numericValue;floatingPointValue;rationalNumeratorValue;rationalDenominatorValue;measurementUnitsCode;toString(){return this.numericValue+\" \"+this.measurementUnitsCode.toString()}}function Tr(e){const t={};return void 0!==e.measurementUnitsCode&&(t.MeasurementUnitsCodeSequence={value:[Wt(e.measurementUnitsCode)]}),void 0!==e.floatingPointValue&&(t.FloatingPointValue=e.floatingPointValue),void 0!==e.rationalNumeratorValue&&(t.RationalNumeratorValue=e.rationalNumeratorValue),void 0!==e.rationalDenominatorValue&&(t.RationalDenominatorValue=e.rationalDenominatorValue),void 0!==e.numericValue&&(t.NumericValue=e.numericValue),t}const Lr={MeasuredValueSequence:\"0040A300\",NumericValueQualifierCodeSequence:\"0040A301\"};class Pr{measuredValue;numericValueQualifierCode;toString(){let e=this.measuredValue.toString();return void 0!==this.numericValueQualifierCode&&(e+=\" \"+this.numericValueQualifierCode.toString()),e}}function wr(e){const t={};return void 0!==e.measuredValue&&(t.MeasuredValueSequence={value:[Tr(e.measuredValue)]}),void 0!==e.numericValueQualifierCode&&(t.NumericValueQualifierCodeSequence={value:[Wt(e.numericValueQualifierCode)]}),t}const Or={ReferencedSOPClassUID:\"00081150\",ReferencedSOPInstanceUID:\"00081155\"};class Ar{referencedSOPClassUID;referencedSOPInstanceUID;toString(){return this.referencedSOPInstanceUID+\" (class: \"+this.referencedSOPClassUID+\")\"}}function br(e){const t=new Ar;return void 0!==e[Or.ReferencedSOPClassUID]&&(t.referencedSOPClassUID=e[Or.ReferencedSOPClassUID].value[0]),void 0!==e[Or.ReferencedSOPInstanceUID]&&(t.referencedSOPInstanceUID=e[Or.ReferencedSOPInstanceUID].value[0]),t}function xr(e){const t={};return void 0!==e.referencedSOPClassUID&&(t.ReferencedSOPClassUID=e.referencedSOPClassUID),void 0!==e.referencedSOPInstanceUID&&(t.ReferencedSOPInstanceUID=e.referencedSOPInstanceUID),t}const Rr={ReferencedFrameNumber:\"00081160\",ReferencedSOPSequence:\"00081199\",ReferencedSegmentNumber:\"0062000B\"};class Fr{referencedSOPSequence;referencedFrameNumber;referencedSegmentNumber;fiducialUID;toString(){return this.referencedSOPSequence.toString()}}function Er(e){const t={};return void 0!==e.referencedFrameNumber&&(t.ReferencedFrameNumber=e.referencedFrameNumber),void 0!==e.referencedSOPSequence&&(t.ReferencedSOPSequence={value:[xr(e.referencedSOPSequence)]}),void 0!==e.referencedSegmentNumber&&(t.ReferencedSegmentNumber=e.referencedSegmentNumber),t}const qr={PixelOriginInterpretation:\"00480301\",GraphicData:\"00700022\",GraphicType:\"00700023\",FiducialUID:\"0070031A\"},Ur=\"POINT\",Mr=\"MULTIPOINT\",Qr=\"POLYLINE\",Vr=\"CIRCLE\",Nr=\"ELLIPSE\";class Br{graphicData;graphicType;pixelOriginInterpretation;fiducialUID;toString(){return this.graphicType+\" {\"+this.graphicData+\"}\"}}function Gr(e){const t={};return void 0!==e.pixelOriginInterpretation&&(t.PixelOriginInterpretation=e.pixelOriginInterpretation),void 0!==e.graphicData&&(t.GraphicData=e.graphicData),void 0!==e.graphicType&&(t.GraphicType=e.graphicType),void 0!==e.fiducialUID&&(t.FiducialUID=e.fiducialUID),t}const kr={GraphicData:\"00700022\",GraphicType:\"00700023\",ReferencedFrameofReferenceUID:\"30060024\",FiducialUID:\"0070031A\"};class Hr{graphicData;graphicType;referencedFrameofReferenceUID;fiducialUID;toString(){return this.graphicType+\"{\"+this.graphicData+\"}\"}}function zr(e){const t={};return void 0!==e.graphicData&&(t.GraphicData=e.graphicData),void 0!==e.graphicType&&(t.GraphicType=e.graphicType),void 0!==e.referencedFrameofReferenceUID&&(t.ReferencedFrameofReferenceUID=e.referencedFrameofReferenceUID),void 0!==e.fiducialUID&&(t.FiducialUID=e.fiducialUID),t}const Wr={ReferencedSOPSequence:\"00081199\",RelationshipType:\"0040A010\",ValueType:\"0040A040\",ConceptNameCodeSequence:\"0040A043\",ConceptCodeSequence:\"0040A168\",ContentSequence:\"0040A730\",DateTime:\"0040A120\",Date:\"0040A121\",Time:\"0040A122\",UID:\"0040A124\",PersonName:\"0040A123\",TextValue:\"0040A160\",ContinuityOfContent:\"0040A050\"},Yr=\"CONTAINS\",Xr=\"HAS PROPERTIES\",jr=\"SELECTED FROM\",Zr={text:\"TEXT\",num:\"NUM\",code:\"CODE\",date:\"DATE\",time:\"TIME\",datetime:\"DATETIME\",uidref:\"UIDREF\",pname:\"PNAME\",composite:\"COMPOSITE\",image:\"IMAGE\",waveform:\"WAVEFORM\",scoord:\"SCOORD\",scoord3d:\"SCOORD3D\",tcoord:\"TCOORD\",container:\"CONTAINER\",table:\"TABLE\"},_r={TEXT:\"TextValue\",DATE:\"Date\",TIME:\"Time\",DATETIME:\"DateTime\",UIDREF:\"UID\",PNAME:\"PersonName\",CONTAINER:\"ContinuityOfContent\"};class Kr{valueType;conceptNameCode;relationshipType;contentSequence;value;constructor(e){this.valueType=e}toString(e){void 0===e&&(e=\"\");let t=\"\";if(void 0!==this.relationshipType&&(t+=\"(\"+this.relationshipType+\") \"),t+=this.valueType+\": \",void 0!==this.conceptNameCode&&(t+=this.conceptNameCode.toString()),t+=\" = \"+this.value.toString(),void 0!==this.contentSequence)for(const n of this.contentSequence)t+=\"\\n\"+e+\"- \"+n.toString(e+\"  \");return t}}function Jr(e){let t=\"\";void 0!==e[Wr.ValueType]&&(t=e[Wr.ValueType].value[0]);const n=new Kr(t);if(void 0!==e[Wr.RelationshipType]&&(n.relationshipType=e[Wr.RelationshipType].value[0]),void 0!==e[Wr.ConceptNameCodeSequence]&&(n.conceptNameCode=zt(e[Wr.ConceptNameCodeSequence].value[0])),t===Zr.code)n.value=zt(e[Wr.ConceptCodeSequence].value[0]);else if(t===Zr.num)n.value=function(e){const t=new Pr;return void 0!==e[Lr.MeasuredValueSequence]&&(t.measuredValue=function(e){const t=new Ir;return void 0!==e[vr.NumericValue]&&(t.numericValue=e[vr.NumericValue].value[0]),void 0!==e[vr.FloatingPointValue]&&(t.floatingPointValue=e[vr.FloatingPointValue].value[0]),void 0!==e[vr.RationalNumeratorValue]&&(t.rationalNumeratorValue=e[vr.RationalNumeratorValue].value[0]),void 0!==e[vr.RationalDenominatorValue]&&(t.rationalDenominatorValue=e[vr.RationalDenominatorValue].value[0]),void 0!==e[vr.MeasurementUnitsCodeSequence]&&(t.measurementUnitsCode=zt(e[vr.MeasurementUnitsCodeSequence].value[0])),t}(e[Lr.MeasuredValueSequence].value[0])),void 0!==e[Lr.NumericValueQualifierCodeSequence]&&(t.numericValueQualifierCode=zt(e[Lr.NumericValueQualifierCodeSequence].value[0])),t}(e);else if(t===Zr.image)n.value=function(e){const t=new Fr;return void 0!==e[Rr.ReferencedFrameNumber]&&(t.referencedFrameNumber=e[Rr.ReferencedFrameNumber].value[0]),void 0!==e[Rr.ReferencedSOPSequence]&&(t.referencedSOPSequence=br(e[Rr.ReferencedSOPSequence].value[0])),void 0!==e[Rr.ReferencedSegmentNumber]&&(t.referencedSegmentNumber=e[Rr.ReferencedSegmentNumber].value[0]),t}(e);else if(t===Zr.composite)n.value=br(e[Wr.ReferencedSOPSequence].value[0]);else if(t===Zr.scoord)n.value=function(e){const t=new Br;return void 0!==e[qr.GraphicData]&&(t.graphicData=e[qr.GraphicData].value),void 0!==e[qr.GraphicType]&&(t.graphicType=e[qr.GraphicType].value[0]),void 0!==e[qr.PixelOriginInterpretation]&&(t.pixelOriginInterpretation=e[qr.PixelOriginInterpretation].value[0]),void 0!==e[qr.FiducialUID]&&(t.fiducialUID=e[qr.FiducialUID].value[0]),t}(e);else if(t===Zr.scoord3d)n.value=function(e){const t=new Hr;return void 0!==e[kr.GraphicData]&&(t.graphicData=e[kr.GraphicData].value),void 0!==e[kr.GraphicType]&&(t.graphicType=e[kr.GraphicType].value[0]),void 0!==e[kr.ReferencedFrameofReferenceUID]&&(t.referencedFrameofReferenceUID=e[kr.ReferencedFrameofReferenceUID].value[0]),void 0!==e[kr.FiducialUID]&&(t.fiducialUID=e[kr.FiducialUID].value[0]),t}(e);else{const i=_r[t];void 0!==i?n.value=e[Wr[i]].value[0]:console.warn(\"Unsupported input ValueType: \"+t)}if(void 0!==e[Wr.ContentSequence]){n.contentSequence=[];for(const t of e[Wr.ContentSequence].value)n.contentSequence.push(Jr(t))}return n}function $r(e){let t={};if(void 0!==e.relationshipType&&(t.RelationshipType=e.relationshipType),void 0!==e.valueType&&(t.ValueType=e.valueType),void 0!==e.conceptNameCode&&(t.ConceptNameCodeSequence={value:[Wt(e.conceptNameCode)]}),\"CODE\"===e.valueType)t.ConceptCodeSequence={value:[Wt(e.value)]};else if(e.valueType===Zr.num)t={...t,...wr(e.value)};else if(e.valueType===Zr.image)t={...t,...Er(e.value)};else if(e.valueType===Zr.composite)t={...t,...xr(e.value)};else if(e.valueType===Zr.scoord)t={...t,...Gr(e.value)};else if(e.valueType===Zr.scoord3d)t={...t,...zr(e.value)};else{const n=_r[e.valueType];void 0!==n?t[n]=e.value:console.warn(\"Unsupported output ValueType: \"+e.valueType)}if(void 0!==e.contentSequence){t.ContentSequence={value:[]};for(const n of e.contentSequence)t.ContentSequence.value.push($r(n))}return t}function eo(e,t,n){const i=function(e){const t=rn[e];let n;return void 0!==t&&(n=Zt(t.key,t.scheme)),n}(e);if(void 0===i)return;const r=new Kr(Zr.num);r.relationshipType=Yr,r.conceptNameCode=i;const o=new Ir;o.numericValue=t,o.measurementUnitsCode=function(e){const t=an[e];let n;return void 0!==t?n=Zt(t,\"UCUM\"):void 0===t&&(n=Zt(\"1\",\"UCUM\")),n}(n);const a=new Pr;return a.measuredValue=o,r.value=a,r}class to{#$;getWarning(){return this.#$}checkElements(e){this.#$=void 0;const t=Jr(e);return void 0!==t.conceptNameCode?t.conceptNameCode.value!==_t().value&&(this.#$=\"Not a measurement group\"):this.#$=\"No root concept name code\",this.#$}#Lo(e){const t=new Bi;t.mathShape=function(e){const t=e.graphicData.length;if(t%2!=0)throw new Error(\"Expecting even number of coordinates in scroord data\");const n=[];for(let i=0;i<t;i+=2)n.push(new F(parseFloat(e.graphicData[i]),parseFloat(e.graphicData[i+1])));let i=!1;const r=n.length;if(r>2){const e=n[0],t=n[r-1];i=e.equals(t)}let o;if(e.graphicType===Ur){if(1!==n.length)throw new Error(\"Expecting 1 point for point\");o=n[0]}else if(e.graphicType===Vr){if(2!==n.length)throw new Error(\"Expecting 2 points for circles\");const e=n[0],t=n[1].getDistance(e);o=new pi(e,t)}else if(e.graphicType===Nr){if(4!==n.length)throw new Error(\"Expecting 4 points for ellipses\");const e=n[0].getDistance(n[1])/2,t=n[2].getDistance(n[3])/2,i=new F(n[0].getX()+e,n[0].getY());o=new Si(i,e,t)}else if(e.graphicType===Qr)if(i)if(5===n.length){const e=new zn(n[0],n[1]),t=new zn(n[1],n[2]),i=new zn(n[2],n[3]),r=new zn(n[3],n[4]);o=Yn(e,t)&&Yn(t,i)&&Yn(i,r)?new ci(n[0],n[2]):new di(n.slice(0,-1))}else o=new di(n.slice(0,-1));else 2===n.length?o=new zn(n[0],n[1]):3===n.length&&(o=new hi([n[0],n[1],n[2]]));return o}(e.value),t.id=et(),t.textExpr=\"\";for(const n of e.contentSequence){if(n.valueType===Zr.image&&n.relationshipType===jr&&Ht(n.conceptNameCode,Jt())&&(t.referenceSopUID=n.value.referencedSOPSequence.referencedSOPInstanceUID),n.valueType===Zr.uidref&&n.relationshipType===Xr&&Ht(n.conceptNameCode,$t())&&(t.id=n.value),n.valueType===Zr.text&&n.relationshipType===Xr&&Ht(n.conceptNameCode,en())&&(t.textExpr=n.value,void 0!==n.contentSequence))for(const e of n.contentSequence)e.valueType===Zr.scoord&&e.relationshipType===Xr&&Ht(e.conceptNameCode,tn())&&(t.labelPosition=new F(e.value.graphicData[0],e.value.graphicData[1]));if(n.valueType===Zr.text&&n.relationshipType===Xr&&Ht(n.conceptNameCode,nn())&&(t.colour=n.value),n.valueType===Zr.scoord&&n.relationshipType===Xr&&Ht(n.conceptNameCode,tn())&&n.value.graphicType===Mr){const e=[];for(let t=0;t<n.value.graphicData.length;t+=2)e.push(new F(n.value.graphicData[t],n.value.graphicData[t+1]));t.referencePoints=e}if(n.valueType===Zr.scoord3d&&n.relationshipType===Xr&&Ht(n.conceptNameCode,Kt())&&n.value.graphicType===Mr){const e=n.value.graphicData,i=[],r=Math.floor(e.length/3);for(let t=0;t<r;++t){const n=3*t;i.push(new E(e[n],e[n+1],e[n+2]))}t.planePoints=i}if(n.valueType===Zr.num&&n.relationshipType===Yr){const e=on(n.conceptNameCode);if(void 0===e)continue;const i=n.value.measuredValue,r=sn(i.measurementUnitsCode);void 0===t.quantification&&(t.quantification={}),t.quantification[e]={value:i.numericValue,unit:r}}}return t}create(e){const t=[],n=Jr(e);for(const e of n.contentSequence)e.valueType===Zr.scoord&&t.push(this.#Lo(e));const i=new Jn(t),r=function(t){let n;const i=e[t];return void 0!==i&&(n=i.value[0]),n};i.setMetaValue(\"StudyInstanceUID\",r(\"0020000D\")),i.setMetaValue(\"Modality\",r(\"00080060\")),i.setMetaValue(\"PatientName\",r(\"00100010\")),i.setMetaValue(\"PatientID\",r(\"00100020\")),i.setMetaValue(\"PatientBirthDate\",r(\"00100030\")),i.setMetaValue(\"PatientSex\",r(\"00100040\"));const o=e[\"00081115\"];if(void 0!==o){const e=o.value[0][\"0020000E\"];void 0!==e&&i.setMetaValue(\"ReferencedSeriesSequence\",{value:[{SeriesInstanceUID:e.value[0]}]})}return i}#Po(e){const t=new Kr(Zr.scoord);t.relationshipType=Yr,e.mathShape instanceof zn?t.conceptNameCode=Zt(\"121055\",\"DCM\"):t.conceptNameCode=Zt(\"111030\",\"DCM\"),t.value=function(e){const t=new Br;if(e instanceof F)t.graphicData=[e.getX().toString(),e.getY().toString()],t.graphicType=Ur;else if(e instanceof zn)t.graphicData=[e.getBegin().getX().toString(),e.getBegin().getY().toString(),e.getEnd().getX().toString(),e.getEnd().getY().toString()],t.graphicType=Qr;else if(e instanceof hi){t.graphicData=[];for(let n=0;n<3;++n)t.graphicData.push(e.getPoint(n).getX().toString()),t.graphicData.push(e.getPoint(n).getY().toString());t.graphicType=Qr}else if(e instanceof di){t.graphicData=[];for(let n=0;n<e.getLength();++n)t.graphicData.push(e.getPoint(n).getX().toString()),t.graphicData.push(e.getPoint(n).getY().toString());const n=e.getPoint(0);t.graphicData.push(n.getX().toString()),t.graphicData.push(n.getY().toString()),t.graphicType=Qr}else if(e instanceof pi){const n=e.getCenter(),i=new F(n.getX()+e.getRadius(),n.getY());t.graphicData=[n.getX().toString(),n.getY().toString(),i.getX().toString(),i.getY().toString()],t.graphicType=Vr}else if(e instanceof Si){const n=e.getCenter(),i=e.getA(),r=e.getB();t.graphicData=[(n.getX()-i).toString(),n.getY().toString(),(n.getX()+i).toString(),n.getY().toString(),n.getX().toString(),(n.getY()-r).toString(),n.getX().toString(),(n.getY()+r).toString()],t.graphicType=Nr}else if(e instanceof ci){const n=e.getBegin(),i=e.getEnd();t.graphicData=[n.getX().toString(),n.getY().toString(),n.getX().toString(),i.getY().toString(),i.getX().toString(),i.getY().toString(),i.getX().toString(),n.getY().toString(),n.getX().toString(),n.getY().toString()],t.graphicType=Qr}return t}(e.mathShape);const n=[],i=new Kr(Zr.image);i.relationshipType=jr,i.conceptNameCode=Jt();const r=new Ar;r.referencedSOPClassUID=\"\",r.referencedSOPInstanceUID=e.referenceSopUID;const o=new Fr;o.referencedSOPSequence=r,i.value=o,n.push(i);const a=new Kr(Zr.uidref);a.relationshipType=Xr,a.conceptNameCode=$t(),a.value=e.id,n.push(a);const s=new Kr(Zr.text);if(s.relationshipType=Xr,s.conceptNameCode=en(),s.value=e.textExpr,void 0!==e.labelPosition){const t=new Kr(Zr.scoord);t.relationshipType=Xr,t.conceptNameCode=tn();const n=new Br;n.graphicType=Ur;const i=[e.labelPosition.getX().toString(),e.labelPosition.getY().toString()];n.graphicData=i,t.value=n,s.contentSequence=[t]}n.push(s);const l=new Kr(Zr.text);if(l.relationshipType=Xr,l.conceptNameCode=nn(),l.value=e.colour,n.push(l),void 0!==e.referencePoints){const t=new Kr(Zr.scoord);t.relationshipType=Xr,t.conceptNameCode=tn();const i=new Br;i.graphicType=Mr;const r=[];for(const t of e.referencePoints)r.push(t.getX().toString()),r.push(t.getY().toString());i.graphicData=r,t.value=i,n.push(t)}if(void 0!==e.planePoints){const t=new Kr(Zr.scoord3d);t.relationshipType=Xr,t.conceptNameCode=Kt();const i=new Hr;i.graphicType=Mr;const r=[];for(const t of e.planePoints)r.push(t.getX().toString()),r.push(t.getY().toString()),r.push(t.getZ().toString());i.graphicData=r,t.value=i,n.push(t)}if(void 0!==e.quantification)for(const t in e.quantification){const i=eo(t,e.quantification[t].value,e.quantification[t].unit);void 0!==i&&n.push(i)}return t.contentSequence=n,t}toDicom(e,t){let n=e.getMeta();n.TransferSyntaxUID=\"1.2.840.10008.1.2.1\",n.SOPClassUID=\"1.2.840.10008.5.1.4.1.1.88.11\",n.MediaStorageSOPClassUID=\"1.2.840.10008.5.1.4.1.1.88.11\",n.CompletionFlag=\"PARTIAL\",n.VerificationFlag=\"UNVERIFIED\";const i=new Date;n.ContentDate=dt(ct(i)),n.ContentTime=ht(ut(i));const r=[];for(const t of e.getList())r.push(this.#Po(t));if(0!==r.length){const e=new Kr(Zr.container);e.conceptNameCode=_t(),e.contentSequence=r,n={...n,...$r(e)}}return void 0!==t&&function(e,t){const n=Object.keys(t);for(const i of n)void 0!==e[i]&&c.trace(\"Overwritting tag: \"+i),e[i]=t[i]}(n,t),Bt(n)}}class no{meta;image;annotationGroup;constructor(e){this.meta=e}}class io{#wo={};#Oo=-1;#Oe=new He;getNextDataId(){return++this.#Oo,this.#Oo.toString()}getDataIds(){return Object.keys(this.#wo)}reset(){this.#wo={}}get(e){return this.#wo[e]}getDataIdsFromSopUids(e){const t=[];if(void 0===e||0===e.length)return t;const n=Object.keys(this.#wo);for(const i of n)void 0!==this.#wo[i].image&&this.#wo[i].image.containsImageUids(e)&&t.push(i);return t}setImage(e,t){this.#wo[e].image=t,this.#Re({type:\"dataimageset\",value:[t],dataid:e}),t.addEventListener(\"imagecontentchange\",this.#Ao(e)),t.addEventListener(\"imagegeometrychange\",this.#Ao(e))}add(e,t){if(void 0!==this.#wo[e])throw new Error(\"Data id already used in storage: \"+e);this.#wo[e]=t,this.#Re({type:\"dataadd\",dataid:e}),void 0!==t.image&&(t.image.addEventListener(\"imagecontentchange\",this.#Ao(e)),t.image.addEventListener(\"imagegeometrychange\",this.#Ao(e))),void 0!==t.annotationGroup&&(t.annotationGroup.addEventListener(\"annotationadd\",this.#Ao(e)),t.annotationGroup.addEventListener(\"annotationupdate\",this.#Ao(e)),t.annotationGroup.addEventListener(\"annotationremove\",this.#Ao(e)))}remove(e){if(void 0!==this.#wo[e]){const t=this.#wo[e].image;void 0!==t&&(t.removeEventListener(\"imagecontentchange\",this.#Ao(e)),t.removeEventListener(\"imagegeometrychange\",this.#Ao(e)));const n=this.#wo[e].annotationGroup;void 0!==n&&(n.removeEventListener(\"annotationadd\",this.#Ao(e)),n.removeEventListener(\"annotationupdate\",this.#Ao(e)),n.removeEventListener(\"annotationremove\",this.#Ao(e))),delete this.#wo[e],this.#Re({type:\"dataremove\",dataid:e})}}update(e,t){if(void 0===this.#wo[e])throw new Error(\"Cannot find data to update: \"+e);const n=this.#wo[e];void 0!==n.image&&void 0!==t.image&&n.image.appendSlice(t.image);let i=\"\";i=void 0!==t.meta[\"00020010\"]?\"00200013\":\"imageUid\",n.meta=function(e,t,n,i){const r={};if(!n)throw new Error(\"Cannot merge object with an undefined id key: \"+n);if(!Object.prototype.hasOwnProperty.call(e,n))throw new Error(\"Id key not found in first object while merging: \"+n+\", obj: \"+e);if(!Object.prototype.hasOwnProperty.call(t,n))throw new Error(\"Id key not found in second object while merging: \"+n+\", obj: \"+t);let o=!1;if(Object.prototype.hasOwnProperty.call(e[n],\"merged\")&&e[n].merged&&(o=!0),!Object.prototype.hasOwnProperty.call(e[n],i))throw new Error(\"Id value not found in first object while merging: \"+n+\", valueKey: \"+i+\", ojb: \"+e);if(!Object.prototype.hasOwnProperty.call(t[n],i))throw new Error(\"Id value not found in second object while merging: \"+n+\", valueKey: \"+i+\", ojb: \"+t);let a=e[n][i];const s=t[n][i][0];if(r[n]=e[n],o){for(let e=0;e<a.length;++e)if(a[e]===s)throw new Error(\"The first object already contains id2: \"+s+\", id1: \"+a);r[n][i].push(s)}else{if(a=a[0],a===s)throw new Error(\"Cannot merge object with same ids: \"+a+\", id2: \"+s);r[n][i].push(s),r[n].merged=!0}const l=Object.keys(e),c=Object.keys(t).filter((function(e){return l.indexOf(e)<0})),u=l.concat(c);for(let l=0;l<u.length;++l){const c=u[l];if(c!==n){let n,l,u,d,h;if(Object.prototype.hasOwnProperty.call(e,c)&&(n=e[c],Object.prototype.hasOwnProperty.call(n,i)&&(l=n[i])),Object.prototype.hasOwnProperty.call(t,c)&&(u=t[c],Object.prototype.hasOwnProperty.call(u,i)&&(d=u[i])),void 0!==n?h=n:void 0!==u&&(h=u),!z(l,d))if(o){if(Array.isArray(l)){h[i]={};for(let e=0;e<a.length;++e)h[i][a[e]]=l}else h[i]=l;void 0===h[i]&&(h[i]={}),h[i][s]=d}else{const e={};e[a]=l,e[s]=d,h[i]=e}r[c]=h}}return r}(n.meta,t.meta,i,\"value\"),this.#Re({type:\"dataupdate\",dataid:e})}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re=e=>{this.#Oe.fireEvent(e)};#Ao(e){return t=>{t.dataid=e,this.#Re(t)}}}class ro{#bo;setOptions(e){this.#bo=e}#To=null;#xo=[];#Ro=[];#Fo=[];#Eo=[];#qo(e){let t;const n=e[\"00080060\"];if(void 0!==n){const e=n.value[0];\"SEG\"===e?t=new Fn:\"SR\"===e&&(t=new to)}return void 0===t&&void 0!==e[\"7FE00010\"]&&(t=new Pt),t}#Uo(e,t){const n=this.#xo[e].getDicomElements(),i=this.#Eo[e];if(void 0!==i)try{const r=new no(n);i instanceof to?r.annotationGroup=i.create(n):r.image=i.create(n,this.#Ro[e],this.#bo.numberOfFiles),this.onloaditem({data:r,source:t,warn:i.getWarning()})}catch(e){this.onerror({error:e,source:t}),this.onloadend({source:t})}}#Mo(e,t){this.onprogress({lengthComputable:!0,loaded:100,total:100,index:e,source:t}),this.#Uo(e,t),this.onload({source:t}),this.onloadend({source:t})}#Qo(e,t,n){const i=this.#xo[e],r={bitsAllocated:i.getDicomElements()[\"00280100\"].value[0],isSigned:1===i.getDicomElements()[\"00280103\"].value[0]},o=i.getDicomElements()[\"00280011\"],a=i.getDicomElements()[\"00280010\"];void 0!==o&&void 0!==a&&(r.sliceSize=o.value[0]*a.value[0]);const s=i.getDicomElements()[\"00280002\"];void 0!==s&&(r.samplesPerPixel=s.value[0]);const l=i.getDicomElements()[\"00280006\"];void 0!==l&&(r.planarConfiguration=l.value[0]);const c=t.length;null===this.#To&&(this.#To=new Cr(n,c),this.#To.ondecodeditem=e=>{this.#Vo(e),e.itemNumber+1===e.numberOfItems&&(this.onload(e),this.onloadend(e))},this.#To.onerror=this.onerror,this.#To.onabort=this.onabort);for(let n=0;n<c;++n)this.#To.decode(t[n],r,{itemNumber:n,numberOfItems:c,index:e})}#Vo(e){this.onprogress({lengthComputable:!0,loaded:e.itemNumber+1,total:e.numberOfItems,index:e.index,source:origin});const t=e.index,n=e.data[0];if(1!==e.numberOfItems){if(void 0===this.#Fo[t]){this.#Fo[t]=n.length;const i=e.numberOfItems*this.#Fo[t];try{this.#Ro[t]=new n.constructor(i)}catch(e){if(e instanceof RangeError){const e=Math.floor(Math.log(i)/Math.log(2));c.error(\"Cannot allocate \"+n.constructor.name+\" of size: \"+i+\" (>2^\"+e+\") for decompressed data.\")}return this.#To.abort(),this.onerror({error:e,source:origin}),void this.onloadend({source:origin})}}n.length!==this.#Fo[t]&&c.warn(\"Unsupported varying decompressed data size: \"+n.length+\" != \"+this.#Fo[t]),this.#Ro[t].set(n,this.#Fo[t]*e.itemNumber)}else this.#Ro[t]=n;0===e.itemNumber&&this.#Uo(t,origin)}#No(e,t){this.#Uo(e,t),this.onload({source:t}),this.onloadend({source:t})}#Bo(e,t){const n=this.#xo[e],i=n.getDicomElements()[\"7FE00010\"].value;n.getDicomElements()[\"7FE00010\"].value=[],this.#Ro[e]=i[0];const r=function(e){let t;return qe(e)?t=\"jpeg2000\":Fe(e)?t=\"jpeg-baseline\":Ee(e)?t=\"jpeg-lossless\":Ue(e)&&(t=\"rle\"),t}(n.getDicomElements()[\"00020010\"].value[0]);void 0!==r?this.#Qo(e,i,r):this.#Mo(e,t)}convert(e,t,n){this.onloadstart({source:t,index:n});const i=new ke;let r;void 0!==this.#bo.defaultCharacterSet&&i.setDefaultCharacterSet(this.#bo.defaultCharacterSet);try{i.parse(e),r=this.#qo(i.getDicomElements()),void 0!==r&&r.checkElements(i.getDicomElements())}catch(e){return this.onerror({error:e,source:t}),void this.onloadend({source:t})}this.#xo[n]=i,this.#Eo[n]=r,r instanceof to?this.#No(n,t):this.#Bo(n,t)}abort(){this.#To&&this.#To.abort()}onloadstart(e){}onloaditem(e){}onprogress(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}class oo{#$r=null;#to=null;#no=0;#io=0;#F;getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}#oo(e){this.#$r=e,this.#no=0,this.#io=0,this.#so()}#co(e){this.#to=e}#so(){this.#to=null}#uo=e=>{this.#no++,this.#no===this.#$r.length&&this.onload({source:this.#$r})};#do=e=>{this.#io++,this.#io===this.#$r.length&&this.onloadend({source:this.#$r})};load(e){if(void 0===e||0===e.length)return;this.#oo(e),this.onloadstart({source:e});const t=new cr(this.onprogress);t.setNToLoad(e.length),t.setNumberOfDimensions(1);const n=[];for(let e=0;e<uo.length;++e)n.push(new uo[e]);let i=e[0],r=null,o=!1;for(let a=0;a<n.length;++a)if(r=n[a],r.canLoadMemory(i)){o=!0,r.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),r.onprogress=t.getUndefinedMonoProgressHandler(0),r.onloaditem=this.onloaditem,r.onload=this.#uo,r.onloadend=this.#do,r.onerror=this.onerror,r.onabort=this.onabort,this.#co(r);break}if(!o)throw new Error(\"No loader found for data: \"+i.filename);for(let t=0;t<e.length;++t){if(i=e[t],!r.canLoadMemory(i))throw new Error(\"Input data of different type: \"+i.filename);r.load(i.data,i.filename,t)}}abort(){this.#to&&this.#to.isLoading()&&this.#to.abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}function ao(e){const t=e.data.length,n=new Uint8Array(t/4*3);let i=0;for(let r=0;r<t;r+=4)n[i]=e.data[r],n[i+1]=e.data[r+1],n[i+2]=e.data[r+2],i+=3;return n}function so(e,t,n,i,r,o){const a=new Ze([e,t,1]),s=new nt([1,1,1]),l=new E(0,0,n),c=new it(l,a,s),u=new Un(c,i,[o]);u.setPhotometricInterpretation(\"RGB\");const d={BitsStored:8};return void 0!==r&&(d.numberOfFiles=r),u.setMeta(d),u}var lo=o(654),co=o.n(lo);const uo=[class{#bo={};#Go=!1;setOptions(e){this.#bo=e}isLoading(){return this.#Go}#ko=new ro;load(e,t,n){this.#Go||(this.#ko.setOptions(this.#bo),this.#ko.onloadstart=this.onloadstart,this.#ko.onprogress=this.onprogress,this.#ko.onloaditem=this.onloaditem,this.#ko.onload=this.onload,this.#ko.onloadend=e=>{this.#Go=!1,this.onloadend(e)},this.#ko.onerror=e=>{e.source=t,this.onerror(e)},this.#ko.onabort=this.onabort),this.#Go=!0,this.#ko.convert(e,t,n)}abort(){this.#Go=!1,this.#ko.abort()}canLoadFile(e){const t=N(e.name);return null===t||\"dcm\"===t}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&\"dicom\"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return\"Accept\"===e.name},n=t.requestHeaders.find(e);if(void 0!==n){const e=\"application/dicom\";return M(n.value,e)&&\"+\"!==n.value[e.length]}}}const n=or(e),i=N(n.pathname),r=null===i,o=\"dcm\"===i,a=n.searchParams.get(\"contentType\");return null!=a?\"application/dicom\"===a:r||o}canLoadMemory(e){const t=e[\"Content-Type\"];if(void 0!==t&&t.startsWith(\"application/dicom\"))return!0;if(void 0!==e.filename){const t=new File([\"from memory\"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return ho.ArrayBuffer}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#Go=!1;setOptions(e){}isLoading(){return this.#Go}load(e,t,n){this.#Go=!0,this.onloadstart({source:t});try{this.onprogress({lengthComputable:!0,loaded:100,total:100,index:n,source:t});const i={data:e,source:t};this.onloaditem(i),this.onload(i)}catch(e){this.onerror({error:e,source:t})}finally{this.#Go=!1,this.onloadend({source:t})}}abort(){this.#Go=!1,this.onabort({}),this.onloadend({})}canLoadFile(e){return\"json\"===N(e.name)}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&\"json\"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return\"Accept\"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return M(n.value,\"application/json\")||M(n.value,\"application/dicom+json\")}}return\"json\"===N(or(e).pathname)}canLoadMemory(e){const t=e[\"Content-Type\"];if(void 0!==t&&t.startsWith(\"application/json\"))return!0;if(void 0!==e.filename){const t=new File([\"from memory\"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return ho.Text}loadUrlAs(){return 0}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#Go=!1;setOptions(e){}isLoading(){return this.#Go}load(e,t,n){this.onloadstart({source:t}),this.#Go=!0;const i=new oo;i.onprogress=e=>{e.loaded=50+e.loaded/2,e.index=n,this.onprogress(e)},i.onloaditem=this.onloaditem,i.onload=this.onload,i.onloadend=e=>{this.#Go=!1,this.onloadend(e)},i.onerror=this.onerror,i.onabort=this.onabort,i.load(function(e){const t=new Uint8Array(e),n=[];if(0===t.length)return n;const i=X(new Uint8Array([13,10,13,10]));let r=Y(t,i,0);if(void 0===r)throw new Error(\"Can't find the end of the first multipart header\");const o=W(t.slice(0,r)).split(\"\\r\\n\");let a;for(let e=0;e<o.length;++e)if(\"-\"===o[e][0]&&\"-\"===o[e][1]){a=o[e];break}if(void 0===a)throw new Error(\"Can't find the boundary between multi-parts\");const s=X(B(a)),l=a.length;let c=Y(t,s,0);for(;void 0!==r;){const e={},o=W(t.slice(c+l,r)).split(\"\\r\\n\");for(let t=0;t<o.length;++t){const n=o[t],i=n.indexOf(\":\");if(-1!==i){const t=n.substring(0,i).trim(),r=n.substring(i+1).trim();e[t]=r}}if(c=Y(t,s,r),void 0===c)break;const a=r+4,u=c-2;e.data=a<u?t.slice(a,u).buffer:new Uint8Array,n.push(e),r=Y(t,i,c+l)}return n}(e))}abort(){this.#Go=!1,this.onabort({}),this.onloadend({})}canLoadFile(e){return!1}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&\"multipart\"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return\"Accept\"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return M(n.value,\"multipart/related\")}}return!1}canLoadMemory(e){return!1}loadFileAs(){return ho.ArrayBuffer}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#Ho=!1;setOptions(e){}isLoading(){return!0}#zo(e,t){let n=t;n&&\"jpg\"!==n||(n=\"jpeg\");const i=new Blob([e],{type:\"image/\"+n});return window.URL.createObjectURL(i)}load(e,t,n){this.#Ho=!1;const i=new Image;if(i.onload=()=>{try{if(!this.#Ho){this.onprogress({lengthComputable:!0,loaded:100,total:100,index:n,source:t});const e=function(e,t,n){const i=e.width,r=e.height,o=document.createElement(\"canvas\");o.width=i,o.height=r;const a=o.getContext(\"2d\");a.drawImage(e,0,0);const s=a.getImageData(0,0,i,r),l={};\"string\"==typeof t?l.origin={value:t}:(l.fileName={value:t.name},l.fileType={value:t.type},l.fileLastModifiedDate={value:t.lastModified}),l.imageWidth={value:i},l.imageHeight={value:r};const c=n||0;return l.imageUid={value:c},{data:{image:so(i,r,c,ao(s),1,c.toString()),info:l},source:t}}(i,t,n);this.onloaditem(e),this.onload(e)}}catch(e){this.onerror({error:e,source:t})}finally{this.onloadend({source:t})}},\"string\"==typeof e)i.src=e;else if(\"string\"==typeof t){const n=t.split(\".\").pop().toLowerCase();i.src=this.#zo(e,n)}}abort(){this.#Ho=!0,this.onabort({}),this.onloadend({})}canLoadFile(e){return void 0!==e.type&&null!==e.type.match(\"image.*\")}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&\"rawimage\"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return\"Accept\"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return M(n.value,\"image/\")}}const n=or(e),i=N(n.pathname),r=\"jpeg\"===i||\"jpg\"===i||\"png\"===i||\"gif\"===i,o=n.searchParams.get(\"contentType\");return null!=o?\"image/jpeg\"===o||\"image/png\"===o||\"image/gif\"===o:r}canLoadMemory(e){if(void 0!==e.filename){const t=new File([\"from memory\"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return ho.DataURL}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{setOptions(e){}isLoading(){return!0}#zo(e,t){const n=new Uint8Array(e);let i=\"\";for(let e=0;e<n.byteLength;++e)i+=String.fromCharCode(n[e]);return\"data:video/\"+t+\";base64,\"+window.btoa(i)}load(e,t,n){const i=document.createElement(\"video\");if(\"string\"==typeof t){const n=t.split(\".\").pop().toLowerCase();i.src=this.#zo(e,n)}else i.src=e;i.onloadedmetadata=e=>{try{!function(e,t,n,i,r,o,a){const s=e.videoWidth,l=e.videoHeight,c=Math.ceil(30*e.duration),u={};\"string\"==typeof o?u.origin={value:o}:(u.fileName={value:o.name},u.fileType={value:o.type},u.fileLastModifiedDate={value:o.lastModified}),u.imageWidth={value:s},u.imageHeight={value:l},u.numberOfFrames={value:c},u.imageUid={value:0};const d=document.createElement(\"canvas\");d.width=s,d.height=l;const h=d.getContext(\"2d\");e.addEventListener(\"seeked\",(function d(m){(function(){i({lengthComputable:!0,loaded:S,total:c,index:a,source:o}),h.drawImage(e,0,0);const n=ao(h.getImageData(0,0,s,l));0===S?(g=so(s,l,1,n,c,a.toString()),t({data:{image:g,info:u},source:o})):g.appendFrameBuffer(n,S),++S})(),p+=1/30,p<=m.target.duration?this.currentTime=p:(n({source:o}),r({source:o}),e.removeEventListener(\"seeked\",d))}),!1);let S=0,g=null,p=0;e.currentTime=p}(e.target,this.onloaditem,this.onload,this.onprogress,this.onloadend,t,n)}catch(e){this.onerror({error:e,source:t}),this.onloadend({source:t})}}}abort(){this.onabort({}),this.onloadend({})}canLoadFile(e){return void 0!==e.type&&null!==e.type.match(\"video.*\")}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&\"rawvideo\"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return\"Accept\"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return M(n.value,\"video/\")}}const n=N(or(e).pathname);return\"mp4\"===n||\"ogg\"===n||\"webm\"===n}canLoadMemory(e){if(void 0!==e.filename){const t=new File([\"from memory\"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return ho.DataURL}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}},class{#Go=!1;setOptions(e){}isLoading(){return this.#Go}#Wo=\"\";#Yo=[];#Xo=null;#jo(e,t,n){this.#Yo.push({filename:this.#Wo,data:e});const i=100*this.#Yo.length/this.#Xo.length;if(this.onprogress({lengthComputable:!0,loaded:i/2,total:100,index:n,item:{loaded:i,total:100,source:t}}),this.#Yo.length<this.#Xo.length){const e=this.#Yo.length;this.#Wo=this.#Xo[e].name,this.#Xo[e].async(\"arrayBuffer\").then((e=>{this.#jo(e,t,n)}))}else{const e=new oo;e.onprogress=e=>{e.loaded=50+e.loaded/2,e.index=n,this.onprogress(e)},e.onloaditem=this.onloaditem,e.onload=this.onload,e.onloadend=e=>{this.#Go=!1,this.onloadend(e)},e.onerror=this.onerror,e.onabort=this.onabort,e.load(this.#Yo)}}load(e,t,n){this.onloadstart({source:t}),this.#Go=!0,co().loadAsync(e).then((e=>{this.#Yo=[],this.#Xo=e.file(/.*\\.dcm/);const i=this.#Yo.length;this.#Wo=this.#Xo[i].name,this.#Xo[i].async(\"arrayBuffer\").then((e=>{this.#jo(e,t,n)}))}))}abort(){this.#Go=!1,this.onabort({}),this.onloadend({})}canLoadFile(e){return\"zip\"===N(e.name)}canLoadUrl(e,t){if(void 0!==t){if(void 0!==t.forceLoader&&\"zip\"===t.forceLoader)return!0;if(void 0!==t.requestHeaders){const e=function(e){return\"Accept\"===e.name},n=t.requestHeaders.find(e);if(void 0!==n)return M(n.value,\"application/zip\")}}return\"zip\"===N(or(e).pathname)}canLoadMemory(e){const t=e[\"Content-Type\"];if(void 0!==t&&t.startsWith(\"application/zip\"))return!0;if(void 0!==e.filename){const t=new File([\"from memory\"],e.filename);return this.canLoadFile(t)}return!1}loadFileAs(){return ho.ArrayBuffer}loadUrlAs(){return 1}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}],ho={Text:0,ArrayBuffer:1,DataURL:2};class So{#$r=null;#Zo=[];#to=null;#no=0;#io=0;#F;getDefaultCharacterSet(){return this.#F}setDefaultCharacterSet(e){this.#F=e}#oo(e){this.#$r=e,this.#no=0,this.#io=0,this.#_o(),this.#so()}#Ko(e){this.#Zo.push(e)}#_o(){this.#Zo=[]}#co(e){this.#to=e}#so(){this.#to=null}#uo=e=>{this.#no++,this.#no===this.#$r.length&&this.onload({source:this.#$r})};#do=e=>{this.#io++,this.#io===this.#$r.length&&this.onloadend({source:this.#$r})};#ho(e,t){return n=>{n.source=t,e(n)}}#po(e,t,n){return i=>{e.load(i.target.result,t,n)}}load(e){if(void 0===e||0===e.length)return;this.#oo(e),this.onloadstart({source:e});const t=new cr(this.onprogress);t.setNToLoad(e.length);const n=[];for(let e=0;e<uo.length;++e)n.push(new uo[e]);let i=e[0],r=null,o=!1;for(let a=0;a<n.length;++a)if(r=n[a],r.canLoadFile(i)){o=!0,r.setOptions({numberOfFiles:e.length,defaultCharacterSet:this.getDefaultCharacterSet()}),r.onprogress=t.getUndefinedMonoProgressHandler(1),r.onloaditem=this.onloaditem,r.onload=this.#uo,r.onloadend=this.#do,r.onerror=this.onerror,r.onabort=this.onabort,this.#co(r);break}if(!o)throw new Error(\"No loader found for file: \"+i.name);for(let n=0;n<e.length;++n){if(i=e[n],!r.canLoadFile(i))throw new Error(\"Input file of different type: \"+i);const o=new FileReader;this.#Ko(o),o.onprogress=this.#ho(t.getMonoProgressHandler(n,0),i),o.onload=this.#po(r,i,n);const a=this.#ho(this.onerror,i);o.onerror=e=>{this.#do(),a(e)};const s=this.#ho(this.onabort,i);o.onabort=e=>{this.#do(),s(e)},r.loadFileAs()===ho.Text?o.readAsText(i):r.loadFileAs()===ho.DataURL?o.readAsDataURL(i):r.loadFileAs()===ho.ArrayBuffer&&o.readAsArrayBuffer(i)}}abort(){for(let e=0;e<this.#Zo.length;++e)1===this.#Zo[e].readyState&&this.#Zo[e].abort();this.#to&&this.#to.isLoading()&&this.#to.abort()}onloadstart(e){}onprogress(e){}onloaditem(e){}onload(e){}onloadend(e){}onerror(e){}onabort(e){}}class go{#F;#Jo={};constructor(e){this.#F=e}loadFiles(e,t){\"json\"===e[0].name.split(\".\").pop().toLowerCase()?this.#$o(e[0],t):this.#ea(e,t)}loadURLs(e,t,n){\"json\"===e[0].split(\".\").pop().toLowerCase()?this.#ta(e[0],t,n):this.#na(e,t,n)}loadImageObject(e,t){const n=new oo;this.#ia(e,n,\"image\",t)}getLoadingDataIds(){return Object.keys(this.#Jo)}abort(e){void 0!==this.#Jo[e]&&(this.#Jo[e].loader.abort(),delete this.#Jo[e])}#ea(e,t){const n=new So;n.setDefaultCharacterSet(this.#F),this.#ia(e,n,\"image\",t)}#na(e,t,n){const i=new ur;i.setDefaultCharacterSet(this.#F),this.#ia(e,i,\"image\",t,n)}#$o(e,t){const n=new So;this.#ia([e],n,\"state\",t)}#ta(e,t,n){const i=new ur;this.#ia([e],i,\"state\",t,n)}#ia(e,t,n,i,r){const o={loadtype:n,dataid:i};t.onloadstart=e=>{this.#Jo[i]={loader:t,isFirstItem:!0},this.#ho(this.onloadstart,o)(e)},t.onprogress=this.#ho(this.onprogress,o),t.onloaditem=e=>{const t={loadtype:n,dataid:i};void 0!==this.#Jo[i]&&(t.isfirstitem=this.#Jo[i].isFirstItem),this.#ho(this.onloaditem,t)(e),void 0!==this.#Jo[i]&&this.#Jo[i].isFirstItem&&(this.#Jo[i].isFirstItem=!1)},t.onload=this.#ho(this.onload,o),t.onloadend=e=>{delete this.#Jo[i],this.#ho(this.onloadend,o)(e)},t.onerror=this.#ho(this.onerror,o),t.onabort=this.#ho(this.onabort,o);try{t.load(e,r)}catch(e){return this.onerror({error:e,dataid:i}),void this.onloadend({dataid:i})}}#ho(e,t){return function(n){const i=Object.keys(t);for(let e=0;e<i.length;++e){const r=i[e];n[r]=t[r]}e(n)}}onloadstart(e){}onprogress(e){}onload(e){}onloaditem(e){}onloadend(e){}onerror(e){}onabort(e){}}function po(e){return function(t){return Number(t).toPrecision(e)}}function mo(e){let t=\"\";for(let n=0;n<e;++n)0!==n&&(t+=\", \"),t+=\"{v\"+n+\"}\";return t}function fo(e,t){let n=e;for(let e=0;e<t.length;++e)n=n.replace(\"{v\"+e+\"}\",t[e]);return n}class Do{#tt;#rn;#ra;#oa=[];#aa;#sa=[];#la;#Oe=new He;constructor(e,t,n){this.#tt=e,this.#rn=t,this.#ra=n;const i=Object.keys(this.#ra);for(let e=0;e<i.length;++e){const t=this.#ra[i[e]];for(let e=0;e<t.length;++e){const n=t[e].event;void 0!==n&&(this.#oa.includes(n)||this.#oa.push(n))}}this.addAppListeners()}reset(){this.#sa=[],this.#la=void 0}addItemMeta(e){let t;if(void 0!==e[\"00020010\"])t=void 0!==e[\"00080018\"]?e[\"00080018\"].value[0]:e.length,this.#sa[t]=function(e,t){const n=[];let i;const r=e[\"00080060\"];if(void 0===r)return n;i=r.value[0];const o=t[i]||t[\"*\"];if(!o)return n;for(let t=0;t<o.length;++t){const i=JSON.parse(JSON.stringify(o[t])),r=i.tags;if(void 0!==r&&0!==r.length){const t=[];for(let n=0;n<r.length;++n)void 0!==e[r[n]]?t.push(e[r[n]].value):t.push(\"\");void 0!==i.format&&null!==i.format||(i.format=mo(t.length)),i.value=fo(i.format,t).trim()}n.push(i)}const a=e[\"00200020\"];if(void 0!==a&&2===a.value.length){const e=a.value[0],t=a.value[1];n.push({pos:\"cr\",value:e,format:\"{v0}\"}),n.push({pos:\"cl\",value:be(e),format:\"{v0}\"}),n.push({pos:\"bc\",value:t,format:\"{v0}\"}),n.push({pos:\"tc\",value:be(t),format:\"{v0}\"})}return n}(e,this.#ra);else{const n=Object.keys(e);for(let i=0;i<n.length;++i){const r=e[n[i]];if(\"imageUid\"===n[i]){t=r.value;break}}this.#sa[t]=function(e,t){const n=[],i=t.DOM;if(!i)return n;const r=Object.keys(e);for(let t=0;t<i.length;++t){const o=JSON.parse(JSON.stringify(i[t])),a=o.tags;if(void 0!==a&&0!==a.length){const t=[];for(let n=0;n<a.length;++n)for(let i=0;i<r.length;++i)a[n]===r[i]&&t.push(e[r[i]].value);void 0!==o.format&&null!==o.format||(o.format=mo(t.length)),o.value=fo(o.format,t).trim()}n.push(o)}return n}(e,this.#ra)}this.#la=t}#ca=e=>{e.dataid===this.#rn&&void 0!==e.data&&void 0!==e.data.imageUid&&this.#la!==e.data.imageUid&&(this.#la=e.data.imageUid,this.#ua(e))};#ua=e=>{if(e.dataid!==this.#rn)return;const t=this.#sa[this.#la];if(void 0!==t){for(let n=0;n<t.length;++n){let i;if(void 0!==t[n].tags)\"positionchange\"===e.type&&(i=t[n].value);else if(void 0!==t[n].event&&t[n].event===e.type){const r=t[n].format;let o=e.value;if(void 0!==t[n].precision){let e=null;e=\"round\"===t[n].precision?Math.round:po(t[n].precision),o=o.map(e)}i=fo(r,o)}void 0!==i&&(t[n].value=i)}this.#Re({type:\"valuechange\",data:t})}else console.warn(\"No slice overlay data for: \"+this.#la)};isListening(){return this.#aa}addAppListeners(){this.#tt.addEventListener(\"positionchange\",this.#ca);for(let e=0;e<this.#oa.length;++e)this.#tt.addEventListener(this.#oa[e],this.#ua);this.#aa=!0}removeAppListeners(){this.#tt.removeEventListener(\"positionchange\",this.#ca);for(let e=0;e<this.#oa.length;++e)this.#tt.removeEventListener(this.#oa[e],this.#ua);this.#aa=!1}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}#Re(e){this.#Oe.fireEvent(e)}}class yo{divId;orientation;colourMap;opacity;wlPresetName;windowCenter;windowWidth;constructor(e){this.divId=e}}class Co{options;constructor(e){this.options=e}}class vo{dataViewConfigs;tools;binders;viewOnFirstLoadItem;defaultCharacterSet;overlayConfig;rootDocument;constructor(e){this.dataViewConfigs=e}}class Io{#bo=null;#da=null;#ha=null;#Sa=null;#ga=null;#pa=null;#Hn=new ei;#ma={};#Oe=new He;getData(e){return this.#da.get(e)}getImage(e){let t;return void 0!==this.getData(e)&&(t=this.getData(e).image),t}setImage(e,t){this.#da.setImage(e,t)}addData(e){const t=this.#da.getNextDataId();return this.#da.add(t,e),t}getMetaData(e){let t;return void 0!==this.#da.get(e)&&(t=this.#da.get(e).meta),t}getDataIds(){return this.#da.getDataIds()}getDataIdsFromSopUids(e){return this.#da.getDataIdsFromSopUids(e)}canScroll(){return this.#ga.getActiveLayerGroup().getActiveViewLayer().getViewController().canScroll()}canWindowLevel(){return this.#ga.getActiveLayerGroup().getActiveViewLayer().getViewController().canWindowLevel()}getAddedScale(){return this.#ga.getActiveLayerGroup().getAddedScale()}getBaseScale(){return this.#ga.getActiveLayerGroup().getBaseScale()}getOffset(){return this.#ga.getActiveLayerGroup().getOffset()}getToolboxController(){return this.#ha}getActiveLayerGroup(){return this.#ga.getActiveLayerGroup()}setActiveLayerGroup(e){this.#ga.setActiveLayerGroup(e)}getViewLayersByDataId(e){return this.#ga.getViewLayersByDataId(e)}getViewLayers(e){return this.#ga.getViewLayers(e)}getDrawLayersByDataId(e){return this.#ga.getDrawLayersByDataId(e)}getDrawLayers(e){return this.#ga.getDrawLayers(e)}getLayerGroupByDivId(e){return this.#ga.getLayerGroupByDivId(e)}getNumberOfLayerGroups(){return this.#ga.getNumberOfLayerGroups()}getStyle(){return this.#Hn}addToUndoStack=e=>{null!==this.#pa&&this.#pa.add(e)};removeFromUndoStack=e=>{let t=!1;return null!==this.#pa&&(t=this.#pa.remove(e)),t};init(e){if(this.#bo=e,void 0===this.#bo.viewOnFirstLoadItem&&(this.#bo.viewOnFirstLoadItem=!0),void 0===this.#bo.dataViewConfigs&&(this.#bo.dataViewConfigs={}),void 0===this.#bo.rootDocument&&(this.#bo.rootDocument=document),this.#pa=new sr,this.#pa.addEventListener(\"undoadd\",this.#Re),this.#pa.addEventListener(\"undo\",this.#Re),this.#pa.addEventListener(\"redo\",this.#Re),void 0!==this.#bo.tools){const e={},t=Object.keys(this.#bo.tools);for(let n=0;n<t.length;++n){const i=t[n];let r=Vi[i];if(void 0===r&&(r=Mi[i]),void 0!==r){if(e[i]=new r(this),void 0!==e[i].addEventListener){const t=e[i].getEventNames();for(let n=0;n<t.length;++n)e[i].addEventListener(t[n],this.#Re)}const t=this.#bo.tools[i];if(void 0!==t.options&&0!==t.options.length){let n,r=\"raw\";if(void 0!==e[i].getOptionsType&&(r=e[i].getOptionsType()),\"instance\"===r||\"factory\"===r){n={};for(let e=0;e<t.options.length;++e){const o=t.options[e];let a=o;\"factory\"===r&&(a+=\"Factory\");const s=i.charAt(0).toLowerCase()+i.slice(1);let l,u=Qi[s];void 0!==u&&(l=u[a]),void 0===l&&(u=Ni[s],void 0!==u&&(l=u[a])),void 0!==l?n[o]=l:c.warn(\"Could not find option class for: \"+o)}}else n=t.options;e[i].setOptions(n)}}else c.warn(\"Could not initialise unknown tool: \"+i)}this.#ha=new lr(e)}this.#Sa=new go(this.#bo.defaultCharacterSet),this.#Sa.onloadstart=this.#fa,this.#Sa.onprogress=this.#Da,this.#Sa.onloaditem=this.#ya,this.#Sa.onload=this.#Ca,this.#Sa.onloadend=this.#va,this.#Sa.onerror=this.#Ia,this.#Sa.onabort=this.#Ta,this.#da=new io,this.#da.addEventListener(\"dataadd\",this.#Re),this.#da.addEventListener(\"dataremove\",this.#Re),this.#da.addEventListener(\"dataimageset\",this.#Re),this.#da.addEventListener(\"dataupdate\",this.#Re),this.#da.addEventListener(\"imagecontentchange\",this.#Re),this.#da.addEventListener(\"imagegeometrychange\",this.#Re),this.#da.addEventListener(\"annotationadd\",this.#Re),this.#da.addEventListener(\"annotationupdate\",this.#Re),this.#da.addEventListener(\"annotationremove\",this.#Re),this.#da.addEventListener(\"annotationgroupeditablechange\",this.#Re),this.#ga=new $i,void 0!==this.#bo.binders&&this.#ga.setBinders(this.#bo.binders)}reset(){this.#ga.empty(),this.#ma={},this.#pa&&(this.#pa=new sr,this.#pa.addEventListener(\"undoadd\",this.#Re),this.#pa.addEventListener(\"undo\",this.#Re),this.#pa.addEventListener(\"redo\",this.#Re))}resetLayout(){this.#ga.reset(),this.#ga.draw()}addEventListener(e,t){this.#Oe.add(e,t)}removeEventListener(e,t){this.#Oe.remove(e,t)}loadFiles=e=>{const t=this.#da.getNextDataId();0!==e.length?this.#Sa.loadFiles(e,t):c.warn(\"Ignoring empty input file list.\")};loadURLs=(e,t)=>{const n=this.#da.getNextDataId();0!==e.length?this.#Sa.loadURLs(e,n,t):c.warn(\"Ignoring empty input url list.\")};loadFromUri=(e,t)=>{const n=function(e){const t=ar(e);return 0===Object.keys(t).length?null:t.query}(e),i=()=>{this.removeEventListener(\"loadend\",i),this.loadURLs([n.state])};n&&void 0!==n.input&&(void 0!==n.state&&this.addEventListener(\"loadend\",i),function(e,t,n){e.type&&\"manifest\"===e.type?function(e,t){let n=\"\";\"/\"===e.input[0]&&(n=window.location.protocol+\"//\"+window.location.host),n+=e.input;const i=new XMLHttpRequest;i.open(\"GET\",decodeURIComponent(n),!0),i.responseType=\"document\",i.onload=function(n){t(function(e,t){const n=[],i=e.getElementsByTagName(\"wado_query\")[0].getAttribute(\"wadoURL\")+\"?requestType=WADO&contentType=application/dicom&\",r=e.getElementsByTagName(\"Patient\");r.length>1&&c.warn(\"More than one patient, loading first one.\");const o=r[0].getElementsByTagName(\"Study\");o.length>1&&c.warn(\"More than one study, loading first one.\");const a=o[0].getAttribute(\"StudyInstanceUID\"),s=o[0].getElementsByTagName(\"Series\");s.length>1&&c.warn(\"More than one series, loading first one.\");const l=s[0].getAttribute(\"SeriesInstanceUID\"),u=s[0].getElementsByTagName(\"Instance\");let d=u.length;t<d&&(d=t);for(let e=0;e<d;++e){const t=i+\"&studyUID=\"+a+\"&seriesUID=\"+l+\"&objectUID=\"+u[e].getAttribute(\"SOPInstanceUID\");n.push(t)}return n}(n.target.responseXML,e.nslices))},i.onerror=function(e){c.warn(\"RequestError while receiving manifest: \"+e.target.status)},i.send(null)}(e,t):t(function(e,t){const n=[];let i=\"key\";t&&(i=t);const r=decodeURIComponent(e),o=ar(r);if(0===Object.keys(o).length)n.push(r);else{const e=Object.keys(o.query);let t=null;for(let n=0;n<e.length;++n)if(o.query[e[n]]instanceof Array){t=e[n];break}if(t){const r=o.query[t];let a=o.base;\"\"!==a&&\"file\"!==t&&(a+=\"?\");let s,l=!1;for(let n=0;n<e.length;++n)e[n]!==t&&(l&&(a+=\"&\"),a+=e[n]+\"=\"+o.query[e[n]],l=!0);for(let e=0;e<r.length;++e)s=a,l&&(s+=\"&\"),\"key\"===i&&(s+=t+\"=\"),s+=r[e],n.push(s)}else n.push(r)}return n}(e.input,e.dwvReplaceMode),n)}(n,this.loadURLs,t))};loadImageObject=e=>{const t=this.#da.getNextDataId();this.#Sa.loadImageObject(e,t)};abortAllLoads(){const e=this.#Sa.getLoadingDataIds();for(const t of e)this.abortLoad(t)}abortLoad(e){this.#Sa.abort(e),this.#da.remove(e),this.#ga.removeLayersByDataId(e)}fitToContainer(){this.#ga.fitToContainer()}initWLDisplay(){this.#ga.getActiveLayerGroup().getActiveViewLayer().getViewController().initialise()}setImageSmoothing(e){this.#ga.setImageSmoothing(e),this.#ga.draw()}getViewConfigs(e,t){if(null===this.#bo.dataViewConfigs||void 0===this.#bo.dataViewConfigs)throw new Error(\"No available data view configuration\");let n=[];return void 0!==this.#bo.dataViewConfigs[e]?n=this.#bo.dataViewConfigs[e]:t||void 0===this.#bo.dataViewConfigs[\"*\"]||(n=this.#bo.dataViewConfigs[\"*\"]),n}getViewConfig(e,t,n){return this.getViewConfigs(e,n).find((function(e){return e.divId===t}))}getDataViewConfigs(){return this.#bo.dataViewConfigs}setDataViewConfigs(e){this.#ga.empty(),this.#bo.dataViewConfigs=e,this.#La(e)}addDataViewConfig(e,t){const n=this.#bo.dataViewConfigs;if(void 0===n[e]&&(n[e]=[]),-1!==n[e].findIndex((function(e){return e.divId===t.divId})))throw new Error(\"Duplicate view config for data \"+e+\" and div \"+t.divId);this.#bo.dataViewConfigs[e].push(t),void 0===this.#ga.getLayerGroupByDivId(t.divId)&&this.#Pa(t),void 0!==this.#da.get(e)&&this.render(e,[t])}removeDataViewConfig(e,t){const n=this.#bo.dataViewConfigs;if(void 0===n[e])return;const i=n[e].findIndex((function(e){return e.divId===t}));if(-1!==i&&(n[e].splice(i,1),0===n[e].length&&delete n[e],void 0!==this.#da.get(e))){const n=this.#ga.getLayerGroupByDivId(t);if(void 0!==n){const t=n.getViewLayersByDataId(e);1===t.length&&n.removeLayer(t[0]);const i=n.getDrawLayersByDataId(e);if(1===i.length&&n.removeLayer(i[0]),0===t.length&&0===i.length)throw new Error(\"Expected one layer, got none\");0===n.getNumberOfLayers()&&this.#ga.removeLayerGroup(n)}}}updateDataViewConfig(e,t,n){const i=this.#bo.dataViewConfigs;if(void 0===i[e])throw new Error(\"No config for dataId: \"+e);const r=i[e].findIndex((function(e){return e.divId===t}));if(-1===r)throw new Error(\"No config for dataId: \"+e+\" and divId: \"+t);const o=i[e][r];for(const e in n)o[e]=n[e];const a=this.#ga.getLayerGroupByDivId(o.divId);if(void 0!==a){const t=a.getViewLayersByDataId(e);1===t.length&&a.removeLayer(t[0]);const n=a.getDrawLayersByDataId(e);if(1===n.length&&a.removeLayer(n[0]),0===t.length&&0===n.length)throw new Error(\"Expected one layer, got none\")}void 0!==this.#da.get(e)&&this.render(e,[o])}#La(e){const t=Object.keys(e),n=[];for(let i=0;i<t.length;++i){const r=e[t[i]];for(let e=0;e<r.length;++e){const t=r[e];n.includes(t.divId)||(this.#Pa(t),n.push(t.divId))}}}#Pa(e){const t=this.#bo.rootDocument.getElementById(e.divId),n=this.#ga.addLayerGroup(t);this.#wa(n)}setLayerGroupsBinders(e){const t=[];for(let n=0;n<e.length;++n)void 0!==Ji[e[n]]&&t.push(new Ji[e[n]]);this.#ga.setBinders(t)}render(e,t){if(null==e)throw new Error(\"Cannot render without data id\");const n=void 0!==this.getData(e).image,i=void 0!==this.getData(e).annotationGroup;if(0===this.#ga.getNumberOfLayerGroups()&&this.#La(this.#bo.dataViewConfigs),void 0===t&&(t=this.getViewConfigs(e)),0!==t.length)for(let r=0;r<t.length;++r){const o=t[r],a=this.#ga.getLayerGroupByDivId(o.divId);if(!a)throw new Error(\"No layer group for \"+o.divId);void 0!==this.#da.get(e)&&(n&&0===a.getViewLayersByDataId(e).length?this.#Oa(e,o):i&&0===a.getDrawLayersByDataId(e).length&&this.addDrawLayer(e,o)),a.draw()}else c.info(\"Not rendering data: \"+e+\" (no data view config)\")}zoom(e,t,n){const i=this.#ga.getActiveLayerGroup(),r=i.getActiveViewLayer().getViewController().getCurrentScrollPosition(),o=new E(t,n,r);i.addScale(e,o),i.draw()}translate(e,t){const n=this.#ga.getActiveLayerGroup();n.addTranslation({x:e,y:t,z:0}),n.draw()}setOpacity(e){const t=this.#ga.getActiveLayerGroup().getActiveViewLayer();t.setOpacity(e),t.draw()}setDrawings(e,t,n){const i=this.#ga.getActiveLayerGroup().getActiveViewLayer(),r=i.getDataId(),o=i.getViewController(),a=function(e,t){const n=[],i=Kn().Node.create(e).getChildren(ii);for(let e=0,r=i.length;e<r;++e){const r=i[e].getChildren();for(let e=0,i=r.length;e<i;++e){const e=new Bi,i=r[0];e.id=i.id();const o=i.getChildren(ni)[0];if(e.colour=o.stroke(),\"line-group\"===i.name()){const t=o.points();e.mathShape=new F(t[0],t[1]),e.referencePoints=[new F(t[2],t[3])]}else if(\"ruler-group\"===i.name()){const t=o.points();e.mathShape=new zn(new F(t[0],t[1]),new F(t[2],t[3]))}else if(\"rectangle-group\"===i.name())e.mathShape=new ci(new F(o.x(),o.y()),new F(o.x()+o.width(),o.y()+o.height()));else if(\"roi-group\"===i.name()){const t=o.points(),n=[];for(let e=0;e<t.length;e+=2)n.push(new F(t[e],t[e+1]));e.mathShape=new di(n)}else if(\"freeHand-group\"===i.name()){c.warn(\"Converting freehand into ROI shape\");const t=o.points(),n=[];for(let e=0;e<t.length;e+=2)n.push(new F(t[e],t[e+1]));e.mathShape=new di(n)}else if(\"protractor-group\"===i.name()){const t=o.points();e.mathShape=new hi([new F(t[0],t[1]),new F(t[2],t[3]),new F(t[4],t[5])])}else if(\"ellipse-group\"===i.name()){const t=o.absolutePosition();e.mathShape=new Si(new F(t.x,t.y),o.radiusX(),o.radiusY())}else if(\"circle-group\"===i.name()){const t=o.absolutePosition();e.mathShape=new pi(new F(t.x,t.y),o.radius())}if(t){const n=t[i.id()];e.textExpr=n.meta.textExpr,e.quantification=n.meta.quantification}n.push(e)}}return n}(e,t),s=this.createAnnotationData(r);for(const e of a)e.setViewController(o),s.annotationGroup.add(e);this.#da.add(n,s),this.render(n)}applyJsonState(e,t){const n=new er(t);n.apply(this,n.fromJSON(e))}onResize=()=>{this.fitToContainer()};onKeydown=e=>{this.#Re(e)};defaultOnKeydown=e=>{if(e.ctrlKey)if(e.shiftKey){const t=this.#ga.getActiveLayerGroup(),n=t.getActiveViewLayer().getViewController();\"ArrowLeft\"===e.key?n.moreThanOne(3)&&n.decrementIndex(3):\"ArrowUp\"===e.key?t.canScroll()&&n.incrementScrollIndex():\"ArrowRight\"===e.key?t.moreThanOne(3)&&n.incrementIndex(3):\"ArrowDown\"===e.key&&t.canScroll()&&n.decrementScrollIndex()}else if(\"y\"===e.key)this.#pa.redo();else if(\"z\"===e.key)this.#pa.undo();else if(\" \"===e.key)for(let e=0;e<this.#ga.getNumberOfLayerGroups();++e)this.#ga.getLayerGroup(e).setShowCrosshair(!this.#ga.getLayerGroup(e).getShowCrosshair())};resetDisplay(){this.resetLayout(),this.initWLDisplay()}resetZoom(){this.resetLayout()}setColourMap(e){this.#ga.getActiveLayerGroup().getActiveViewLayer().getViewController().setColourMap(e)}setWindowLevelPreset(e){this.#ga.getActiveLayerGroup().getActiveViewLayer().getViewController().setWindowLevelPreset(e)}setTool(e){for(let t=0;t<this.#ga.getNumberOfLayerGroups();++t){const n=this.#ga.getLayerGroup(t);let i;i=\"Draw\"!==e&&\"Livewire\"!==e&&\"Floodfill\"!==e||void 0===n.getActiveDrawLayer()?n.getActiveViewLayer():n.getActiveDrawLayer(),void 0!==i&&this.#ha.bindLayerGroup(n,i)}this.#ha.setSelectedTool(e)}setToolFeatures(e){this.#ha.setToolFeatures(e)}undo(){this.#pa.undo()}redo(){this.#pa.redo()}getStackSize(){return this.#pa.getStackSize()}getCurrentStackIndex(){return this.#pa.getCurrentStackIndex()}getOverlayData(e){let t;return void 0!==this.#ma&&(t=this.#ma[e]),t}toggleOverlayListeners(e){const t=this.getOverlayData(e);void 0!==t&&(t.isListening()?t.removeAppListeners():t.addAppListeners())}createAnnotationData(e){const t=this.getData(e).image.getMeta(),n=new no({});return n.annotationGroup=new Jn,n.annotationGroup.setMetaValue(\"Modality\",\"SR\"),n.annotationGroup.setMetaValue(\"PatientID\",t.PatientID),n.annotationGroup.setMetaValue(\"StudyInstanceUID\",t.StudyInstanceUID),n.annotationGroup.setMetaValue(\"ReferencedSeriesSequence\",{value:[{SeriesInstanceUID:t.SeriesInstanceUID}]}),n}addAndRenderAnnotationData(e,t,n){const i=this.addData(e),r=this.getViewConfigs(n).find((e=>e.divId===t));if(void 0===r)throw new Error(\"No reference data view config for draw\");const o=new yo(t);o.orientation=r.orientation,this.addDataViewConfig(i,o),this.render(i)}#Re=e=>{this.#Oe.fireEvent(e)};#fa=e=>{void 0!==this.#bo.overlayConfig&&(this.#ma[e.dataid]=new Do(this,e.dataid,this.#bo.overlayConfig)),e.type=\"loadstart\",this.#Re(e)};#Da=e=>{e.type=\"loadprogress\",this.#Re(e)};#ya=e=>{void 0===e.data&&c.error(\"Missing loaditem event data.\"),void 0===e.loadtype&&c.error(\"Missing loaditem event load type.\");const t=e.isfirstitem;let n=null;\"image\"===e.loadtype?(t?this.#da.add(e.dataid,e.data):this.#da.update(e.dataid,e.data),n=e.data.meta):\"state\"===e.loadtype&&(this.applyJsonState(e.data,e.dataid),n=\"state\"),this.#Re({type:\"loaditem\",data:n,source:e.source,loadtype:e.loadtype,dataid:e.dataid,isfirstitem:e.isfirstitem,warn:e.warn}),void 0!==this.#ma&&void 0!==this.#ma[e.dataid]&&this.#ma[e.dataid].addItemMeta(n),\"image\"===e.loadtype&&0!==this.getViewConfigs(e.dataid).length&&t&&this.#bo.viewOnFirstLoadItem&&this.render(e.dataid)};#Ca=e=>{e.type=\"load\",this.#Re(e)};#va=e=>{e.type=\"loadend\",this.#Re(e)};#Ia=e=>{void 0===e.type&&(e.type=\"error\"),this.#Re(e)};#Ta=e=>{void 0===e.type&&(e.type=\"abort\"),this.#Re(e)};#wa(e){e.addEventListener(\"zoomchange\",this.#Re),e.addEventListener(\"offsetchange\",this.#Re),e.addEventListener(\"renderstart\",this.#Re),e.addEventListener(\"renderend\",this.#Re);for(let t=0;t<Qn.length;++t)e.addEventListener(Qn[t],this.#Re);this.#ha&&this.#ha.hasTool(\"Draw\")&&(e.addEventListener(\"drawcreate\",this.#Re),e.addEventListener(\"drawdelete\",this.#Re)),e.addEventListener(\"wlchange\",(e=>{const t=ji(e.srclayerid).groupDivId,n=this.getViewConfig(e.dataid,t,!0);void 0!==n&&(n.windowCenter=void 0,n.windowWidth=void 0,n.wlPresetName=void 0,3===e.value.length&&(n.windowCenter=e.value[0],n.windowWidth=e.value[1],n.wlPresetName=e.value[2]))})),e.addEventListener(\"opacitychange\",(e=>{const t=ji(e.srclayerid).groupDivId,n=this.getViewConfig(e.dataid,t,!0);void 0!==n&&(n.opacity=e.value[0])})),e.addEventListener(\"colourmapchange\",(e=>{const t=ji(e.srclayerid).groupDivId,n=this.getViewConfig(e.dataid,t,!0);void 0!==n&&(n.colourMap=e.value[0])}))}#Oa(e,t){const n=this.#da.get(e);if(!n)throw new Error(\"Cannot initialise layer with missing data, id: \"+e);const i=this.#ga.getLayerGroupByDivId(t.divId);if(!i)throw new Error(\"Cannot initialise layer with missing group, id: \"+t.divId);const r=n.image.getGeometry();this.#ga.unbindLayerGroups();const o=(new Mn).create(n.meta,n.image),a=Ct(r.getOrientation(),pt(t.orientation));o.setOrientation(a),\"SEG\"===n.image.getMeta().Modality&&o.setAlphaFunction((function(e){return 0===e[0]&&0===e[1]&&0===e[2]?0:255}));const s=0===i.getNumberOfViewLayers();let l=1;void 0!==t.opacity?l=t.opacity:s||(l=.5);const c=i.addViewLayer();c.setView(o,e);const d=r.getSize(a).get2D(),h=r.getSpacing(a).get2D();c.initialise(d,h,l);const S=c.getViewController();if(void 0!==t.wlPresetName)S.setWindowLevelPreset(t.wlPresetName);else if(void 0!==t.windowCenter&&void 0!==t.windowWidth){const e=new u(t.windowCenter,t.windowWidth);S.setWindowLevel(e)}void 0!==t.colourMap?S.setColourMap(t.colourMap):s||(\"PT\"===n.image.getMeta().Modality?S.setColourMap(\"hot\"):S.setColourMap(\"rainbow\")),this.#da.addEventListener(\"dataimageset\",c.onimageset);const g=[S.getCurrentIndex().getValues(),S.getCurrentPosition().getValues()];i.updateLayersToPositionChange({value:g,srclayerid:c.getId()}),this.#ga.fitToContainer(),c.setOffset(i.getOffset());const p=this.#Aa(r.getOrientation(),t.orientation);if(this.#ba(p,c),s)c.setScale(i.getScale());else{const e=i.getBaseViewLayer();c.initScale(i.getScale(),e.getAbsoluteZoomOffset())}this.#ga.bindLayerGroups(),this.#ha&&this.#ha.bindLayerGroup(i,c),this.#Re({type:\"viewlayeradd\",layerid:c.getId(),layergroupid:i.getDivId(),dataid:e}),s&&this.#ha&&this.#ha.init()}addDrawLayer(e,t){const n=this.#ga.getLayerGroupByDivId(t.divId);if(!n)throw new Error(\"Cannot initialise layer with missing group, id: \"+t.divId);const i=this.#da.get(e);if(!i)throw new Error(\"Cannot initialise layer with missing data, id: \"+e);const r=i.annotationGroup.getMetaValue(\"ReferencedSeriesSequence\").value[0].SeriesInstanceUID,o=n.searchViewLayers({SeriesInstanceUID:r});if(0===o.length)return void console.warn(\"No loaded data that matches the measurement reference series UID\");const a=o[0],s=a.getDataId();this.#ga.unbindLayerGroups();const l=a.getViewController();i.annotationGroup.setViewController(l);const c=this.#da.get(s);if(!c)throw new Error(\"Cannot initialise layer without reference data, id: \"+s);const u=c.image.getGeometry(),d=Ct(u.getOrientation(),pt(t.orientation)),h=u.getSize(d).get2D(),S=u.getSpacing(d).get2D(),g=n.addDrawLayer();g.initialise(h,S,a.getId());const p=new Bn(u,d);g.setPlaneHelper(p);const m=[l.getCurrentIndex().getValues(),l.getCurrentPosition().getValues()];n.updateLayersToPositionChange({value:m,srclayerid:g.getId()}),this.#ga.fitToContainer(),g.setOffset(n.getOffset());const f=this.#Aa(u.getOrientation(),t.orientation);this.#ba(f,g),g.initScale(n.getScale(),a.getAbsoluteZoomOffset()),g.setAnnotationGroup(i.annotationGroup,e,this.addToUndoStack),g.setCurrentPosition(l.getCurrentPosition(),l.getCurrentIndex()),this.#ga.bindLayerGroups(),this.#ha&&this.#ha.bindLayerGroup(n,g),this.#Re({type:\"drawlayeradd\",layerid:g.getId(),layergroupid:n.getDivId(),dataid:e})}#Aa(e,t){const n=mt(e.asOneAndZeros());if(void 0===n)throw new Error(\"Unsupported undefined orientation code\");const i=void 0===t,r=!i&&t===gt.Axial,o=!i&&t===gt.Coronal,a=!i&&t===gt.Sagittal,s={x:!1,y:!1},l={x:!1,y:!1,z:!1};return\"LPS\"===n?(o||a)&&(l.z=!0,s.y=!0):\"LAI\"===n?i||r?s.y=!0:o?l.z=!0:a&&(l.z=!0,s.x=!0):\"RPI\"===n?i||r?s.x=!0:o?(l.z=!0,s.x=!0):a&&(l.z=!0):\"RAS\"===n?(s.x=!0,s.y=!0,(o||a)&&(l.z=!0)):\"LSA\"===n?(s.y=!0,i||o?l.z=!0:r?l.y=!0:a&&(s.x=!0,l.y=!0,l.z=!0)):\"RSP\"===n?i||o?(s.x=!0,s.y=!0,l.x=!0,l.z=!0):r?(s.x=!0,l.x=!0):a&&(s.y=!0,l.z=!0):\"RIA\"===n?(s.x=!0,i||o?l.x=!0:r?(s.y=!0,l.x=!0,l.y=!0):a&&(l.y=!0)):\"PSL\"===n?(l.z=!0,(i||a||o)&&(s.y=!0)):\"PIR\"===n?(l.z=!0,(r||o)&&(s.x=!0)):\"ASR\"===n?(s.x=!0,s.y=!0,(i||a||o)&&(l.z=!0)):\"AIL\"===n?i||a?(s.x=!0,l.z=!0):r?s.y=!0:o&&(l.z=!0):c.warn(\"Unsupported orientation code: \"+n+\", display could be incorrect\"),{scale:l,offset:s}}#ba(e,t){e.offset.x&&t.addFlipOffsetX(),e.offset.y&&t.addFlipOffsetY(),e.scale.x&&t.flipScaleX(),e.scale.y&&t.flipScaleY(),e.scale.z&&t.flipScaleZ()}}class To{#fi;#xa;constructor(e){this.#fi=e;const t=e.getMeta();void 0===t.custom&&(t.custom={}),void 0===t.custom.segments&&(t.custom.segments=[]),this.#xa=t.custom.segments}#Ra(e){return this.#xa.findIndex((function(t){return t.number===e}))}hasSegment(e){return-1!==this.#Ra(e)}getNumberOfSegments(){return this.#xa.length}maskHasSegments(e){const t=[],n=[];for(let i=0;i<e.length;++i){const r=this.getSegment(e[i]);void 0!==r?void 0!==r.displayValue?t.push(r.displayValue):t.push(r.displayRGBValue):(c.warn(\"Unknown segment in maskHasSegments: \"+e[i]),n.push(i))}const i=this.#fi.hasValues(t);for(let e=0;e<n.length;++e)i.splice(n[e],0,!1);return i}getSegment(e){let t;const n=this.#Ra(e);return-1!==n&&(t=this.#xa[n]),t}addSegment(e){-1===this.#Ra(e.number)?this.#xa.push(e):c.warn(\"Not adding segment, it is allready in the segments list: \"+e.number)}removeSegment(e){const t=this.#Ra(e);-1!==t?this.#xa.splice(t,1):c.warn(\"Cannot remove segment, it is not in the segments list: \"+e)}updateSegment(e){const t=this.#Ra(e.number);-1!==t?this.#xa[t]=e:c.warn(\"Cannot update segment, it is not in the segments list: \"+e.number)}}class Lo{#fi;#Fa;#Ea;#qa;constructor(e,t,n){this.#fi=e,this.#Fa=t,this.#Ea=void 0!==n&&n,void 0!==t.displayRGBValue?this.#qa=e.getOffsets(t.displayRGBValue):this.#qa=e.getOffsets(t.displayValue)}getName(){return\"Delete-segment\"}isValid(){return this.#fi.getMeta().custom.segments.some((e=>e.number===this.#Fa.number))}execute(){0!==this.#qa.length&&(void 0!==this.#Fa.displayRGBValue?this.#fi.setAtOffsets(this.#qa,C):this.#fi.setAtOffsets(this.#qa,0)),new To(this.#fi).removeSegment(this.#Fa.number),this.#Ea||this.onExecute({type:\"masksegmentdelete\",segmentnumber:this.#Fa.number})}undo(){0!==this.#qa.length&&(void 0!==this.#Fa.displayRGBValue?this.#fi.setAtOffsets(this.#qa,this.#Fa.displayRGBValue):this.#fi.setAtOffsets(this.#qa,this.#Fa.displayValue)),new To(this.#fi).addSegment(this.#Fa),this.onUndo({type:\"masksegmentredraw\",segmentnumber:this.#Fa.number})}onExecute(e){}onUndo(e){}}class Po{#fi;#Fa;#Ua;#Ma;#Ea;#qa;constructor(e,t,n,i){this.#fi=e,this.#Fa=t,this.#Ua=n,this.#Ea=void 0!==i&&i,void 0!==t.displayRGBValue?this.#Ma=t.displayRGBValue:this.#Ma=t.displayValue,this.#qa=e.getOffsets(this.#Ma)}getName(){return\"Change-segment-colour\"}isValid(){return 0!==this.#qa.length}execute(){this.#fi.setAtOffsets(this.#qa,this.#Ua),\"number\"==typeof this.#Ua?this.#Fa.displayValue=this.#Ua:this.#Fa.displayRGBValue=this.#Ua,this.#Ea||this.onExecute({type:\"changemasksegmentcolour\",segmentnumber:this.#Fa.number,value:[this.#Ua]})}undo(){this.#fi.setAtOffsets(this.#qa,this.#Ma),\"number\"==typeof this.#Ma?this.#Fa.displayValue=this.#Ma:this.#Fa.displayRGBValue=this.#Ma,this.onUndo({type:\"changemasksegmentcolour\",segmentnumber:this.#Fa.number,value:[this.#Ma]})}onExecute(e){}onUndo(e){}}class wo{#Qa=[];#Va;#Na(e){return this.#Qa.findIndex((function(t){return t.number===e}))}isHidden(e){return-1!==this.#Na(e)}addToHidden(e){this.isHidden(e.number)?c.warn(\"Not hidding segment, it is allready in the hidden list: \"+e.number):(this.#Qa.push(e),this.#Va=void 0!==e.displayValue)}removeFromHidden(e){const t=this.#Na(e);-1!==t?this.#Qa.splice(t,1):c.warn(\"Cannot remove segment, it is not in the hidden list: \"+e)}getAlphaFunc(){const e=[];this.#Va?e[0]=0:e[0]={r:0,g:0,b:0};for(const t of this.#Qa)this.#Va?e.push(t.displayValue):e.push(t.displayRGBValue);let t;return t=this.#Va?function(t){for(let n=0;n<e.length;++n)if(t===e[n])return 0;return 255}:function(t){for(let n=0;n<e.length;++n)if(t[0]===e[n].r&&t[1]===e[n].g&&t[2]===e[n].b)return 0;return 255},t}}class Oo{x;y}class Ao{x;y;z}return a}()}));\n//# sourceMappingURL=dwv.min.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/dwv/dist/dwv.min.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jszip/dist/jszip.min.js":
/*!**********************************************!*\
  !*** ./node_modules/jszip/dist/jszip.min.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n\n!function(e){if(true)module.exports=e();else {}}(function(){return function s(a,o,h){function u(r,e){if(!o[r]){if(!a[r]){var t=undefined;if(!e&&t)return require(r,!0);if(l)return l(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var i=o[r]={exports:{}};a[r][0].call(i.exports,function(e){var t=a[r][1][e];return u(t||e)},i,i.exports,s,a,o,h)}return o[r].exports}for(var l=undefined,e=0;e<h.length;e++)u(h[e]);return u}({1:[function(e,t,r){\"use strict\";var d=e(\"./utils\"),c=e(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(e){for(var t,r,n,i,s,a,o,h=[],u=0,l=e.length,f=l,c=\"string\"!==d.getTypeOf(e);u<e.length;)f=l-u,n=c?(t=e[u++],r=u<l?e[u++]:0,u<l?e[u++]:0):(t=e.charCodeAt(u++),r=u<l?e.charCodeAt(u++):0,u<l?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,a=1<f?(15&r)<<2|n>>6:64,o=2<f?63&n:64,h.push(p.charAt(i)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(e){var t,r,n,i,s,a,o=0,h=0,u=\"data:\";if(e.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(e=e.replace(/[^A-Za-z0-9+/=]/g,\"\")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&f--,e.charAt(e.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=c.uint8array?new Uint8Array(0|f):new Array(0|f);o<e.length;)t=p.indexOf(e.charAt(o++))<<2|(i=p.indexOf(e.charAt(o++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(o++)))>>2,n=(3&s)<<6|(a=p.indexOf(e.charAt(o++))),l[h++]=t,64!==s&&(l[h++]=r),64!==a&&(l[h++]=n);return l}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,r){\"use strict\";var n=e(\"./external\"),i=e(\"./stream/DataWorker\"),s=e(\"./stream/Crc32Probe\"),a=e(\"./stream/DataLengthProbe\");function o(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i}o.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,r){\"use strict\";var n=e(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(){return new n(\"STORE compression\")},uncompressWorker:function(){return new n(\"STORE decompression\")}},r.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,r){\"use strict\";var n=e(\"./utils\");var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==n.getTypeOf(e)?function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}(0|t,e,e.length,0):function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t.charCodeAt(a))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(e,t,r){\"use strict\";var n=null;n=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:n}},{lie:37}],7:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),s=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=n?\"uint8array\":\"array\";function h(e,t){a.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,e.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(e){return new h(\"Deflate\",e)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,r){\"use strict\";function A(e,t){var r,n=\"\";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function n(e,t,r,n,i,s){var a,o,h=e.file,u=e.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),c=I.transformTo(\"string\",O.utf8encode(h.name)),d=h.comment,p=I.transformTo(\"string\",s(d)),m=I.transformTo(\"string\",O.utf8encode(d)),_=c.length!==h.name.length,g=m.length!==d.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===i?(C=798,z|=function(e,t){var r=e;return e||(r=t?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(e){return 63&(e||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+c,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(n,4)+f+b+p}}var I=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),O=e(\"../utf8\"),B=e(\"../crc32\"),R=e(\"../signature\");function s(e,t,r,n){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,i),s.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}))},s.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=n(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,r=n(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),t)this.push({data:function(e){return R.DATA_DESCRIPTOR+A(e.crc32,4)+A(e.compressedSize,4)+A(e.uncompressedSize,4)}(e),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r=this.bytesWritten-e,n=function(e,t,r,n,i){var s=I.transformTo(\"string\",i(n));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(e,2)+A(e,2)+A(t,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,e,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()}),e.on(\"error\",function(e){t.error(e)}),this},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var r=0;r<t.length;r++)try{t[r].error(e)}catch(e){}return!0},s.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,r){\"use strict\";var u=e(\"../compressions\"),n=e(\"./ZipFileWorker\");r.generateWorker=function(e,a,t){var o=new n(a.streamFiles,t,a.platform,a.encodeFileName),h=0;try{e.forEach(function(e,t){h++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+\" is not a valid compression method !\");return n}(t.options.compression,a.compression),n=t.options.compressionOptions||a.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo(\"file\",{name:e,dir:i,date:s,comment:t.comment||\"\",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(e){o.error(e)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,r){\"use strict\";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var e=new n;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}(n.prototype=e(\"./object\")).loadAsync=e(\"./load\"),n.support=e(\"./support\"),n.defaults=e(\"./defaults\"),n.version=\"3.10.1\",n.loadAsync=function(e,t){return(new n).loadAsync(e,t)},n.external=e(\"./external\"),t.exports=n},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,r){\"use strict\";var u=e(\"./utils\"),i=e(\"./external\"),n=e(\"./utf8\"),s=e(\"./zipEntries\"),a=e(\"./stream/Crc32Probe\"),l=e(\"./nodejsUtils\");function f(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new a);r.on(\"error\",function(e){t(e)}).on(\"end\",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error(\"Corrupted zip : CRC32 mismatch\")):e()}).resume()})}t.exports=function(e,o){var h=this;return o=u.extend(o||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:n.utf8decode}),l.isNode&&l.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):u.prepareContent(\"the loaded zip file\",e,!0,o.optimizedBinaryString,o.base64).then(function(e){var t=new s(o);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(o.checkCRC32)for(var n=0;n<r.length;n++)t.push(f(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n],s=i.fileNameStr,a=u.resolve(i.fileNameStr);h.file(a,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:o.createFolders}),i.dir||(h.file(a).unsafeOriginalName=s)}return t.zipComment.length&&(h.comment=t.zipComment),h})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function s(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on(\"data\",function(e){t.push({data:e,meta:{percent:0}})}).on(\"error\",function(e){t.isPaused?this.generatedError=e:t.error(e)}).on(\"end\",function(){t.isPaused?t._upstreamEnded=!0:t.end()})},s.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,r){\"use strict\";var i=e(\"readable-stream\").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on(\"data\",function(e,t){n.push(e)||n._helper.pause(),r&&r(t)}).on(\"error\",function(e){n.emit(\"error\",e)}).on(\"end\",function(){n.push(null)})}e(\"../utils\").inherits(n,i),n.prototype._read=function(){this._helper.resume()},t.exports=n},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,r){\"use strict\";t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,r){\"use strict\";function s(e,t,r){var n,i=u.getTypeOf(t),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=g(e)),s.createFolders&&(n=_(e))&&b.call(this,n,!0);var a=\"string\"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t=\"\",s.compression=\"STORE\",i=\"string\");var o=null;o=t instanceof c||t instanceof l?t:p.isNode&&p.isStream(t)?new m(e,t):u.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var h=new d(e,o,s);this.files[e]=h}var i=e(\"./utf8\"),u=e(\"./utils\"),l=e(\"./stream/GenericWorker\"),a=e(\"./stream/StreamHelper\"),f=e(\"./defaults\"),c=e(\"./compressedObject\"),d=e(\"./zipObject\"),o=e(\"./generate\"),p=e(\"./nodejsUtils\"),m=e(\"./nodejs/NodejsStreamInputAdapter\"),_=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return 0<t?e.substring(0,t):\"\"},g=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},b=function(e,t){return t=void 0!==t?t:f.createFolders,e=g(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function h(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,r,n;for(t in this.files)n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n)},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t)}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(h(e)){var n=e;return this.filter(function(e,t){return!t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=b.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||(\"/\"!==r.slice(-1)&&(r+=\"/\"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,r={};try{if((r=u.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var n=r.comment||this.comment||\"\";t=o.generateWorker(this,r,n)}catch(e){(t=new l(\"error\")).error(e)}return new a(t,r.type||\"string\",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,r){\"use strict\";t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,r){\"use strict\";var n=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo(\"string\",this.readData(e))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,r){\"use strict\";var n=e(\"./Uint8ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,r){\"use strict\";var n=e(\"./ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../support\"),s=e(\"./ArrayReader\"),a=e(\"./StringReader\"),o=e(\"./NodeBufferReader\"),h=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new o(e):i.uint8array?new h(n.transformTo(\"uint8array\",e)):new s(n.transformTo(\"array\",e)):new a(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../utils\");function s(e){n.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../crc32\");function s(){n.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat()},function(e){t.error(e)})}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,r){\"use strict\";function n(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.end()}),e.on(\"error\",function(e){t.error(e)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=n},{}],29:[function(e,t,r){\"use strict\";var h=e(\"../utils\"),i=e(\"./ConvertWorker\"),s=e(\"./GenericWorker\"),u=e(\"../base64\"),n=e(\"../support\"),a=e(\"../external\"),o=null;if(n.nodestream)try{o=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,o){return new a.Promise(function(t,r){var n=[],i=e._internalType,s=e._outputType,a=e._mimeType;e.on(\"data\",function(e,t){n.push(e),o&&o(t)}).on(\"error\",function(e){n=[],r(e)}).on(\"end\",function(){try{var e=function(e,t,r){switch(e){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",t),r);case\"base64\":return u.encode(t);default:return h.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(i,n),a);t(e)}catch(e){r(e)}n=[]}).resume()})}function f(e,t,r){var n=t;switch(t){case\"blob\":case\"arraybuffer\":n=\"uint8array\";break;case\"base64\":n=\"string\"}try{this._internalType=n,this._outputType=t,this._mimeType=r,h.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock()}catch(e){this._worker=new s(\"error\"),this._worker.error(e)}}f.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var r=this;return\"data\"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta)}):this._worker.on(e,function(){h.delay(t,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob(\"application/zip\").size}catch(e){r.blob=!1}}}try{r.nodestream=!!e(\"readable-stream\").Readable}catch(e){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,s){\"use strict\";for(var o=e(\"./utils\"),h=e(\"./support\"),r=e(\"./nodejsUtils\"),n=e(\"./stream/GenericWorker\"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;u[254]=u[254]=1;function a(){n.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){n.call(this,\"utf-8 encode\")}s.utf8encode=function(e){return h.nodebuffer?r.newBufferFrom(e,\"utf-8\"):function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=h.uint8array?new Uint8Array(o):new Array(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return h.nodebuffer?o.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,r,n,i,s=e.length,a=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)a[r++]=n;else if(4<(i=u[n]))a[r++]=65533,t+=i-1;else{for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?a[r++]=65533:n<65536?a[r++]=n:(n-=65536,a[r++]=55296|n>>10&1023,a[r++]=56320|1023&n)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(e=o.transformTo(h.uint8array?\"uint8array\":\"array\",e))},o.inherits(a,n),a.prototype.processChunk=function(e){var t=o.transformTo(h.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(h.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,n),l.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,a){\"use strict\";var o=e(\"./support\"),h=e(\"./base64\"),r=e(\"./nodejsUtils\"),u=e(\"./external\");function n(e){return e}function l(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}e(\"setimmediate\"),a.newBlob=function(t,r){a.checkSupport(\"blob\");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var i={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)\"array\"===t||\"nodebuffer\"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join(\"\")},stringifyByChar:function(e){for(var t=\"\",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return!1}}()}};function s(e){var t=65536,r=a.getTypeOf(e),n=!0;if(\"uint8array\"===r?n=i.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(n=i.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return i.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return i.stringifyByChar(e)}function f(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=s;var c={};c.string={string:n,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:function(e){return l(e,r.allocBuffer(e.length))}},c.array={string:s,array:n,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return s(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:n,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:n,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:n},a.transformTo=function(e,t){if(t=t||\"\",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.resolve=function(e){for(var t=e.split(\"/\"),r=[],n=0;n<t.length;n++){var i=t[n];\".\"===i||\"\"===i&&0!==n&&n!==t.length-1||(\"..\"===i?r.pop():r.push(i))}return r.join(\"/\")},a.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":o.nodebuffer&&r.isBuffer(e)?\"nodebuffer\":o.uint8array&&e instanceof Uint8Array?\"uint8array\":o.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(e){if(!o[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n=\"\";for(r=0;r<(e||\"\").length;r++)n+=\"\\\\x\"+((t=e.charCodeAt(r))<16?\"0\":\"\")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){setImmediate(function(){e.apply(r||null,t||[])})},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(r,e,n,i,s){return u.Promise.resolve(e).then(function(n){return o.blob&&(n instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(n)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)},e.readAsArrayBuffer(n)}):n}).then(function(e){var t=a.getTypeOf(e);return t?(\"arraybuffer\"===t?e=a.transformTo(\"uint8array\",e):\"string\"===t&&(s?e=h.decode(e):n&&!0!==i&&(e=function(e){return l(e,o.uint8array?new Uint8Array(e.length):new Array(e.length))}(e))),e):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,setimmediate:54}],33:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),i=e(\"./utils\"),s=e(\"./signature\"),a=e(\"./zipEntry\"),o=e(\"./support\");function h(e){this.files=[],this.loadOptions=e}h.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=o.uint8array?\"uint8array\":\"array\",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(n)+\" bytes.\")},prepareReader:function(e){this.reader=n(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),s=e(\"./utils\"),i=e(\"./compressedObject\"),a=e(\"./crc32\"),o=e(\"./utf8\"),h=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in h)if(Object.prototype.hasOwnProperty.call(h,t)&&h[t].magic===e)return h[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var e=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileName)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileComment)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,r){\"use strict\";function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),h=e(\"./stream/GenericWorker\");n.prototype={internalStream:function(e){var t=null,r=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var n=\"string\"===(r=e.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new a.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new h(\"error\")).error(e)}return new s(t,r,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)n.prototype[u[f]]=l;t.exports=n},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(e,l,t){(function(t){\"use strict\";var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),a=t.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)r=\"document\"in t&&\"onreadystatechange\"in t.document.createElement(\"script\")?function(){var e=t.document.createElement(\"script\");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var o=new t.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var e,t;n=!0;for(var r=h.length;r;){for(t=h,h=[],e=-1;++e<r;)t[e]();r=h.length}n=!1}l.exports=function(e){1!==h.push(e)||n||r()}}).call(this,\"undefined\"!=typeof __webpack_require__.g?__webpack_require__.g:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,r){\"use strict\";var i=e(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],n=[\"PENDING\"];function o(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&d(this,e)}function h(e,t,r){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(t,r,n){i(function(){var e;try{e=r(n)}catch(e){return l.reject(t,e)}e===t?l.reject(t,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(t,e)})}function c(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,l.reject(t,e))}function i(e){r||(r=!0,l.resolve(t,e))}var s=p(function(){e(i,n)});\"error\"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status=\"success\"}catch(e){r.status=\"error\",r.value=e}return r}(t.exports=o).prototype.finally=function(t){if(\"function\"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===a||\"function\"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);this.state!==n?f(r,this.state===a?e:t,this.outcome):this.queue.push(new h(r,e,t));return r},h.prototype.callFulfilled=function(e){l.resolve(this.promise,e)},h.prototype.otherCallFulfilled=function(e){f(this.promise,this.onFulfilled,e)},h.prototype.callRejected=function(e){l.reject(this.promise,e)},h.prototype.otherCallRejected=function(e){f(this.promise,this.onRejected,e)},l.resolve=function(e,t){var r=p(c,t);if(\"error\"===r.status)return l.reject(e,r.value);var n=r.value;if(n)d(e,n);else{e.state=a,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t)}return e},l.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},o.resolve=function(e){if(e instanceof this)return e;return l.resolve(new this(u),e)},o.reject=function(e){var t=new this(u);return l.reject(t,e)},o.all=function(e){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,t=-1,o=new this(u);for(;++t<n;)h(e[t],t);return o;function h(e,t){r.resolve(e).then(function(e){s[t]=e,++a!==n||i||(i=!0,l.resolve(o,s))},function(e){i||(i=!0,l.reject(o,e))})}},o.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var r=e.length,n=!1;if(!r)return this.resolve([]);var i=-1,s=new this(u);for(;++i<r;)a=e[i],t.resolve(a).then(function(e){n||(n=!0,l.resolve(s,e))},function(e){n||(n=!0,l.reject(s,e))});var a;return s}},{immediate:36}],38:[function(e,t,r){\"use strict\";var n={};(0,e(\"./lib/utils/common\").assign)(n,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=n},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,r){\"use strict\";var a=e(\"./zlib/deflate\"),o=e(\"./utils/common\"),h=e(\"./utils/strings\"),i=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,c=0,d=8;function p(e){if(!(this instanceof p))return new p(e);this.options=o.assign({level:f,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:\"\"},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(i[r]);if(t.header&&a.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n=\"string\"==typeof t.dictionary?h.string2buf(t.dictionary):\"[object ArrayBuffer]\"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=a.deflateSetDictionary(this.strm,n))!==l)throw new Error(i[r]);this._dict_set=!0}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?4:0,\"string\"==typeof e?i.input=h.string2buf(e):\"[object ArrayBuffer]\"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new o.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=a.deflate(i,n))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(i.output,i.next_out))):this.onData(o.shrinkBuf(i.output,i.next_out)))}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==n||(this.onEnd(l),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e)},p.prototype.onEnd=function(e){e===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return(t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return(t=t||{}).gzip=!0,n(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,r){\"use strict\";var c=e(\"./zlib/inflate\"),d=e(\"./utils/common\"),p=e(\"./utils/strings\"),m=e(\"./zlib/constants\"),n=e(\"./zlib/messages\"),i=e(\"./zlib/zstream\"),s=e(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(e){if(!(this instanceof a))return new a(e);this.options=d.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=c.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,c.inflateGetHeader(this.strm,this.header)}function o(e,t){var r=new a(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}a.prototype.push=function(e,t){var r,n,i,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof e?h.input=p.binstring2buf(e):\"[object ArrayBuffer]\"===_.call(e)?h.input=new Uint8Array(e):h.input=e,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new d.Buf8(u),h.next_out=0,h.avail_out=u),(r=c.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=c.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(i=p.utf8border(h.output,h.next_out),s=h.next_out-i,a=p.buf2string(h.output,i),h.next_out=s,h.avail_out=u-s,s&&d.arraySet(h.output,h.output,i,s,0),this.onData(a)):this.onData(d.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=c.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(e){this.chunks.push(e)},a.prototype.onEnd=function(e){e===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(e,t){return(t=t||{}).raw=!0,o(e,t)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){var t,r,n,i,s,a;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(a=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],a.set(s,i),i+=s.length;return a}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){return[].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(n)},{}],42:[function(e,t,r){\"use strict\";var h=e(\"./common\"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var u=new h.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function l(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,h.shrinkBuf(e,t));for(var r=\"\",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=new h.Buf8(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return l(e,e.length)},r.binstring2buf=function(e){for(var t=new h.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,a=t||e.length,o=new Array(2*a);for(r=n=0;r<a;)if((i=e[r++])<128)o[n++]=i;else if(4<(s=u[i]))o[n++]=65533,r+=s-1;else{for(i&=2===s?31:3===s?15:7;1<s&&r<a;)i=i<<6|63&e[r++],s--;1<s?o[n++]=65533:i<65536?o[n++]=i:(i-=65536,o[n++]=55296|i>>10&1023,o[n++]=56320|1023&i)}return l(o,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}},{\"./common\":41}],43:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--a;);i%=65521,s%=65521}return i|s<<16|0}},{}],44:[function(e,t,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,r){\"use strict\";var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}},{}],46:[function(e,t,r){\"use strict\";var h,c=e(\"../utils/common\"),u=e(\"./trees\"),d=e(\"./adler32\"),p=e(\"./crc32\"),n=e(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,i=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(e,t){return e.msg=n[t],t}function T(e){return(e<<1)-(4<e?9:0)}function D(e){for(var t=e.length;0<=--t;)e[t]=0}function F(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(c.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function N(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,F(e.strm)}function U(e,t){e.pending_buf[e.pending++]=t}function P(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function L(e,t){var r,n,i=e.max_chain_length,s=e.strstart,a=e.prev_length,o=e.nice_match,h=e.strstart>e.w_size-z?e.strstart-(e.w_size-z):0,u=e.window,l=e.w_mask,f=e.prev,c=e.strstart+S,d=u[s+a-1],p=u[s+a];e.prev_length>=e.good_match&&(i>>=2),o>e.lookahead&&(o=e.lookahead);do{if(u[(r=t)+a]===p&&u[r+a-1]===d&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<c);if(n=S-(c-s),s=c-S,a<n){if(e.match_start=t,o<=(a=n))break;d=u[s+a-1],p=u[s+a]}}}while((t=f[t&l])>h&&0!=--i);return a<=e.lookahead?a:e.lookahead}function j(e){var t,r,n,i,s,a,o,h,u,l,f=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=f+(f-z)){for(c.arraySet(e.window,e.window,f,f,0),e.match_start-=f,e.strstart-=f,e.block_start-=f,t=r=e.hash_size;n=e.head[--t],e.head[t]=f<=n?n-f:0,--r;);for(t=r=f;n=e.prev[--t],e.prev[t]=f<=n?n-f:0,--r;);i+=f}if(0===e.strm.avail_in)break;if(a=e.strm,o=e.window,h=e.strstart+e.lookahead,u=i,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,c.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=d(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),e.lookahead+=r,e.lookahead+e.insert>=x)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+x-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<z&&0!==e.strm.avail_in)}function Z(e,t){for(var r,n;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r)),e.match_length>=x)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function W(e,t){for(var r,n,i;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===x&&4096<e.strstart-e.match_start)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-x,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=x-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return A}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return A}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function M(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new c.Buf16(2*w),this.dyn_dtree=new c.Buf16(2*(2*a+1)),this.bl_tree=new c.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new c.Buf16(k+1),this.heap=new c.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new c.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?C:E,e.adler=2===t.wrap?0:1,t.last_flush=l,u._tr_init(t),m):R(e,_)}function K(e){var t=G(e);return t===m&&function(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=h[e.level].max_lazy,e.good_match=h[e.level].good_length,e.nice_match=h[e.level].nice_length,e.max_chain_length=h[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0}(e.state),t}function Y(e,t,r,n,i,s){if(!e)return _;var a=1;if(t===g&&(t=6),n<0?(a=0,n=-n):15<n&&(a=2,n-=16),i<1||y<i||r!==v||n<8||15<n||t<0||9<t||s<0||b<s)return R(e,_);8===n&&(n=9);var o=new H;return(e.state=o).strm=e,o.wrap=a,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=i+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new c.Buf8(2*o.w_size),o.head=new c.Buf16(o.hash_size),o.prev=new c.Buf16(o.w_size),o.lit_bufsize=1<<i+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new c.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=r,K(e)}h=[new M(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(j(e),0===e.lookahead&&t===l)return A;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return A;if(e.strstart-e.block_start>=e.w_size-z&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(e,t){return Y(e,t,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?_:(e.state.gzhead=t,m):_},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?R(e,_):_;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&t!==f)return R(e,0===e.avail_out?-5:_);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===C)if(2===n.wrap)e.adler=0,U(n,31),U(n,139),U(n,8),n.gzhead?(U(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),U(n,255&n.gzhead.time),U(n,n.gzhead.time>>8&255),U(n,n.gzhead.time>>16&255),U(n,n.gzhead.time>>24&255),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(U(n,255&n.gzhead.extra.length),U(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(U(n,0),U(n,0),U(n,0),U(n,0),U(n,0),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,3),n.status=E);else{var a=v+(n.w_bits-8<<4)<<8;a|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(a|=32),a+=31-a%31,n.status=E,P(n,a),0!==n.strstart&&(P(n,e.adler>>>16),P(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending!==n.pending_buf_size));)U(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&F(e),n.pending+2<=n.pending_buf_size&&(U(n,255&e.adler),U(n,e.adler>>8&255),e.adler=0,n.status=E)):n.status=E),0!==n.pending){if(F(e),0===e.avail_out)return n.last_flush=-1,m}else if(0===e.avail_in&&T(t)<=T(r)&&t!==f)return R(e,-5);if(666===n.status&&0!==e.avail_in)return R(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&666!==n.status){var o=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(j(e),0===e.lookahead)){if(t===l)return A;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,a=e.window;;){if(e.lookahead<=S){if(j(e),e.lookahead<=S&&t===l)return A;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&0<e.strstart&&(n=a[i=e.strstart-1])===a[++i]&&n===a[++i]&&n===a[++i]){s=e.strstart+S;do{}while(n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&i<s);e.match_length=S-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(r=u._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):h[n.level].func(n,t);if(o!==O&&o!==B||(n.status=666),o===A||o===O)return 0===e.avail_out&&(n.last_flush=-1),m;if(o===I&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(D(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),F(e),0===e.avail_out))return n.last_flush=-1,m}return t!==f?m:n.wrap<=0?1:(2===n.wrap?(U(n,255&e.adler),U(n,e.adler>>8&255),U(n,e.adler>>16&255),U(n,e.adler>>24&255),U(n,255&e.total_in),U(n,e.total_in>>8&255),U(n,e.total_in>>16&255),U(n,e.total_in>>24&255)):(P(n,e.adler>>>16),P(n,65535&e.adler)),F(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?m:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==C&&69!==t&&73!==t&&91!==t&&103!==t&&t!==E&&666!==t?R(e,_):(e.state=null,t===E?R(e,-3):m):_},r.deflateSetDictionary=function(e,t){var r,n,i,s,a,o,h,u,l=t.length;if(!e||!e.state)return _;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(e.adler=d(e.adler,t,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new c.Buf8(r.w_size),c.arraySet(u,t,l-r.w_size,r.w_size,0),t=u,l=r.w_size),a=e.avail_in,o=e.next_in,h=e.input,e.avail_in=l,e.next_in=0,e.input=t,j(r);r.lookahead>=x;){for(n=r.strstart,i=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+x-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,e.next_in=o,e.input=h,e.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,r){\"use strict\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,r){\"use strict\";t.exports=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C;r=e.state,n=e.next_in,z=e.input,i=n+(e.avail_in-5),s=e.next_out,C=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,c=r.window,d=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=m[d&g];t:for(;;){if(d>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(d&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg=\"invalid literal/length code\",r.mode=30;break e}w=65535&v,(y&=15)&&(p<y&&(d+=z[n++]<<p,p+=8),w+=d&(1<<y)-1,d>>>=y,p-=y),p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=_[d&b];r:for(;;){if(d>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(d&(1<<y)-1)];continue r}e.msg=\"invalid distance code\",r.mode=30;break e}if(k=65535&v,p<(y&=15)&&(d+=z[n++]<<p,(p+=8)<y&&(d+=z[n++]<<p,p+=8)),h<(k+=d&(1<<y)-1)){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(d>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(S=c,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=c[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=c[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(n<i&&s<o);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<o?o-s+257:257-(s-o),r.hold=d,r.bits=p}},{}],49:[function(e,t,r){\"use strict\";var I=e(\"../utils/common\"),O=e(\"./adler32\"),B=e(\"./crc32\"),R=e(\"./inffast\"),T=e(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,n=852,i=592;function L(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=P,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new I.Buf32(n),t.distcode=t.distdyn=new I.Buf32(i),t.sane=1,t.back=-1,N):U}function o(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,a(e)):U}function h(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,o(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=h(e,t))!==N&&(e.state=null),r):U}var l,f,c=!0;function j(e){if(c){var t;for(l=new I.Buf32(512),f=new I.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(D,e.lens,0,288,l,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,f,0,e.work,{bits:5}),c=!1}e.lencode=l,e.lenbits=9,e.distcode=f,e.distbits=5}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),n>=s.wsize?(I.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),I.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(I.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,f=o,c=h,x=N;e:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){e.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){e.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){e.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(d=r.length)&&(d=o),d&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,n,s,d,k)),512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,r.length-=d),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(65535&r.check)){e.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}e.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,l-=2;break e;case 2:r.mode=17;break;case 3:e.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){e.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(d=r.length){if(o<d&&(d=o),h<d&&(d=h),0===d)break e;I.arraySet(i,n,s,d,a),o-=d,s+=d,h-=d,a+=d,r.length-=d;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){e.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){e.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],d=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+d>r.nlen+r.ndist){e.msg=\"invalid bit length repeat\",r.mode=30;break}for(;d--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){e.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=o&&258<=h){e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,R(e,c),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){e.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){e.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break e;if(d=c-h,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break}p=d>r.wnext?(d-=r.wnext,r.wsize-d):r.wnext-d,d>r.length&&(d=r.length),m=r.window}else m=i,p=a-r.offset,d=r.length;for(h<d&&(d=h),h-=d,r.length-=d;i[a++]=m[p++],--d;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break e;i[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break e;o--,u|=n[s++]<<l,l+=8}if(c-=h,e.total_out+=c,r.total+=c,c&&(e.adler=r.check=r.flags?B(r.check,i,c,a-c):O(r.check,i,c,a-c)),c=h,(r.flags?u:L(u))!==r.check){e.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(4294967295&r.total)){e.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return-4;case 32:default:return U}return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,(r.wsize||c!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,c-e.avail_out)?(r.mode=31,-4):(f-=e.avail_in,c-=e.avail_out,e.total_in+=f,e.total_out+=c,r.total+=c,r.wrap&&c&&(e.adler=r.check=r.flags?B(r.check,i,c,e.next_out-c):O(r.check,i,c,e.next_out-c)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===c||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,r){\"use strict\";var D=e(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,a,o){var h,u,l,f,c,d,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<n;v++)O[t[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return i[s++]=20971520,i[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===e||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<n;v++)0!==t[r+v]&&(a[B[t[r+v]]++]=v);if(d=0===e?(A=R=a,19):1===e?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,c=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===e&&852<C||2===e&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<d?(m=0,a[v]):a[v]>d?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;i[c+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=t[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),c+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===e&&852<C||2===e&&592<C)return 1;i[l=E&f]=k<<24|x<<16|c-s|0}}return 0!==E&&(i[c+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(e,t,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,r){\"use strict\";var i=e(\"../utils/common\"),o=0,h=1;function n(e){for(var t=e.length;0<=--t;)e[t]=0}var s=0,a=29,u=256,l=u+1+a,f=30,c=19,_=2*l+1,g=15,d=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));n(z);var C=new Array(2*f);n(C);var E=new Array(512);n(E);var A=new Array(256);n(A);var I=new Array(a);n(I);var O,B,R,T=new Array(f);function D(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length}function F(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function N(e){return e<256?E[e]:E[256+(e>>>7)]}function U(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function P(e,t,r){e.bi_valid>d-r?(e.bi_buf|=t<<e.bi_valid&65535,U(e,e.bi_buf),e.bi_buf=t>>d-e.bi_valid,e.bi_valid+=r-d):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function L(e,t,r){P(e,r[2*t],r[2*t+1])}function j(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function Z(e,t,r){var n,i,s=new Array(g+1),a=0;for(n=1;n<=g;n++)s[n]=a=a+r[n-1]<<1;for(i=0;i<=t;i++){var o=e[2*i+1];0!==o&&(e[2*i]=j(s[o]++,o))}}function W(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<f;t++)e.dyn_dtree[2*t]=0;for(t=0;t<c;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function M(e){8<e.bi_valid?U(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function G(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&H(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!H(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n}function K(e,t,r){var n,i,s,a,o=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],i=e.pending_buf[e.l_buf+o],o++,0===n?L(e,i,t):(L(e,(s=A[i])+u+1,t),0!==(a=w[s])&&P(e,i-=I[s],a),L(e,s=N(--n),r),0!==(a=k[s])&&P(e,n-=T[s],a)),o<e.last_lit;);L(e,m,t)}function Y(e,t){var r,n,i,s=t.dyn_tree,a=t.stat_desc.static_tree,o=t.stat_desc.has_stree,h=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,o&&(e.static_len-=a[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)G(e,s,r);for(i=h;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],G(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,G(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,a,o,h=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,c=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=g;s++)e.bl_count[s]=0;for(h[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<_;r++)p<(s=h[2*h[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),h[2*n+1]=s,u<n||(e.bl_count[s]++,a=0,d<=n&&(a=c[n-d]),o=h[2*n],e.opt_len+=o*(s+a),f&&(e.static_len+=o*(l[2*n+1]+a)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(h[2*i+1]!==s&&(e.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),n--)}}(e,t),Z(s,u,e.bl_count)}function X(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=t[2*(n+1)+1],++o<h&&i===a||(o<u?e.bl_tree[2*i]+=o:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[2*b]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4))}function V(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),n=0;n<=r;n++)if(i=a,a=t[2*(n+1)+1],!(++o<h&&i===a)){if(o<u)for(;L(e,i,e.bl_tree),0!=--o;);else 0!==i?(i!==s&&(L(e,i,e.bl_tree),o--),L(e,b,e.bl_tree),P(e,o-3,2)):o<=10?(L(e,v,e.bl_tree),P(e,o-3,3)):(L(e,y,e.bl_tree),P(e,o-11,7));s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4)}}n(T);var q=!1;function J(e,t,r,n){P(e,(s<<1)+(n?1:0),3),function(e,t,r,n){M(e),n&&(U(e,r),U(e,~r)),i.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}r._tr_init=function(e){q||(function(){var e,t,r,n,i,s=new Array(g+1);for(n=r=0;n<a-1;n++)for(I[n]=r,e=0;e<1<<w[n];e++)A[r++]=n;for(A[r-1]=n,n=i=0;n<16;n++)for(T[n]=i,e=0;e<1<<k[n];e++)E[i++]=n;for(i>>=7;n<f;n++)for(T[n]=i<<7,e=0;e<1<<k[n]-7;e++)E[256+i++]=n;for(t=0;t<=g;t++)s[t]=0;for(e=0;e<=143;)z[2*e+1]=8,e++,s[8]++;for(;e<=255;)z[2*e+1]=9,e++,s[9]++;for(;e<=279;)z[2*e+1]=7,e++,s[7]++;for(;e<=287;)z[2*e+1]=8,e++,s[8]++;for(Z(z,l+1,s),e=0;e<f;e++)C[2*e+1]=5,C[2*e]=j(e,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,c,p)}(),q=!0),e.l_desc=new F(e.dyn_ltree,O),e.d_desc=new F(e.dyn_dtree,B),e.bl_desc=new F(e.bl_tree,R),e.bi_buf=0,e.bi_valid=0,W(e)},r._tr_stored_block=J,r._tr_flush_block=function(e,t,r,n){var i,s,a=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return o;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return h;for(t=32;t<u;t++)if(0!==e.dyn_ltree[2*t])return h;return o}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=c-1;3<=t&&0===e.bl_tree[2*S[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?J(e,t,r,n):4===e.strategy||s===i?(P(e,2+(n?1:0),3),K(e,z,C)):(P(e,4+(n?1:0),3),function(e,t,r,n){var i;for(P(e,t-257,5),P(e,r-1,5),P(e,n-4,4),i=0;i<n;i++)P(e,e.bl_tree[2*S[i]+1],3);V(e,e.dyn_ltree,t-1),V(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),K(e,e.dyn_ltree,e.dyn_dtree)),W(e),n&&M(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(A[r]+u+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){P(e,2,3),L(e,m,z),function(e){16===e.bi_valid?(U(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,r){(function(e){!function(r,n){\"use strict\";if(!r.setImmediate){var i,s,t,a,o=1,h={},u=!1,l=r.document,e=Object.getPrototypeOf&&Object.getPrototypeOf(r);e=e&&e.setTimeout?e:r,i=\"[object process]\"==={}.toString.call(r.process)?function(e){process.nextTick(function(){c(e)})}:function(){if(r.postMessage&&!r.importScripts){var e=!0,t=r.onmessage;return r.onmessage=function(){e=!1},r.postMessage(\"\",\"*\"),r.onmessage=t,e}}()?(a=\"setImmediate$\"+Math.random()+\"$\",r.addEventListener?r.addEventListener(\"message\",d,!1):r.attachEvent(\"onmessage\",d),function(e){r.postMessage(a+e,\"*\")}):r.MessageChannel?((t=new MessageChannel).port1.onmessage=function(e){c(e.data)},function(e){t.port2.postMessage(e)}):l&&\"onreadystatechange\"in l.createElement(\"script\")?(s=l.documentElement,function(e){var t=l.createElement(\"script\");t.onreadystatechange=function(){c(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):function(e){setTimeout(c,0,e)},e.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return h[o]=n,i(o),o++},e.clearImmediate=f}function f(e){delete h[e]}function c(e){if(u)setTimeout(c,0,e);else{var t=h[e];if(t){u=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{f(e),u=!1}}}}function d(e){e.source===r&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&c(+e.data.slice(a.length))}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,\"undefined\"!=typeof __webpack_require__.g?__webpack_require__.g:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}]},{},[10])(10)});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jszip/dist/jszip.min.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Animation.js":
/*!*********************************************!*\
  !*** ./node_modules/konva/lib/Animation.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Animation = void 0;\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst now = (function () {\n    if (Global_1.glob.performance && Global_1.glob.performance.now) {\n        return function () {\n            return Global_1.glob.performance.now();\n        };\n    }\n    return function () {\n        return new Date().getTime();\n    };\n})();\nclass Animation {\n    constructor(func, layers) {\n        this.id = Animation.animIdCounter++;\n        this.frame = {\n            time: 0,\n            timeDiff: 0,\n            lastTime: now(),\n            frameRate: 0,\n        };\n        this.func = func;\n        this.setLayers(layers);\n    }\n    setLayers(layers) {\n        let lays = [];\n        if (layers) {\n            lays = Array.isArray(layers) ? layers : [layers];\n        }\n        this.layers = lays;\n        return this;\n    }\n    getLayers() {\n        return this.layers;\n    }\n    addLayer(layer) {\n        const layers = this.layers;\n        const len = layers.length;\n        for (let n = 0; n < len; n++) {\n            if (layers[n]._id === layer._id) {\n                return false;\n            }\n        }\n        this.layers.push(layer);\n        return true;\n    }\n    isRunning() {\n        const a = Animation;\n        const animations = a.animations;\n        const len = animations.length;\n        for (let n = 0; n < len; n++) {\n            if (animations[n].id === this.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    start() {\n        this.stop();\n        this.frame.timeDiff = 0;\n        this.frame.lastTime = now();\n        Animation._addAnimation(this);\n        return this;\n    }\n    stop() {\n        Animation._removeAnimation(this);\n        return this;\n    }\n    _updateFrameObject(time) {\n        this.frame.timeDiff = time - this.frame.lastTime;\n        this.frame.lastTime = time;\n        this.frame.time += this.frame.timeDiff;\n        this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n    static _addAnimation(anim) {\n        this.animations.push(anim);\n        this._handleAnimation();\n    }\n    static _removeAnimation(anim) {\n        const id = anim.id;\n        const animations = this.animations;\n        const len = animations.length;\n        for (let n = 0; n < len; n++) {\n            if (animations[n].id === id) {\n                this.animations.splice(n, 1);\n                break;\n            }\n        }\n    }\n    static _runFrames() {\n        const layerHash = {};\n        const animations = this.animations;\n        for (let n = 0; n < animations.length; n++) {\n            const anim = animations[n];\n            const layers = anim.layers;\n            const func = anim.func;\n            anim._updateFrameObject(now());\n            const layersLen = layers.length;\n            let needRedraw;\n            if (func) {\n                needRedraw = func.call(anim, anim.frame) !== false;\n            }\n            else {\n                needRedraw = true;\n            }\n            if (!needRedraw) {\n                continue;\n            }\n            for (let i = 0; i < layersLen; i++) {\n                const layer = layers[i];\n                if (layer._id !== undefined) {\n                    layerHash[layer._id] = layer;\n                }\n            }\n        }\n        for (const key in layerHash) {\n            if (!layerHash.hasOwnProperty(key)) {\n                continue;\n            }\n            layerHash[key].batchDraw();\n        }\n    }\n    static _animationLoop() {\n        const Anim = Animation;\n        if (Anim.animations.length) {\n            Anim._runFrames();\n            Util_1.Util.requestAnimFrame(Anim._animationLoop);\n        }\n        else {\n            Anim.animRunning = false;\n        }\n    }\n    static _handleAnimation() {\n        if (!this.animRunning) {\n            this.animRunning = true;\n            Util_1.Util.requestAnimFrame(this._animationLoop);\n        }\n    }\n}\nexports.Animation = Animation;\nAnimation.animations = [];\nAnimation.animIdCounter = 0;\nAnimation.animRunning = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvQW5pbWF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBVTtBQUNuQyxlQUFlLG1CQUFPLENBQUMsb0VBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixlQUFlO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9BbmltYXRpb24uanM/N2MwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQW5pbWF0aW9uID0gdm9pZCAwO1xuY29uc3QgR2xvYmFsXzEgPSByZXF1aXJlKFwiLi9HbG9iYWxcIik7XG5jb25zdCBVdGlsXzEgPSByZXF1aXJlKFwiLi9VdGlsXCIpO1xuY29uc3Qgbm93ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoR2xvYmFsXzEuZ2xvYi5wZXJmb3JtYW5jZSAmJiBHbG9iYWxfMS5nbG9iLnBlcmZvcm1hbmNlLm5vdykge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIEdsb2JhbF8xLmdsb2IucGVyZm9ybWFuY2Uubm93KCk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICB9O1xufSkoKTtcbmNsYXNzIEFuaW1hdGlvbiB7XG4gICAgY29uc3RydWN0b3IoZnVuYywgbGF5ZXJzKSB7XG4gICAgICAgIHRoaXMuaWQgPSBBbmltYXRpb24uYW5pbUlkQ291bnRlcisrO1xuICAgICAgICB0aGlzLmZyYW1lID0ge1xuICAgICAgICAgICAgdGltZTogMCxcbiAgICAgICAgICAgIHRpbWVEaWZmOiAwLFxuICAgICAgICAgICAgbGFzdFRpbWU6IG5vdygpLFxuICAgICAgICAgICAgZnJhbWVSYXRlOiAwLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmZ1bmMgPSBmdW5jO1xuICAgICAgICB0aGlzLnNldExheWVycyhsYXllcnMpO1xuICAgIH1cbiAgICBzZXRMYXllcnMobGF5ZXJzKSB7XG4gICAgICAgIGxldCBsYXlzID0gW107XG4gICAgICAgIGlmIChsYXllcnMpIHtcbiAgICAgICAgICAgIGxheXMgPSBBcnJheS5pc0FycmF5KGxheWVycykgPyBsYXllcnMgOiBbbGF5ZXJzXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxheWVycyA9IGxheXM7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBnZXRMYXllcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxheWVycztcbiAgICB9XG4gICAgYWRkTGF5ZXIobGF5ZXIpIHtcbiAgICAgICAgY29uc3QgbGF5ZXJzID0gdGhpcy5sYXllcnM7XG4gICAgICAgIGNvbnN0IGxlbiA9IGxheWVycy5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IG4gPSAwOyBuIDwgbGVuOyBuKyspIHtcbiAgICAgICAgICAgIGlmIChsYXllcnNbbl0uX2lkID09PSBsYXllci5faWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sYXllcnMucHVzaChsYXllcik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpc1J1bm5pbmcoKSB7XG4gICAgICAgIGNvbnN0IGEgPSBBbmltYXRpb247XG4gICAgICAgIGNvbnN0IGFuaW1hdGlvbnMgPSBhLmFuaW1hdGlvbnM7XG4gICAgICAgIGNvbnN0IGxlbiA9IGFuaW1hdGlvbnMubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IGxlbjsgbisrKSB7XG4gICAgICAgICAgICBpZiAoYW5pbWF0aW9uc1tuXS5pZCA9PT0gdGhpcy5pZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgc3RhcnQoKSB7XG4gICAgICAgIHRoaXMuc3RvcCgpO1xuICAgICAgICB0aGlzLmZyYW1lLnRpbWVEaWZmID0gMDtcbiAgICAgICAgdGhpcy5mcmFtZS5sYXN0VGltZSA9IG5vdygpO1xuICAgICAgICBBbmltYXRpb24uX2FkZEFuaW1hdGlvbih0aGlzKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHN0b3AoKSB7XG4gICAgICAgIEFuaW1hdGlvbi5fcmVtb3ZlQW5pbWF0aW9uKHRoaXMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgX3VwZGF0ZUZyYW1lT2JqZWN0KHRpbWUpIHtcbiAgICAgICAgdGhpcy5mcmFtZS50aW1lRGlmZiA9IHRpbWUgLSB0aGlzLmZyYW1lLmxhc3RUaW1lO1xuICAgICAgICB0aGlzLmZyYW1lLmxhc3RUaW1lID0gdGltZTtcbiAgICAgICAgdGhpcy5mcmFtZS50aW1lICs9IHRoaXMuZnJhbWUudGltZURpZmY7XG4gICAgICAgIHRoaXMuZnJhbWUuZnJhbWVSYXRlID0gMTAwMCAvIHRoaXMuZnJhbWUudGltZURpZmY7XG4gICAgfVxuICAgIHN0YXRpYyBfYWRkQW5pbWF0aW9uKGFuaW0pIHtcbiAgICAgICAgdGhpcy5hbmltYXRpb25zLnB1c2goYW5pbSk7XG4gICAgICAgIHRoaXMuX2hhbmRsZUFuaW1hdGlvbigpO1xuICAgIH1cbiAgICBzdGF0aWMgX3JlbW92ZUFuaW1hdGlvbihhbmltKSB7XG4gICAgICAgIGNvbnN0IGlkID0gYW5pbS5pZDtcbiAgICAgICAgY29uc3QgYW5pbWF0aW9ucyA9IHRoaXMuYW5pbWF0aW9ucztcbiAgICAgICAgY29uc3QgbGVuID0gYW5pbWF0aW9ucy5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IG4gPSAwOyBuIDwgbGVuOyBuKyspIHtcbiAgICAgICAgICAgIGlmIChhbmltYXRpb25zW25dLmlkID09PSBpZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9ucy5zcGxpY2UobiwgMSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIF9ydW5GcmFtZXMoKSB7XG4gICAgICAgIGNvbnN0IGxheWVySGFzaCA9IHt9O1xuICAgICAgICBjb25zdCBhbmltYXRpb25zID0gdGhpcy5hbmltYXRpb25zO1xuICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IGFuaW1hdGlvbnMubGVuZ3RoOyBuKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGFuaW0gPSBhbmltYXRpb25zW25dO1xuICAgICAgICAgICAgY29uc3QgbGF5ZXJzID0gYW5pbS5sYXllcnM7XG4gICAgICAgICAgICBjb25zdCBmdW5jID0gYW5pbS5mdW5jO1xuICAgICAgICAgICAgYW5pbS5fdXBkYXRlRnJhbWVPYmplY3Qobm93KCkpO1xuICAgICAgICAgICAgY29uc3QgbGF5ZXJzTGVuID0gbGF5ZXJzLmxlbmd0aDtcbiAgICAgICAgICAgIGxldCBuZWVkUmVkcmF3O1xuICAgICAgICAgICAgaWYgKGZ1bmMpIHtcbiAgICAgICAgICAgICAgICBuZWVkUmVkcmF3ID0gZnVuYy5jYWxsKGFuaW0sIGFuaW0uZnJhbWUpICE9PSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5lZWRSZWRyYXcgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFuZWVkUmVkcmF3KSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxheWVyc0xlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGF5ZXIgPSBsYXllcnNbaV07XG4gICAgICAgICAgICAgICAgaWYgKGxheWVyLl9pZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGxheWVySGFzaFtsYXllci5faWRdID0gbGF5ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIGxheWVySGFzaCkge1xuICAgICAgICAgICAgaWYgKCFsYXllckhhc2guaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGF5ZXJIYXNoW2tleV0uYmF0Y2hEcmF3KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIF9hbmltYXRpb25Mb29wKCkge1xuICAgICAgICBjb25zdCBBbmltID0gQW5pbWF0aW9uO1xuICAgICAgICBpZiAoQW5pbS5hbmltYXRpb25zLmxlbmd0aCkge1xuICAgICAgICAgICAgQW5pbS5fcnVuRnJhbWVzKCk7XG4gICAgICAgICAgICBVdGlsXzEuVXRpbC5yZXF1ZXN0QW5pbUZyYW1lKEFuaW0uX2FuaW1hdGlvbkxvb3ApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgQW5pbS5hbmltUnVubmluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBfaGFuZGxlQW5pbWF0aW9uKCkge1xuICAgICAgICBpZiAoIXRoaXMuYW5pbVJ1bm5pbmcpIHtcbiAgICAgICAgICAgIHRoaXMuYW5pbVJ1bm5pbmcgPSB0cnVlO1xuICAgICAgICAgICAgVXRpbF8xLlV0aWwucmVxdWVzdEFuaW1GcmFtZSh0aGlzLl9hbmltYXRpb25Mb29wKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQW5pbWF0aW9uID0gQW5pbWF0aW9uO1xuQW5pbWF0aW9uLmFuaW1hdGlvbnMgPSBbXTtcbkFuaW1hdGlvbi5hbmltSWRDb3VudGVyID0gMDtcbkFuaW1hdGlvbi5hbmltUnVubmluZyA9IGZhbHNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Animation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/BezierFunctions.js":
/*!***************************************************!*\
  !*** ./node_modules/konva/lib/BezierFunctions.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.t2length = exports.getQuadraticArcLength = exports.getCubicArcLength = exports.binomialCoefficients = exports.cValues = exports.tValues = void 0;\nexports.tValues = [\n    [],\n    [],\n    [\n        -0.5773502691896257645091487805019574556476,\n        0.5773502691896257645091487805019574556476,\n    ],\n    [\n        0, -0.7745966692414833770358530799564799221665,\n        0.7745966692414833770358530799564799221665,\n    ],\n    [\n        -0.3399810435848562648026657591032446872005,\n        0.3399810435848562648026657591032446872005,\n        -0.8611363115940525752239464888928095050957,\n        0.8611363115940525752239464888928095050957,\n    ],\n    [\n        0, -0.5384693101056830910363144207002088049672,\n        0.5384693101056830910363144207002088049672,\n        -0.9061798459386639927976268782993929651256,\n        0.9061798459386639927976268782993929651256,\n    ],\n    [\n        0.6612093864662645136613995950199053470064,\n        -0.6612093864662645136613995950199053470064,\n        -0.2386191860831969086305017216807119354186,\n        0.2386191860831969086305017216807119354186,\n        -0.9324695142031520278123015544939946091347,\n        0.9324695142031520278123015544939946091347,\n    ],\n    [\n        0, 0.4058451513773971669066064120769614633473,\n        -0.4058451513773971669066064120769614633473,\n        -0.7415311855993944398638647732807884070741,\n        0.7415311855993944398638647732807884070741,\n        -0.9491079123427585245261896840478512624007,\n        0.9491079123427585245261896840478512624007,\n    ],\n    [\n        -0.1834346424956498049394761423601839806667,\n        0.1834346424956498049394761423601839806667,\n        -0.5255324099163289858177390491892463490419,\n        0.5255324099163289858177390491892463490419,\n        -0.7966664774136267395915539364758304368371,\n        0.7966664774136267395915539364758304368371,\n        -0.9602898564975362316835608685694729904282,\n        0.9602898564975362316835608685694729904282,\n    ],\n    [\n        0, -0.8360311073266357942994297880697348765441,\n        0.8360311073266357942994297880697348765441,\n        -0.9681602395076260898355762029036728700494,\n        0.9681602395076260898355762029036728700494,\n        -0.3242534234038089290385380146433366085719,\n        0.3242534234038089290385380146433366085719,\n        -0.6133714327005903973087020393414741847857,\n        0.6133714327005903973087020393414741847857,\n    ],\n    [\n        -0.1488743389816312108848260011297199846175,\n        0.1488743389816312108848260011297199846175,\n        -0.4333953941292471907992659431657841622,\n        0.4333953941292471907992659431657841622,\n        -0.6794095682990244062343273651148735757692,\n        0.6794095682990244062343273651148735757692,\n        -0.8650633666889845107320966884234930485275,\n        0.8650633666889845107320966884234930485275,\n        -0.9739065285171717200779640120844520534282,\n        0.9739065285171717200779640120844520534282,\n    ],\n    [\n        0, -0.2695431559523449723315319854008615246796,\n        0.2695431559523449723315319854008615246796,\n        -0.5190961292068118159257256694586095544802,\n        0.5190961292068118159257256694586095544802,\n        -0.7301520055740493240934162520311534580496,\n        0.7301520055740493240934162520311534580496,\n        -0.8870625997680952990751577693039272666316,\n        0.8870625997680952990751577693039272666316,\n        -0.9782286581460569928039380011228573907714,\n        0.9782286581460569928039380011228573907714,\n    ],\n    [\n        -0.1252334085114689154724413694638531299833,\n        0.1252334085114689154724413694638531299833,\n        -0.3678314989981801937526915366437175612563,\n        0.3678314989981801937526915366437175612563,\n        -0.587317954286617447296702418940534280369,\n        0.587317954286617447296702418940534280369,\n        -0.7699026741943046870368938332128180759849,\n        0.7699026741943046870368938332128180759849,\n        -0.9041172563704748566784658661190961925375,\n        0.9041172563704748566784658661190961925375,\n        -0.9815606342467192506905490901492808229601,\n        0.9815606342467192506905490901492808229601,\n    ],\n    [\n        0, -0.2304583159551347940655281210979888352115,\n        0.2304583159551347940655281210979888352115,\n        -0.4484927510364468528779128521276398678019,\n        0.4484927510364468528779128521276398678019,\n        -0.6423493394403402206439846069955156500716,\n        0.6423493394403402206439846069955156500716,\n        -0.8015780907333099127942064895828598903056,\n        0.8015780907333099127942064895828598903056,\n        -0.9175983992229779652065478365007195123904,\n        0.9175983992229779652065478365007195123904,\n        -0.9841830547185881494728294488071096110649,\n        0.9841830547185881494728294488071096110649,\n    ],\n    [\n        -0.1080549487073436620662446502198347476119,\n        0.1080549487073436620662446502198347476119,\n        -0.3191123689278897604356718241684754668342,\n        0.3191123689278897604356718241684754668342,\n        -0.5152486363581540919652907185511886623088,\n        0.5152486363581540919652907185511886623088,\n        -0.6872929048116854701480198030193341375384,\n        0.6872929048116854701480198030193341375384,\n        -0.8272013150697649931897947426503949610397,\n        0.8272013150697649931897947426503949610397,\n        -0.928434883663573517336391139377874264477,\n        0.928434883663573517336391139377874264477,\n        -0.986283808696812338841597266704052801676,\n        0.986283808696812338841597266704052801676,\n    ],\n    [\n        0, -0.2011940939974345223006283033945962078128,\n        0.2011940939974345223006283033945962078128,\n        -0.3941513470775633698972073709810454683627,\n        0.3941513470775633698972073709810454683627,\n        -0.5709721726085388475372267372539106412383,\n        0.5709721726085388475372267372539106412383,\n        -0.7244177313601700474161860546139380096308,\n        0.7244177313601700474161860546139380096308,\n        -0.8482065834104272162006483207742168513662,\n        0.8482065834104272162006483207742168513662,\n        -0.9372733924007059043077589477102094712439,\n        0.9372733924007059043077589477102094712439,\n        -0.9879925180204854284895657185866125811469,\n        0.9879925180204854284895657185866125811469,\n    ],\n    [\n        -0.0950125098376374401853193354249580631303,\n        0.0950125098376374401853193354249580631303,\n        -0.281603550779258913230460501460496106486,\n        0.281603550779258913230460501460496106486,\n        -0.45801677765722738634241944298357757354,\n        0.45801677765722738634241944298357757354,\n        -0.6178762444026437484466717640487910189918,\n        0.6178762444026437484466717640487910189918,\n        -0.7554044083550030338951011948474422683538,\n        0.7554044083550030338951011948474422683538,\n        -0.8656312023878317438804678977123931323873,\n        0.8656312023878317438804678977123931323873,\n        -0.9445750230732325760779884155346083450911,\n        0.9445750230732325760779884155346083450911,\n        -0.9894009349916499325961541734503326274262,\n        0.9894009349916499325961541734503326274262,\n    ],\n    [\n        0, -0.1784841814958478558506774936540655574754,\n        0.1784841814958478558506774936540655574754,\n        -0.3512317634538763152971855170953460050405,\n        0.3512317634538763152971855170953460050405,\n        -0.5126905370864769678862465686295518745829,\n        0.5126905370864769678862465686295518745829,\n        -0.6576711592166907658503022166430023351478,\n        0.6576711592166907658503022166430023351478,\n        -0.7815140038968014069252300555204760502239,\n        0.7815140038968014069252300555204760502239,\n        -0.8802391537269859021229556944881556926234,\n        0.8802391537269859021229556944881556926234,\n        -0.9506755217687677612227169578958030214433,\n        0.9506755217687677612227169578958030214433,\n        -0.9905754753144173356754340199406652765077,\n        0.9905754753144173356754340199406652765077,\n    ],\n    [\n        -0.0847750130417353012422618529357838117333,\n        0.0847750130417353012422618529357838117333,\n        -0.2518862256915055095889728548779112301628,\n        0.2518862256915055095889728548779112301628,\n        -0.4117511614628426460359317938330516370789,\n        0.4117511614628426460359317938330516370789,\n        -0.5597708310739475346078715485253291369276,\n        0.5597708310739475346078715485253291369276,\n        -0.6916870430603532078748910812888483894522,\n        0.6916870430603532078748910812888483894522,\n        -0.8037049589725231156824174550145907971032,\n        0.8037049589725231156824174550145907971032,\n        -0.8926024664975557392060605911271455154078,\n        0.8926024664975557392060605911271455154078,\n        -0.9558239495713977551811958929297763099728,\n        0.9558239495713977551811958929297763099728,\n        -0.9915651684209309467300160047061507702525,\n        0.9915651684209309467300160047061507702525,\n    ],\n    [\n        0, -0.1603586456402253758680961157407435495048,\n        0.1603586456402253758680961157407435495048,\n        -0.3165640999636298319901173288498449178922,\n        0.3165640999636298319901173288498449178922,\n        -0.4645707413759609457172671481041023679762,\n        0.4645707413759609457172671481041023679762,\n        -0.6005453046616810234696381649462392798683,\n        0.6005453046616810234696381649462392798683,\n        -0.7209661773352293786170958608237816296571,\n        0.7209661773352293786170958608237816296571,\n        -0.8227146565371428249789224867127139017745,\n        0.8227146565371428249789224867127139017745,\n        -0.9031559036148179016426609285323124878093,\n        0.9031559036148179016426609285323124878093,\n        -0.960208152134830030852778840687651526615,\n        0.960208152134830030852778840687651526615,\n        -0.9924068438435844031890176702532604935893,\n        0.9924068438435844031890176702532604935893,\n    ],\n    [\n        -0.0765265211334973337546404093988382110047,\n        0.0765265211334973337546404093988382110047,\n        -0.227785851141645078080496195368574624743,\n        0.227785851141645078080496195368574624743,\n        -0.3737060887154195606725481770249272373957,\n        0.3737060887154195606725481770249272373957,\n        -0.5108670019508270980043640509552509984254,\n        0.5108670019508270980043640509552509984254,\n        -0.6360536807265150254528366962262859367433,\n        0.6360536807265150254528366962262859367433,\n        -0.7463319064601507926143050703556415903107,\n        0.7463319064601507926143050703556415903107,\n        -0.8391169718222188233945290617015206853296,\n        0.8391169718222188233945290617015206853296,\n        -0.9122344282513259058677524412032981130491,\n        0.9122344282513259058677524412032981130491,\n        -0.963971927277913791267666131197277221912,\n        0.963971927277913791267666131197277221912,\n        -0.9931285991850949247861223884713202782226,\n        0.9931285991850949247861223884713202782226,\n    ],\n    [\n        0, -0.1455618541608950909370309823386863301163,\n        0.1455618541608950909370309823386863301163,\n        -0.288021316802401096600792516064600319909,\n        0.288021316802401096600792516064600319909,\n        -0.4243421202074387835736688885437880520964,\n        0.4243421202074387835736688885437880520964,\n        -0.551618835887219807059018796724313286622,\n        0.551618835887219807059018796724313286622,\n        -0.667138804197412319305966669990339162597,\n        0.667138804197412319305966669990339162597,\n        -0.7684399634756779086158778513062280348209,\n        0.7684399634756779086158778513062280348209,\n        -0.8533633645833172836472506385875676702761,\n        0.8533633645833172836472506385875676702761,\n        -0.9200993341504008287901871337149688941591,\n        0.9200993341504008287901871337149688941591,\n        -0.9672268385663062943166222149076951614246,\n        0.9672268385663062943166222149076951614246,\n        -0.9937521706203895002602420359379409291933,\n        0.9937521706203895002602420359379409291933,\n    ],\n    [\n        -0.0697392733197222212138417961186280818222,\n        0.0697392733197222212138417961186280818222,\n        -0.2078604266882212854788465339195457342156,\n        0.2078604266882212854788465339195457342156,\n        -0.3419358208920842251581474204273796195591,\n        0.3419358208920842251581474204273796195591,\n        -0.4693558379867570264063307109664063460953,\n        0.4693558379867570264063307109664063460953,\n        -0.5876404035069115929588769276386473488776,\n        0.5876404035069115929588769276386473488776,\n        -0.6944872631866827800506898357622567712673,\n        0.6944872631866827800506898357622567712673,\n        -0.7878168059792081620042779554083515213881,\n        0.7878168059792081620042779554083515213881,\n        -0.8658125777203001365364256370193787290847,\n        0.8658125777203001365364256370193787290847,\n        -0.9269567721871740005206929392590531966353,\n        0.9269567721871740005206929392590531966353,\n        -0.9700604978354287271239509867652687108059,\n        0.9700604978354287271239509867652687108059,\n        -0.994294585482399292073031421161298980393,\n        0.994294585482399292073031421161298980393,\n    ],\n    [\n        0, -0.1332568242984661109317426822417661370104,\n        0.1332568242984661109317426822417661370104,\n        -0.264135680970344930533869538283309602979,\n        0.264135680970344930533869538283309602979,\n        -0.390301038030290831421488872880605458578,\n        0.390301038030290831421488872880605458578,\n        -0.5095014778460075496897930478668464305448,\n        0.5095014778460075496897930478668464305448,\n        -0.6196098757636461563850973116495956533871,\n        0.6196098757636461563850973116495956533871,\n        -0.7186613631319501944616244837486188483299,\n        0.7186613631319501944616244837486188483299,\n        -0.8048884016188398921511184069967785579414,\n        0.8048884016188398921511184069967785579414,\n        -0.8767523582704416673781568859341456716389,\n        0.8767523582704416673781568859341456716389,\n        -0.9329710868260161023491969890384229782357,\n        0.9329710868260161023491969890384229782357,\n        -0.9725424712181152319560240768207773751816,\n        0.9725424712181152319560240768207773751816,\n        -0.9947693349975521235239257154455743605736,\n        0.9947693349975521235239257154455743605736,\n    ],\n    [\n        -0.0640568928626056260850430826247450385909,\n        0.0640568928626056260850430826247450385909,\n        -0.1911188674736163091586398207570696318404,\n        0.1911188674736163091586398207570696318404,\n        -0.3150426796961633743867932913198102407864,\n        0.3150426796961633743867932913198102407864,\n        -0.4337935076260451384870842319133497124524,\n        0.4337935076260451384870842319133497124524,\n        -0.5454214713888395356583756172183723700107,\n        0.5454214713888395356583756172183723700107,\n        -0.6480936519369755692524957869107476266696,\n        0.6480936519369755692524957869107476266696,\n        -0.7401241915785543642438281030999784255232,\n        0.7401241915785543642438281030999784255232,\n        -0.8200019859739029219539498726697452080761,\n        0.8200019859739029219539498726697452080761,\n        -0.8864155270044010342131543419821967550873,\n        0.8864155270044010342131543419821967550873,\n        -0.9382745520027327585236490017087214496548,\n        0.9382745520027327585236490017087214496548,\n        -0.9747285559713094981983919930081690617411,\n        0.9747285559713094981983919930081690617411,\n        -0.9951872199970213601799974097007368118745,\n        0.9951872199970213601799974097007368118745,\n    ],\n];\nexports.cValues = [\n    [],\n    [],\n    [1.0, 1.0],\n    [\n        0.8888888888888888888888888888888888888888,\n        0.5555555555555555555555555555555555555555,\n        0.5555555555555555555555555555555555555555,\n    ],\n    [\n        0.6521451548625461426269360507780005927646,\n        0.6521451548625461426269360507780005927646,\n        0.3478548451374538573730639492219994072353,\n        0.3478548451374538573730639492219994072353,\n    ],\n    [\n        0.5688888888888888888888888888888888888888,\n        0.4786286704993664680412915148356381929122,\n        0.4786286704993664680412915148356381929122,\n        0.2369268850561890875142640407199173626432,\n        0.2369268850561890875142640407199173626432,\n    ],\n    [\n        0.3607615730481386075698335138377161116615,\n        0.3607615730481386075698335138377161116615,\n        0.4679139345726910473898703439895509948116,\n        0.4679139345726910473898703439895509948116,\n        0.1713244923791703450402961421727328935268,\n        0.1713244923791703450402961421727328935268,\n    ],\n    [\n        0.4179591836734693877551020408163265306122,\n        0.3818300505051189449503697754889751338783,\n        0.3818300505051189449503697754889751338783,\n        0.2797053914892766679014677714237795824869,\n        0.2797053914892766679014677714237795824869,\n        0.1294849661688696932706114326790820183285,\n        0.1294849661688696932706114326790820183285,\n    ],\n    [\n        0.3626837833783619829651504492771956121941,\n        0.3626837833783619829651504492771956121941,\n        0.3137066458778872873379622019866013132603,\n        0.3137066458778872873379622019866013132603,\n        0.2223810344533744705443559944262408844301,\n        0.2223810344533744705443559944262408844301,\n        0.1012285362903762591525313543099621901153,\n        0.1012285362903762591525313543099621901153,\n    ],\n    [\n        0.3302393550012597631645250692869740488788,\n        0.1806481606948574040584720312429128095143,\n        0.1806481606948574040584720312429128095143,\n        0.0812743883615744119718921581105236506756,\n        0.0812743883615744119718921581105236506756,\n        0.3123470770400028400686304065844436655987,\n        0.3123470770400028400686304065844436655987,\n        0.2606106964029354623187428694186328497718,\n        0.2606106964029354623187428694186328497718,\n    ],\n    [\n        0.295524224714752870173892994651338329421,\n        0.295524224714752870173892994651338329421,\n        0.2692667193099963550912269215694693528597,\n        0.2692667193099963550912269215694693528597,\n        0.2190863625159820439955349342281631924587,\n        0.2190863625159820439955349342281631924587,\n        0.1494513491505805931457763396576973324025,\n        0.1494513491505805931457763396576973324025,\n        0.0666713443086881375935688098933317928578,\n        0.0666713443086881375935688098933317928578,\n    ],\n    [\n        0.272925086777900630714483528336342189156,\n        0.2628045445102466621806888698905091953727,\n        0.2628045445102466621806888698905091953727,\n        0.2331937645919904799185237048431751394317,\n        0.2331937645919904799185237048431751394317,\n        0.1862902109277342514260976414316558916912,\n        0.1862902109277342514260976414316558916912,\n        0.1255803694649046246346942992239401001976,\n        0.1255803694649046246346942992239401001976,\n        0.0556685671161736664827537204425485787285,\n        0.0556685671161736664827537204425485787285,\n    ],\n    [\n        0.2491470458134027850005624360429512108304,\n        0.2491470458134027850005624360429512108304,\n        0.2334925365383548087608498989248780562594,\n        0.2334925365383548087608498989248780562594,\n        0.2031674267230659217490644558097983765065,\n        0.2031674267230659217490644558097983765065,\n        0.160078328543346226334652529543359071872,\n        0.160078328543346226334652529543359071872,\n        0.1069393259953184309602547181939962242145,\n        0.1069393259953184309602547181939962242145,\n        0.047175336386511827194615961485017060317,\n        0.047175336386511827194615961485017060317,\n    ],\n    [\n        0.2325515532308739101945895152688359481566,\n        0.2262831802628972384120901860397766184347,\n        0.2262831802628972384120901860397766184347,\n        0.2078160475368885023125232193060527633865,\n        0.2078160475368885023125232193060527633865,\n        0.1781459807619457382800466919960979955128,\n        0.1781459807619457382800466919960979955128,\n        0.1388735102197872384636017768688714676218,\n        0.1388735102197872384636017768688714676218,\n        0.0921214998377284479144217759537971209236,\n        0.0921214998377284479144217759537971209236,\n        0.0404840047653158795200215922009860600419,\n        0.0404840047653158795200215922009860600419,\n    ],\n    [\n        0.2152638534631577901958764433162600352749,\n        0.2152638534631577901958764433162600352749,\n        0.2051984637212956039659240656612180557103,\n        0.2051984637212956039659240656612180557103,\n        0.1855383974779378137417165901251570362489,\n        0.1855383974779378137417165901251570362489,\n        0.1572031671581935345696019386238421566056,\n        0.1572031671581935345696019386238421566056,\n        0.1215185706879031846894148090724766259566,\n        0.1215185706879031846894148090724766259566,\n        0.0801580871597602098056332770628543095836,\n        0.0801580871597602098056332770628543095836,\n        0.0351194603317518630318328761381917806197,\n        0.0351194603317518630318328761381917806197,\n    ],\n    [\n        0.2025782419255612728806201999675193148386,\n        0.1984314853271115764561183264438393248186,\n        0.1984314853271115764561183264438393248186,\n        0.1861610000155622110268005618664228245062,\n        0.1861610000155622110268005618664228245062,\n        0.1662692058169939335532008604812088111309,\n        0.1662692058169939335532008604812088111309,\n        0.1395706779261543144478047945110283225208,\n        0.1395706779261543144478047945110283225208,\n        0.1071592204671719350118695466858693034155,\n        0.1071592204671719350118695466858693034155,\n        0.0703660474881081247092674164506673384667,\n        0.0703660474881081247092674164506673384667,\n        0.0307532419961172683546283935772044177217,\n        0.0307532419961172683546283935772044177217,\n    ],\n    [\n        0.1894506104550684962853967232082831051469,\n        0.1894506104550684962853967232082831051469,\n        0.1826034150449235888667636679692199393835,\n        0.1826034150449235888667636679692199393835,\n        0.1691565193950025381893120790303599622116,\n        0.1691565193950025381893120790303599622116,\n        0.1495959888165767320815017305474785489704,\n        0.1495959888165767320815017305474785489704,\n        0.1246289712555338720524762821920164201448,\n        0.1246289712555338720524762821920164201448,\n        0.0951585116824927848099251076022462263552,\n        0.0951585116824927848099251076022462263552,\n        0.0622535239386478928628438369943776942749,\n        0.0622535239386478928628438369943776942749,\n        0.0271524594117540948517805724560181035122,\n        0.0271524594117540948517805724560181035122,\n    ],\n    [\n        0.1794464703562065254582656442618856214487,\n        0.1765627053669926463252709901131972391509,\n        0.1765627053669926463252709901131972391509,\n        0.1680041021564500445099706637883231550211,\n        0.1680041021564500445099706637883231550211,\n        0.1540457610768102880814315948019586119404,\n        0.1540457610768102880814315948019586119404,\n        0.1351363684685254732863199817023501973721,\n        0.1351363684685254732863199817023501973721,\n        0.1118838471934039710947883856263559267358,\n        0.1118838471934039710947883856263559267358,\n        0.0850361483171791808835353701910620738504,\n        0.0850361483171791808835353701910620738504,\n        0.0554595293739872011294401653582446605128,\n        0.0554595293739872011294401653582446605128,\n        0.0241483028685479319601100262875653246916,\n        0.0241483028685479319601100262875653246916,\n    ],\n    [\n        0.1691423829631435918406564701349866103341,\n        0.1691423829631435918406564701349866103341,\n        0.1642764837458327229860537764659275904123,\n        0.1642764837458327229860537764659275904123,\n        0.1546846751262652449254180038363747721932,\n        0.1546846751262652449254180038363747721932,\n        0.1406429146706506512047313037519472280955,\n        0.1406429146706506512047313037519472280955,\n        0.1225552067114784601845191268002015552281,\n        0.1225552067114784601845191268002015552281,\n        0.1009420441062871655628139849248346070628,\n        0.1009420441062871655628139849248346070628,\n        0.0764257302548890565291296776166365256053,\n        0.0764257302548890565291296776166365256053,\n        0.0497145488949697964533349462026386416808,\n        0.0497145488949697964533349462026386416808,\n        0.0216160135264833103133427102664524693876,\n        0.0216160135264833103133427102664524693876,\n    ],\n    [\n        0.1610544498487836959791636253209167350399,\n        0.1589688433939543476499564394650472016787,\n        0.1589688433939543476499564394650472016787,\n        0.152766042065859666778855400897662998461,\n        0.152766042065859666778855400897662998461,\n        0.1426067021736066117757461094419029724756,\n        0.1426067021736066117757461094419029724756,\n        0.1287539625393362276755157848568771170558,\n        0.1287539625393362276755157848568771170558,\n        0.1115666455473339947160239016817659974813,\n        0.1115666455473339947160239016817659974813,\n        0.0914900216224499994644620941238396526609,\n        0.0914900216224499994644620941238396526609,\n        0.0690445427376412265807082580060130449618,\n        0.0690445427376412265807082580060130449618,\n        0.0448142267656996003328381574019942119517,\n        0.0448142267656996003328381574019942119517,\n        0.0194617882297264770363120414644384357529,\n        0.0194617882297264770363120414644384357529,\n    ],\n    [\n        0.1527533871307258506980843319550975934919,\n        0.1527533871307258506980843319550975934919,\n        0.1491729864726037467878287370019694366926,\n        0.1491729864726037467878287370019694366926,\n        0.1420961093183820513292983250671649330345,\n        0.1420961093183820513292983250671649330345,\n        0.1316886384491766268984944997481631349161,\n        0.1316886384491766268984944997481631349161,\n        0.118194531961518417312377377711382287005,\n        0.118194531961518417312377377711382287005,\n        0.1019301198172404350367501354803498761666,\n        0.1019301198172404350367501354803498761666,\n        0.0832767415767047487247581432220462061001,\n        0.0832767415767047487247581432220462061001,\n        0.0626720483341090635695065351870416063516,\n        0.0626720483341090635695065351870416063516,\n        0.040601429800386941331039952274932109879,\n        0.040601429800386941331039952274932109879,\n        0.0176140071391521183118619623518528163621,\n        0.0176140071391521183118619623518528163621,\n    ],\n    [\n        0.1460811336496904271919851476833711882448,\n        0.1445244039899700590638271665537525436099,\n        0.1445244039899700590638271665537525436099,\n        0.1398873947910731547221334238675831108927,\n        0.1398873947910731547221334238675831108927,\n        0.132268938633337461781052574496775604329,\n        0.132268938633337461781052574496775604329,\n        0.1218314160537285341953671771257335983563,\n        0.1218314160537285341953671771257335983563,\n        0.1087972991671483776634745780701056420336,\n        0.1087972991671483776634745780701056420336,\n        0.0934444234560338615532897411139320884835,\n        0.0934444234560338615532897411139320884835,\n        0.0761001136283793020170516533001831792261,\n        0.0761001136283793020170516533001831792261,\n        0.0571344254268572082836358264724479574912,\n        0.0571344254268572082836358264724479574912,\n        0.0369537897708524937999506682993296661889,\n        0.0369537897708524937999506682993296661889,\n        0.0160172282577743333242246168584710152658,\n        0.0160172282577743333242246168584710152658,\n    ],\n    [\n        0.1392518728556319933754102483418099578739,\n        0.1392518728556319933754102483418099578739,\n        0.1365414983460151713525738312315173965863,\n        0.1365414983460151713525738312315173965863,\n        0.1311735047870623707329649925303074458757,\n        0.1311735047870623707329649925303074458757,\n        0.1232523768105124242855609861548144719594,\n        0.1232523768105124242855609861548144719594,\n        0.1129322960805392183934006074217843191142,\n        0.1129322960805392183934006074217843191142,\n        0.1004141444428809649320788378305362823508,\n        0.1004141444428809649320788378305362823508,\n        0.0859416062170677274144436813727028661891,\n        0.0859416062170677274144436813727028661891,\n        0.0697964684245204880949614189302176573987,\n        0.0697964684245204880949614189302176573987,\n        0.0522933351526832859403120512732112561121,\n        0.0522933351526832859403120512732112561121,\n        0.0337749015848141547933022468659129013491,\n        0.0337749015848141547933022468659129013491,\n        0.0146279952982722006849910980471854451902,\n        0.0146279952982722006849910980471854451902,\n    ],\n    [\n        0.1336545721861061753514571105458443385831,\n        0.132462039404696617371642464703316925805,\n        0.132462039404696617371642464703316925805,\n        0.1289057221880821499785953393997936532597,\n        0.1289057221880821499785953393997936532597,\n        0.1230490843067295304675784006720096548158,\n        0.1230490843067295304675784006720096548158,\n        0.1149966402224113649416435129339613014914,\n        0.1149966402224113649416435129339613014914,\n        0.1048920914645414100740861850147438548584,\n        0.1048920914645414100740861850147438548584,\n        0.0929157660600351474770186173697646486034,\n        0.0929157660600351474770186173697646486034,\n        0.0792814117767189549228925247420432269137,\n        0.0792814117767189549228925247420432269137,\n        0.0642324214085258521271696151589109980391,\n        0.0642324214085258521271696151589109980391,\n        0.0480376717310846685716410716320339965612,\n        0.0480376717310846685716410716320339965612,\n        0.0309880058569794443106942196418845053837,\n        0.0309880058569794443106942196418845053837,\n        0.0134118594871417720813094934586150649766,\n        0.0134118594871417720813094934586150649766,\n    ],\n    [\n        0.1279381953467521569740561652246953718517,\n        0.1279381953467521569740561652246953718517,\n        0.1258374563468282961213753825111836887264,\n        0.1258374563468282961213753825111836887264,\n        0.121670472927803391204463153476262425607,\n        0.121670472927803391204463153476262425607,\n        0.1155056680537256013533444839067835598622,\n        0.1155056680537256013533444839067835598622,\n        0.1074442701159656347825773424466062227946,\n        0.1074442701159656347825773424466062227946,\n        0.0976186521041138882698806644642471544279,\n        0.0976186521041138882698806644642471544279,\n        0.086190161531953275917185202983742667185,\n        0.086190161531953275917185202983742667185,\n        0.0733464814110803057340336152531165181193,\n        0.0733464814110803057340336152531165181193,\n        0.0592985849154367807463677585001085845412,\n        0.0592985849154367807463677585001085845412,\n        0.0442774388174198061686027482113382288593,\n        0.0442774388174198061686027482113382288593,\n        0.0285313886289336631813078159518782864491,\n        0.0285313886289336631813078159518782864491,\n        0.0123412297999871995468056670700372915759,\n        0.0123412297999871995468056670700372915759,\n    ],\n];\nexports.binomialCoefficients = [[1], [1, 1], [1, 2, 1], [1, 3, 3, 1]];\nconst getCubicArcLength = (xs, ys, t) => {\n    let sum;\n    let correctedT;\n    const n = 20;\n    const z = t / 2;\n    sum = 0;\n    for (let i = 0; i < n; i++) {\n        correctedT = z * exports.tValues[n][i] + z;\n        sum += exports.cValues[n][i] * BFunc(xs, ys, correctedT);\n    }\n    return z * sum;\n};\nexports.getCubicArcLength = getCubicArcLength;\nconst getQuadraticArcLength = (xs, ys, t) => {\n    if (t === undefined) {\n        t = 1;\n    }\n    const ax = xs[0] - 2 * xs[1] + xs[2];\n    const ay = ys[0] - 2 * ys[1] + ys[2];\n    const bx = 2 * xs[1] - 2 * xs[0];\n    const by = 2 * ys[1] - 2 * ys[0];\n    const A = 4 * (ax * ax + ay * ay);\n    const B = 4 * (ax * bx + ay * by);\n    const C = bx * bx + by * by;\n    if (A === 0) {\n        return (t * Math.sqrt(Math.pow(xs[2] - xs[0], 2) + Math.pow(ys[2] - ys[0], 2)));\n    }\n    const b = B / (2 * A);\n    const c = C / A;\n    const u = t + b;\n    const k = c - b * b;\n    const uuk = u * u + k > 0 ? Math.sqrt(u * u + k) : 0;\n    const bbk = b * b + k > 0 ? Math.sqrt(b * b + k) : 0;\n    const term = b + Math.sqrt(b * b + k) !== 0\n        ? k * Math.log(Math.abs((u + uuk) / (b + bbk)))\n        : 0;\n    return (Math.sqrt(A) / 2) * (u * uuk - b * bbk + term);\n};\nexports.getQuadraticArcLength = getQuadraticArcLength;\nfunction BFunc(xs, ys, t) {\n    const xbase = getDerivative(1, t, xs);\n    const ybase = getDerivative(1, t, ys);\n    const combined = xbase * xbase + ybase * ybase;\n    return Math.sqrt(combined);\n}\nconst getDerivative = (derivative, t, vs) => {\n    const n = vs.length - 1;\n    let _vs;\n    let value;\n    if (n === 0) {\n        return 0;\n    }\n    if (derivative === 0) {\n        value = 0;\n        for (let k = 0; k <= n; k++) {\n            value +=\n                exports.binomialCoefficients[n][k] *\n                    Math.pow(1 - t, n - k) *\n                    Math.pow(t, k) *\n                    vs[k];\n        }\n        return value;\n    }\n    else {\n        _vs = new Array(n);\n        for (let k = 0; k < n; k++) {\n            _vs[k] = n * (vs[k + 1] - vs[k]);\n        }\n        return getDerivative(derivative - 1, t, _vs);\n    }\n};\nconst t2length = (length, totalLength, func) => {\n    let error = 1;\n    let t = length / totalLength;\n    let step = (length - func(t)) / totalLength;\n    let numIterations = 0;\n    while (error > 0.001) {\n        const increasedTLength = func(t + step);\n        const increasedTError = Math.abs(length - increasedTLength) / totalLength;\n        if (increasedTError < error) {\n            error = increasedTError;\n            t += step;\n        }\n        else {\n            const decreasedTLength = func(t - step);\n            const decreasedTError = Math.abs(length - decreasedTLength) / totalLength;\n            if (decreasedTError < error) {\n                error = decreasedTError;\n                t -= step;\n            }\n            else {\n                step /= 2;\n            }\n        }\n        numIterations++;\n        if (numIterations > 500) {\n            break;\n        }\n    }\n    return t;\n};\nexports.t2length = t2length;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/BezierFunctions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Canvas.js":
/*!******************************************!*\
  !*** ./node_modules/konva/lib/Canvas.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HitCanvas = exports.SceneCanvas = exports.Canvas = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Context_1 = __webpack_require__(/*! ./Context */ \"(app-pages-browser)/./node_modules/konva/lib/Context.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Factory_1 = __webpack_require__(/*! ./Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Validators_1 = __webpack_require__(/*! ./Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nlet _pixelRatio;\nfunction getDevicePixelRatio() {\n    if (_pixelRatio) {\n        return _pixelRatio;\n    }\n    const canvas = Util_1.Util.createCanvasElement();\n    const context = canvas.getContext('2d');\n    _pixelRatio = (function () {\n        const devicePixelRatio = Global_1.Konva._global.devicePixelRatio || 1, backingStoreRatio = context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            context.backingStorePixelRatio ||\n            1;\n        return devicePixelRatio / backingStoreRatio;\n    })();\n    Util_1.Util.releaseCanvas(canvas);\n    return _pixelRatio;\n}\nclass Canvas {\n    constructor(config) {\n        this.pixelRatio = 1;\n        this.width = 0;\n        this.height = 0;\n        this.isCache = false;\n        const conf = config || {};\n        const pixelRatio = conf.pixelRatio || Global_1.Konva.pixelRatio || getDevicePixelRatio();\n        this.pixelRatio = pixelRatio;\n        this._canvas = Util_1.Util.createCanvasElement();\n        this._canvas.style.padding = '0';\n        this._canvas.style.margin = '0';\n        this._canvas.style.border = '0';\n        this._canvas.style.background = 'transparent';\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.top = '0';\n        this._canvas.style.left = '0';\n    }\n    getContext() {\n        return this.context;\n    }\n    getPixelRatio() {\n        return this.pixelRatio;\n    }\n    setPixelRatio(pixelRatio) {\n        const previousRatio = this.pixelRatio;\n        this.pixelRatio = pixelRatio;\n        this.setSize(this.getWidth() / previousRatio, this.getHeight() / previousRatio);\n    }\n    setWidth(width) {\n        this.width = this._canvas.width = width * this.pixelRatio;\n        this._canvas.style.width = width + 'px';\n        const pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    setHeight(height) {\n        this.height = this._canvas.height = height * this.pixelRatio;\n        this._canvas.style.height = height + 'px';\n        const pixelRatio = this.pixelRatio, _context = this.getContext()._context;\n        _context.scale(pixelRatio, pixelRatio);\n    }\n    getWidth() {\n        return this.width;\n    }\n    getHeight() {\n        return this.height;\n    }\n    setSize(width, height) {\n        this.setWidth(width || 0);\n        this.setHeight(height || 0);\n    }\n    toDataURL(mimeType, quality) {\n        try {\n            return this._canvas.toDataURL(mimeType, quality);\n        }\n        catch (e) {\n            try {\n                return this._canvas.toDataURL();\n            }\n            catch (err) {\n                Util_1.Util.error('Unable to get data URL. ' +\n                    err.message +\n                    ' For more info read https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                return '';\n            }\n        }\n    }\n}\nexports.Canvas = Canvas;\nFactory_1.Factory.addGetterSetter(Canvas, 'pixelRatio', undefined, (0, Validators_1.getNumberValidator)());\nclass SceneCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0, willReadFrequently: false }) {\n        super(config);\n        this.context = new Context_1.SceneContext(this, {\n            willReadFrequently: config.willReadFrequently,\n        });\n        this.setSize(config.width, config.height);\n    }\n}\nexports.SceneCanvas = SceneCanvas;\nclass HitCanvas extends Canvas {\n    constructor(config = { width: 0, height: 0 }) {\n        super(config);\n        this.hitCanvas = true;\n        this.context = new Context_1.HitContext(this);\n        this.setSize(config.width, config.height);\n    }\n}\nexports.HitCanvas = HitCanvas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvQ2FudmFzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG1CQUFtQixHQUFHLGNBQWM7QUFDeEQsZUFBZSxtQkFBTyxDQUFDLG9FQUFRO0FBQy9CLGtCQUFrQixtQkFBTyxDQUFDLDBFQUFXO0FBQ3JDLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFVO0FBQ25DLGtCQUFrQixtQkFBTyxDQUFDLDBFQUFXO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLGdGQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSwyQkFBMkIsZ0RBQWdEO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSwyQkFBMkIscUJBQXFCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL0NhbnZhcy5qcz84ZjQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IaXRDYW52YXMgPSBleHBvcnRzLlNjZW5lQ2FudmFzID0gZXhwb3J0cy5DYW52YXMgPSB2b2lkIDA7XG5jb25zdCBVdGlsXzEgPSByZXF1aXJlKFwiLi9VdGlsXCIpO1xuY29uc3QgQ29udGV4dF8xID0gcmVxdWlyZShcIi4vQ29udGV4dFwiKTtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4vR2xvYmFsXCIpO1xuY29uc3QgRmFjdG9yeV8xID0gcmVxdWlyZShcIi4vRmFjdG9yeVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuL1ZhbGlkYXRvcnNcIik7XG5sZXQgX3BpeGVsUmF0aW87XG5mdW5jdGlvbiBnZXREZXZpY2VQaXhlbFJhdGlvKCkge1xuICAgIGlmIChfcGl4ZWxSYXRpbykge1xuICAgICAgICByZXR1cm4gX3BpeGVsUmF0aW87XG4gICAgfVxuICAgIGNvbnN0IGNhbnZhcyA9IFV0aWxfMS5VdGlsLmNyZWF0ZUNhbnZhc0VsZW1lbnQoKTtcbiAgICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgX3BpeGVsUmF0aW8gPSAoZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zdCBkZXZpY2VQaXhlbFJhdGlvID0gR2xvYmFsXzEuS29udmEuX2dsb2JhbC5kZXZpY2VQaXhlbFJhdGlvIHx8IDEsIGJhY2tpbmdTdG9yZVJhdGlvID0gY29udGV4dC53ZWJraXRCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgICAgICBjb250ZXh0Lm1vekJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgICAgICAgIGNvbnRleHQubXNCYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgICAgICBjb250ZXh0Lm9CYWNraW5nU3RvcmVQaXhlbFJhdGlvIHx8XG4gICAgICAgICAgICBjb250ZXh0LmJhY2tpbmdTdG9yZVBpeGVsUmF0aW8gfHxcbiAgICAgICAgICAgIDE7XG4gICAgICAgIHJldHVybiBkZXZpY2VQaXhlbFJhdGlvIC8gYmFja2luZ1N0b3JlUmF0aW87XG4gICAgfSkoKTtcbiAgICBVdGlsXzEuVXRpbC5yZWxlYXNlQ2FudmFzKGNhbnZhcyk7XG4gICAgcmV0dXJuIF9waXhlbFJhdGlvO1xufVxuY2xhc3MgQ2FudmFzIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgdGhpcy5waXhlbFJhdGlvID0gMTtcbiAgICAgICAgdGhpcy53aWR0aCA9IDA7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gMDtcbiAgICAgICAgdGhpcy5pc0NhY2hlID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IGNvbmYgPSBjb25maWcgfHwge307XG4gICAgICAgIGNvbnN0IHBpeGVsUmF0aW8gPSBjb25mLnBpeGVsUmF0aW8gfHwgR2xvYmFsXzEuS29udmEucGl4ZWxSYXRpbyB8fCBnZXREZXZpY2VQaXhlbFJhdGlvKCk7XG4gICAgICAgIHRoaXMucGl4ZWxSYXRpbyA9IHBpeGVsUmF0aW87XG4gICAgICAgIHRoaXMuX2NhbnZhcyA9IFV0aWxfMS5VdGlsLmNyZWF0ZUNhbnZhc0VsZW1lbnQoKTtcbiAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlLnBhZGRpbmcgPSAnMCc7XG4gICAgICAgIHRoaXMuX2NhbnZhcy5zdHlsZS5tYXJnaW4gPSAnMCc7XG4gICAgICAgIHRoaXMuX2NhbnZhcy5zdHlsZS5ib3JkZXIgPSAnMCc7XG4gICAgICAgIHRoaXMuX2NhbnZhcy5zdHlsZS5iYWNrZ3JvdW5kID0gJ3RyYW5zcGFyZW50JztcbiAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcbiAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlLnRvcCA9ICcwJztcbiAgICAgICAgdGhpcy5fY2FudmFzLnN0eWxlLmxlZnQgPSAnMCc7XG4gICAgfVxuICAgIGdldENvbnRleHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHQ7XG4gICAgfVxuICAgIGdldFBpeGVsUmF0aW8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBpeGVsUmF0aW87XG4gICAgfVxuICAgIHNldFBpeGVsUmF0aW8ocGl4ZWxSYXRpbykge1xuICAgICAgICBjb25zdCBwcmV2aW91c1JhdGlvID0gdGhpcy5waXhlbFJhdGlvO1xuICAgICAgICB0aGlzLnBpeGVsUmF0aW8gPSBwaXhlbFJhdGlvO1xuICAgICAgICB0aGlzLnNldFNpemUodGhpcy5nZXRXaWR0aCgpIC8gcHJldmlvdXNSYXRpbywgdGhpcy5nZXRIZWlnaHQoKSAvIHByZXZpb3VzUmF0aW8pO1xuICAgIH1cbiAgICBzZXRXaWR0aCh3aWR0aCkge1xuICAgICAgICB0aGlzLndpZHRoID0gdGhpcy5fY2FudmFzLndpZHRoID0gd2lkdGggKiB0aGlzLnBpeGVsUmF0aW87XG4gICAgICAgIHRoaXMuX2NhbnZhcy5zdHlsZS53aWR0aCA9IHdpZHRoICsgJ3B4JztcbiAgICAgICAgY29uc3QgcGl4ZWxSYXRpbyA9IHRoaXMucGl4ZWxSYXRpbywgX2NvbnRleHQgPSB0aGlzLmdldENvbnRleHQoKS5fY29udGV4dDtcbiAgICAgICAgX2NvbnRleHQuc2NhbGUocGl4ZWxSYXRpbywgcGl4ZWxSYXRpbyk7XG4gICAgfVxuICAgIHNldEhlaWdodChoZWlnaHQpIHtcbiAgICAgICAgdGhpcy5oZWlnaHQgPSB0aGlzLl9jYW52YXMuaGVpZ2h0ID0gaGVpZ2h0ICogdGhpcy5waXhlbFJhdGlvO1xuICAgICAgICB0aGlzLl9jYW52YXMuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgY29uc3QgcGl4ZWxSYXRpbyA9IHRoaXMucGl4ZWxSYXRpbywgX2NvbnRleHQgPSB0aGlzLmdldENvbnRleHQoKS5fY29udGV4dDtcbiAgICAgICAgX2NvbnRleHQuc2NhbGUocGl4ZWxSYXRpbywgcGl4ZWxSYXRpbyk7XG4gICAgfVxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy53aWR0aDtcbiAgICB9XG4gICAgZ2V0SGVpZ2h0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oZWlnaHQ7XG4gICAgfVxuICAgIHNldFNpemUod2lkdGgsIGhlaWdodCkge1xuICAgICAgICB0aGlzLnNldFdpZHRoKHdpZHRoIHx8IDApO1xuICAgICAgICB0aGlzLnNldEhlaWdodChoZWlnaHQgfHwgMCk7XG4gICAgfVxuICAgIHRvRGF0YVVSTChtaW1lVHlwZSwgcXVhbGl0eSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NhbnZhcy50b0RhdGFVUkwobWltZVR5cGUsIHF1YWxpdHkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYW52YXMudG9EYXRhVVJMKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgVXRpbF8xLlV0aWwuZXJyb3IoJ1VuYWJsZSB0byBnZXQgZGF0YSBVUkwuICcgK1xuICAgICAgICAgICAgICAgICAgICBlcnIubWVzc2FnZSArXG4gICAgICAgICAgICAgICAgICAgICcgRm9yIG1vcmUgaW5mbyByZWFkIGh0dHBzOi8va29udmFqcy5vcmcvZG9jcy9wb3N0cy9UYWludGVkX0NhbnZhcy5odG1sLicpO1xuICAgICAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQ2FudmFzID0gQ2FudmFzO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKENhbnZhcywgJ3BpeGVsUmF0aW8nLCB1bmRlZmluZWQsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpKTtcbmNsYXNzIFNjZW5lQ2FudmFzIGV4dGVuZHMgQ2FudmFzIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7IHdpZHRoOiAwLCBoZWlnaHQ6IDAsIHdpbGxSZWFkRnJlcXVlbnRseTogZmFsc2UgfSkge1xuICAgICAgICBzdXBlcihjb25maWcpO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBuZXcgQ29udGV4dF8xLlNjZW5lQ29udGV4dCh0aGlzLCB7XG4gICAgICAgICAgICB3aWxsUmVhZEZyZXF1ZW50bHk6IGNvbmZpZy53aWxsUmVhZEZyZXF1ZW50bHksXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNldFNpemUoY29uZmlnLndpZHRoLCBjb25maWcuaGVpZ2h0KTtcbiAgICB9XG59XG5leHBvcnRzLlNjZW5lQ2FudmFzID0gU2NlbmVDYW52YXM7XG5jbGFzcyBIaXRDYW52YXMgZXh0ZW5kcyBDYW52YXMge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHsgd2lkdGg6IDAsIGhlaWdodDogMCB9KSB7XG4gICAgICAgIHN1cGVyKGNvbmZpZyk7XG4gICAgICAgIHRoaXMuaGl0Q2FudmFzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gbmV3IENvbnRleHRfMS5IaXRDb250ZXh0KHRoaXMpO1xuICAgICAgICB0aGlzLnNldFNpemUoY29uZmlnLndpZHRoLCBjb25maWcuaGVpZ2h0KTtcbiAgICB9XG59XG5leHBvcnRzLkhpdENhbnZhcyA9IEhpdENhbnZhcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Canvas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Container.js":
/*!*********************************************!*\
  !*** ./node_modules/konva/lib/Container.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Container = void 0;\nconst Factory_1 = __webpack_require__(/*! ./Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ./Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ./Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nclass Container extends Node_1.Node {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n    }\n    getChildren(filterFunc) {\n        if (!filterFunc) {\n            return this.children || [];\n        }\n        const children = this.children || [];\n        const results = [];\n        children.forEach(function (child) {\n            if (filterFunc(child)) {\n                results.push(child);\n            }\n        });\n        return results;\n    }\n    hasChildren() {\n        return this.getChildren().length > 0;\n    }\n    removeChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.remove();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    destroyChildren() {\n        this.getChildren().forEach((child) => {\n            child.parent = null;\n            child.index = 0;\n            child.destroy();\n        });\n        this.children = [];\n        this._requestDraw();\n        return this;\n    }\n    add(...children) {\n        if (children.length === 0) {\n            return this;\n        }\n        if (children.length > 1) {\n            for (let i = 0; i < children.length; i++) {\n                this.add(children[i]);\n            }\n            return this;\n        }\n        const child = children[0];\n        if (child.getParent()) {\n            child.moveTo(this);\n            return this;\n        }\n        this._validateAdd(child);\n        child.index = this.getChildren().length;\n        child.parent = this;\n        child._clearCaches();\n        this.getChildren().push(child);\n        this._fire('add', {\n            child: child,\n        });\n        this._requestDraw();\n        return this;\n    }\n    destroy() {\n        if (this.hasChildren()) {\n            this.destroyChildren();\n        }\n        super.destroy();\n        return this;\n    }\n    find(selector) {\n        return this._generalFind(selector, false);\n    }\n    findOne(selector) {\n        const result = this._generalFind(selector, true);\n        return result.length > 0 ? result[0] : undefined;\n    }\n    _generalFind(selector, findOne) {\n        const retArr = [];\n        this._descendants((node) => {\n            const valid = node._isMatch(selector);\n            if (valid) {\n                retArr.push(node);\n            }\n            if (valid && findOne) {\n                return true;\n            }\n            return false;\n        });\n        return retArr;\n    }\n    _descendants(fn) {\n        let shouldStop = false;\n        const children = this.getChildren();\n        for (const child of children) {\n            shouldStop = fn(child);\n            if (shouldStop) {\n                return true;\n            }\n            if (!child.hasChildren()) {\n                continue;\n            }\n            shouldStop = child._descendants(fn);\n            if (shouldStop) {\n                return true;\n            }\n        }\n        return false;\n    }\n    toObject() {\n        const obj = Node_1.Node.prototype.toObject.call(this);\n        obj.children = [];\n        this.getChildren().forEach((child) => {\n            obj.children.push(child.toObject());\n        });\n        return obj;\n    }\n    isAncestorOf(node) {\n        let parent = node.getParent();\n        while (parent) {\n            if (parent._id === this._id) {\n                return true;\n            }\n            parent = parent.getParent();\n        }\n        return false;\n    }\n    clone(obj) {\n        const node = Node_1.Node.prototype.clone.call(this, obj);\n        this.getChildren().forEach(function (no) {\n            node.add(no.clone());\n        });\n        return node;\n    }\n    getAllIntersections(pos) {\n        const arr = [];\n        this.find('Shape').forEach((shape) => {\n            if (shape.isVisible() && shape.intersects(pos)) {\n                arr.push(shape);\n            }\n        });\n        return arr;\n    }\n    _clearSelfAndDescendantCache(attr) {\n        var _a;\n        super._clearSelfAndDescendantCache(attr);\n        if (this.isCached()) {\n            return;\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (node) {\n            node._clearSelfAndDescendantCache(attr);\n        });\n    }\n    _setChildrenIndices() {\n        var _a;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child, n) {\n            child.index = n;\n        });\n        this._requestDraw();\n    }\n    drawScene(can, top, bufferCanvas) {\n        const layer = this.getLayer(), canvas = can || (layer && layer.getCanvas()), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n        const caching = canvas && canvas.isCache;\n        if (!this.isVisible() && !caching) {\n            return this;\n        }\n        if (cachedSceneCanvas) {\n            context.save();\n            const m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawScene', canvas, top, bufferCanvas);\n        }\n        return this;\n    }\n    drawHit(can, top) {\n        if (!this.shouldDrawHit(top)) {\n            return this;\n        }\n        const layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas), context = canvas && canvas.getContext(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (cachedHitCanvas) {\n            context.save();\n            const m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n        }\n        else {\n            this._drawChildren('drawHit', canvas, top);\n        }\n        return this;\n    }\n    _drawChildren(drawMethod, canvas, top, bufferCanvas) {\n        var _a;\n        const context = canvas && canvas.getContext(), clipWidth = this.clipWidth(), clipHeight = this.clipHeight(), clipFunc = this.clipFunc(), hasClip = (typeof clipWidth === 'number' && typeof clipHeight === 'number') ||\n            clipFunc;\n        const selfCache = top === this;\n        if (hasClip) {\n            context.save();\n            const transform = this.getAbsoluteTransform(top);\n            let m = transform.getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            context.beginPath();\n            let clipArgs;\n            if (clipFunc) {\n                clipArgs = clipFunc.call(this, context, this);\n            }\n            else {\n                const clipX = this.clipX();\n                const clipY = this.clipY();\n                context.rect(clipX || 0, clipY || 0, clipWidth, clipHeight);\n            }\n            context.clip.apply(context, clipArgs);\n            m = transform.copy().invert().getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        }\n        const hasComposition = !selfCache &&\n            this.globalCompositeOperation() !== 'source-over' &&\n            drawMethod === 'drawScene';\n        if (hasComposition) {\n            context.save();\n            context._applyGlobalCompositeOperation(this);\n        }\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            child[drawMethod](canvas, top, bufferCanvas);\n        });\n        if (hasComposition) {\n            context.restore();\n        }\n        if (hasClip) {\n            context.restore();\n        }\n    }\n    getClientRect(config = {}) {\n        var _a;\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo;\n        let minX, minY, maxX, maxY;\n        let selfRect = {\n            x: Infinity,\n            y: Infinity,\n            width: 0,\n            height: 0,\n        };\n        const that = this;\n        (_a = this.children) === null || _a === void 0 ? void 0 : _a.forEach(function (child) {\n            if (!child.visible()) {\n                return;\n            }\n            const rect = child.getClientRect({\n                relativeTo: that,\n                skipShadow: config.skipShadow,\n                skipStroke: config.skipStroke,\n            });\n            if (rect.width === 0 && rect.height === 0) {\n                return;\n            }\n            if (minX === undefined) {\n                minX = rect.x;\n                minY = rect.y;\n                maxX = rect.x + rect.width;\n                maxY = rect.y + rect.height;\n            }\n            else {\n                minX = Math.min(minX, rect.x);\n                minY = Math.min(minY, rect.y);\n                maxX = Math.max(maxX, rect.x + rect.width);\n                maxY = Math.max(maxY, rect.y + rect.height);\n            }\n        });\n        const shapes = this.find('Shape');\n        let hasVisible = false;\n        for (let i = 0; i < shapes.length; i++) {\n            const shape = shapes[i];\n            if (shape._isVisible(this)) {\n                hasVisible = true;\n                break;\n            }\n        }\n        if (hasVisible && minX !== undefined) {\n            selfRect = {\n                x: minX,\n                y: minY,\n                width: maxX - minX,\n                height: maxY - minY,\n            };\n        }\n        else {\n            selfRect = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (!skipTransform) {\n            return this._transformedRect(selfRect, relativeTo);\n        }\n        return selfRect;\n    }\n}\nexports.Container = Container;\nFactory_1.Factory.addComponentsGetterSetter(Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height',\n]);\nFactory_1.Factory.addGetterSetter(Container, 'clipX', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipY', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipWidth', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipHeight', undefined, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Container, 'clipFunc');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvQ29udGFpbmVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixrQkFBa0IsbUJBQU8sQ0FBQywwRUFBVztBQUNyQyxlQUFlLG1CQUFPLENBQUMsb0VBQVE7QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsZ0ZBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIscUJBQXFCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QixtQkFBbUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL0NvbnRhaW5lci5qcz84ZGU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db250YWluZXIgPSB2b2lkIDA7XG5jb25zdCBGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi9GYWN0b3J5XCIpO1xuY29uc3QgTm9kZV8xID0gcmVxdWlyZShcIi4vTm9kZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuL1ZhbGlkYXRvcnNcIik7XG5jbGFzcyBDb250YWluZXIgZXh0ZW5kcyBOb2RlXzEuTm9kZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICB9XG4gICAgZ2V0Q2hpbGRyZW4oZmlsdGVyRnVuYykge1xuICAgICAgICBpZiAoIWZpbHRlckZ1bmMpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuIHx8IFtdO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy5jaGlsZHJlbiB8fCBbXTtcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgaWYgKGZpbHRlckZ1bmMoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGNoaWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cbiAgICBoYXNDaGlsZHJlbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q2hpbGRyZW4oKS5sZW5ndGggPiAwO1xuICAgIH1cbiAgICByZW1vdmVDaGlsZHJlbigpIHtcbiAgICAgICAgdGhpcy5nZXRDaGlsZHJlbigpLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICAgICAgICBjaGlsZC5wYXJlbnQgPSBudWxsO1xuICAgICAgICAgICAgY2hpbGQuaW5kZXggPSAwO1xuICAgICAgICAgICAgY2hpbGQucmVtb3ZlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNoaWxkcmVuID0gW107XG4gICAgICAgIHRoaXMuX3JlcXVlc3REcmF3KCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkZXN0cm95Q2hpbGRyZW4oKSB7XG4gICAgICAgIHRoaXMuZ2V0Q2hpbGRyZW4oKS5mb3JFYWNoKChjaGlsZCkgPT4ge1xuICAgICAgICAgICAgY2hpbGQucGFyZW50ID0gbnVsbDtcbiAgICAgICAgICAgIGNoaWxkLmluZGV4ID0gMDtcbiAgICAgICAgICAgIGNoaWxkLmRlc3Ryb3koKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICAgICAgdGhpcy5fcmVxdWVzdERyYXcoKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFkZCguLi5jaGlsZHJlbikge1xuICAgICAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkKGNoaWxkcmVuW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNoaWxkID0gY2hpbGRyZW5bMF07XG4gICAgICAgIGlmIChjaGlsZC5nZXRQYXJlbnQoKSkge1xuICAgICAgICAgICAgY2hpbGQubW92ZVRvKHRoaXMpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdmFsaWRhdGVBZGQoY2hpbGQpO1xuICAgICAgICBjaGlsZC5pbmRleCA9IHRoaXMuZ2V0Q2hpbGRyZW4oKS5sZW5ndGg7XG4gICAgICAgIGNoaWxkLnBhcmVudCA9IHRoaXM7XG4gICAgICAgIGNoaWxkLl9jbGVhckNhY2hlcygpO1xuICAgICAgICB0aGlzLmdldENoaWxkcmVuKCkucHVzaChjaGlsZCk7XG4gICAgICAgIHRoaXMuX2ZpcmUoJ2FkZCcsIHtcbiAgICAgICAgICAgIGNoaWxkOiBjaGlsZCxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3JlcXVlc3REcmF3KCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5oYXNDaGlsZHJlbigpKSB7XG4gICAgICAgICAgICB0aGlzLmRlc3Ryb3lDaGlsZHJlbigpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyLmRlc3Ryb3koKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGZpbmQoc2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dlbmVyYWxGaW5kKHNlbGVjdG9yLCBmYWxzZSk7XG4gICAgfVxuICAgIGZpbmRPbmUoc2VsZWN0b3IpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5fZ2VuZXJhbEZpbmQoc2VsZWN0b3IsIHRydWUpO1xuICAgICAgICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA+IDAgPyByZXN1bHRbMF0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIF9nZW5lcmFsRmluZChzZWxlY3RvciwgZmluZE9uZSkge1xuICAgICAgICBjb25zdCByZXRBcnIgPSBbXTtcbiAgICAgICAgdGhpcy5fZGVzY2VuZGFudHMoKG5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkID0gbm9kZS5faXNNYXRjaChzZWxlY3Rvcik7XG4gICAgICAgICAgICBpZiAodmFsaWQpIHtcbiAgICAgICAgICAgICAgICByZXRBcnIucHVzaChub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWxpZCAmJiBmaW5kT25lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmV0QXJyO1xuICAgIH1cbiAgICBfZGVzY2VuZGFudHMoZm4pIHtcbiAgICAgICAgbGV0IHNob3VsZFN0b3AgPSBmYWxzZTtcbiAgICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLmdldENoaWxkcmVuKCk7XG4gICAgICAgIGZvciAoY29uc3QgY2hpbGQgb2YgY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIHNob3VsZFN0b3AgPSBmbihjaGlsZCk7XG4gICAgICAgICAgICBpZiAoc2hvdWxkU3RvcCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFjaGlsZC5oYXNDaGlsZHJlbigpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaG91bGRTdG9wID0gY2hpbGQuX2Rlc2NlbmRhbnRzKGZuKTtcbiAgICAgICAgICAgIGlmIChzaG91bGRTdG9wKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB0b09iamVjdCgpIHtcbiAgICAgICAgY29uc3Qgb2JqID0gTm9kZV8xLk5vZGUucHJvdG90eXBlLnRvT2JqZWN0LmNhbGwodGhpcyk7XG4gICAgICAgIG9iai5jaGlsZHJlbiA9IFtdO1xuICAgICAgICB0aGlzLmdldENoaWxkcmVuKCkuZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICAgICAgICAgIG9iai5jaGlsZHJlbi5wdXNoKGNoaWxkLnRvT2JqZWN0KCkpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgaXNBbmNlc3Rvck9mKG5vZGUpIHtcbiAgICAgICAgbGV0IHBhcmVudCA9IG5vZGUuZ2V0UGFyZW50KCk7XG4gICAgICAgIHdoaWxlIChwYXJlbnQpIHtcbiAgICAgICAgICAgIGlmIChwYXJlbnQuX2lkID09PSB0aGlzLl9pZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50ID0gcGFyZW50LmdldFBhcmVudCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY2xvbmUob2JqKSB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSBOb2RlXzEuTm9kZS5wcm90b3R5cGUuY2xvbmUuY2FsbCh0aGlzLCBvYmopO1xuICAgICAgICB0aGlzLmdldENoaWxkcmVuKCkuZm9yRWFjaChmdW5jdGlvbiAobm8pIHtcbiAgICAgICAgICAgIG5vZGUuYWRkKG5vLmNsb25lKCkpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICAgIGdldEFsbEludGVyc2VjdGlvbnMocG9zKSB7XG4gICAgICAgIGNvbnN0IGFyciA9IFtdO1xuICAgICAgICB0aGlzLmZpbmQoJ1NoYXBlJykuZm9yRWFjaCgoc2hhcGUpID0+IHtcbiAgICAgICAgICAgIGlmIChzaGFwZS5pc1Zpc2libGUoKSAmJiBzaGFwZS5pbnRlcnNlY3RzKHBvcykpIHtcbiAgICAgICAgICAgICAgICBhcnIucHVzaChzaGFwZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gYXJyO1xuICAgIH1cbiAgICBfY2xlYXJTZWxmQW5kRGVzY2VuZGFudENhY2hlKGF0dHIpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBzdXBlci5fY2xlYXJTZWxmQW5kRGVzY2VuZGFudENhY2hlKGF0dHIpO1xuICAgICAgICBpZiAodGhpcy5pc0NhY2hlZCgpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgKF9hID0gdGhpcy5jaGlsZHJlbikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIG5vZGUuX2NsZWFyU2VsZkFuZERlc2NlbmRhbnRDYWNoZShhdHRyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9zZXRDaGlsZHJlbkluZGljZXMoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgKF9hID0gdGhpcy5jaGlsZHJlbikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkLCBuKSB7XG4gICAgICAgICAgICBjaGlsZC5pbmRleCA9IG47XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9yZXF1ZXN0RHJhdygpO1xuICAgIH1cbiAgICBkcmF3U2NlbmUoY2FuLCB0b3AsIGJ1ZmZlckNhbnZhcykge1xuICAgICAgICBjb25zdCBsYXllciA9IHRoaXMuZ2V0TGF5ZXIoKSwgY2FudmFzID0gY2FuIHx8IChsYXllciAmJiBsYXllci5nZXRDYW52YXMoKSksIGNvbnRleHQgPSBjYW52YXMgJiYgY2FudmFzLmdldENvbnRleHQoKSwgY2FjaGVkQ2FudmFzID0gdGhpcy5fZ2V0Q2FudmFzQ2FjaGUoKSwgY2FjaGVkU2NlbmVDYW52YXMgPSBjYWNoZWRDYW52YXMgJiYgY2FjaGVkQ2FudmFzLnNjZW5lO1xuICAgICAgICBjb25zdCBjYWNoaW5nID0gY2FudmFzICYmIGNhbnZhcy5pc0NhY2hlO1xuICAgICAgICBpZiAoIXRoaXMuaXNWaXNpYmxlKCkgJiYgIWNhY2hpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjYWNoZWRTY2VuZUNhbnZhcykge1xuICAgICAgICAgICAgY29udGV4dC5zYXZlKCk7XG4gICAgICAgICAgICBjb25zdCBtID0gdGhpcy5nZXRBYnNvbHV0ZVRyYW5zZm9ybSh0b3ApLmdldE1hdHJpeCgpO1xuICAgICAgICAgICAgY29udGV4dC50cmFuc2Zvcm0obVswXSwgbVsxXSwgbVsyXSwgbVszXSwgbVs0XSwgbVs1XSk7XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q2FjaGVkU2NlbmVDYW52YXMoY29udGV4dCk7XG4gICAgICAgICAgICBjb250ZXh0LnJlc3RvcmUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2RyYXdDaGlsZHJlbignZHJhd1NjZW5lJywgY2FudmFzLCB0b3AsIGJ1ZmZlckNhbnZhcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRyYXdIaXQoY2FuLCB0b3ApIHtcbiAgICAgICAgaWYgKCF0aGlzLnNob3VsZERyYXdIaXQodG9wKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGF5ZXIgPSB0aGlzLmdldExheWVyKCksIGNhbnZhcyA9IGNhbiB8fCAobGF5ZXIgJiYgbGF5ZXIuaGl0Q2FudmFzKSwgY29udGV4dCA9IGNhbnZhcyAmJiBjYW52YXMuZ2V0Q29udGV4dCgpLCBjYWNoZWRDYW52YXMgPSB0aGlzLl9nZXRDYW52YXNDYWNoZSgpLCBjYWNoZWRIaXRDYW52YXMgPSBjYWNoZWRDYW52YXMgJiYgY2FjaGVkQ2FudmFzLmhpdDtcbiAgICAgICAgaWYgKGNhY2hlZEhpdENhbnZhcykge1xuICAgICAgICAgICAgY29udGV4dC5zYXZlKCk7XG4gICAgICAgICAgICBjb25zdCBtID0gdGhpcy5nZXRBYnNvbHV0ZVRyYW5zZm9ybSh0b3ApLmdldE1hdHJpeCgpO1xuICAgICAgICAgICAgY29udGV4dC50cmFuc2Zvcm0obVswXSwgbVsxXSwgbVsyXSwgbVszXSwgbVs0XSwgbVs1XSk7XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q2FjaGVkSGl0Q2FudmFzKGNvbnRleHQpO1xuICAgICAgICAgICAgY29udGV4dC5yZXN0b3JlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9kcmF3Q2hpbGRyZW4oJ2RyYXdIaXQnLCBjYW52YXMsIHRvcCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIF9kcmF3Q2hpbGRyZW4oZHJhd01ldGhvZCwgY2FudmFzLCB0b3AsIGJ1ZmZlckNhbnZhcykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IGNvbnRleHQgPSBjYW52YXMgJiYgY2FudmFzLmdldENvbnRleHQoKSwgY2xpcFdpZHRoID0gdGhpcy5jbGlwV2lkdGgoKSwgY2xpcEhlaWdodCA9IHRoaXMuY2xpcEhlaWdodCgpLCBjbGlwRnVuYyA9IHRoaXMuY2xpcEZ1bmMoKSwgaGFzQ2xpcCA9ICh0eXBlb2YgY2xpcFdpZHRoID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgY2xpcEhlaWdodCA9PT0gJ251bWJlcicpIHx8XG4gICAgICAgICAgICBjbGlwRnVuYztcbiAgICAgICAgY29uc3Qgc2VsZkNhY2hlID0gdG9wID09PSB0aGlzO1xuICAgICAgICBpZiAoaGFzQ2xpcCkge1xuICAgICAgICAgICAgY29udGV4dC5zYXZlKCk7XG4gICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSB0aGlzLmdldEFic29sdXRlVHJhbnNmb3JtKHRvcCk7XG4gICAgICAgICAgICBsZXQgbSA9IHRyYW5zZm9ybS5nZXRNYXRyaXgoKTtcbiAgICAgICAgICAgIGNvbnRleHQudHJhbnNmb3JtKG1bMF0sIG1bMV0sIG1bMl0sIG1bM10sIG1bNF0sIG1bNV0pO1xuICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIGxldCBjbGlwQXJncztcbiAgICAgICAgICAgIGlmIChjbGlwRnVuYykge1xuICAgICAgICAgICAgICAgIGNsaXBBcmdzID0gY2xpcEZ1bmMuY2FsbCh0aGlzLCBjb250ZXh0LCB0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNsaXBYID0gdGhpcy5jbGlwWCgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNsaXBZID0gdGhpcy5jbGlwWSgpO1xuICAgICAgICAgICAgICAgIGNvbnRleHQucmVjdChjbGlwWCB8fCAwLCBjbGlwWSB8fCAwLCBjbGlwV2lkdGgsIGNsaXBIZWlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGV4dC5jbGlwLmFwcGx5KGNvbnRleHQsIGNsaXBBcmdzKTtcbiAgICAgICAgICAgIG0gPSB0cmFuc2Zvcm0uY29weSgpLmludmVydCgpLmdldE1hdHJpeCgpO1xuICAgICAgICAgICAgY29udGV4dC50cmFuc2Zvcm0obVswXSwgbVsxXSwgbVsyXSwgbVszXSwgbVs0XSwgbVs1XSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaGFzQ29tcG9zaXRpb24gPSAhc2VsZkNhY2hlICYmXG4gICAgICAgICAgICB0aGlzLmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbigpICE9PSAnc291cmNlLW92ZXInICYmXG4gICAgICAgICAgICBkcmF3TWV0aG9kID09PSAnZHJhd1NjZW5lJztcbiAgICAgICAgaWYgKGhhc0NvbXBvc2l0aW9uKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNhdmUoKTtcbiAgICAgICAgICAgIGNvbnRleHQuX2FwcGx5R2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uKHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIChfYSA9IHRoaXMuY2hpbGRyZW4pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgY2hpbGRbZHJhd01ldGhvZF0oY2FudmFzLCB0b3AsIGJ1ZmZlckNhbnZhcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoaGFzQ29tcG9zaXRpb24pIHtcbiAgICAgICAgICAgIGNvbnRleHQucmVzdG9yZSgpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChoYXNDbGlwKSB7XG4gICAgICAgICAgICBjb250ZXh0LnJlc3RvcmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRDbGllbnRSZWN0KGNvbmZpZyA9IHt9KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3Qgc2tpcFRyYW5zZm9ybSA9IGNvbmZpZy5za2lwVHJhbnNmb3JtO1xuICAgICAgICBjb25zdCByZWxhdGl2ZVRvID0gY29uZmlnLnJlbGF0aXZlVG87XG4gICAgICAgIGxldCBtaW5YLCBtaW5ZLCBtYXhYLCBtYXhZO1xuICAgICAgICBsZXQgc2VsZlJlY3QgPSB7XG4gICAgICAgICAgICB4OiBJbmZpbml0eSxcbiAgICAgICAgICAgIHk6IEluZmluaXR5LFxuICAgICAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgICAgICBoZWlnaHQ6IDAsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHRoYXQgPSB0aGlzO1xuICAgICAgICAoX2EgPSB0aGlzLmNoaWxkcmVuKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgICAgIGlmICghY2hpbGQudmlzaWJsZSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVjdCA9IGNoaWxkLmdldENsaWVudFJlY3Qoe1xuICAgICAgICAgICAgICAgIHJlbGF0aXZlVG86IHRoYXQsXG4gICAgICAgICAgICAgICAgc2tpcFNoYWRvdzogY29uZmlnLnNraXBTaGFkb3csXG4gICAgICAgICAgICAgICAgc2tpcFN0cm9rZTogY29uZmlnLnNraXBTdHJva2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChyZWN0LndpZHRoID09PSAwICYmIHJlY3QuaGVpZ2h0ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1pblggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIG1pblggPSByZWN0Lng7XG4gICAgICAgICAgICAgICAgbWluWSA9IHJlY3QueTtcbiAgICAgICAgICAgICAgICBtYXhYID0gcmVjdC54ICsgcmVjdC53aWR0aDtcbiAgICAgICAgICAgICAgICBtYXhZID0gcmVjdC55ICsgcmVjdC5oZWlnaHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBtaW5YID0gTWF0aC5taW4obWluWCwgcmVjdC54KTtcbiAgICAgICAgICAgICAgICBtaW5ZID0gTWF0aC5taW4obWluWSwgcmVjdC55KTtcbiAgICAgICAgICAgICAgICBtYXhYID0gTWF0aC5tYXgobWF4WCwgcmVjdC54ICsgcmVjdC53aWR0aCk7XG4gICAgICAgICAgICAgICAgbWF4WSA9IE1hdGgubWF4KG1heFksIHJlY3QueSArIHJlY3QuaGVpZ2h0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHNoYXBlcyA9IHRoaXMuZmluZCgnU2hhcGUnKTtcbiAgICAgICAgbGV0IGhhc1Zpc2libGUgPSBmYWxzZTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGFwZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHNoYXBlID0gc2hhcGVzW2ldO1xuICAgICAgICAgICAgaWYgKHNoYXBlLl9pc1Zpc2libGUodGhpcykpIHtcbiAgICAgICAgICAgICAgICBoYXNWaXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaGFzVmlzaWJsZSAmJiBtaW5YICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNlbGZSZWN0ID0ge1xuICAgICAgICAgICAgICAgIHg6IG1pblgsXG4gICAgICAgICAgICAgICAgeTogbWluWSxcbiAgICAgICAgICAgICAgICB3aWR0aDogbWF4WCAtIG1pblgsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBtYXhZIC0gbWluWSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZWxmUmVjdCA9IHtcbiAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgIHk6IDAsXG4gICAgICAgICAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNraXBUcmFuc2Zvcm0pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90cmFuc2Zvcm1lZFJlY3Qoc2VsZlJlY3QsIHJlbGF0aXZlVG8pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZWxmUmVjdDtcbiAgICB9XG59XG5leHBvcnRzLkNvbnRhaW5lciA9IENvbnRhaW5lcjtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZENvbXBvbmVudHNHZXR0ZXJTZXR0ZXIoQ29udGFpbmVyLCAnY2xpcCcsIFtcbiAgICAneCcsXG4gICAgJ3knLFxuICAgICd3aWR0aCcsXG4gICAgJ2hlaWdodCcsXG5dKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihDb250YWluZXIsICdjbGlwWCcsIHVuZGVmaW5lZCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKENvbnRhaW5lciwgJ2NsaXBZJywgdW5kZWZpbmVkLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoQ29udGFpbmVyLCAnY2xpcFdpZHRoJywgdW5kZWZpbmVkLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoQ29udGFpbmVyLCAnY2xpcEhlaWdodCcsIHVuZGVmaW5lZCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKENvbnRhaW5lciwgJ2NsaXBGdW5jJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Container.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Context.js":
/*!*******************************************!*\
  !*** ./node_modules/konva/lib/Context.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HitContext = exports.SceneContext = exports.Context = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nfunction simplifyArray(arr) {\n    let retArr = [], len = arr.length, util = Util_1.Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nconst COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'roundRect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nconst CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'letterSpacing',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'direction',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nclass Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Global_1.Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        let traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util_1.Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        let traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        const pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        const canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        const lineCap = shape.attrs.lineCap;\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        const absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        const lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterClockwise) {\n        this._context.arc(x, y, radius, startAngle, endAngle, counterClockwise);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this._context.arcTo(x1, y1, x2, y2, radius);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this._context.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    }\n    clearRect(x, y, width, height) {\n        this._context.clearRect(x, y, width, height);\n    }\n    clip(...args) {\n        this._context.clip.apply(this._context, args);\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(width, height) {\n        const a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(width, height);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(width);\n        }\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        return this._context.createLinearGradient(x0, y0, x1, y1);\n    }\n    createPattern(image, repetition) {\n        return this._context.createPattern(image, repetition);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this._context.createRadialGradient(x0, y0, r0, x1, y1, r1);\n    }\n    drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight) {\n        const a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(image, sx, sy);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(image, sx, sy, sWidth, sHeight);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(image, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight);\n        }\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise) {\n        this._context.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise);\n    }\n    isPointInPath(x, y, path, fillRule) {\n        if (path) {\n            return this._context.isPointInPath(path, x, y, fillRule);\n        }\n        return this._context.isPointInPath(x, y, fillRule);\n    }\n    fill(...args) {\n        this._context.fill.apply(this._context, args);\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this._context.getImageData(sx, sy, sw, sh);\n    }\n    lineTo(x, y) {\n        this._context.lineTo(x, y);\n    }\n    moveTo(x, y) {\n        this._context.moveTo(x, y);\n    }\n    rect(x, y, width, height) {\n        this._context.rect(x, y, width, height);\n    }\n    roundRect(x, y, width, height, radii) {\n        this._context.roundRect(x, y, width, height, radii);\n    }\n    putImageData(imageData, dx, dy) {\n        this._context.putImageData(imageData, dx, dy);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this._context.quadraticCurveTo(cpx, cpy, x, y);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(angle) {\n        this._context.rotate(angle);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(x, y) {\n        this._context.scale(x, y);\n    }\n    setLineDash(segments) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(segments);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = segments;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = segments;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a, b, c, d, e, f) {\n        this._context.setTransform(a, b, c, d, e, f);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(text, x, y, maxWidth) {\n        this._context.strokeText(text, x, y, maxWidth);\n    }\n    transform(a, b, c, d, e, f) {\n        this._context.transform(a, b, c, d, e, f);\n    }\n    translate(x, y) {\n        this._context.translate(x, y);\n    }\n    _enableTrace() {\n        let that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        const func = function (methodName) {\n            let origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            const prop = arguments[0];\n            let val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        const def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nexports.Context = Context;\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nclass SceneContext extends Context {\n    constructor(canvas, { willReadFrequently = false } = {}) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently,\n        });\n    }\n    _fillColor(shape) {\n        const fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        const grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        const grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        const hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        const hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        const hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        const hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        const start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (let n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        const dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                const pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            const hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        const color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexports.SceneContext = SceneContext;\nclass HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            const strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                const pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            const hitStrokeWidth = shape.hitStrokeWidth();\n            const strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\nexports.HitContext = HitContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Context.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/DragAndDrop.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/DragAndDrop.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DD = void 0;\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nexports.DD = {\n    get isDragging() {\n        let flag = false;\n        exports.DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus === 'dragging') {\n                flag = true;\n            }\n        });\n        return flag;\n    },\n    justDragged: false,\n    get node() {\n        let node;\n        exports.DD._dragElements.forEach((elem) => {\n            node = elem.node;\n        });\n        return node;\n    },\n    _dragElements: new Map(),\n    _drag(evt) {\n        const nodesToFireEvents = [];\n        exports.DD._dragElements.forEach((elem, key) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            stage.setPointersPositions(evt);\n            if (elem.pointerId === undefined) {\n                elem.pointerId = Util_1.Util._getFirstPointerId(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus !== 'dragging') {\n                const dragDistance = node.dragDistance();\n                const distance = Math.max(Math.abs(pos.x - elem.startPointerPos.x), Math.abs(pos.y - elem.startPointerPos.y));\n                if (distance < dragDistance) {\n                    return;\n                }\n                node.startDrag({ evt });\n                if (!node.isDragging()) {\n                    return;\n                }\n            }\n            node._setDragPosition(evt, elem);\n            nodesToFireEvents.push(node);\n        });\n        nodesToFireEvents.forEach((node) => {\n            node.fire('dragmove', {\n                type: 'dragmove',\n                target: node,\n                evt: evt,\n            }, true);\n        });\n    },\n    _endDragBefore(evt) {\n        const drawNodes = [];\n        exports.DD._dragElements.forEach((elem) => {\n            const { node } = elem;\n            const stage = node.getStage();\n            if (evt) {\n                stage.setPointersPositions(evt);\n            }\n            const pos = stage._changedPointerPositions.find((pos) => pos.id === elem.pointerId);\n            if (!pos) {\n                return;\n            }\n            if (elem.dragStatus === 'dragging' || elem.dragStatus === 'stopped') {\n                exports.DD.justDragged = true;\n                Global_1.Konva._mouseListenClick = false;\n                Global_1.Konva._touchListenClick = false;\n                Global_1.Konva._pointerListenClick = false;\n                elem.dragStatus = 'stopped';\n            }\n            const drawNode = elem.node.getLayer() ||\n                (elem.node instanceof Global_1.Konva['Stage'] && elem.node);\n            if (drawNode && drawNodes.indexOf(drawNode) === -1) {\n                drawNodes.push(drawNode);\n            }\n        });\n        drawNodes.forEach((drawNode) => {\n            drawNode.draw();\n        });\n    },\n    _endDragAfter(evt) {\n        exports.DD._dragElements.forEach((elem, key) => {\n            if (elem.dragStatus === 'stopped') {\n                elem.node.fire('dragend', {\n                    type: 'dragend',\n                    target: elem.node,\n                    evt: evt,\n                }, true);\n            }\n            if (elem.dragStatus !== 'dragging') {\n                exports.DD._dragElements.delete(key);\n            }\n        });\n    },\n};\nif (Global_1.Konva.isBrowser) {\n    window.addEventListener('mouseup', exports.DD._endDragBefore, true);\n    window.addEventListener('touchend', exports.DD._endDragBefore, true);\n    window.addEventListener('touchcancel', exports.DD._endDragBefore, true);\n    window.addEventListener('mousemove', exports.DD._drag);\n    window.addEventListener('touchmove', exports.DD._drag);\n    window.addEventListener('mouseup', exports.DD._endDragAfter, false);\n    window.addEventListener('touchend', exports.DD._endDragAfter, false);\n    window.addEventListener('touchcancel', exports.DD._endDragAfter, false);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvRHJhZ0FuZERyb3AuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsVUFBVTtBQUNWLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFVO0FBQ25DLGVBQWUsbUJBQU8sQ0FBQyxvRUFBUTtBQUMvQixVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsS0FBSztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzQkFBc0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9EcmFnQW5kRHJvcC5qcz8wYTdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERCA9IHZvaWQgMDtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4vR2xvYmFsXCIpO1xuY29uc3QgVXRpbF8xID0gcmVxdWlyZShcIi4vVXRpbFwiKTtcbmV4cG9ydHMuREQgPSB7XG4gICAgZ2V0IGlzRHJhZ2dpbmcoKSB7XG4gICAgICAgIGxldCBmbGFnID0gZmFsc2U7XG4gICAgICAgIGV4cG9ydHMuREQuX2RyYWdFbGVtZW50cy5mb3JFYWNoKChlbGVtKSA9PiB7XG4gICAgICAgICAgICBpZiAoZWxlbS5kcmFnU3RhdHVzID09PSAnZHJhZ2dpbmcnKSB7XG4gICAgICAgICAgICAgICAgZmxhZyA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZmxhZztcbiAgICB9LFxuICAgIGp1c3REcmFnZ2VkOiBmYWxzZSxcbiAgICBnZXQgbm9kZSgpIHtcbiAgICAgICAgbGV0IG5vZGU7XG4gICAgICAgIGV4cG9ydHMuREQuX2RyYWdFbGVtZW50cy5mb3JFYWNoKChlbGVtKSA9PiB7XG4gICAgICAgICAgICBub2RlID0gZWxlbS5ub2RlO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfSxcbiAgICBfZHJhZ0VsZW1lbnRzOiBuZXcgTWFwKCksXG4gICAgX2RyYWcoZXZ0KSB7XG4gICAgICAgIGNvbnN0IG5vZGVzVG9GaXJlRXZlbnRzID0gW107XG4gICAgICAgIGV4cG9ydHMuREQuX2RyYWdFbGVtZW50cy5mb3JFYWNoKChlbGVtLCBrZXkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgbm9kZSB9ID0gZWxlbTtcbiAgICAgICAgICAgIGNvbnN0IHN0YWdlID0gbm9kZS5nZXRTdGFnZSgpO1xuICAgICAgICAgICAgc3RhZ2Uuc2V0UG9pbnRlcnNQb3NpdGlvbnMoZXZ0KTtcbiAgICAgICAgICAgIGlmIChlbGVtLnBvaW50ZXJJZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgZWxlbS5wb2ludGVySWQgPSBVdGlsXzEuVXRpbC5fZ2V0Rmlyc3RQb2ludGVySWQoZXZ0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBvcyA9IHN0YWdlLl9jaGFuZ2VkUG9pbnRlclBvc2l0aW9ucy5maW5kKChwb3MpID0+IHBvcy5pZCA9PT0gZWxlbS5wb2ludGVySWQpO1xuICAgICAgICAgICAgaWYgKCFwb3MpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZWxlbS5kcmFnU3RhdHVzICE9PSAnZHJhZ2dpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZHJhZ0Rpc3RhbmNlID0gbm9kZS5kcmFnRGlzdGFuY2UoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXN0YW5jZSA9IE1hdGgubWF4KE1hdGguYWJzKHBvcy54IC0gZWxlbS5zdGFydFBvaW50ZXJQb3MueCksIE1hdGguYWJzKHBvcy55IC0gZWxlbS5zdGFydFBvaW50ZXJQb3MueSkpO1xuICAgICAgICAgICAgICAgIGlmIChkaXN0YW5jZSA8IGRyYWdEaXN0YW5jZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5vZGUuc3RhcnREcmFnKHsgZXZ0IH0pO1xuICAgICAgICAgICAgICAgIGlmICghbm9kZS5pc0RyYWdnaW5nKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5vZGUuX3NldERyYWdQb3NpdGlvbihldnQsIGVsZW0pO1xuICAgICAgICAgICAgbm9kZXNUb0ZpcmVFdmVudHMucHVzaChub2RlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIG5vZGVzVG9GaXJlRXZlbnRzLmZvckVhY2goKG5vZGUpID0+IHtcbiAgICAgICAgICAgIG5vZGUuZmlyZSgnZHJhZ21vdmUnLCB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2RyYWdtb3ZlJyxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IG5vZGUsXG4gICAgICAgICAgICAgICAgZXZ0OiBldnQsXG4gICAgICAgICAgICB9LCB0cnVlKTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBfZW5kRHJhZ0JlZm9yZShldnQpIHtcbiAgICAgICAgY29uc3QgZHJhd05vZGVzID0gW107XG4gICAgICAgIGV4cG9ydHMuREQuX2RyYWdFbGVtZW50cy5mb3JFYWNoKChlbGVtKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IG5vZGUgfSA9IGVsZW07XG4gICAgICAgICAgICBjb25zdCBzdGFnZSA9IG5vZGUuZ2V0U3RhZ2UoKTtcbiAgICAgICAgICAgIGlmIChldnQpIHtcbiAgICAgICAgICAgICAgICBzdGFnZS5zZXRQb2ludGVyc1Bvc2l0aW9ucyhldnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcG9zID0gc3RhZ2UuX2NoYW5nZWRQb2ludGVyUG9zaXRpb25zLmZpbmQoKHBvcykgPT4gcG9zLmlkID09PSBlbGVtLnBvaW50ZXJJZCk7XG4gICAgICAgICAgICBpZiAoIXBvcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChlbGVtLmRyYWdTdGF0dXMgPT09ICdkcmFnZ2luZycgfHwgZWxlbS5kcmFnU3RhdHVzID09PSAnc3RvcHBlZCcpIHtcbiAgICAgICAgICAgICAgICBleHBvcnRzLkRELmp1c3REcmFnZ2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBHbG9iYWxfMS5Lb252YS5fbW91c2VMaXN0ZW5DbGljayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIEdsb2JhbF8xLktvbnZhLl90b3VjaExpc3RlbkNsaWNrID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgR2xvYmFsXzEuS29udmEuX3BvaW50ZXJMaXN0ZW5DbGljayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGVsZW0uZHJhZ1N0YXR1cyA9ICdzdG9wcGVkJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGRyYXdOb2RlID0gZWxlbS5ub2RlLmdldExheWVyKCkgfHxcbiAgICAgICAgICAgICAgICAoZWxlbS5ub2RlIGluc3RhbmNlb2YgR2xvYmFsXzEuS29udmFbJ1N0YWdlJ10gJiYgZWxlbS5ub2RlKTtcbiAgICAgICAgICAgIGlmIChkcmF3Tm9kZSAmJiBkcmF3Tm9kZXMuaW5kZXhPZihkcmF3Tm9kZSkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgZHJhd05vZGVzLnB1c2goZHJhd05vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgZHJhd05vZGVzLmZvckVhY2goKGRyYXdOb2RlKSA9PiB7XG4gICAgICAgICAgICBkcmF3Tm9kZS5kcmF3KCk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgX2VuZERyYWdBZnRlcihldnQpIHtcbiAgICAgICAgZXhwb3J0cy5ERC5fZHJhZ0VsZW1lbnRzLmZvckVhY2goKGVsZW0sIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKGVsZW0uZHJhZ1N0YXR1cyA9PT0gJ3N0b3BwZWQnKSB7XG4gICAgICAgICAgICAgICAgZWxlbS5ub2RlLmZpcmUoJ2RyYWdlbmQnLCB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdkcmFnZW5kJyxcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0OiBlbGVtLm5vZGUsXG4gICAgICAgICAgICAgICAgICAgIGV2dDogZXZ0LFxuICAgICAgICAgICAgICAgIH0sIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGVsZW0uZHJhZ1N0YXR1cyAhPT0gJ2RyYWdnaW5nJykge1xuICAgICAgICAgICAgICAgIGV4cG9ydHMuREQuX2RyYWdFbGVtZW50cy5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcbn07XG5pZiAoR2xvYmFsXzEuS29udmEuaXNCcm93c2VyKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBleHBvcnRzLkRELl9lbmREcmFnQmVmb3JlLCB0cnVlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBleHBvcnRzLkRELl9lbmREcmFnQmVmb3JlLCB0cnVlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hjYW5jZWwnLCBleHBvcnRzLkRELl9lbmREcmFnQmVmb3JlLCB0cnVlKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZXhwb3J0cy5ERC5fZHJhZyk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsIGV4cG9ydHMuREQuX2RyYWcpO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgZXhwb3J0cy5ERC5fZW5kRHJhZ0FmdGVyLCBmYWxzZSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgZXhwb3J0cy5ERC5fZW5kRHJhZ0FmdGVyLCBmYWxzZSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoY2FuY2VsJywgZXhwb3J0cy5ERC5fZW5kRHJhZ0FmdGVyLCBmYWxzZSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/DragAndDrop.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Factory.js":
/*!*******************************************!*\
  !*** ./node_modules/konva/lib/Factory.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Factory = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Validators_1 = __webpack_require__(/*! ./Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst GET = 'get', SET = 'set';\nexports.Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        exports.Factory.addGetter(constructor, attr, def);\n        exports.Factory.addSetter(constructor, attr, validator, after);\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        const method = GET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    const val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        const method = SET + Util_1.Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            exports.Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        const method = SET + Util_1.Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        let len = components.length, capitalize = Util_1.Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            const ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        const basicValidator = (0, Validators_1.getComponentValidator)(components);\n        constructor.prototype[setter] = function (val) {\n            let oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            if (!val) {\n                components.forEach((component) => {\n                    this._setAttr(attr + capitalize(component), undefined);\n                });\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        const capitalizedAttr = Util_1.Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util_1.Util.error('Adding deprecated ' + attr);\n        const method = GET + Util_1.Util._capitalize(attr);\n        const message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util_1.Util.error(message);\n            const val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        exports.Factory.addSetter(constructor, attr, validator, function () {\n            Util_1.Util.error(message);\n        });\n        exports.Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util_1.Util.each(methods, function (oldMethodName, newMethodName) {\n            const method = constructor.prototype[newMethodName];\n            const oldGetter = GET + Util_1.Util._capitalize(oldMethodName);\n            const oldSetter = SET + Util_1.Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util_1.Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Factory.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/FastLayer.js":
/*!*********************************************!*\
  !*** ./node_modules/konva/lib/FastLayer.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FastLayer = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Layer_1 = __webpack_require__(/*! ./Layer */ \"(app-pages-browser)/./node_modules/konva/lib/Layer.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass FastLayer extends Layer_1.Layer {\n    constructor(attrs) {\n        super(attrs);\n        this.listening(false);\n        Util_1.Util.warn('Konva.Fast layer is deprecated. Please use \"new Konva.Layer({ listening: false })\" instead.');\n    }\n}\nexports.FastLayer = FastLayer;\nFastLayer.prototype.nodeType = 'FastLayer';\n(0, Global_1._registerNode)(FastLayer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvRmFzdExheWVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixlQUFlLG1CQUFPLENBQUMsb0VBQVE7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQVM7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsd0VBQVU7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RkFBd0Ysa0JBQWtCO0FBQzFHO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL0Zhc3RMYXllci5qcz9lNjQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GYXN0TGF5ZXIgPSB2b2lkIDA7XG5jb25zdCBVdGlsXzEgPSByZXF1aXJlKFwiLi9VdGlsXCIpO1xuY29uc3QgTGF5ZXJfMSA9IHJlcXVpcmUoXCIuL0xheWVyXCIpO1xuY29uc3QgR2xvYmFsXzEgPSByZXF1aXJlKFwiLi9HbG9iYWxcIik7XG5jbGFzcyBGYXN0TGF5ZXIgZXh0ZW5kcyBMYXllcl8xLkxheWVyIHtcbiAgICBjb25zdHJ1Y3RvcihhdHRycykge1xuICAgICAgICBzdXBlcihhdHRycyk7XG4gICAgICAgIHRoaXMubGlzdGVuaW5nKGZhbHNlKTtcbiAgICAgICAgVXRpbF8xLlV0aWwud2FybignS29udmEuRmFzdCBsYXllciBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIFwibmV3IEtvbnZhLkxheWVyKHsgbGlzdGVuaW5nOiBmYWxzZSB9KVwiIGluc3RlYWQuJyk7XG4gICAgfVxufVxuZXhwb3J0cy5GYXN0TGF5ZXIgPSBGYXN0TGF5ZXI7XG5GYXN0TGF5ZXIucHJvdG90eXBlLm5vZGVUeXBlID0gJ0Zhc3RMYXllcic7XG4oMCwgR2xvYmFsXzEuX3JlZ2lzdGVyTm9kZSkoRmFzdExheWVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/FastLayer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Global.js":
/*!******************************************!*\
  !*** ./node_modules/konva/lib/Global.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports._registerNode = exports.Konva = exports.glob = void 0;\nconst PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n    return (typeof window !== 'undefined' &&\n        ({}.toString.call(window) === '[object Window]' ||\n            {}.toString.call(window) === '[object global]'));\n}\nexports.glob = typeof __webpack_require__.g !== 'undefined'\n    ? __webpack_require__.g\n    : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n            ? self\n            : {};\nexports.Konva = {\n    _global: exports.glob,\n    version: '9.3.16',\n    isBrowser: detectBrowser(),\n    isUnminified: /param/.test(function (param) { }.toString()),\n    dblClickWindow: 400,\n    getAngle(angle) {\n        return exports.Konva.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    _mouseDblClickPointerId: null,\n    _touchDblClickPointerId: null,\n    _pointerDblClickPointerId: null,\n    _fixTextRendering: false,\n    pixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [0, 1],\n    isDragging() {\n        return exports.Konva['DD'].isDragging;\n    },\n    isTransforming() {\n        var _a;\n        return (_a = exports.Konva['Transformer']) === null || _a === void 0 ? void 0 : _a.isTransforming();\n    },\n    isDragReady() {\n        return !!exports.Konva['DD'].node;\n    },\n    releaseCanvasOnDestroy: true,\n    document: exports.glob.document,\n    _injectGlobal(Konva) {\n        exports.glob.Konva = Konva;\n    },\n};\nconst _registerNode = (NodeClass) => {\n    exports.Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nexports._registerNode = _registerNode;\nexports.Konva._injectGlobal(exports.Konva);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvR2xvYmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLGFBQWEsR0FBRyxZQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxjQUFjO0FBQ2Q7QUFDQSxZQUFZLFVBQVUscUJBQU07QUFDNUIsTUFBTSxxQkFBTTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtCQUFrQjtBQUMxQixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9HbG9iYWwuanM/ZjVlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuX3JlZ2lzdGVyTm9kZSA9IGV4cG9ydHMuS29udmEgPSBleHBvcnRzLmdsb2IgPSB2b2lkIDA7XG5jb25zdCBQSV9PVkVSXzE4MCA9IE1hdGguUEkgLyAxODA7XG5mdW5jdGlvbiBkZXRlY3RCcm93c2VyKCkge1xuICAgIHJldHVybiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgKHt9LnRvU3RyaW5nLmNhbGwod2luZG93KSA9PT0gJ1tvYmplY3QgV2luZG93XScgfHxcbiAgICAgICAgICAgIHt9LnRvU3RyaW5nLmNhbGwod2luZG93KSA9PT0gJ1tvYmplY3QgZ2xvYmFsXScpKTtcbn1cbmV4cG9ydHMuZ2xvYiA9IHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnXG4gICAgPyBnbG9iYWxcbiAgICA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnXG4gICAgICAgID8gd2luZG93XG4gICAgICAgIDogdHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyBzZWxmXG4gICAgICAgICAgICA6IHt9O1xuZXhwb3J0cy5Lb252YSA9IHtcbiAgICBfZ2xvYmFsOiBleHBvcnRzLmdsb2IsXG4gICAgdmVyc2lvbjogJzkuMy4xNicsXG4gICAgaXNCcm93c2VyOiBkZXRlY3RCcm93c2VyKCksXG4gICAgaXNVbm1pbmlmaWVkOiAvcGFyYW0vLnRlc3QoZnVuY3Rpb24gKHBhcmFtKSB7IH0udG9TdHJpbmcoKSksXG4gICAgZGJsQ2xpY2tXaW5kb3c6IDQwMCxcbiAgICBnZXRBbmdsZShhbmdsZSkge1xuICAgICAgICByZXR1cm4gZXhwb3J0cy5Lb252YS5hbmdsZURlZyA/IGFuZ2xlICogUElfT1ZFUl8xODAgOiBhbmdsZTtcbiAgICB9LFxuICAgIGVuYWJsZVRyYWNlOiBmYWxzZSxcbiAgICBwb2ludGVyRXZlbnRzRW5hYmxlZDogdHJ1ZSxcbiAgICBhdXRvRHJhd0VuYWJsZWQ6IHRydWUsXG4gICAgaGl0T25EcmFnRW5hYmxlZDogZmFsc2UsXG4gICAgY2FwdHVyZVBvaW50ZXJFdmVudHNFbmFibGVkOiBmYWxzZSxcbiAgICBfbW91c2VMaXN0ZW5DbGljazogZmFsc2UsXG4gICAgX3RvdWNoTGlzdGVuQ2xpY2s6IGZhbHNlLFxuICAgIF9wb2ludGVyTGlzdGVuQ2xpY2s6IGZhbHNlLFxuICAgIF9tb3VzZUluRGJsQ2xpY2tXaW5kb3c6IGZhbHNlLFxuICAgIF90b3VjaEluRGJsQ2xpY2tXaW5kb3c6IGZhbHNlLFxuICAgIF9wb2ludGVySW5EYmxDbGlja1dpbmRvdzogZmFsc2UsXG4gICAgX21vdXNlRGJsQ2xpY2tQb2ludGVySWQ6IG51bGwsXG4gICAgX3RvdWNoRGJsQ2xpY2tQb2ludGVySWQ6IG51bGwsXG4gICAgX3BvaW50ZXJEYmxDbGlja1BvaW50ZXJJZDogbnVsbCxcbiAgICBfZml4VGV4dFJlbmRlcmluZzogZmFsc2UsXG4gICAgcGl4ZWxSYXRpbzogKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvKSB8fCAxLFxuICAgIGRyYWdEaXN0YW5jZTogMyxcbiAgICBhbmdsZURlZzogdHJ1ZSxcbiAgICBzaG93V2FybmluZ3M6IHRydWUsXG4gICAgZHJhZ0J1dHRvbnM6IFswLCAxXSxcbiAgICBpc0RyYWdnaW5nKCkge1xuICAgICAgICByZXR1cm4gZXhwb3J0cy5Lb252YVsnREQnXS5pc0RyYWdnaW5nO1xuICAgIH0sXG4gICAgaXNUcmFuc2Zvcm1pbmcoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIChfYSA9IGV4cG9ydHMuS29udmFbJ1RyYW5zZm9ybWVyJ10pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5pc1RyYW5zZm9ybWluZygpO1xuICAgIH0sXG4gICAgaXNEcmFnUmVhZHkoKSB7XG4gICAgICAgIHJldHVybiAhIWV4cG9ydHMuS29udmFbJ0REJ10ubm9kZTtcbiAgICB9LFxuICAgIHJlbGVhc2VDYW52YXNPbkRlc3Ryb3k6IHRydWUsXG4gICAgZG9jdW1lbnQ6IGV4cG9ydHMuZ2xvYi5kb2N1bWVudCxcbiAgICBfaW5qZWN0R2xvYmFsKEtvbnZhKSB7XG4gICAgICAgIGV4cG9ydHMuZ2xvYi5Lb252YSA9IEtvbnZhO1xuICAgIH0sXG59O1xuY29uc3QgX3JlZ2lzdGVyTm9kZSA9IChOb2RlQ2xhc3MpID0+IHtcbiAgICBleHBvcnRzLktvbnZhW05vZGVDbGFzcy5wcm90b3R5cGUuZ2V0Q2xhc3NOYW1lKCldID0gTm9kZUNsYXNzO1xufTtcbmV4cG9ydHMuX3JlZ2lzdGVyTm9kZSA9IF9yZWdpc3Rlck5vZGU7XG5leHBvcnRzLktvbnZhLl9pbmplY3RHbG9iYWwoZXhwb3J0cy5Lb252YSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Global.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Group.js":
/*!*****************************************!*\
  !*** ./node_modules/konva/lib/Group.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Group = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Container_1 = __webpack_require__(/*! ./Container */ \"(app-pages-browser)/./node_modules/konva/lib/Container.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Group extends Container_1.Container {\n    _validateAdd(child) {\n        const type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util_1.Util.throw('You may only add groups and shapes to groups.');\n        }\n    }\n}\nexports.Group = Group;\nGroup.prototype.nodeType = 'Group';\n(0, Global_1._registerNode)(Group);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvR3JvdXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGVBQWUsbUJBQU8sQ0FBQyxvRUFBUTtBQUMvQixvQkFBb0IsbUJBQU8sQ0FBQyw4RUFBYTtBQUN6QyxpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9Hcm91cC5qcz9lZjUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Hcm91cCA9IHZvaWQgMDtcbmNvbnN0IFV0aWxfMSA9IHJlcXVpcmUoXCIuL1V0aWxcIik7XG5jb25zdCBDb250YWluZXJfMSA9IHJlcXVpcmUoXCIuL0NvbnRhaW5lclwiKTtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4vR2xvYmFsXCIpO1xuY2xhc3MgR3JvdXAgZXh0ZW5kcyBDb250YWluZXJfMS5Db250YWluZXIge1xuICAgIF92YWxpZGF0ZUFkZChjaGlsZCkge1xuICAgICAgICBjb25zdCB0eXBlID0gY2hpbGQuZ2V0VHlwZSgpO1xuICAgICAgICBpZiAodHlwZSAhPT0gJ0dyb3VwJyAmJiB0eXBlICE9PSAnU2hhcGUnKSB7XG4gICAgICAgICAgICBVdGlsXzEuVXRpbC50aHJvdygnWW91IG1heSBvbmx5IGFkZCBncm91cHMgYW5kIHNoYXBlcyB0byBncm91cHMuJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkdyb3VwID0gR3JvdXA7XG5Hcm91cC5wcm90b3R5cGUubm9kZVR5cGUgPSAnR3JvdXAnO1xuKDAsIEdsb2JhbF8xLl9yZWdpc3Rlck5vZGUpKEdyb3VwKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Group.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Layer.js":
/*!*****************************************!*\
  !*** ./node_modules/konva/lib/Layer.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Layer = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Container_1 = __webpack_require__(/*! ./Container */ \"(app-pages-browser)/./node_modules/konva/lib/Container.js\");\nconst Node_1 = __webpack_require__(/*! ./Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Factory_1 = __webpack_require__(/*! ./Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Canvas_1 = __webpack_require__(/*! ./Canvas */ \"(app-pages-browser)/./node_modules/konva/lib/Canvas.js\");\nconst Validators_1 = __webpack_require__(/*! ./Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Shape_1 = __webpack_require__(/*! ./Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst HASH = '#', BEFORE_DRAW = 'beforeDraw', DRAW = 'draw', INTERSECTION_OFFSETS = [\n    { x: 0, y: 0 },\n    { x: -1, y: -1 },\n    { x: 1, y: -1 },\n    { x: 1, y: 1 },\n    { x: -1, y: 1 },\n], INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\nclass Layer extends Container_1.Container {\n    constructor(config) {\n        super(config);\n        this.canvas = new Canvas_1.SceneCanvas();\n        this.hitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n        });\n        this._waitingForDraw = false;\n        this.on('visibleChange.konva', this._checkVisibility);\n        this._checkVisibility();\n        this.on('imageSmoothingEnabledChange.konva', this._setSmoothEnabled);\n        this._setSmoothEnabled();\n    }\n    createPNGStream() {\n        const c = this.canvas._canvas;\n        return c.createPNGStream();\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    getNativeCanvasElement() {\n        return this.canvas._canvas;\n    }\n    getHitCanvas() {\n        return this.hitCanvas;\n    }\n    getContext() {\n        return this.getCanvas().getContext();\n    }\n    clear(bounds) {\n        this.getContext().clear(bounds);\n        this.getHitCanvas().getContext().clear(bounds);\n        return this;\n    }\n    setZIndex(index) {\n        super.setZIndex(index);\n        const stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            if (index < stage.children.length - 1) {\n                stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[index + 1].getCanvas()._canvas);\n            }\n            else {\n                stage.content.appendChild(this.getNativeCanvasElement());\n            }\n        }\n        return this;\n    }\n    moveToTop() {\n        Node_1.Node.prototype.moveToTop.call(this);\n        const stage = this.getStage();\n        if (stage && stage.content) {\n            stage.content.removeChild(this.getNativeCanvasElement());\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveUp() {\n        const moved = Node_1.Node.prototype.moveUp.call(this);\n        if (!moved) {\n            return false;\n        }\n        const stage = this.getStage();\n        if (!stage || !stage.content) {\n            return false;\n        }\n        stage.content.removeChild(this.getNativeCanvasElement());\n        if (this.index < stage.children.length - 1) {\n            stage.content.insertBefore(this.getNativeCanvasElement(), stage.children[this.index + 1].getCanvas()._canvas);\n        }\n        else {\n            stage.content.appendChild(this.getNativeCanvasElement());\n        }\n        return true;\n    }\n    moveDown() {\n        if (Node_1.Node.prototype.moveDown.call(this)) {\n            const stage = this.getStage();\n            if (stage) {\n                const children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[this.index + 1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (Node_1.Node.prototype.moveToBottom.call(this)) {\n            const stage = this.getStage();\n            if (stage) {\n                const children = stage.children;\n                if (stage.content) {\n                    stage.content.removeChild(this.getNativeCanvasElement());\n                    stage.content.insertBefore(this.getNativeCanvasElement(), children[1].getCanvas()._canvas);\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    getLayer() {\n        return this;\n    }\n    remove() {\n        const _canvas = this.getNativeCanvasElement();\n        Node_1.Node.prototype.remove.call(this);\n        if (_canvas && _canvas.parentNode && Util_1.Util._isInDocument(_canvas)) {\n            _canvas.parentNode.removeChild(_canvas);\n        }\n        return this;\n    }\n    getStage() {\n        return this.parent;\n    }\n    setSize({ width, height }) {\n        this.canvas.setSize(width, height);\n        this.hitCanvas.setSize(width, height);\n        this._setSmoothEnabled();\n        return this;\n    }\n    _validateAdd(child) {\n        const type = child.getType();\n        if (type !== 'Group' && type !== 'Shape') {\n            Util_1.Util.throw('You may only add groups and shapes to a layer.');\n        }\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.width = config.width || this.getWidth();\n        config.height = config.height || this.getHeight();\n        config.x = config.x !== undefined ? config.x : this.x();\n        config.y = config.y !== undefined ? config.y : this.y();\n        return Node_1.Node.prototype._toKonvaCanvas.call(this, config);\n    }\n    _checkVisibility() {\n        const visible = this.visible();\n        if (visible) {\n            this.canvas._canvas.style.display = 'block';\n        }\n        else {\n            this.canvas._canvas.style.display = 'none';\n        }\n    }\n    _setSmoothEnabled() {\n        this.getContext()._context.imageSmoothingEnabled =\n            this.imageSmoothingEnabled();\n    }\n    getWidth() {\n        if (this.parent) {\n            return this.parent.width();\n        }\n    }\n    setWidth() {\n        Util_1.Util.warn('Can not change width of layer. Use \"stage.width(value)\" function instead.');\n    }\n    getHeight() {\n        if (this.parent) {\n            return this.parent.height();\n        }\n    }\n    setHeight() {\n        Util_1.Util.warn('Can not change height of layer. Use \"stage.height(value)\" function instead.');\n    }\n    batchDraw() {\n        if (!this._waitingForDraw) {\n            this._waitingForDraw = true;\n            Util_1.Util.requestAnimFrame(() => {\n                this.draw();\n                this._waitingForDraw = false;\n            });\n        }\n        return this;\n    }\n    getIntersection(pos) {\n        if (!this.isListening() || !this.isVisible()) {\n            return null;\n        }\n        let spiralSearchDistance = 1;\n        let continueSearch = false;\n        while (true) {\n            for (let i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n                const intersectionOffset = INTERSECTION_OFFSETS[i];\n                const obj = this._getIntersection({\n                    x: pos.x + intersectionOffset.x * spiralSearchDistance,\n                    y: pos.y + intersectionOffset.y * spiralSearchDistance,\n                });\n                const shape = obj.shape;\n                if (shape) {\n                    return shape;\n                }\n                continueSearch = !!obj.antialiased;\n                if (!obj.antialiased) {\n                    break;\n                }\n            }\n            if (continueSearch) {\n                spiralSearchDistance += 1;\n            }\n            else {\n                return null;\n            }\n        }\n    }\n    _getIntersection(pos) {\n        const ratio = this.hitCanvas.pixelRatio;\n        const p = this.hitCanvas.context.getImageData(Math.round(pos.x * ratio), Math.round(pos.y * ratio), 1, 1).data;\n        const p3 = p[3];\n        if (p3 === 255) {\n            const colorKey = Util_1.Util._rgbToHex(p[0], p[1], p[2]);\n            const shape = Shape_1.shapes[HASH + colorKey];\n            if (shape) {\n                return {\n                    shape: shape,\n                };\n            }\n            return {\n                antialiased: true,\n            };\n        }\n        else if (p3 > 0) {\n            return {\n                antialiased: true,\n            };\n        }\n        return {};\n    }\n    drawScene(can, top) {\n        const layer = this.getLayer(), canvas = can || (layer && layer.getCanvas());\n        this._fire(BEFORE_DRAW, {\n            node: this,\n        });\n        if (this.clearBeforeDraw()) {\n            canvas.getContext().clear();\n        }\n        Container_1.Container.prototype.drawScene.call(this, canvas, top);\n        this._fire(DRAW, {\n            node: this,\n        });\n        return this;\n    }\n    drawHit(can, top) {\n        const layer = this.getLayer(), canvas = can || (layer && layer.hitCanvas);\n        if (layer && layer.clearBeforeDraw()) {\n            layer.getHitCanvas().getContext().clear();\n        }\n        Container_1.Container.prototype.drawHit.call(this, canvas, top);\n        return this;\n    }\n    enableHitGraph() {\n        this.hitGraphEnabled(true);\n        return this;\n    }\n    disableHitGraph() {\n        this.hitGraphEnabled(false);\n        return this;\n    }\n    setHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        this.listening(val);\n    }\n    getHitGraphEnabled(val) {\n        Util_1.Util.warn('hitGraphEnabled method is deprecated. Please use layer.listening() instead.');\n        return this.listening();\n    }\n    toggleHitCanvas() {\n        if (!this.parent || !this.parent['content']) {\n            return;\n        }\n        const parent = this.parent;\n        const added = !!this.hitCanvas._canvas.parentNode;\n        if (added) {\n            parent.content.removeChild(this.hitCanvas._canvas);\n        }\n        else {\n            parent.content.appendChild(this.hitCanvas._canvas);\n        }\n    }\n    destroy() {\n        Util_1.Util.releaseCanvas(this.getNativeCanvasElement(), this.getHitCanvas()._canvas);\n        return super.destroy();\n    }\n}\nexports.Layer = Layer;\nLayer.prototype.nodeType = 'Layer';\n(0, Global_1._registerNode)(Layer);\nFactory_1.Factory.addGetterSetter(Layer, 'imageSmoothingEnabled', true);\nFactory_1.Factory.addGetterSetter(Layer, 'clearBeforeDraw', true);\nFactory_1.Factory.addGetterSetter(Layer, 'hitGraphEnabled', true, (0, Validators_1.getBooleanValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Layer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Node.js":
/*!****************************************!*\
  !*** ./node_modules/konva/lib/Node.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Node = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Factory_1 = __webpack_require__(/*! ./Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Canvas_1 = __webpack_require__(/*! ./Canvas */ \"(app-pages-browser)/./node_modules/konva/lib/Canvas.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst DragAndDrop_1 = __webpack_require__(/*! ./DragAndDrop */ \"(app-pages-browser)/./node_modules/konva/lib/DragAndDrop.js\");\nconst Validators_1 = __webpack_require__(/*! ./Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst ABSOLUTE_OPACITY = 'absoluteOpacity', ALL_LISTENERS = 'allEventListeners', ABSOLUTE_TRANSFORM = 'absoluteTransform', ABSOLUTE_SCALE = 'absoluteScale', CANVAS = 'canvas', CHANGE = 'Change', CHILDREN = 'children', KONVA = 'konva', LISTENING = 'listening', MOUSEENTER = 'mouseenter', MOUSELEAVE = 'mouseleave', NAME = 'name', SET = 'set', SHAPE = 'Shape', SPACE = ' ', STAGE = 'stage', TRANSFORM = 'transform', UPPER_STAGE = 'Stage', VISIBLE = 'visible', TRANSFORM_CHANGE_STR = [\n    'xChange.konva',\n    'yChange.konva',\n    'scaleXChange.konva',\n    'scaleYChange.konva',\n    'skewXChange.konva',\n    'skewYChange.konva',\n    'rotationChange.konva',\n    'offsetXChange.konva',\n    'offsetYChange.konva',\n    'transformsEnabledChange.konva',\n].join(SPACE);\nlet idCounter = 1;\nclass Node {\n    constructor(config) {\n        this._id = idCounter++;\n        this.eventListeners = {};\n        this.attrs = {};\n        this.index = 0;\n        this._allEventListeners = null;\n        this.parent = null;\n        this._cache = new Map();\n        this._attachedDepsListeners = new Map();\n        this._lastPos = null;\n        this._batchingTransformChange = false;\n        this._needClearTransformCache = false;\n        this._filterUpToDate = false;\n        this._isUnderCache = false;\n        this._dragEventId = null;\n        this._shouldFireChangeEvents = false;\n        this.setAttrs(config);\n        this._shouldFireChangeEvents = true;\n    }\n    hasChildren() {\n        return false;\n    }\n    _clearCache(attr) {\n        if ((attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM) &&\n            this._cache.get(attr)) {\n            this._cache.get(attr).dirty = true;\n        }\n        else if (attr) {\n            this._cache.delete(attr);\n        }\n        else {\n            this._cache.clear();\n        }\n    }\n    _getCache(attr, privateGetter) {\n        let cache = this._cache.get(attr);\n        const isTransform = attr === TRANSFORM || attr === ABSOLUTE_TRANSFORM;\n        const invalid = cache === undefined || (isTransform && cache.dirty === true);\n        if (invalid) {\n            cache = privateGetter.call(this);\n            this._cache.set(attr, cache);\n        }\n        return cache;\n    }\n    _calculate(name, deps, getter) {\n        if (!this._attachedDepsListeners.get(name)) {\n            const depsString = deps.map((dep) => dep + 'Change.konva').join(SPACE);\n            this.on(depsString, () => {\n                this._clearCache(name);\n            });\n            this._attachedDepsListeners.set(name, true);\n        }\n        return this._getCache(name, getter);\n    }\n    _getCanvasCache() {\n        return this._cache.get(CANVAS);\n    }\n    _clearSelfAndDescendantCache(attr) {\n        this._clearCache(attr);\n        if (attr === ABSOLUTE_TRANSFORM) {\n            this.fire('absoluteTransformChange');\n        }\n    }\n    clearCache() {\n        if (this._cache.has(CANVAS)) {\n            const { scene, filter, hit } = this._cache.get(CANVAS);\n            Util_1.Util.releaseCanvas(scene, filter, hit);\n            this._cache.delete(CANVAS);\n        }\n        this._clearSelfAndDescendantCache();\n        this._requestDraw();\n        return this;\n    }\n    cache(config) {\n        const conf = config || {};\n        let rect = {};\n        if (conf.x === undefined ||\n            conf.y === undefined ||\n            conf.width === undefined ||\n            conf.height === undefined) {\n            rect = this.getClientRect({\n                skipTransform: true,\n                relativeTo: this.getParent() || undefined,\n            });\n        }\n        let width = Math.ceil(conf.width || rect.width), height = Math.ceil(conf.height || rect.height), pixelRatio = conf.pixelRatio, x = conf.x === undefined ? Math.floor(rect.x) : conf.x, y = conf.y === undefined ? Math.floor(rect.y) : conf.y, offset = conf.offset || 0, drawBorder = conf.drawBorder || false, hitCanvasPixelRatio = conf.hitCanvasPixelRatio || 1;\n        if (!width || !height) {\n            Util_1.Util.error('Can not cache the node. Width or height of the node equals 0. Caching is skipped.');\n            return;\n        }\n        const extraPaddingX = Math.abs(Math.round(rect.x) - x) > 0.5 ? 1 : 0;\n        const extraPaddingY = Math.abs(Math.round(rect.y) - y) > 0.5 ? 1 : 0;\n        width += offset * 2 + extraPaddingX;\n        height += offset * 2 + extraPaddingY;\n        x -= offset;\n        y -= offset;\n        const cachedSceneCanvas = new Canvas_1.SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: width,\n            height: height,\n        }), cachedFilterCanvas = new Canvas_1.SceneCanvas({\n            pixelRatio: pixelRatio,\n            width: 0,\n            height: 0,\n            willReadFrequently: true,\n        }), cachedHitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: hitCanvasPixelRatio,\n            width: width,\n            height: height,\n        }), sceneContext = cachedSceneCanvas.getContext(), hitContext = cachedHitCanvas.getContext();\n        cachedHitCanvas.isCache = true;\n        cachedSceneCanvas.isCache = true;\n        this._cache.delete(CANVAS);\n        this._filterUpToDate = false;\n        if (conf.imageSmoothingEnabled === false) {\n            cachedSceneCanvas.getContext()._context.imageSmoothingEnabled = false;\n            cachedFilterCanvas.getContext()._context.imageSmoothingEnabled = false;\n        }\n        sceneContext.save();\n        hitContext.save();\n        sceneContext.translate(-x, -y);\n        hitContext.translate(-x, -y);\n        this._isUnderCache = true;\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this.drawScene(cachedSceneCanvas, this);\n        this.drawHit(cachedHitCanvas, this);\n        this._isUnderCache = false;\n        sceneContext.restore();\n        hitContext.restore();\n        if (drawBorder) {\n            sceneContext.save();\n            sceneContext.beginPath();\n            sceneContext.rect(0, 0, width, height);\n            sceneContext.closePath();\n            sceneContext.setAttr('strokeStyle', 'red');\n            sceneContext.setAttr('lineWidth', 5);\n            sceneContext.stroke();\n            sceneContext.restore();\n        }\n        this._cache.set(CANVAS, {\n            scene: cachedSceneCanvas,\n            filter: cachedFilterCanvas,\n            hit: cachedHitCanvas,\n            x: x,\n            y: y,\n        });\n        this._requestDraw();\n        return this;\n    }\n    isCached() {\n        return this._cache.has(CANVAS);\n    }\n    getClientRect(config) {\n        throw new Error('abstract \"getClientRect\" method call');\n    }\n    _transformedRect(rect, top) {\n        const points = [\n            { x: rect.x, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y },\n            { x: rect.x + rect.width, y: rect.y + rect.height },\n            { x: rect.x, y: rect.y + rect.height },\n        ];\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n        const trans = this.getAbsoluteTransform(top);\n        points.forEach(function (point) {\n            const transformed = trans.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    _drawCachedSceneCanvas(context) {\n        context.save();\n        context._applyOpacity(this);\n        context._applyGlobalCompositeOperation(this);\n        const canvasCache = this._getCanvasCache();\n        context.translate(canvasCache.x, canvasCache.y);\n        const cacheCanvas = this._getCachedSceneCanvas();\n        const ratio = cacheCanvas.pixelRatio;\n        context.drawImage(cacheCanvas._canvas, 0, 0, cacheCanvas.width / ratio, cacheCanvas.height / ratio);\n        context.restore();\n    }\n    _drawCachedHitCanvas(context) {\n        const canvasCache = this._getCanvasCache(), hitCanvas = canvasCache.hit;\n        context.save();\n        context.translate(canvasCache.x, canvasCache.y);\n        context.drawImage(hitCanvas._canvas, 0, 0, hitCanvas.width / hitCanvas.pixelRatio, hitCanvas.height / hitCanvas.pixelRatio);\n        context.restore();\n    }\n    _getCachedSceneCanvas() {\n        let filters = this.filters(), cachedCanvas = this._getCanvasCache(), sceneCanvas = cachedCanvas.scene, filterCanvas = cachedCanvas.filter, filterContext = filterCanvas.getContext(), len, imageData, n, filter;\n        if (filters) {\n            if (!this._filterUpToDate) {\n                const ratio = sceneCanvas.pixelRatio;\n                filterCanvas.setSize(sceneCanvas.width / sceneCanvas.pixelRatio, sceneCanvas.height / sceneCanvas.pixelRatio);\n                try {\n                    len = filters.length;\n                    filterContext.clear();\n                    filterContext.drawImage(sceneCanvas._canvas, 0, 0, sceneCanvas.getWidth() / ratio, sceneCanvas.getHeight() / ratio);\n                    imageData = filterContext.getImageData(0, 0, filterCanvas.getWidth(), filterCanvas.getHeight());\n                    for (n = 0; n < len; n++) {\n                        filter = filters[n];\n                        if (typeof filter !== 'function') {\n                            Util_1.Util.error('Filter should be type of function, but got ' +\n                                typeof filter +\n                                ' instead. Please check correct filters');\n                            continue;\n                        }\n                        filter.call(this, imageData);\n                        filterContext.putImageData(imageData, 0, 0);\n                    }\n                }\n                catch (e) {\n                    Util_1.Util.error('Unable to apply filter. ' +\n                        e.message +\n                        ' This post my help you https://konvajs.org/docs/posts/Tainted_Canvas.html.');\n                }\n                this._filterUpToDate = true;\n            }\n            return filterCanvas;\n        }\n        return sceneCanvas;\n    }\n    on(evtStr, handler) {\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (arguments.length === 3) {\n            return this._delegate.apply(this, arguments);\n        }\n        let events = evtStr.split(SPACE), len = events.length, n, event, parts, baseEvent, name;\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1] || '';\n            if (!this.eventListeners[baseEvent]) {\n                this.eventListeners[baseEvent] = [];\n            }\n            this.eventListeners[baseEvent].push({\n                name: name,\n                handler: handler,\n            });\n        }\n        return this;\n    }\n    off(evtStr, callback) {\n        let events = (evtStr || '').split(SPACE), len = events.length, n, t, event, parts, baseEvent, name;\n        this._cache && this._cache.delete(ALL_LISTENERS);\n        if (!evtStr) {\n            for (t in this.eventListeners) {\n                this._off(t);\n            }\n        }\n        for (n = 0; n < len; n++) {\n            event = events[n];\n            parts = event.split('.');\n            baseEvent = parts[0];\n            name = parts[1];\n            if (baseEvent) {\n                if (this.eventListeners[baseEvent]) {\n                    this._off(baseEvent, name, callback);\n                }\n            }\n            else {\n                for (t in this.eventListeners) {\n                    this._off(t, name, callback);\n                }\n            }\n        }\n        return this;\n    }\n    dispatchEvent(evt) {\n        const e = {\n            target: this,\n            type: evt.type,\n            evt: evt,\n        };\n        this.fire(evt.type, e);\n        return this;\n    }\n    addEventListener(type, handler) {\n        this.on(type, function (evt) {\n            handler.call(this, evt.evt);\n        });\n        return this;\n    }\n    removeEventListener(type) {\n        this.off(type);\n        return this;\n    }\n    _delegate(event, selector, handler) {\n        const stopNode = this;\n        this.on(event, function (evt) {\n            const targets = evt.target.findAncestors(selector, true, stopNode);\n            for (let i = 0; i < targets.length; i++) {\n                evt = Util_1.Util.cloneObject(evt);\n                evt.currentTarget = targets[i];\n                handler.call(targets[i], evt);\n            }\n        });\n    }\n    remove() {\n        if (this.isDragging()) {\n            this.stopDrag();\n        }\n        DragAndDrop_1.DD._dragElements.delete(this._id);\n        this._remove();\n        return this;\n    }\n    _clearCaches() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n        this._clearSelfAndDescendantCache(STAGE);\n        this._clearSelfAndDescendantCache(VISIBLE);\n        this._clearSelfAndDescendantCache(LISTENING);\n    }\n    _remove() {\n        this._clearCaches();\n        const parent = this.getParent();\n        if (parent && parent.children) {\n            parent.children.splice(this.index, 1);\n            parent._setChildrenIndices();\n            this.parent = null;\n        }\n    }\n    destroy() {\n        this.remove();\n        this.clearCache();\n        return this;\n    }\n    getAttr(attr) {\n        const method = 'get' + Util_1.Util._capitalize(attr);\n        if (Util_1.Util._isFunction(this[method])) {\n            return this[method]();\n        }\n        return this.attrs[attr];\n    }\n    getAncestors() {\n        let parent = this.getParent(), ancestors = [];\n        while (parent) {\n            ancestors.push(parent);\n            parent = parent.getParent();\n        }\n        return ancestors;\n    }\n    getAttrs() {\n        return (this.attrs || {});\n    }\n    setAttrs(config) {\n        this._batchTransformChanges(() => {\n            let key, method;\n            if (!config) {\n                return this;\n            }\n            for (key in config) {\n                if (key === CHILDREN) {\n                    continue;\n                }\n                method = SET + Util_1.Util._capitalize(key);\n                if (Util_1.Util._isFunction(this[method])) {\n                    this[method](config[key]);\n                }\n                else {\n                    this._setAttr(key, config[key]);\n                }\n            }\n        });\n        return this;\n    }\n    isListening() {\n        return this._getCache(LISTENING, this._isListening);\n    }\n    _isListening(relativeTo) {\n        const listening = this.listening();\n        if (!listening) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isListening(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    isVisible() {\n        return this._getCache(VISIBLE, this._isVisible);\n    }\n    _isVisible(relativeTo) {\n        const visible = this.visible();\n        if (!visible) {\n            return false;\n        }\n        const parent = this.getParent();\n        if (parent && parent !== relativeTo && this !== relativeTo) {\n            return parent._isVisible(relativeTo);\n        }\n        else {\n            return true;\n        }\n    }\n    shouldDrawHit(top, skipDragCheck = false) {\n        if (top) {\n            return this._isVisible(top) && this._isListening(top);\n        }\n        const layer = this.getLayer();\n        let layerUnderDrag = false;\n        DragAndDrop_1.DD._dragElements.forEach((elem) => {\n            if (elem.dragStatus !== 'dragging') {\n                return;\n            }\n            else if (elem.node.nodeType === 'Stage') {\n                layerUnderDrag = true;\n            }\n            else if (elem.node.getLayer() === layer) {\n                layerUnderDrag = true;\n            }\n        });\n        const dragSkip = !skipDragCheck &&\n            !Global_1.Konva.hitOnDragEnabled &&\n            (layerUnderDrag || Global_1.Konva.isTransforming());\n        return this.isListening() && this.isVisible() && !dragSkip;\n    }\n    show() {\n        this.visible(true);\n        return this;\n    }\n    hide() {\n        this.visible(false);\n        return this;\n    }\n    getZIndex() {\n        return this.index || 0;\n    }\n    getAbsoluteZIndex() {\n        let depth = this.getDepth(), that = this, index = 0, nodes, len, n, child;\n        function addChildren(children) {\n            nodes = [];\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                child = children[n];\n                index++;\n                if (child.nodeType !== SHAPE) {\n                    nodes = nodes.concat(child.getChildren().slice());\n                }\n                if (child._id === that._id) {\n                    n = len;\n                }\n            }\n            if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n                addChildren(nodes);\n            }\n        }\n        const stage = this.getStage();\n        if (that.nodeType !== UPPER_STAGE && stage) {\n            addChildren(stage.getChildren());\n        }\n        return index;\n    }\n    getDepth() {\n        let depth = 0, parent = this.parent;\n        while (parent) {\n            depth++;\n            parent = parent.parent;\n        }\n        return depth;\n    }\n    _batchTransformChanges(func) {\n        this._batchingTransformChange = true;\n        func();\n        this._batchingTransformChange = false;\n        if (this._needClearTransformCache) {\n            this._clearCache(TRANSFORM);\n            this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        }\n        this._needClearTransformCache = false;\n    }\n    setPosition(pos) {\n        this._batchTransformChanges(() => {\n            this.x(pos.x);\n            this.y(pos.y);\n        });\n        return this;\n    }\n    getPosition() {\n        return {\n            x: this.x(),\n            y: this.y(),\n        };\n    }\n    getRelativePointerPosition() {\n        const stage = this.getStage();\n        if (!stage) {\n            return null;\n        }\n        const pos = stage.getPointerPosition();\n        if (!pos) {\n            return null;\n        }\n        const transform = this.getAbsoluteTransform().copy();\n        transform.invert();\n        return transform.point(pos);\n    }\n    getAbsolutePosition(top) {\n        let haveCachedParent = false;\n        let parent = this.parent;\n        while (parent) {\n            if (parent.isCached()) {\n                haveCachedParent = true;\n                break;\n            }\n            parent = parent.parent;\n        }\n        if (haveCachedParent && !top) {\n            top = true;\n        }\n        const absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(), absoluteTransform = new Util_1.Transform(), offset = this.offset();\n        absoluteTransform.m = absoluteMatrix.slice();\n        absoluteTransform.translate(offset.x, offset.y);\n        return absoluteTransform.getTranslation();\n    }\n    setAbsolutePosition(pos) {\n        const { x, y, ...origTrans } = this._clearTransform();\n        this.attrs.x = x;\n        this.attrs.y = y;\n        this._clearCache(TRANSFORM);\n        const it = this._getAbsoluteTransform().copy();\n        it.invert();\n        it.translate(pos.x, pos.y);\n        pos = {\n            x: this.attrs.x + it.getTranslation().x,\n            y: this.attrs.y + it.getTranslation().y,\n        };\n        this._setTransform(origTrans);\n        this.setPosition({ x: pos.x, y: pos.y });\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n        return this;\n    }\n    _setTransform(trans) {\n        let key;\n        for (key in trans) {\n            this.attrs[key] = trans[key];\n        }\n    }\n    _clearTransform() {\n        const trans = {\n            x: this.x(),\n            y: this.y(),\n            rotation: this.rotation(),\n            scaleX: this.scaleX(),\n            scaleY: this.scaleY(),\n            offsetX: this.offsetX(),\n            offsetY: this.offsetY(),\n            skewX: this.skewX(),\n            skewY: this.skewY(),\n        };\n        this.attrs.x = 0;\n        this.attrs.y = 0;\n        this.attrs.rotation = 0;\n        this.attrs.scaleX = 1;\n        this.attrs.scaleY = 1;\n        this.attrs.offsetX = 0;\n        this.attrs.offsetY = 0;\n        this.attrs.skewX = 0;\n        this.attrs.skewY = 0;\n        return trans;\n    }\n    move(change) {\n        let changeX = change.x, changeY = change.y, x = this.x(), y = this.y();\n        if (changeX !== undefined) {\n            x += changeX;\n        }\n        if (changeY !== undefined) {\n            y += changeY;\n        }\n        this.setPosition({ x: x, y: y });\n        return this;\n    }\n    _eachAncestorReverse(func, top) {\n        let family = [], parent = this.getParent(), len, n;\n        if (top && top._id === this._id) {\n            return;\n        }\n        family.unshift(this);\n        while (parent && (!top || parent._id !== top._id)) {\n            family.unshift(parent);\n            parent = parent.parent;\n        }\n        len = family.length;\n        for (n = 0; n < len; n++) {\n            func(family[n]);\n        }\n    }\n    rotate(theta) {\n        this.rotation(this.rotation() + theta);\n        return this;\n    }\n    moveToTop() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveToTop function is ignored.');\n            return false;\n        }\n        const index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.push(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveUp() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveUp function is ignored.');\n            return false;\n        }\n        const index = this.index, len = this.parent.getChildren().length;\n        if (index < len - 1) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index + 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveDown() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveDown function is ignored.');\n            return false;\n        }\n        const index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.splice(index - 1, 0, this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    moveToBottom() {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. moveToBottom function is ignored.');\n            return false;\n        }\n        const index = this.index;\n        if (index > 0) {\n            this.parent.children.splice(index, 1);\n            this.parent.children.unshift(this);\n            this.parent._setChildrenIndices();\n            return true;\n        }\n        return false;\n    }\n    setZIndex(zIndex) {\n        if (!this.parent) {\n            Util_1.Util.warn('Node has no parent. zIndex parameter is ignored.');\n            return this;\n        }\n        if (zIndex < 0 || zIndex >= this.parent.children.length) {\n            Util_1.Util.warn('Unexpected value ' +\n                zIndex +\n                ' for zIndex property. zIndex is just index of a node in children of its parent. Expected value is from 0 to ' +\n                (this.parent.children.length - 1) +\n                '.');\n        }\n        const index = this.index;\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(zIndex, 0, this);\n        this.parent._setChildrenIndices();\n        return this;\n    }\n    getAbsoluteOpacity() {\n        return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    }\n    _getAbsoluteOpacity() {\n        let absOpacity = this.opacity();\n        const parent = this.getParent();\n        if (parent && !parent._isUnderCache) {\n            absOpacity *= parent.getAbsoluteOpacity();\n        }\n        return absOpacity;\n    }\n    moveTo(newContainer) {\n        if (this.getParent() !== newContainer) {\n            this._remove();\n            newContainer.add(this);\n        }\n        return this;\n    }\n    toObject() {\n        let attrs = this.getAttrs(), key, val, getter, defaultValue, nonPlainObject;\n        const obj = {\n            attrs: {},\n            className: this.getClassName(),\n        };\n        for (key in attrs) {\n            val = attrs[key];\n            nonPlainObject =\n                Util_1.Util.isObject(val) && !Util_1.Util._isPlainObject(val) && !Util_1.Util._isArray(val);\n            if (nonPlainObject) {\n                continue;\n            }\n            getter = typeof this[key] === 'function' && this[key];\n            delete attrs[key];\n            defaultValue = getter ? getter.call(this) : null;\n            attrs[key] = val;\n            if (defaultValue !== val) {\n                obj.attrs[key] = val;\n            }\n        }\n        return Util_1.Util._prepareToStringify(obj);\n    }\n    toJSON() {\n        return JSON.stringify(this.toObject());\n    }\n    getParent() {\n        return this.parent;\n    }\n    findAncestors(selector, includeSelf, stopNode) {\n        const res = [];\n        if (includeSelf && this._isMatch(selector)) {\n            res.push(this);\n        }\n        let ancestor = this.parent;\n        while (ancestor) {\n            if (ancestor === stopNode) {\n                return res;\n            }\n            if (ancestor._isMatch(selector)) {\n                res.push(ancestor);\n            }\n            ancestor = ancestor.parent;\n        }\n        return res;\n    }\n    isAncestorOf(node) {\n        return false;\n    }\n    findAncestor(selector, includeSelf, stopNode) {\n        return this.findAncestors(selector, includeSelf, stopNode)[0];\n    }\n    _isMatch(selector) {\n        if (!selector) {\n            return false;\n        }\n        if (typeof selector === 'function') {\n            return selector(this);\n        }\n        let selectorArr = selector.replace(/ /g, '').split(','), len = selectorArr.length, n, sel;\n        for (n = 0; n < len; n++) {\n            sel = selectorArr[n];\n            if (!Util_1.Util.isValidSelector(sel)) {\n                Util_1.Util.warn('Selector \"' +\n                    sel +\n                    '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".');\n                Util_1.Util.warn('If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".');\n                Util_1.Util.warn('Konva is awesome, right?');\n            }\n            if (sel.charAt(0) === '#') {\n                if (this.id() === sel.slice(1)) {\n                    return true;\n                }\n            }\n            else if (sel.charAt(0) === '.') {\n                if (this.hasName(sel.slice(1))) {\n                    return true;\n                }\n            }\n            else if (this.className === sel || this.nodeType === sel) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getLayer() {\n        const parent = this.getParent();\n        return parent ? parent.getLayer() : null;\n    }\n    getStage() {\n        return this._getCache(STAGE, this._getStage);\n    }\n    _getStage() {\n        const parent = this.getParent();\n        if (parent) {\n            return parent.getStage();\n        }\n        else {\n            return null;\n        }\n    }\n    fire(eventType, evt = {}, bubble) {\n        evt.target = evt.target || this;\n        if (bubble) {\n            this._fireAndBubble(eventType, evt);\n        }\n        else {\n            this._fire(eventType, evt);\n        }\n        return this;\n    }\n    getAbsoluteTransform(top) {\n        if (top) {\n            return this._getAbsoluteTransform(top);\n        }\n        else {\n            return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n        }\n    }\n    _getAbsoluteTransform(top) {\n        let at;\n        if (top) {\n            at = new Util_1.Transform();\n            this._eachAncestorReverse(function (node) {\n                const transformsEnabled = node.transformsEnabled();\n                if (transformsEnabled === 'all') {\n                    at.multiply(node.getTransform());\n                }\n                else if (transformsEnabled === 'position') {\n                    at.translate(node.x() - node.offsetX(), node.y() - node.offsetY());\n                }\n            }, top);\n            return at;\n        }\n        else {\n            at = this._cache.get(ABSOLUTE_TRANSFORM) || new Util_1.Transform();\n            if (this.parent) {\n                this.parent.getAbsoluteTransform().copyInto(at);\n            }\n            else {\n                at.reset();\n            }\n            const transformsEnabled = this.transformsEnabled();\n            if (transformsEnabled === 'all') {\n                at.multiply(this.getTransform());\n            }\n            else if (transformsEnabled === 'position') {\n                const x = this.attrs.x || 0;\n                const y = this.attrs.y || 0;\n                const offsetX = this.attrs.offsetX || 0;\n                const offsetY = this.attrs.offsetY || 0;\n                at.translate(x - offsetX, y - offsetY);\n            }\n            at.dirty = false;\n            return at;\n        }\n    }\n    getAbsoluteScale(top) {\n        let parent = this;\n        while (parent) {\n            if (parent._isUnderCache) {\n                top = parent;\n            }\n            parent = parent.getParent();\n        }\n        const transform = this.getAbsoluteTransform(top);\n        const attrs = transform.decompose();\n        return {\n            x: attrs.scaleX,\n            y: attrs.scaleY,\n        };\n    }\n    getAbsoluteRotation() {\n        return this.getAbsoluteTransform().decompose().rotation;\n    }\n    getTransform() {\n        return this._getCache(TRANSFORM, this._getTransform);\n    }\n    _getTransform() {\n        var _a, _b;\n        const m = this._cache.get(TRANSFORM) || new Util_1.Transform();\n        m.reset();\n        const x = this.x(), y = this.y(), rotation = Global_1.Konva.getAngle(this.rotation()), scaleX = (_a = this.attrs.scaleX) !== null && _a !== void 0 ? _a : 1, scaleY = (_b = this.attrs.scaleY) !== null && _b !== void 0 ? _b : 1, skewX = this.attrs.skewX || 0, skewY = this.attrs.skewY || 0, offsetX = this.attrs.offsetX || 0, offsetY = this.attrs.offsetY || 0;\n        if (x !== 0 || y !== 0) {\n            m.translate(x, y);\n        }\n        if (rotation !== 0) {\n            m.rotate(rotation);\n        }\n        if (skewX !== 0 || skewY !== 0) {\n            m.skew(skewX, skewY);\n        }\n        if (scaleX !== 1 || scaleY !== 1) {\n            m.scale(scaleX, scaleY);\n        }\n        if (offsetX !== 0 || offsetY !== 0) {\n            m.translate(-1 * offsetX, -1 * offsetY);\n        }\n        m.dirty = false;\n        return m;\n    }\n    clone(obj) {\n        let attrs = Util_1.Util.cloneObject(this.attrs), key, allListeners, len, n, listener;\n        for (key in obj) {\n            attrs[key] = obj[key];\n        }\n        const node = new this.constructor(attrs);\n        for (key in this.eventListeners) {\n            allListeners = this.eventListeners[key];\n            len = allListeners.length;\n            for (n = 0; n < len; n++) {\n                listener = allListeners[n];\n                if (listener.name.indexOf(KONVA) < 0) {\n                    if (!node.eventListeners[key]) {\n                        node.eventListeners[key] = [];\n                    }\n                    node.eventListeners[key].push(listener);\n                }\n            }\n        }\n        return node;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        const box = this.getClientRect();\n        const stage = this.getStage(), x = config.x !== undefined ? config.x : Math.floor(box.x), y = config.y !== undefined ? config.y : Math.floor(box.y), pixelRatio = config.pixelRatio || 1, canvas = new Canvas_1.SceneCanvas({\n            width: config.width || Math.ceil(box.width) || (stage ? stage.width() : 0),\n            height: config.height ||\n                Math.ceil(box.height) ||\n                (stage ? stage.height() : 0),\n            pixelRatio: pixelRatio,\n        }), context = canvas.getContext();\n        const bufferCanvas = new Canvas_1.SceneCanvas({\n            width: canvas.width / canvas.pixelRatio + Math.abs(x),\n            height: canvas.height / canvas.pixelRatio + Math.abs(y),\n            pixelRatio: canvas.pixelRatio,\n        });\n        if (config.imageSmoothingEnabled === false) {\n            context._context.imageSmoothingEnabled = false;\n        }\n        context.save();\n        if (x || y) {\n            context.translate(-1 * x, -1 * y);\n        }\n        this.drawScene(canvas, undefined, bufferCanvas);\n        context.restore();\n        return canvas;\n    }\n    toCanvas(config) {\n        return this._toKonvaCanvas(config)._canvas;\n    }\n    toDataURL(config) {\n        config = config || {};\n        const mimeType = config.mimeType || null, quality = config.quality || null;\n        const url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n        if (config.callback) {\n            config.callback(url);\n        }\n        return url;\n    }\n    toImage(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                Util_1.Util._urlToImage(this.toDataURL(config), function (img) {\n                    resolve(img);\n                    callback === null || callback === void 0 ? void 0 : callback(img);\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    toBlob(config) {\n        return new Promise((resolve, reject) => {\n            try {\n                const callback = config === null || config === void 0 ? void 0 : config.callback;\n                if (callback)\n                    delete config.callback;\n                this.toCanvas(config).toBlob((blob) => {\n                    resolve(blob);\n                    callback === null || callback === void 0 ? void 0 : callback(blob);\n                }, config === null || config === void 0 ? void 0 : config.mimeType, config === null || config === void 0 ? void 0 : config.quality);\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    }\n    setSize(size) {\n        this.width(size.width);\n        this.height(size.height);\n        return this;\n    }\n    getSize() {\n        return {\n            width: this.width(),\n            height: this.height(),\n        };\n    }\n    getClassName() {\n        return this.className || this.nodeType;\n    }\n    getType() {\n        return this.nodeType;\n    }\n    getDragDistance() {\n        if (this.attrs.dragDistance !== undefined) {\n            return this.attrs.dragDistance;\n        }\n        else if (this.parent) {\n            return this.parent.getDragDistance();\n        }\n        else {\n            return Global_1.Konva.dragDistance;\n        }\n    }\n    _off(type, name, callback) {\n        let evtListeners = this.eventListeners[type], i, evtName, handler;\n        for (i = 0; i < evtListeners.length; i++) {\n            evtName = evtListeners[i].name;\n            handler = evtListeners[i].handler;\n            if ((evtName !== 'konva' || name === 'konva') &&\n                (!name || evtName === name) &&\n                (!callback || callback === handler)) {\n                evtListeners.splice(i, 1);\n                if (evtListeners.length === 0) {\n                    delete this.eventListeners[type];\n                    break;\n                }\n                i--;\n            }\n        }\n    }\n    _fireChangeEvent(attr, oldVal, newVal) {\n        this._fire(attr + CHANGE, {\n            oldVal: oldVal,\n            newVal: newVal,\n        });\n    }\n    addName(name) {\n        if (!this.hasName(name)) {\n            const oldName = this.name();\n            const newName = oldName ? oldName + ' ' + name : name;\n            this.name(newName);\n        }\n        return this;\n    }\n    hasName(name) {\n        if (!name) {\n            return false;\n        }\n        const fullName = this.name();\n        if (!fullName) {\n            return false;\n        }\n        const names = (fullName || '').split(/\\s/g);\n        return names.indexOf(name) !== -1;\n    }\n    removeName(name) {\n        const names = (this.name() || '').split(/\\s/g);\n        const index = names.indexOf(name);\n        if (index !== -1) {\n            names.splice(index, 1);\n            this.name(names.join(' '));\n        }\n        return this;\n    }\n    setAttr(attr, val) {\n        const func = this[SET + Util_1.Util._capitalize(attr)];\n        if (Util_1.Util._isFunction(func)) {\n            func.call(this, val);\n        }\n        else {\n            this._setAttr(attr, val);\n        }\n        return this;\n    }\n    _requestDraw() {\n        if (Global_1.Konva.autoDrawEnabled) {\n            const drawNode = this.getLayer() || this.getStage();\n            drawNode === null || drawNode === void 0 ? void 0 : drawNode.batchDraw();\n        }\n    }\n    _setAttr(key, val) {\n        const oldVal = this.attrs[key];\n        if (oldVal === val && !Util_1.Util.isObject(val)) {\n            return;\n        }\n        if (val === undefined || val === null) {\n            delete this.attrs[key];\n        }\n        else {\n            this.attrs[key] = val;\n        }\n        if (this._shouldFireChangeEvents) {\n            this._fireChangeEvent(key, oldVal, val);\n        }\n        this._requestDraw();\n    }\n    _setComponentAttr(key, component, val) {\n        let oldVal;\n        if (val !== undefined) {\n            oldVal = this.attrs[key];\n            if (!oldVal) {\n                this.attrs[key] = this.getAttr(key);\n            }\n            this.attrs[key][component] = val;\n            this._fireChangeEvent(key, oldVal, val);\n        }\n    }\n    _fireAndBubble(eventType, evt, compareShape) {\n        if (evt && this.nodeType === SHAPE) {\n            evt.target = this;\n        }\n        const shouldStop = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n            ((compareShape &&\n                (this === compareShape ||\n                    (this.isAncestorOf && this.isAncestorOf(compareShape)))) ||\n                (this.nodeType === 'Stage' && !compareShape));\n        if (!shouldStop) {\n            this._fire(eventType, evt);\n            const stopBubble = (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n                compareShape &&\n                compareShape.isAncestorOf &&\n                compareShape.isAncestorOf(this) &&\n                !compareShape.isAncestorOf(this.parent);\n            if (((evt && !evt.cancelBubble) || !evt) &&\n                this.parent &&\n                this.parent.isListening() &&\n                !stopBubble) {\n                if (compareShape && compareShape.parent) {\n                    this._fireAndBubble.call(this.parent, eventType, evt, compareShape);\n                }\n                else {\n                    this._fireAndBubble.call(this.parent, eventType, evt);\n                }\n            }\n        }\n    }\n    _getProtoListeners(eventType) {\n        var _a, _b, _c;\n        const allListeners = (_a = this._cache.get(ALL_LISTENERS)) !== null && _a !== void 0 ? _a : {};\n        let events = allListeners === null || allListeners === void 0 ? void 0 : allListeners[eventType];\n        if (events === undefined) {\n            events = [];\n            let obj = Object.getPrototypeOf(this);\n            while (obj) {\n                const hierarchyEvents = (_c = (_b = obj.eventListeners) === null || _b === void 0 ? void 0 : _b[eventType]) !== null && _c !== void 0 ? _c : [];\n                events.push(...hierarchyEvents);\n                obj = Object.getPrototypeOf(obj);\n            }\n            allListeners[eventType] = events;\n            this._cache.set(ALL_LISTENERS, allListeners);\n        }\n        return events;\n    }\n    _fire(eventType, evt) {\n        evt = evt || {};\n        evt.currentTarget = this;\n        evt.type = eventType;\n        const topListeners = this._getProtoListeners(eventType);\n        if (topListeners) {\n            for (var i = 0; i < topListeners.length; i++) {\n                topListeners[i].handler.call(this, evt);\n            }\n        }\n        const selfListeners = this.eventListeners[eventType];\n        if (selfListeners) {\n            for (var i = 0; i < selfListeners.length; i++) {\n                selfListeners[i].handler.call(this, evt);\n            }\n        }\n    }\n    draw() {\n        this.drawScene();\n        this.drawHit();\n        return this;\n    }\n    _createDragElement(evt) {\n        const pointerId = evt ? evt.pointerId : undefined;\n        const stage = this.getStage();\n        const ap = this.getAbsolutePosition();\n        if (!stage) {\n            return;\n        }\n        const pos = stage._getPointerById(pointerId) ||\n            stage._changedPointerPositions[0] ||\n            ap;\n        DragAndDrop_1.DD._dragElements.set(this._id, {\n            node: this,\n            startPointerPos: pos,\n            offset: {\n                x: pos.x - ap.x,\n                y: pos.y - ap.y,\n            },\n            dragStatus: 'ready',\n            pointerId,\n        });\n    }\n    startDrag(evt, bubbleEvent = true) {\n        if (!DragAndDrop_1.DD._dragElements.has(this._id)) {\n            this._createDragElement(evt);\n        }\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n        elem.dragStatus = 'dragging';\n        this.fire('dragstart', {\n            type: 'dragstart',\n            target: this,\n            evt: evt && evt.evt,\n        }, bubbleEvent);\n    }\n    _setDragPosition(evt, elem) {\n        const pos = this.getStage()._getPointerById(elem.pointerId);\n        if (!pos) {\n            return;\n        }\n        let newNodePos = {\n            x: pos.x - elem.offset.x,\n            y: pos.y - elem.offset.y,\n        };\n        const dbf = this.dragBoundFunc();\n        if (dbf !== undefined) {\n            const bounded = dbf.call(this, newNodePos, evt);\n            if (!bounded) {\n                Util_1.Util.warn('dragBoundFunc did not return any value. That is unexpected behavior. You must return new absolute position from dragBoundFunc.');\n            }\n            else {\n                newNodePos = bounded;\n            }\n        }\n        if (!this._lastPos ||\n            this._lastPos.x !== newNodePos.x ||\n            this._lastPos.y !== newNodePos.y) {\n            this.setAbsolutePosition(newNodePos);\n            this._requestDraw();\n        }\n        this._lastPos = newNodePos;\n    }\n    stopDrag(evt) {\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n        if (elem) {\n            elem.dragStatus = 'stopped';\n        }\n        DragAndDrop_1.DD._endDragBefore(evt);\n        DragAndDrop_1.DD._endDragAfter(evt);\n    }\n    setDraggable(draggable) {\n        this._setAttr('draggable', draggable);\n        this._dragChange();\n    }\n    isDragging() {\n        const elem = DragAndDrop_1.DD._dragElements.get(this._id);\n        return elem ? elem.dragStatus === 'dragging' : false;\n    }\n    _listenDrag() {\n        this._dragCleanup();\n        this.on('mousedown.konva touchstart.konva', function (evt) {\n            const shouldCheckButton = evt.evt['button'] !== undefined;\n            const canDrag = !shouldCheckButton || Global_1.Konva.dragButtons.indexOf(evt.evt['button']) >= 0;\n            if (!canDrag) {\n                return;\n            }\n            if (this.isDragging()) {\n                return;\n            }\n            let hasDraggingChild = false;\n            DragAndDrop_1.DD._dragElements.forEach((elem) => {\n                if (this.isAncestorOf(elem.node)) {\n                    hasDraggingChild = true;\n                }\n            });\n            if (!hasDraggingChild) {\n                this._createDragElement(evt);\n            }\n        });\n    }\n    _dragChange() {\n        if (this.attrs.draggable) {\n            this._listenDrag();\n        }\n        else {\n            this._dragCleanup();\n            const stage = this.getStage();\n            if (!stage) {\n                return;\n            }\n            const dragElement = DragAndDrop_1.DD._dragElements.get(this._id);\n            const isDragging = dragElement && dragElement.dragStatus === 'dragging';\n            const isReady = dragElement && dragElement.dragStatus === 'ready';\n            if (isDragging) {\n                this.stopDrag();\n            }\n            else if (isReady) {\n                DragAndDrop_1.DD._dragElements.delete(this._id);\n            }\n        }\n    }\n    _dragCleanup() {\n        this.off('mousedown.konva');\n        this.off('touchstart.konva');\n    }\n    isClientRectOnScreen(margin = { x: 0, y: 0 }) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const screenRect = {\n            x: -margin.x,\n            y: -margin.y,\n            width: stage.width() + 2 * margin.x,\n            height: stage.height() + 2 * margin.y,\n        };\n        return Util_1.Util.haveIntersection(screenRect, this.getClientRect());\n    }\n    static create(data, container) {\n        if (Util_1.Util._isString(data)) {\n            data = JSON.parse(data);\n        }\n        return this._createNode(data, container);\n    }\n    static _createNode(obj, container) {\n        let className = Node.prototype.getClassName.call(obj), children = obj.children, no, len, n;\n        if (container) {\n            obj.attrs.container = container;\n        }\n        if (!Global_1.Konva[className]) {\n            Util_1.Util.warn('Can not find a node with class name \"' +\n                className +\n                '\". Fallback to \"Shape\".');\n            className = 'Shape';\n        }\n        const Class = Global_1.Konva[className];\n        no = new Class(obj.attrs);\n        if (children) {\n            len = children.length;\n            for (n = 0; n < len; n++) {\n                no.add(Node._createNode(children[n]));\n            }\n        }\n        return no;\n    }\n}\nexports.Node = Node;\nNode.prototype.nodeType = 'Node';\nNode.prototype._attrsAffectingSize = [];\nNode.prototype.eventListeners = {};\nNode.prototype.on.call(Node.prototype, TRANSFORM_CHANGE_STR, function () {\n    if (this._batchingTransformChange) {\n        this._needClearTransformCache = true;\n        return;\n    }\n    this._clearCache(TRANSFORM);\n    this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n});\nNode.prototype.on.call(Node.prototype, 'visibleChange.konva', function () {\n    this._clearSelfAndDescendantCache(VISIBLE);\n});\nNode.prototype.on.call(Node.prototype, 'listeningChange.konva', function () {\n    this._clearSelfAndDescendantCache(LISTENING);\n});\nNode.prototype.on.call(Node.prototype, 'opacityChange.konva', function () {\n    this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n});\nconst addGetterSetter = Factory_1.Factory.addGetterSetter;\naddGetterSetter(Node, 'zIndex');\naddGetterSetter(Node, 'absolutePosition');\naddGetterSetter(Node, 'position');\naddGetterSetter(Node, 'x', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'y', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'globalCompositeOperation', 'source-over', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'opacity', 1, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'name', '', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'id', '', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'rotation', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'scale', ['x', 'y']);\naddGetterSetter(Node, 'scaleX', 1, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'scaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'skew', ['x', 'y']);\naddGetterSetter(Node, 'skewX', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'skewY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Node, 'offset', ['x', 'y']);\naddGetterSetter(Node, 'offsetX', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'offsetY', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'dragDistance', null, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'width', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'height', 0, (0, Validators_1.getNumberValidator)());\naddGetterSetter(Node, 'listening', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'preventDefault', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'filters', null, function (val) {\n    this._filterUpToDate = false;\n    return val;\n});\naddGetterSetter(Node, 'visible', true, (0, Validators_1.getBooleanValidator)());\naddGetterSetter(Node, 'transformsEnabled', 'all', (0, Validators_1.getStringValidator)());\naddGetterSetter(Node, 'size');\naddGetterSetter(Node, 'dragBoundFunc');\naddGetterSetter(Node, 'draggable', false, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.backCompat(Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation',\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Node.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/PointerEvents.js":
/*!*************************************************!*\
  !*** ./node_modules/konva/lib/PointerEvents.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getCapturedShape = getCapturedShape;\nexports.createEvent = createEvent;\nexports.hasPointerCapture = hasPointerCapture;\nexports.setPointerCapture = setPointerCapture;\nexports.releaseCapture = releaseCapture;\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Global_1.Konva._global['PointerEvent'] !== undefined;\nfunction getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nfunction createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nfunction hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nfunction setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nfunction releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvUG9pbnRlckV2ZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIsc0JBQXNCO0FBQ3RCLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL1BvaW50ZXJFdmVudHMuanM/ZDhhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0Q2FwdHVyZWRTaGFwZSA9IGdldENhcHR1cmVkU2hhcGU7XG5leHBvcnRzLmNyZWF0ZUV2ZW50ID0gY3JlYXRlRXZlbnQ7XG5leHBvcnRzLmhhc1BvaW50ZXJDYXB0dXJlID0gaGFzUG9pbnRlckNhcHR1cmU7XG5leHBvcnRzLnNldFBvaW50ZXJDYXB0dXJlID0gc2V0UG9pbnRlckNhcHR1cmU7XG5leHBvcnRzLnJlbGVhc2VDYXB0dXJlID0gcmVsZWFzZUNhcHR1cmU7XG5jb25zdCBHbG9iYWxfMSA9IHJlcXVpcmUoXCIuL0dsb2JhbFwiKTtcbmNvbnN0IENhcHR1cmVzID0gbmV3IE1hcCgpO1xuY29uc3QgU1VQUE9SVF9QT0lOVEVSX0VWRU5UUyA9IEdsb2JhbF8xLktvbnZhLl9nbG9iYWxbJ1BvaW50ZXJFdmVudCddICE9PSB1bmRlZmluZWQ7XG5mdW5jdGlvbiBnZXRDYXB0dXJlZFNoYXBlKHBvaW50ZXJJZCkge1xuICAgIHJldHVybiBDYXB0dXJlcy5nZXQocG9pbnRlcklkKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50KGV2dCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGV2dCxcbiAgICAgICAgcG9pbnRlcklkOiBldnQucG9pbnRlcklkLFxuICAgIH07XG59XG5mdW5jdGlvbiBoYXNQb2ludGVyQ2FwdHVyZShwb2ludGVySWQsIHNoYXBlKSB7XG4gICAgcmV0dXJuIENhcHR1cmVzLmdldChwb2ludGVySWQpID09PSBzaGFwZTtcbn1cbmZ1bmN0aW9uIHNldFBvaW50ZXJDYXB0dXJlKHBvaW50ZXJJZCwgc2hhcGUpIHtcbiAgICByZWxlYXNlQ2FwdHVyZShwb2ludGVySWQpO1xuICAgIGNvbnN0IHN0YWdlID0gc2hhcGUuZ2V0U3RhZ2UoKTtcbiAgICBpZiAoIXN0YWdlKVxuICAgICAgICByZXR1cm47XG4gICAgQ2FwdHVyZXMuc2V0KHBvaW50ZXJJZCwgc2hhcGUpO1xuICAgIGlmIChTVVBQT1JUX1BPSU5URVJfRVZFTlRTKSB7XG4gICAgICAgIHNoYXBlLl9maXJlKCdnb3Rwb2ludGVyY2FwdHVyZScsIGNyZWF0ZUV2ZW50KG5ldyBQb2ludGVyRXZlbnQoJ2dvdHBvaW50ZXJjYXB0dXJlJykpKTtcbiAgICB9XG59XG5mdW5jdGlvbiByZWxlYXNlQ2FwdHVyZShwb2ludGVySWQsIHRhcmdldCkge1xuICAgIGNvbnN0IHNoYXBlID0gQ2FwdHVyZXMuZ2V0KHBvaW50ZXJJZCk7XG4gICAgaWYgKCFzaGFwZSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGNvbnN0IHN0YWdlID0gc2hhcGUuZ2V0U3RhZ2UoKTtcbiAgICBpZiAoc3RhZ2UgJiYgc3RhZ2UuY29udGVudCkge1xuICAgIH1cbiAgICBDYXB0dXJlcy5kZWxldGUocG9pbnRlcklkKTtcbiAgICBpZiAoU1VQUE9SVF9QT0lOVEVSX0VWRU5UUykge1xuICAgICAgICBzaGFwZS5fZmlyZSgnbG9zdHBvaW50ZXJjYXB0dXJlJywgY3JlYXRlRXZlbnQobmV3IFBvaW50ZXJFdmVudCgnbG9zdHBvaW50ZXJjYXB0dXJlJykpKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/PointerEvents.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Shape.js":
/*!*****************************************!*\
  !*** ./node_modules/konva/lib/Shape.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Shape = exports.shapes = void 0;\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Factory_1 = __webpack_require__(/*! ./Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ./Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ./Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_2 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst PointerEvents = __webpack_require__(/*! ./PointerEvents */ \"(app-pages-browser)/./node_modules/konva/lib/PointerEvents.js\");\nconst HAS_SHADOW = 'hasShadow';\nconst SHADOW_RGBA = 'shadowRGBA';\nconst patternImage = 'patternImage';\nconst linearGradient = 'linearGradient';\nconst radialGradient = 'radialGradient';\nlet dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_1.Util.createCanvasElement().getContext('2d');\n    return dummyContext;\n}\nexports.shapes = {};\nfunction _fillFunc(context) {\n    const fillRule = this.attrs.fillRule;\n    if (fillRule) {\n        context.fill(fillRule);\n    }\n    else {\n        context.fill();\n    }\n}\nfunction _strokeFunc(context) {\n    context.stroke();\n}\nfunction _fillFuncHit(context) {\n    const fillRule = this.attrs.fillRule;\n    if (fillRule) {\n        context.fill(fillRule);\n    }\n    else {\n        context.fill();\n    }\n}\nfunction _strokeFuncHit(context) {\n    context.stroke();\n}\nfunction _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n}\nfunction _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n}\nfunction _clearFillPatternCache() {\n    this._clearCache(patternImage);\n}\nfunction _clearLinearGradientCache() {\n    this._clearCache(linearGradient);\n}\nfunction _clearRadialGradientCache() {\n    this._clearCache(radialGradient);\n}\nclass Shape extends Node_1.Node {\n    constructor(config) {\n        super(config);\n        let key;\n        while (true) {\n            key = Util_1.Util.getRandomColor();\n            if (key && !(key in exports.shapes)) {\n                break;\n            }\n        }\n        this.colorKey = key;\n        exports.shapes[key] = this;\n    }\n    getContext() {\n        Util_1.Util.warn('shape.getContext() method is deprecated. Please do not use it.');\n        return this.getLayer().getContext();\n    }\n    getCanvas() {\n        Util_1.Util.warn('shape.getCanvas() method is deprecated. Please do not use it.');\n        return this.getLayer().getCanvas();\n    }\n    getSceneFunc() {\n        return this.attrs.sceneFunc || this['_sceneFunc'];\n    }\n    getHitFunc() {\n        return this.attrs.hitFunc || this['_hitFunc'];\n    }\n    hasShadow() {\n        return this._getCache(HAS_SHADOW, this._hasShadow);\n    }\n    _hasShadow() {\n        return (this.shadowEnabled() &&\n            this.shadowOpacity() !== 0 &&\n            !!(this.shadowColor() ||\n                this.shadowBlur() ||\n                this.shadowOffsetX() ||\n                this.shadowOffsetY()));\n    }\n    _getFillPattern() {\n        return this._getCache(patternImage, this.__getFillPattern);\n    }\n    __getFillPattern() {\n        if (this.fillPatternImage()) {\n            const ctx = getDummyContext();\n            const pattern = ctx.createPattern(this.fillPatternImage(), this.fillPatternRepeat() || 'repeat');\n            if (pattern && pattern.setTransform) {\n                const tr = new Util_1.Transform();\n                tr.translate(this.fillPatternX(), this.fillPatternY());\n                tr.rotate(Global_1.Konva.getAngle(this.fillPatternRotation()));\n                tr.scale(this.fillPatternScaleX(), this.fillPatternScaleY());\n                tr.translate(-1 * this.fillPatternOffsetX(), -1 * this.fillPatternOffsetY());\n                const m = tr.getMatrix();\n                const matrix = typeof DOMMatrix === 'undefined'\n                    ? {\n                        a: m[0],\n                        b: m[1],\n                        c: m[2],\n                        d: m[3],\n                        e: m[4],\n                        f: m[5],\n                    }\n                    : new DOMMatrix(m);\n                pattern.setTransform(matrix);\n            }\n            return pattern;\n        }\n    }\n    _getLinearGradient() {\n        return this._getCache(linearGradient, this.__getLinearGradient);\n    }\n    __getLinearGradient() {\n        const colorStops = this.fillLinearGradientColorStops();\n        if (colorStops) {\n            const ctx = getDummyContext();\n            const start = this.fillLinearGradientStartPoint();\n            const end = this.fillLinearGradientEndPoint();\n            const grd = ctx.createLinearGradient(start.x, start.y, end.x, end.y);\n            for (let n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    _getRadialGradient() {\n        return this._getCache(radialGradient, this.__getRadialGradient);\n    }\n    __getRadialGradient() {\n        const colorStops = this.fillRadialGradientColorStops();\n        if (colorStops) {\n            const ctx = getDummyContext();\n            const start = this.fillRadialGradientStartPoint();\n            const end = this.fillRadialGradientEndPoint();\n            const grd = ctx.createRadialGradient(start.x, start.y, this.fillRadialGradientStartRadius(), end.x, end.y, this.fillRadialGradientEndRadius());\n            for (let n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            return grd;\n        }\n    }\n    getShadowRGBA() {\n        return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    }\n    _getShadowRGBA() {\n        if (!this.hasShadow()) {\n            return;\n        }\n        const rgba = Util_1.Util.colorToRGBA(this.shadowColor());\n        if (rgba) {\n            return ('rgba(' +\n                rgba.r +\n                ',' +\n                rgba.g +\n                ',' +\n                rgba.b +\n                ',' +\n                rgba.a * (this.shadowOpacity() || 1) +\n                ')');\n        }\n    }\n    hasFill() {\n        return this._calculate('hasFill', [\n            'fillEnabled',\n            'fill',\n            'fillPatternImage',\n            'fillLinearGradientColorStops',\n            'fillRadialGradientColorStops',\n        ], () => {\n            return (this.fillEnabled() &&\n                !!(this.fill() ||\n                    this.fillPatternImage() ||\n                    this.fillLinearGradientColorStops() ||\n                    this.fillRadialGradientColorStops()));\n        });\n    }\n    hasStroke() {\n        return this._calculate('hasStroke', [\n            'strokeEnabled',\n            'strokeWidth',\n            'stroke',\n            'strokeLinearGradientColorStops',\n        ], () => {\n            return (this.strokeEnabled() &&\n                this.strokeWidth() &&\n                !!(this.stroke() || this.strokeLinearGradientColorStops()));\n        });\n    }\n    hasHitStroke() {\n        const width = this.hitStrokeWidth();\n        if (width === 'auto') {\n            return this.hasStroke();\n        }\n        return this.strokeEnabled() && !!width;\n    }\n    intersects(point) {\n        const stage = this.getStage();\n        if (!stage) {\n            return false;\n        }\n        const bufferHitCanvas = stage.bufferHitCanvas;\n        bufferHitCanvas.getContext().clear();\n        this.drawHit(bufferHitCanvas, undefined, true);\n        const p = bufferHitCanvas.context.getImageData(Math.round(point.x), Math.round(point.y), 1, 1).data;\n        return p[3] > 0;\n    }\n    destroy() {\n        Node_1.Node.prototype.destroy.call(this);\n        delete exports.shapes[this.colorKey];\n        delete this.colorKey;\n        return this;\n    }\n    _useBufferCanvas(forceFill) {\n        var _a;\n        const perfectDrawEnabled = (_a = this.attrs.perfectDrawEnabled) !== null && _a !== void 0 ? _a : true;\n        if (!perfectDrawEnabled) {\n            return false;\n        }\n        const hasFill = forceFill || this.hasFill();\n        const hasStroke = this.hasStroke();\n        const isTransparent = this.getAbsoluteOpacity() !== 1;\n        if (hasFill && hasStroke && isTransparent) {\n            return true;\n        }\n        const hasShadow = this.hasShadow();\n        const strokeForShadow = this.shadowForStrokeEnabled();\n        if (hasFill && hasStroke && hasShadow && strokeForShadow) {\n            return true;\n        }\n        return false;\n    }\n    setStrokeHitEnabled(val) {\n        Util_1.Util.warn('strokeHitEnabled property is deprecated. Please use hitStrokeWidth instead.');\n        if (val) {\n            this.hitStrokeWidth('auto');\n        }\n        else {\n            this.hitStrokeWidth(0);\n        }\n    }\n    getStrokeHitEnabled() {\n        if (this.hitStrokeWidth() === 0) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    getSelfRect() {\n        const size = this.size();\n        return {\n            x: this._centroid ? -size.width / 2 : 0,\n            y: this._centroid ? -size.height / 2 : 0,\n            width: size.width,\n            height: size.height,\n        };\n    }\n    getClientRect(config = {}) {\n        let hasCachedParent = false;\n        let parent = this.getParent();\n        while (parent) {\n            if (parent.isCached()) {\n                hasCachedParent = true;\n                break;\n            }\n            parent = parent.getParent();\n        }\n        const skipTransform = config.skipTransform;\n        const relativeTo = config.relativeTo || (hasCachedParent && this.getStage()) || undefined;\n        const fillRect = this.getSelfRect();\n        const applyStroke = !config.skipStroke && this.hasStroke();\n        const strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n        const fillAndStrokeWidth = fillRect.width + strokeWidth;\n        const fillAndStrokeHeight = fillRect.height + strokeWidth;\n        const applyShadow = !config.skipShadow && this.hasShadow();\n        const shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n        const shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n        const preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n        const preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n        const blurRadius = (applyShadow && this.shadowBlur()) || 0;\n        const width = preWidth + blurRadius * 2;\n        const height = preHeight + blurRadius * 2;\n        const rect = {\n            width: width,\n            height: height,\n            x: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetX, 0) +\n                fillRect.x,\n            y: -(strokeWidth / 2 + blurRadius) +\n                Math.min(shadowOffsetY, 0) +\n                fillRect.y,\n        };\n        if (!skipTransform) {\n            return this._transformedRect(rect, relativeTo);\n        }\n        return rect;\n    }\n    drawScene(can, top, bufferCanvas) {\n        const layer = this.getLayer();\n        let canvas = can || layer.getCanvas(), context = canvas.getContext(), cachedCanvas = this._getCanvasCache(), drawFunc = this.getSceneFunc(), hasShadow = this.hasShadow(), stage, bufferContext;\n        const skipBuffer = canvas.isCache;\n        const cachingSelf = top === this;\n        if (!this.isVisible() && !cachingSelf) {\n            return this;\n        }\n        if (cachedCanvas) {\n            context.save();\n            const m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedSceneCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        if (this._useBufferCanvas() && !skipBuffer) {\n            stage = this.getStage();\n            const bc = bufferCanvas || stage.bufferCanvas;\n            bufferContext = bc.getContext();\n            bufferContext.clear();\n            bufferContext.save();\n            bufferContext._applyLineJoin(this);\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            bufferContext.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n            drawFunc.call(this, bufferContext, this);\n            bufferContext.restore();\n            const ratio = bc.pixelRatio;\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n            context.drawImage(bc._canvas, 0, 0, bc.width / ratio, bc.height / ratio);\n        }\n        else {\n            context._applyLineJoin(this);\n            if (!cachingSelf) {\n                var o = this.getAbsoluteTransform(top).getMatrix();\n                context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n                context._applyOpacity(this);\n                context._applyGlobalCompositeOperation(this);\n            }\n            if (hasShadow) {\n                context._applyShadow(this);\n            }\n            drawFunc.call(this, context, this);\n        }\n        context.restore();\n        return this;\n    }\n    drawHit(can, top, skipDragCheck = false) {\n        if (!this.shouldDrawHit(top, skipDragCheck)) {\n            return this;\n        }\n        const layer = this.getLayer(), canvas = can || layer.hitCanvas, context = canvas && canvas.getContext(), drawFunc = this.hitFunc() || this.sceneFunc(), cachedCanvas = this._getCanvasCache(), cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n        if (!this.colorKey) {\n            Util_1.Util.warn('Looks like your canvas has a destroyed shape in it. Do not reuse shape after you destroyed it. If you want to reuse shape you should call remove() instead of destroy()');\n        }\n        if (cachedHitCanvas) {\n            context.save();\n            const m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n            this._drawCachedHitCanvas(context);\n            context.restore();\n            return this;\n        }\n        if (!drawFunc) {\n            return this;\n        }\n        context.save();\n        context._applyLineJoin(this);\n        const selfCache = this === top;\n        if (!selfCache) {\n            const o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n        drawFunc.call(this, context, this);\n        context.restore();\n        return this;\n    }\n    drawHitFromCache(alphaThreshold = 0) {\n        let cachedCanvas = this._getCanvasCache(), sceneCanvas = this._getCachedSceneCanvas(), hitCanvas = cachedCanvas.hit, hitContext = hitCanvas.getContext(), hitWidth = hitCanvas.getWidth(), hitHeight = hitCanvas.getHeight(), hitImageData, hitData, len, rgbColorKey, i, alpha;\n        hitContext.clear();\n        hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n        try {\n            hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n            hitData = hitImageData.data;\n            len = hitData.length;\n            rgbColorKey = Util_1.Util._hexToRgb(this.colorKey);\n            for (i = 0; i < len; i += 4) {\n                alpha = hitData[i + 3];\n                if (alpha > alphaThreshold) {\n                    hitData[i] = rgbColorKey.r;\n                    hitData[i + 1] = rgbColorKey.g;\n                    hitData[i + 2] = rgbColorKey.b;\n                    hitData[i + 3] = 255;\n                }\n                else {\n                    hitData[i + 3] = 0;\n                }\n            }\n            hitContext.putImageData(hitImageData, 0, 0);\n        }\n        catch (e) {\n            Util_1.Util.error('Unable to draw hit graph from cached scene canvas. ' + e.message);\n        }\n        return this;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n}\nexports.Shape = Shape;\nShape.prototype._fillFunc = _fillFunc;\nShape.prototype._strokeFunc = _strokeFunc;\nShape.prototype._fillFuncHit = _fillFuncHit;\nShape.prototype._strokeFuncHit = _strokeFuncHit;\nShape.prototype._centroid = false;\nShape.prototype.nodeType = 'Shape';\n(0, Global_2._registerNode)(Shape);\nShape.prototype.eventListeners = {};\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearHasShadowCache);\nShape.prototype.on.call(Shape.prototype, 'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva', _clearGetShadowRGBACache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillPatternImageChange.konva fillPatternRepeatChange.konva fillPatternScaleXChange.konva fillPatternScaleYChange.konva fillPatternOffsetXChange.konva fillPatternOffsetYChange.konva fillPatternXChange.konva fillPatternYChange.konva fillPatternRotationChange.konva', _clearFillPatternCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillLinearGradientColorStopsChange.konva fillLinearGradientStartPointXChange.konva fillLinearGradientStartPointYChange.konva fillLinearGradientEndPointXChange.konva fillLinearGradientEndPointYChange.konva', _clearLinearGradientCache);\nShape.prototype.on.call(Shape.prototype, 'fillPriorityChange.konva fillRadialGradientColorStopsChange.konva fillRadialGradientStartPointXChange.konva fillRadialGradientStartPointYChange.konva fillRadialGradientEndPointXChange.konva fillRadialGradientEndPointYChange.konva fillRadialGradientStartRadiusChange.konva fillRadialGradientEndRadiusChange.konva', _clearRadialGradientCache);\nFactory_1.Factory.addGetterSetter(Shape, 'stroke', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeWidth', 2, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillAfterStrokeEnabled', false);\nFactory_1.Factory.addGetterSetter(Shape, 'hitStrokeWidth', 'auto', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'strokeHitEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'perfectDrawEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowForStrokeEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'lineJoin');\nFactory_1.Factory.addGetterSetter(Shape, 'lineCap');\nFactory_1.Factory.addGetterSetter(Shape, 'sceneFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'hitFunc');\nFactory_1.Factory.addGetterSetter(Shape, 'dash');\nFactory_1.Factory.addGetterSetter(Shape, 'dashOffset', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowColor', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowBlur', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOpacity', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'shadowOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'shadowOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternImage');\nFactory_1.Factory.addGetterSetter(Shape, 'fill', undefined, (0, Validators_1.getStringOrGradientValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndRadius', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientColorStops');\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRepeat', 'repeat');\nFactory_1.Factory.addGetterSetter(Shape, 'fillEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'shadowEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'dashEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeScaleEnabled', true);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPriority', 'color');\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternOffset', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternOffsetY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillPatternScale', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleX', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternScaleY', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientStartPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'strokeLinearGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillLinearGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'strokeLinearGradientEndPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientStartPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientStartPointY', 0);\nFactory_1.Factory.addComponentsGetterSetter(Shape, 'fillRadialGradientEndPoint', [\n    'x',\n    'y',\n]);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointX', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRadialGradientEndPointY', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillPatternRotation', 0);\nFactory_1.Factory.addGetterSetter(Shape, 'fillRule', undefined, (0, Validators_1.getStringValidator)());\nFactory_1.Factory.backCompat(Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc',\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Shape.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Stage.js":
/*!*****************************************!*\
  !*** ./node_modules/konva/lib/Stage.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Stage = exports.stages = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Factory_1 = __webpack_require__(/*! ./Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Container_1 = __webpack_require__(/*! ./Container */ \"(app-pages-browser)/./node_modules/konva/lib/Container.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Canvas_1 = __webpack_require__(/*! ./Canvas */ \"(app-pages-browser)/./node_modules/konva/lib/Canvas.js\");\nconst DragAndDrop_1 = __webpack_require__(/*! ./DragAndDrop */ \"(app-pages-browser)/./node_modules/konva/lib/DragAndDrop.js\");\nconst Global_2 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst PointerEvents = __webpack_require__(/*! ./PointerEvents */ \"(app-pages-browser)/./node_modules/konva/lib/PointerEvents.js\");\nconst STAGE = 'Stage', STRING = 'string', PX = 'px', MOUSEOUT = 'mouseout', MOUSELEAVE = 'mouseleave', MOUSEOVER = 'mouseover', MOUSEENTER = 'mouseenter', MOUSEMOVE = 'mousemove', MOUSEDOWN = 'mousedown', MOUSEUP = 'mouseup', POINTERMOVE = 'pointermove', POINTERDOWN = 'pointerdown', POINTERUP = 'pointerup', POINTERCANCEL = 'pointercancel', LOSTPOINTERCAPTURE = 'lostpointercapture', POINTEROUT = 'pointerout', POINTERLEAVE = 'pointerleave', POINTEROVER = 'pointerover', POINTERENTER = 'pointerenter', CONTEXTMENU = 'contextmenu', TOUCHSTART = 'touchstart', TOUCHEND = 'touchend', TOUCHMOVE = 'touchmove', TOUCHCANCEL = 'touchcancel', WHEEL = 'wheel', MAX_LAYERS_NUMBER = 5, EVENTS = [\n    [MOUSEENTER, '_pointerenter'],\n    [MOUSEDOWN, '_pointerdown'],\n    [MOUSEMOVE, '_pointermove'],\n    [MOUSEUP, '_pointerup'],\n    [MOUSELEAVE, '_pointerleave'],\n    [TOUCHSTART, '_pointerdown'],\n    [TOUCHMOVE, '_pointermove'],\n    [TOUCHEND, '_pointerup'],\n    [TOUCHCANCEL, '_pointercancel'],\n    [MOUSEOVER, '_pointerover'],\n    [WHEEL, '_wheel'],\n    [CONTEXTMENU, '_contextmenu'],\n    [POINTERDOWN, '_pointerdown'],\n    [POINTERMOVE, '_pointermove'],\n    [POINTERUP, '_pointerup'],\n    [POINTERCANCEL, '_pointercancel'],\n    [LOSTPOINTERCAPTURE, '_lostpointercapture'],\n];\nconst EVENTS_MAP = {\n    mouse: {\n        [POINTEROUT]: MOUSEOUT,\n        [POINTERLEAVE]: MOUSELEAVE,\n        [POINTEROVER]: MOUSEOVER,\n        [POINTERENTER]: MOUSEENTER,\n        [POINTERMOVE]: MOUSEMOVE,\n        [POINTERDOWN]: MOUSEDOWN,\n        [POINTERUP]: MOUSEUP,\n        [POINTERCANCEL]: 'mousecancel',\n        pointerclick: 'click',\n        pointerdblclick: 'dblclick',\n    },\n    touch: {\n        [POINTEROUT]: 'touchout',\n        [POINTERLEAVE]: 'touchleave',\n        [POINTEROVER]: 'touchover',\n        [POINTERENTER]: 'touchenter',\n        [POINTERMOVE]: TOUCHMOVE,\n        [POINTERDOWN]: TOUCHSTART,\n        [POINTERUP]: TOUCHEND,\n        [POINTERCANCEL]: TOUCHCANCEL,\n        pointerclick: 'tap',\n        pointerdblclick: 'dbltap',\n    },\n    pointer: {\n        [POINTEROUT]: POINTEROUT,\n        [POINTERLEAVE]: POINTERLEAVE,\n        [POINTEROVER]: POINTEROVER,\n        [POINTERENTER]: POINTERENTER,\n        [POINTERMOVE]: POINTERMOVE,\n        [POINTERDOWN]: POINTERDOWN,\n        [POINTERUP]: POINTERUP,\n        [POINTERCANCEL]: POINTERCANCEL,\n        pointerclick: 'pointerclick',\n        pointerdblclick: 'pointerdblclick',\n    },\n};\nconst getEventType = (type) => {\n    if (type.indexOf('pointer') >= 0) {\n        return 'pointer';\n    }\n    if (type.indexOf('touch') >= 0) {\n        return 'touch';\n    }\n    return 'mouse';\n};\nconst getEventsMap = (eventType) => {\n    const type = getEventType(eventType);\n    if (type === 'pointer') {\n        return Global_1.Konva.pointerEventsEnabled && EVENTS_MAP.pointer;\n    }\n    if (type === 'touch') {\n        return EVENTS_MAP.touch;\n    }\n    if (type === 'mouse') {\n        return EVENTS_MAP.mouse;\n    }\n};\nfunction checkNoClip(attrs = {}) {\n    if (attrs.clipFunc || attrs.clipWidth || attrs.clipHeight) {\n        Util_1.Util.warn('Stage does not support clipping. Please use clip for Layers or Groups.');\n    }\n    return attrs;\n}\nconst NO_POINTERS_MESSAGE = `Pointer position is missing and not registered by the stage. Looks like it is outside of the stage container. You can set it manually from event: stage.setPointersPositions(event);`;\nexports.stages = [];\nclass Stage extends Container_1.Container {\n    constructor(config) {\n        super(checkNoClip(config));\n        this._pointerPositions = [];\n        this._changedPointerPositions = [];\n        this._buildDOM();\n        this._bindContentEvents();\n        exports.stages.push(this);\n        this.on('widthChange.konva heightChange.konva', this._resizeDOM);\n        this.on('visibleChange.konva', this._checkVisibility);\n        this.on('clipWidthChange.konva clipHeightChange.konva clipFuncChange.konva', () => {\n            checkNoClip(this.attrs);\n        });\n        this._checkVisibility();\n    }\n    _validateAdd(child) {\n        const isLayer = child.getType() === 'Layer';\n        const isFastLayer = child.getType() === 'FastLayer';\n        const valid = isLayer || isFastLayer;\n        if (!valid) {\n            Util_1.Util.throw('You may only add layers to the stage.');\n        }\n    }\n    _checkVisibility() {\n        if (!this.content) {\n            return;\n        }\n        const style = this.visible() ? '' : 'none';\n        this.content.style.display = style;\n    }\n    setContainer(container) {\n        if (typeof container === STRING) {\n            if (container.charAt(0) === '.') {\n                const className = container.slice(1);\n                container = document.getElementsByClassName(className)[0];\n            }\n            else {\n                var id;\n                if (container.charAt(0) !== '#') {\n                    id = container;\n                }\n                else {\n                    id = container.slice(1);\n                }\n                container = document.getElementById(id);\n            }\n            if (!container) {\n                throw 'Can not find container in document with id ' + id;\n            }\n        }\n        this._setAttr('container', container);\n        if (this.content) {\n            if (this.content.parentElement) {\n                this.content.parentElement.removeChild(this.content);\n            }\n            container.appendChild(this.content);\n        }\n        return this;\n    }\n    shouldDrawHit() {\n        return true;\n    }\n    clear() {\n        let layers = this.children, len = layers.length, n;\n        for (n = 0; n < len; n++) {\n            layers[n].clear();\n        }\n        return this;\n    }\n    clone(obj) {\n        if (!obj) {\n            obj = {};\n        }\n        obj.container =\n            typeof document !== 'undefined' && document.createElement('div');\n        return Container_1.Container.prototype.clone.call(this, obj);\n    }\n    destroy() {\n        super.destroy();\n        const content = this.content;\n        if (content && Util_1.Util._isInDocument(content)) {\n            this.container().removeChild(content);\n        }\n        const index = exports.stages.indexOf(this);\n        if (index > -1) {\n            exports.stages.splice(index, 1);\n        }\n        Util_1.Util.releaseCanvas(this.bufferCanvas._canvas, this.bufferHitCanvas._canvas);\n        return this;\n    }\n    getPointerPosition() {\n        const pos = this._pointerPositions[0] || this._changedPointerPositions[0];\n        if (!pos) {\n            Util_1.Util.warn(NO_POINTERS_MESSAGE);\n            return null;\n        }\n        return {\n            x: pos.x,\n            y: pos.y,\n        };\n    }\n    _getPointerById(id) {\n        return this._pointerPositions.find((p) => p.id === id);\n    }\n    getPointersPositions() {\n        return this._pointerPositions;\n    }\n    getStage() {\n        return this;\n    }\n    getContent() {\n        return this.content;\n    }\n    _toKonvaCanvas(config) {\n        config = config || {};\n        config.x = config.x || 0;\n        config.y = config.y || 0;\n        config.width = config.width || this.width();\n        config.height = config.height || this.height();\n        const canvas = new Canvas_1.SceneCanvas({\n            width: config.width,\n            height: config.height,\n            pixelRatio: config.pixelRatio || 1,\n        });\n        const _context = canvas.getContext()._context;\n        const layers = this.children;\n        if (config.x || config.y) {\n            _context.translate(-1 * config.x, -1 * config.y);\n        }\n        layers.forEach(function (layer) {\n            if (!layer.isVisible()) {\n                return;\n            }\n            const layerCanvas = layer._toKonvaCanvas(config);\n            _context.drawImage(layerCanvas._canvas, config.x, config.y, layerCanvas.getWidth() / layerCanvas.getPixelRatio(), layerCanvas.getHeight() / layerCanvas.getPixelRatio());\n        });\n        return canvas;\n    }\n    getIntersection(pos) {\n        if (!pos) {\n            return null;\n        }\n        let layers = this.children, len = layers.length, end = len - 1, n;\n        for (n = end; n >= 0; n--) {\n            const shape = layers[n].getIntersection(pos);\n            if (shape) {\n                return shape;\n            }\n        }\n        return null;\n    }\n    _resizeDOM() {\n        const width = this.width();\n        const height = this.height();\n        if (this.content) {\n            this.content.style.width = width + PX;\n            this.content.style.height = height + PX;\n        }\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n        this.children.forEach((layer) => {\n            layer.setSize({ width, height });\n            layer.draw();\n        });\n    }\n    add(layer, ...rest) {\n        if (arguments.length > 1) {\n            for (let i = 0; i < arguments.length; i++) {\n                this.add(arguments[i]);\n            }\n            return this;\n        }\n        super.add(layer);\n        const length = this.children.length;\n        if (length > MAX_LAYERS_NUMBER) {\n            Util_1.Util.warn('The stage has ' +\n                length +\n                ' layers. Recommended maximum number of layers is 3-5. Adding more layers into the stage may drop the performance. Rethink your tree structure, you can use Konva.Group.');\n        }\n        layer.setSize({ width: this.width(), height: this.height() });\n        layer.draw();\n        if (Global_1.Konva.isBrowser) {\n            this.content.appendChild(layer.canvas._canvas);\n        }\n        return this;\n    }\n    getParent() {\n        return null;\n    }\n    getLayer() {\n        return null;\n    }\n    hasPointerCapture(pointerId) {\n        return PointerEvents.hasPointerCapture(pointerId, this);\n    }\n    setPointerCapture(pointerId) {\n        PointerEvents.setPointerCapture(pointerId, this);\n    }\n    releaseCapture(pointerId) {\n        PointerEvents.releaseCapture(pointerId, this);\n    }\n    getLayers() {\n        return this.children;\n    }\n    _bindContentEvents() {\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        EVENTS.forEach(([event, methodName]) => {\n            this.content.addEventListener(event, (evt) => {\n                this[methodName](evt);\n            }, { passive: false });\n        });\n    }\n    _pointerenter(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        if (events) {\n            this._fire(events.pointerenter, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointerover(evt) {\n        this.setPointersPositions(evt);\n        const events = getEventsMap(evt.type);\n        if (events) {\n            this._fire(events.pointerover, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _getTargetShape(evenType) {\n        let shape = this[evenType + 'targetShape'];\n        if (shape && !shape.getStage()) {\n            shape = null;\n        }\n        return shape;\n    }\n    _pointerleave(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const targetShape = this._getTargetShape(eventType);\n        const eventsEnabled = !(Global_1.Konva.isDragging() || Global_1.Konva.isTransforming()) || Global_1.Konva.hitOnDragEnabled;\n        if (targetShape && eventsEnabled) {\n            targetShape._fireAndBubble(events.pointerout, { evt: evt });\n            targetShape._fireAndBubble(events.pointerleave, { evt: evt });\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this[eventType + 'targetShape'] = null;\n        }\n        else if (eventsEnabled) {\n            this._fire(events.pointerleave, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n            this._fire(events.pointerout, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n        this.pointerPos = null;\n        this._pointerPositions = [];\n    }\n    _pointerdown(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = this.getIntersection(pos);\n            DragAndDrop_1.DD.justDragged = false;\n            Global_1.Konva['_' + eventType + 'ListenClick'] = true;\n            if (!shape || !shape.isListening()) {\n                this[eventType + 'ClickStartShape'] = undefined;\n                return;\n            }\n            if (Global_1.Konva.capturePointerEventsEnabled) {\n                shape.setPointerCapture(pos.id);\n            }\n            this[eventType + 'ClickStartShape'] = shape;\n            shape._fireAndBubble(events.pointerdown, {\n                evt: evt,\n                pointerId: pos.id,\n            });\n            triggeredOnShape = true;\n            const isTouch = evt.type.indexOf('touch') >= 0;\n            if (shape.preventDefault() && evt.cancelable && isTouch) {\n                evt.preventDefault();\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerdown, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._pointerPositions[0].id,\n            });\n        }\n    }\n    _pointermove(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        if (Global_1.Konva.isDragging() && DragAndDrop_1.DD.node.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n        }\n        this.setPointersPositions(evt);\n        const eventsEnabled = !(Global_1.Konva.isDragging() || Global_1.Konva.isTransforming()) || Global_1.Konva.hitOnDragEnabled;\n        if (!eventsEnabled) {\n            return;\n        }\n        const processedShapesIds = {};\n        let triggeredOnShape = false;\n        const targetShape = this._getTargetShape(eventType);\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            const differentTarget = targetShape !== shape;\n            if (differentTarget && targetShape) {\n                targetShape._fireAndBubble(events.pointerout, { ...event }, shape);\n                targetShape._fireAndBubble(events.pointerleave, { ...event }, shape);\n            }\n            if (shape) {\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                if (differentTarget) {\n                    shape._fireAndBubble(events.pointerover, { ...event }, targetShape);\n                    shape._fireAndBubble(events.pointerenter, { ...event }, targetShape);\n                    this[eventType + 'targetShape'] = shape;\n                }\n                shape._fireAndBubble(events.pointermove, { ...event });\n            }\n            else {\n                if (targetShape) {\n                    this._fire(events.pointerover, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                    this[eventType + 'targetShape'] = null;\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointermove, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n    }\n    _pointerup(evt) {\n        const events = getEventsMap(evt.type);\n        const eventType = getEventType(evt.type);\n        if (!events) {\n            return;\n        }\n        this.setPointersPositions(evt);\n        const clickStartShape = this[eventType + 'ClickStartShape'];\n        const clickEndShape = this[eventType + 'ClickEndShape'];\n        const processedShapesIds = {};\n        let triggeredOnShape = false;\n        this._changedPointerPositions.forEach((pos) => {\n            const shape = (PointerEvents.getCapturedShape(pos.id) ||\n                this.getIntersection(pos));\n            if (shape) {\n                shape.releaseCapture(pos.id);\n                if (processedShapesIds[shape._id]) {\n                    return;\n                }\n                processedShapesIds[shape._id] = true;\n            }\n            const pointerId = pos.id;\n            const event = { evt: evt, pointerId };\n            let fireDblClick = false;\n            if (Global_1.Konva['_' + eventType + 'InDblClickWindow']) {\n                fireDblClick = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            else if (!DragAndDrop_1.DD.justDragged) {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = true;\n                clearTimeout(this[eventType + 'DblTimeout']);\n            }\n            this[eventType + 'DblTimeout'] = setTimeout(function () {\n                Global_1.Konva['_' + eventType + 'InDblClickWindow'] = false;\n            }, Global_1.Konva.dblClickWindow);\n            if (shape && shape.isListening()) {\n                triggeredOnShape = true;\n                this[eventType + 'ClickEndShape'] = shape;\n                shape._fireAndBubble(events.pointerup, { ...event });\n                if (Global_1.Konva['_' + eventType + 'ListenClick'] &&\n                    clickStartShape &&\n                    clickStartShape === shape) {\n                    shape._fireAndBubble(events.pointerclick, { ...event });\n                    if (fireDblClick && clickEndShape && clickEndShape === shape) {\n                        shape._fireAndBubble(events.pointerdblclick, { ...event });\n                    }\n                }\n            }\n            else {\n                this[eventType + 'ClickEndShape'] = null;\n                if (Global_1.Konva['_' + eventType + 'ListenClick']) {\n                    this._fire(events.pointerclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n                if (fireDblClick) {\n                    this._fire(events.pointerdblclick, {\n                        evt: evt,\n                        target: this,\n                        currentTarget: this,\n                        pointerId,\n                    });\n                }\n            }\n        });\n        if (!triggeredOnShape) {\n            this._fire(events.pointerup, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n                pointerId: this._changedPointerPositions[0].id,\n            });\n        }\n        Global_1.Konva['_' + eventType + 'ListenClick'] = false;\n        if (evt.cancelable && eventType !== 'touch') {\n            evt.preventDefault();\n        }\n    }\n    _contextmenu(evt) {\n        this.setPointersPositions(evt);\n        const shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n        }\n        else {\n            this._fire(CONTEXTMENU, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _wheel(evt) {\n        this.setPointersPositions(evt);\n        const shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n            shape._fireAndBubble(WHEEL, { evt: evt });\n        }\n        else {\n            this._fire(WHEEL, {\n                evt: evt,\n                target: this,\n                currentTarget: this,\n            });\n        }\n    }\n    _pointercancel(evt) {\n        this.setPointersPositions(evt);\n        const shape = PointerEvents.getCapturedShape(evt.pointerId) ||\n            this.getIntersection(this.getPointerPosition());\n        if (shape) {\n            shape._fireAndBubble(POINTERUP, PointerEvents.createEvent(evt));\n        }\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    _lostpointercapture(evt) {\n        PointerEvents.releaseCapture(evt.pointerId);\n    }\n    setPointersPositions(evt) {\n        let contentPosition = this._getContentPosition(), x = null, y = null;\n        evt = evt ? evt : window.event;\n        if (evt.touches !== undefined) {\n            this._pointerPositions = [];\n            this._changedPointerPositions = [];\n            Array.prototype.forEach.call(evt.touches, (touch) => {\n                this._pointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n            Array.prototype.forEach.call(evt.changedTouches || evt.touches, (touch) => {\n                this._changedPointerPositions.push({\n                    id: touch.identifier,\n                    x: (touch.clientX - contentPosition.left) / contentPosition.scaleX,\n                    y: (touch.clientY - contentPosition.top) / contentPosition.scaleY,\n                });\n            });\n        }\n        else {\n            x = (evt.clientX - contentPosition.left) / contentPosition.scaleX;\n            y = (evt.clientY - contentPosition.top) / contentPosition.scaleY;\n            this.pointerPos = {\n                x: x,\n                y: y,\n            };\n            this._pointerPositions = [{ x, y, id: Util_1.Util._getFirstPointerId(evt) }];\n            this._changedPointerPositions = [\n                { x, y, id: Util_1.Util._getFirstPointerId(evt) },\n            ];\n        }\n    }\n    _setPointerPosition(evt) {\n        Util_1.Util.warn('Method _setPointerPosition is deprecated. Use \"stage.setPointersPositions(event)\" instead.');\n        this.setPointersPositions(evt);\n    }\n    _getContentPosition() {\n        if (!this.content || !this.content.getBoundingClientRect) {\n            return {\n                top: 0,\n                left: 0,\n                scaleX: 1,\n                scaleY: 1,\n            };\n        }\n        const rect = this.content.getBoundingClientRect();\n        return {\n            top: rect.top,\n            left: rect.left,\n            scaleX: rect.width / this.content.clientWidth || 1,\n            scaleY: rect.height / this.content.clientHeight || 1,\n        };\n    }\n    _buildDOM() {\n        this.bufferCanvas = new Canvas_1.SceneCanvas({\n            width: this.width(),\n            height: this.height(),\n        });\n        this.bufferHitCanvas = new Canvas_1.HitCanvas({\n            pixelRatio: 1,\n            width: this.width(),\n            height: this.height(),\n        });\n        if (!Global_1.Konva.isBrowser) {\n            return;\n        }\n        const container = this.container();\n        if (!container) {\n            throw 'Stage has no container. A container is required.';\n        }\n        container.innerHTML = '';\n        this.content = document.createElement('div');\n        this.content.style.position = 'relative';\n        this.content.style.userSelect = 'none';\n        this.content.className = 'konvajs-content';\n        this.content.setAttribute('role', 'presentation');\n        container.appendChild(this.content);\n        this._resizeDOM();\n    }\n    cache() {\n        Util_1.Util.warn('Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.');\n        return this;\n    }\n    clearCache() {\n        return this;\n    }\n    batchDraw() {\n        this.getChildren().forEach(function (layer) {\n            layer.batchDraw();\n        });\n        return this;\n    }\n}\nexports.Stage = Stage;\nStage.prototype.nodeType = STAGE;\n(0, Global_2._registerNode)(Stage);\nFactory_1.Factory.addGetterSetter(Stage, 'container');\nif (Global_1.Konva.isBrowser) {\n    document.addEventListener('visibilitychange', () => {\n        exports.stages.forEach((stage) => {\n            stage.batchDraw();\n        });\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Stage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Tween.js":
/*!*****************************************!*\
  !*** ./node_modules/konva/lib/Tween.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Easings = exports.Tween = void 0;\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Animation_1 = __webpack_require__(/*! ./Animation */ \"(app-pages-browser)/./node_modules/konva/lib/Animation.js\");\nconst Node_1 = __webpack_require__(/*! ./Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nlet blacklist = {\n    node: 1,\n    duration: 1,\n    easing: 1,\n    onFinish: 1,\n    yoyo: 1,\n}, PAUSED = 1, PLAYING = 2, REVERSING = 3, idCounter = 0, colorAttrs = ['fill', 'stroke', 'shadowColor'];\nclass TweenEngine {\n    constructor(prop, propFunc, func, begin, finish, duration, yoyo) {\n        this.prop = prop;\n        this.propFunc = propFunc;\n        this.begin = begin;\n        this._pos = begin;\n        this.duration = duration;\n        this._change = 0;\n        this.prevPos = 0;\n        this.yoyo = yoyo;\n        this._time = 0;\n        this._position = 0;\n        this._startTime = 0;\n        this._finish = 0;\n        this.func = func;\n        this._change = finish - this.begin;\n        this.pause();\n    }\n    fire(str) {\n        const handler = this[str];\n        if (handler) {\n            handler();\n        }\n    }\n    setTime(t) {\n        if (t > this.duration) {\n            if (this.yoyo) {\n                this._time = this.duration;\n                this.reverse();\n            }\n            else {\n                this.finish();\n            }\n        }\n        else if (t < 0) {\n            if (this.yoyo) {\n                this._time = 0;\n                this.play();\n            }\n            else {\n                this.reset();\n            }\n        }\n        else {\n            this._time = t;\n            this.update();\n        }\n    }\n    getTime() {\n        return this._time;\n    }\n    setPosition(p) {\n        this.prevPos = this._pos;\n        this.propFunc(p);\n        this._pos = p;\n    }\n    getPosition(t) {\n        if (t === undefined) {\n            t = this._time;\n        }\n        return this.func(t, this.begin, this._change, this.duration);\n    }\n    play() {\n        this.state = PLAYING;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire('onPlay');\n    }\n    reverse() {\n        this.state = REVERSING;\n        this._time = this.duration - this._time;\n        this._startTime = this.getTimer() - this._time;\n        this.onEnterFrame();\n        this.fire('onReverse');\n    }\n    seek(t) {\n        this.pause();\n        this._time = t;\n        this.update();\n        this.fire('onSeek');\n    }\n    reset() {\n        this.pause();\n        this._time = 0;\n        this.update();\n        this.fire('onReset');\n    }\n    finish() {\n        this.pause();\n        this._time = this.duration;\n        this.update();\n        this.fire('onFinish');\n    }\n    update() {\n        this.setPosition(this.getPosition(this._time));\n        this.fire('onUpdate');\n    }\n    onEnterFrame() {\n        const t = this.getTimer() - this._startTime;\n        if (this.state === PLAYING) {\n            this.setTime(t);\n        }\n        else if (this.state === REVERSING) {\n            this.setTime(this.duration - t);\n        }\n    }\n    pause() {\n        this.state = PAUSED;\n        this.fire('onPause');\n    }\n    getTimer() {\n        return new Date().getTime();\n    }\n}\nclass Tween {\n    constructor(config) {\n        let that = this, node = config.node, nodeId = node._id, duration, easing = config.easing || exports.Easings.Linear, yoyo = !!config.yoyo, key;\n        if (typeof config.duration === 'undefined') {\n            duration = 0.3;\n        }\n        else if (config.duration === 0) {\n            duration = 0.001;\n        }\n        else {\n            duration = config.duration;\n        }\n        this.node = node;\n        this._id = idCounter++;\n        const layers = node.getLayer() ||\n            (node instanceof Global_1.Konva['Stage'] ? node.getLayers() : null);\n        if (!layers) {\n            Util_1.Util.error('Tween constructor have `node` that is not in a layer. Please add node into layer first.');\n        }\n        this.anim = new Animation_1.Animation(function () {\n            that.tween.onEnterFrame();\n        }, layers);\n        this.tween = new TweenEngine(key, function (i) {\n            that._tweenFunc(i);\n        }, easing, 0, 1, duration * 1000, yoyo);\n        this._addListeners();\n        if (!Tween.attrs[nodeId]) {\n            Tween.attrs[nodeId] = {};\n        }\n        if (!Tween.attrs[nodeId][this._id]) {\n            Tween.attrs[nodeId][this._id] = {};\n        }\n        if (!Tween.tweens[nodeId]) {\n            Tween.tweens[nodeId] = {};\n        }\n        for (key in config) {\n            if (blacklist[key] === undefined) {\n                this._addAttr(key, config[key]);\n            }\n        }\n        this.reset();\n        this.onFinish = config.onFinish;\n        this.onReset = config.onReset;\n        this.onUpdate = config.onUpdate;\n    }\n    _addAttr(key, end) {\n        let node = this.node, nodeId = node._id, start, diff, tweenId, n, len, trueEnd, trueStart, endRGBA;\n        tweenId = Tween.tweens[nodeId][key];\n        if (tweenId) {\n            delete Tween.attrs[nodeId][tweenId][key];\n        }\n        start = node.getAttr(key);\n        if (Util_1.Util._isArray(end)) {\n            diff = [];\n            len = Math.max(end.length, start.length);\n            if (key === 'points' && end.length !== start.length) {\n                if (end.length > start.length) {\n                    trueStart = start;\n                    start = Util_1.Util._prepareArrayForTween(start, end, node.closed());\n                }\n                else {\n                    trueEnd = end;\n                    end = Util_1.Util._prepareArrayForTween(end, start, node.closed());\n                }\n            }\n            if (key.indexOf('fill') === 0) {\n                for (n = 0; n < len; n++) {\n                    if (n % 2 === 0) {\n                        diff.push(end[n] - start[n]);\n                    }\n                    else {\n                        const startRGBA = Util_1.Util.colorToRGBA(start[n]);\n                        endRGBA = Util_1.Util.colorToRGBA(end[n]);\n                        start[n] = startRGBA;\n                        diff.push({\n                            r: endRGBA.r - startRGBA.r,\n                            g: endRGBA.g - startRGBA.g,\n                            b: endRGBA.b - startRGBA.b,\n                            a: endRGBA.a - startRGBA.a,\n                        });\n                    }\n                }\n            }\n            else {\n                for (n = 0; n < len; n++) {\n                    diff.push(end[n] - start[n]);\n                }\n            }\n        }\n        else if (colorAttrs.indexOf(key) !== -1) {\n            start = Util_1.Util.colorToRGBA(start);\n            endRGBA = Util_1.Util.colorToRGBA(end);\n            diff = {\n                r: endRGBA.r - start.r,\n                g: endRGBA.g - start.g,\n                b: endRGBA.b - start.b,\n                a: endRGBA.a - start.a,\n            };\n        }\n        else {\n            diff = end - start;\n        }\n        Tween.attrs[nodeId][this._id][key] = {\n            start: start,\n            diff: diff,\n            end: end,\n            trueEnd: trueEnd,\n            trueStart: trueStart,\n        };\n        Tween.tweens[nodeId][key] = this._id;\n    }\n    _tweenFunc(i) {\n        let node = this.node, attrs = Tween.attrs[node._id][this._id], key, attr, start, diff, newVal, n, len, end;\n        for (key in attrs) {\n            attr = attrs[key];\n            start = attr.start;\n            diff = attr.diff;\n            end = attr.end;\n            if (Util_1.Util._isArray(start)) {\n                newVal = [];\n                len = Math.max(start.length, end.length);\n                if (key.indexOf('fill') === 0) {\n                    for (n = 0; n < len; n++) {\n                        if (n % 2 === 0) {\n                            newVal.push((start[n] || 0) + diff[n] * i);\n                        }\n                        else {\n                            newVal.push('rgba(' +\n                                Math.round(start[n].r + diff[n].r * i) +\n                                ',' +\n                                Math.round(start[n].g + diff[n].g * i) +\n                                ',' +\n                                Math.round(start[n].b + diff[n].b * i) +\n                                ',' +\n                                (start[n].a + diff[n].a * i) +\n                                ')');\n                        }\n                    }\n                }\n                else {\n                    for (n = 0; n < len; n++) {\n                        newVal.push((start[n] || 0) + diff[n] * i);\n                    }\n                }\n            }\n            else if (colorAttrs.indexOf(key) !== -1) {\n                newVal =\n                    'rgba(' +\n                        Math.round(start.r + diff.r * i) +\n                        ',' +\n                        Math.round(start.g + diff.g * i) +\n                        ',' +\n                        Math.round(start.b + diff.b * i) +\n                        ',' +\n                        (start.a + diff.a * i) +\n                        ')';\n            }\n            else {\n                newVal = start + diff * i;\n            }\n            node.setAttr(key, newVal);\n        }\n    }\n    _addListeners() {\n        this.tween.onPlay = () => {\n            this.anim.start();\n        };\n        this.tween.onReverse = () => {\n            this.anim.start();\n        };\n        this.tween.onPause = () => {\n            this.anim.stop();\n        };\n        this.tween.onFinish = () => {\n            const node = this.node;\n            const attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueEnd) {\n                node.setAttr('points', attrs.points.trueEnd);\n            }\n            if (this.onFinish) {\n                this.onFinish.call(this);\n            }\n        };\n        this.tween.onReset = () => {\n            const node = this.node;\n            const attrs = Tween.attrs[node._id][this._id];\n            if (attrs.points && attrs.points.trueStart) {\n                node.points(attrs.points.trueStart);\n            }\n            if (this.onReset) {\n                this.onReset();\n            }\n        };\n        this.tween.onUpdate = () => {\n            if (this.onUpdate) {\n                this.onUpdate.call(this);\n            }\n        };\n    }\n    play() {\n        this.tween.play();\n        return this;\n    }\n    reverse() {\n        this.tween.reverse();\n        return this;\n    }\n    reset() {\n        this.tween.reset();\n        return this;\n    }\n    seek(t) {\n        this.tween.seek(t * 1000);\n        return this;\n    }\n    pause() {\n        this.tween.pause();\n        return this;\n    }\n    finish() {\n        this.tween.finish();\n        return this;\n    }\n    destroy() {\n        let nodeId = this.node._id, thisId = this._id, attrs = Tween.tweens[nodeId], key;\n        this.pause();\n        for (key in attrs) {\n            delete Tween.tweens[nodeId][key];\n        }\n        delete Tween.attrs[nodeId][thisId];\n    }\n}\nexports.Tween = Tween;\nTween.attrs = {};\nTween.tweens = {};\nNode_1.Node.prototype.to = function (params) {\n    const onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function () {\n        this.destroy();\n        if (onFinish) {\n            onFinish();\n        }\n    };\n    const tween = new Tween(params);\n    tween.play();\n};\nexports.Easings = {\n    BackEaseIn(t, b, c, d) {\n        const s = 1.70158;\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    BackEaseOut(t, b, c, d) {\n        const s = 1.70158;\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    BackEaseInOut(t, b, c, d) {\n        let s = 1.70158;\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n        }\n        return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    ElasticEaseIn(t, b, c, d, a, p) {\n        let s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (-(a *\n            Math.pow(2, 10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p)) + b);\n    },\n    ElasticEaseOut(t, b, c, d, a, p) {\n        let s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d) === 1) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * 0.3;\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        return (a * Math.pow(2, -10 * t) * Math.sin(((t * d - s) * (2 * Math.PI)) / p) +\n            c +\n            b);\n    },\n    ElasticEaseInOut(t, b, c, d, a, p) {\n        let s = 0;\n        if (t === 0) {\n            return b;\n        }\n        if ((t /= d / 2) === 2) {\n            return b + c;\n        }\n        if (!p) {\n            p = d * (0.3 * 1.5);\n        }\n        if (!a || a < Math.abs(c)) {\n            a = c;\n            s = p / 4;\n        }\n        else {\n            s = (p / (2 * Math.PI)) * Math.asin(c / a);\n        }\n        if (t < 1) {\n            return (-0.5 *\n                (a *\n                    Math.pow(2, 10 * (t -= 1)) *\n                    Math.sin(((t * d - s) * (2 * Math.PI)) / p)) +\n                b);\n        }\n        return (a *\n            Math.pow(2, -10 * (t -= 1)) *\n            Math.sin(((t * d - s) * (2 * Math.PI)) / p) *\n            0.5 +\n            c +\n            b);\n    },\n    BounceEaseOut(t, b, c, d) {\n        if ((t /= d) < 1 / 2.75) {\n            return c * (7.5625 * t * t) + b;\n        }\n        else if (t < 2 / 2.75) {\n            return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n        }\n        else if (t < 2.5 / 2.75) {\n            return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n        }\n        else {\n            return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n        }\n    },\n    BounceEaseIn(t, b, c, d) {\n        return c - exports.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    BounceEaseInOut(t, b, c, d) {\n        if (t < d / 2) {\n            return exports.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n        }\n        else {\n            return exports.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n        }\n    },\n    EaseIn(t, b, c, d) {\n        return c * (t /= d) * t + b;\n    },\n    EaseOut(t, b, c, d) {\n        return -c * (t /= d) * (t - 2) + b;\n    },\n    EaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t + b;\n        }\n        return (-c / 2) * (--t * (t - 2) - 1) + b;\n    },\n    StrongEaseIn(t, b, c, d) {\n        return c * (t /= d) * t * t * t * t + b;\n    },\n    StrongEaseOut(t, b, c, d) {\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    StrongEaseInOut(t, b, c, d) {\n        if ((t /= d / 2) < 1) {\n            return (c / 2) * t * t * t * t * t + b;\n        }\n        return (c / 2) * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    Linear(t, b, c, d) {\n        return (c * t) / d + b;\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Tween.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Util.js":
/*!****************************************!*\
  !*** ./node_modules/konva/lib/Util.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Util = exports.Transform = void 0;\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Transform {\n    constructor(m = [1, 0, 0, 1, 0, 0]) {\n        this.dirty = false;\n        this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n    }\n    reset() {\n        this.m[0] = 1;\n        this.m[1] = 0;\n        this.m[2] = 0;\n        this.m[3] = 1;\n        this.m[4] = 0;\n        this.m[5] = 0;\n    }\n    copy() {\n        return new Transform(this.m);\n    }\n    copyInto(tr) {\n        tr.m[0] = this.m[0];\n        tr.m[1] = this.m[1];\n        tr.m[2] = this.m[2];\n        tr.m[3] = this.m[3];\n        tr.m[4] = this.m[4];\n        tr.m[5] = this.m[5];\n    }\n    point(point) {\n        const m = this.m;\n        return {\n            x: m[0] * point.x + m[2] * point.y + m[4],\n            y: m[1] * point.x + m[3] * point.y + m[5],\n        };\n    }\n    translate(x, y) {\n        this.m[4] += this.m[0] * x + this.m[2] * y;\n        this.m[5] += this.m[1] * x + this.m[3] * y;\n        return this;\n    }\n    scale(sx, sy) {\n        this.m[0] *= sx;\n        this.m[1] *= sx;\n        this.m[2] *= sy;\n        this.m[3] *= sy;\n        return this;\n    }\n    rotate(rad) {\n        const c = Math.cos(rad);\n        const s = Math.sin(rad);\n        const m11 = this.m[0] * c + this.m[2] * s;\n        const m12 = this.m[1] * c + this.m[3] * s;\n        const m21 = this.m[0] * -s + this.m[2] * c;\n        const m22 = this.m[1] * -s + this.m[3] * c;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    getTranslation() {\n        return {\n            x: this.m[4],\n            y: this.m[5],\n        };\n    }\n    skew(sx, sy) {\n        const m11 = this.m[0] + this.m[2] * sy;\n        const m12 = this.m[1] + this.m[3] * sy;\n        const m21 = this.m[2] + this.m[0] * sx;\n        const m22 = this.m[3] + this.m[1] * sx;\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        return this;\n    }\n    multiply(matrix) {\n        const m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n        const m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n        const m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n        const m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n        const dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n        const dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n        this.m[0] = m11;\n        this.m[1] = m12;\n        this.m[2] = m21;\n        this.m[3] = m22;\n        this.m[4] = dx;\n        this.m[5] = dy;\n        return this;\n    }\n    invert() {\n        const d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n        const m0 = this.m[3] * d;\n        const m1 = -this.m[1] * d;\n        const m2 = -this.m[2] * d;\n        const m3 = this.m[0] * d;\n        const m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n        const m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n        this.m[0] = m0;\n        this.m[1] = m1;\n        this.m[2] = m2;\n        this.m[3] = m3;\n        this.m[4] = m4;\n        this.m[5] = m5;\n        return this;\n    }\n    getMatrix() {\n        return this.m;\n    }\n    decompose() {\n        const a = this.m[0];\n        const b = this.m[1];\n        const c = this.m[2];\n        const d = this.m[3];\n        const e = this.m[4];\n        const f = this.m[5];\n        const delta = a * d - b * c;\n        const result = {\n            x: e,\n            y: f,\n            rotation: 0,\n            scaleX: 0,\n            scaleY: 0,\n            skewX: 0,\n            skewY: 0,\n        };\n        if (a != 0 || b != 0) {\n            const r = Math.sqrt(a * a + b * b);\n            result.rotation = b > 0 ? Math.acos(a / r) : -Math.acos(a / r);\n            result.scaleX = r;\n            result.scaleY = delta / r;\n            result.skewX = (a * c + b * d) / delta;\n            result.skewY = 0;\n        }\n        else if (c != 0 || d != 0) {\n            const s = Math.sqrt(c * c + d * d);\n            result.rotation =\n                Math.PI / 2 - (d > 0 ? Math.acos(-c / s) : -Math.acos(c / s));\n            result.scaleX = delta / s;\n            result.scaleY = s;\n            result.skewX = 0;\n            result.skewY = (a * c + b * d) / delta;\n        }\n        else {\n        }\n        result.rotation = exports.Util._getRotation(result.rotation);\n        return result;\n    }\n}\nexports.Transform = Transform;\nlet OBJECT_ARRAY = '[object Array]', OBJECT_NUMBER = '[object Number]', OBJECT_STRING = '[object String]', OBJECT_BOOLEAN = '[object Boolean]', PI_OVER_DEG180 = Math.PI / 180, DEG180_OVER_PI = 180 / Math.PI, HASH = '#', EMPTY_STRING = '', ZERO = '0', KONVA_WARNING = 'Konva warning: ', KONVA_ERROR = 'Konva error: ', RGB_PAREN = 'rgb(', COLORS = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 132, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 255, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 203],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [119, 128, 144],\n    slategrey: [119, 128, 144],\n    snow: [255, 255, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    transparent: [255, 255, 255, 0],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 5],\n}, RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/, animQueue = [];\nconst req = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame) ||\n    function (f) {\n        setTimeout(f, 60);\n    };\nexports.Util = {\n    _isElement(obj) {\n        return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction(obj) {\n        return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isPlainObject(obj) {\n        return !!obj && obj.constructor === Object;\n    },\n    _isArray(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber(obj) {\n        return (Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n            !isNaN(obj) &&\n            isFinite(obj));\n    },\n    _isString(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean(obj) {\n        return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    isObject(val) {\n        return val instanceof Object;\n    },\n    isValidSelector(selector) {\n        if (typeof selector !== 'string') {\n            return false;\n        }\n        const firstChar = selector[0];\n        return (firstChar === '#' ||\n            firstChar === '.' ||\n            firstChar === firstChar.toUpperCase());\n    },\n    _sign(number) {\n        if (number === 0) {\n            return 1;\n        }\n        if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    },\n    requestAnimFrame(callback) {\n        animQueue.push(callback);\n        if (animQueue.length === 1) {\n            req(function () {\n                const queue = animQueue;\n                animQueue = [];\n                queue.forEach(function (cb) {\n                    cb();\n                });\n            });\n        }\n    },\n    createCanvasElement() {\n        const canvas = document.createElement('canvas');\n        try {\n            canvas.style = canvas.style || {};\n        }\n        catch (e) { }\n        return canvas;\n    },\n    createImageElement() {\n        return document.createElement('img');\n    },\n    _isInDocument(el) {\n        while ((el = el.parentNode)) {\n            if (el == document) {\n                return true;\n            }\n        }\n        return false;\n    },\n    _urlToImage(url, callback) {\n        const imageObj = exports.Util.createImageElement();\n        imageObj.onload = function () {\n            callback(imageObj);\n        };\n        imageObj.src = url;\n    },\n    _rgbToHex(r, g, b) {\n        return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb(hex) {\n        hex = hex.replace(HASH, EMPTY_STRING);\n        const bigint = parseInt(hex, 16);\n        return {\n            r: (bigint >> 16) & 255,\n            g: (bigint >> 8) & 255,\n            b: bigint & 255,\n        };\n    },\n    getRandomColor() {\n        let randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n        while (randColor.length < 6) {\n            randColor = ZERO + randColor;\n        }\n        return HASH + randColor;\n    },\n    getRGB(color) {\n        let rgb;\n        if (color in COLORS) {\n            rgb = COLORS[color];\n            return {\n                r: rgb[0],\n                g: rgb[1],\n                b: rgb[2],\n            };\n        }\n        else if (color[0] === HASH) {\n            return this._hexToRgb(color.substring(1));\n        }\n        else if (color.substr(0, 4) === RGB_PAREN) {\n            rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n            return {\n                r: parseInt(rgb[1], 10),\n                g: parseInt(rgb[2], 10),\n                b: parseInt(rgb[3], 10),\n            };\n        }\n        else {\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n            };\n        }\n    },\n    colorToRGBA(str) {\n        str = str || 'black';\n        return (exports.Util._namedColorToRBA(str) ||\n            exports.Util._hex3ColorToRGBA(str) ||\n            exports.Util._hex4ColorToRGBA(str) ||\n            exports.Util._hex6ColorToRGBA(str) ||\n            exports.Util._hex8ColorToRGBA(str) ||\n            exports.Util._rgbColorToRGBA(str) ||\n            exports.Util._rgbaColorToRGBA(str) ||\n            exports.Util._hslColorToRGBA(str));\n    },\n    _namedColorToRBA(str) {\n        const c = COLORS[str.toLowerCase()];\n        if (!c) {\n            return null;\n        }\n        return {\n            r: c[0],\n            g: c[1],\n            b: c[2],\n            a: 1,\n        };\n    },\n    _rgbColorToRGBA(str) {\n        if (str.indexOf('rgb(') === 0) {\n            str = str.match(/rgb\\(([^)]+)\\)/)[1];\n            const parts = str.split(/ *, */).map(Number);\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: 1,\n            };\n        }\n    },\n    _rgbaColorToRGBA(str) {\n        if (str.indexOf('rgba(') === 0) {\n            str = str.match(/rgba\\(([^)]+)\\)/)[1];\n            const parts = str.split(/ *, */).map((n, index) => {\n                if (n.slice(-1) === '%') {\n                    return index === 3 ? parseInt(n) / 100 : (parseInt(n) / 100) * 255;\n                }\n                return Number(n);\n            });\n            return {\n                r: parts[0],\n                g: parts[1],\n                b: parts[2],\n                a: parts[3],\n            };\n        }\n    },\n    _hex8ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 9) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: parseInt(str.slice(7, 9), 16) / 0xff,\n            };\n        }\n    },\n    _hex6ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 7) {\n            return {\n                r: parseInt(str.slice(1, 3), 16),\n                g: parseInt(str.slice(3, 5), 16),\n                b: parseInt(str.slice(5, 7), 16),\n                a: 1,\n            };\n        }\n    },\n    _hex4ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 5) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: parseInt(str[4] + str[4], 16) / 0xff,\n            };\n        }\n    },\n    _hex3ColorToRGBA(str) {\n        if (str[0] === '#' && str.length === 4) {\n            return {\n                r: parseInt(str[1] + str[1], 16),\n                g: parseInt(str[2] + str[2], 16),\n                b: parseInt(str[3] + str[3], 16),\n                a: 1,\n            };\n        }\n    },\n    _hslColorToRGBA(str) {\n        if (/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.test(str)) {\n            const [_, ...hsl] = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(str);\n            const h = Number(hsl[0]) / 360;\n            const s = Number(hsl[1]) / 100;\n            const l = Number(hsl[2]) / 100;\n            let t2;\n            let t3;\n            let val;\n            if (s === 0) {\n                val = l * 255;\n                return {\n                    r: Math.round(val),\n                    g: Math.round(val),\n                    b: Math.round(val),\n                    a: 1,\n                };\n            }\n            if (l < 0.5) {\n                t2 = l * (1 + s);\n            }\n            else {\n                t2 = l + s - l * s;\n            }\n            const t1 = 2 * l - t2;\n            const rgb = [0, 0, 0];\n            for (let i = 0; i < 3; i++) {\n                t3 = h + (1 / 3) * -(i - 1);\n                if (t3 < 0) {\n                    t3++;\n                }\n                if (t3 > 1) {\n                    t3--;\n                }\n                if (6 * t3 < 1) {\n                    val = t1 + (t2 - t1) * 6 * t3;\n                }\n                else if (2 * t3 < 1) {\n                    val = t2;\n                }\n                else if (3 * t3 < 2) {\n                    val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n                }\n                else {\n                    val = t1;\n                }\n                rgb[i] = val * 255;\n            }\n            return {\n                r: Math.round(rgb[0]),\n                g: Math.round(rgb[1]),\n                b: Math.round(rgb[2]),\n                a: 1,\n            };\n        }\n    },\n    haveIntersection(r1, r2) {\n        return !(r2.x > r1.x + r1.width ||\n            r2.x + r2.width < r1.x ||\n            r2.y > r1.y + r1.height ||\n            r2.y + r2.height < r1.y);\n    },\n    cloneObject(obj) {\n        const retObj = {};\n        for (const key in obj) {\n            if (this._isPlainObject(obj[key])) {\n                retObj[key] = this.cloneObject(obj[key]);\n            }\n            else if (this._isArray(obj[key])) {\n                retObj[key] = this.cloneArray(obj[key]);\n            }\n            else {\n                retObj[key] = obj[key];\n            }\n        }\n        return retObj;\n    },\n    cloneArray(arr) {\n        return arr.slice(0);\n    },\n    degToRad(deg) {\n        return deg * PI_OVER_DEG180;\n    },\n    radToDeg(rad) {\n        return rad * DEG180_OVER_PI;\n    },\n    _degToRad(deg) {\n        exports.Util.warn('Util._degToRad is removed. Please use public Util.degToRad instead.');\n        return exports.Util.degToRad(deg);\n    },\n    _radToDeg(rad) {\n        exports.Util.warn('Util._radToDeg is removed. Please use public Util.radToDeg instead.');\n        return exports.Util.radToDeg(rad);\n    },\n    _getRotation(radians) {\n        return Global_1.Konva.angleDeg ? exports.Util.radToDeg(radians) : radians;\n    },\n    _capitalize(str) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw(str) {\n        throw new Error(KONVA_ERROR + str);\n    },\n    error(str) {\n        console.error(KONVA_ERROR + str);\n    },\n    warn(str) {\n        if (!Global_1.Konva.showWarnings) {\n            return;\n        }\n        console.warn(KONVA_WARNING + str);\n    },\n    each(obj, func) {\n        for (const key in obj) {\n            func(key, obj[key]);\n        }\n    },\n    _inRange(val, left, right) {\n        return left <= val && val < right;\n    },\n    _getProjectionToSegment(x1, y1, x2, y2, x3, y3) {\n        let x, y, dist;\n        const pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n        if (pd2 == 0) {\n            x = x1;\n            y = y1;\n            dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n        }\n        else {\n            const u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n            if (u < 0) {\n                x = x1;\n                y = y1;\n                dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n            }\n            else if (u > 1.0) {\n                x = x2;\n                y = y2;\n                dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n            }\n            else {\n                x = x1 + u * (x2 - x1);\n                y = y1 + u * (y2 - y1);\n                dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n            }\n        }\n        return [x, y, dist];\n    },\n    _getProjectionToLine(pt, line, isClosed) {\n        const pc = exports.Util.cloneObject(pt);\n        let dist = Number.MAX_VALUE;\n        line.forEach(function (p1, i) {\n            if (!isClosed && i === line.length - 1) {\n                return;\n            }\n            const p2 = line[(i + 1) % line.length];\n            const proj = exports.Util._getProjectionToSegment(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y);\n            const px = proj[0], py = proj[1], pdist = proj[2];\n            if (pdist < dist) {\n                pc.x = px;\n                pc.y = py;\n                dist = pdist;\n            }\n        });\n        return pc;\n    },\n    _prepareArrayForTween(startArray, endArray, isClosed) {\n        let n, start = [], end = [];\n        if (startArray.length > endArray.length) {\n            const temp = endArray;\n            endArray = startArray;\n            startArray = temp;\n        }\n        for (n = 0; n < startArray.length; n += 2) {\n            start.push({\n                x: startArray[n],\n                y: startArray[n + 1],\n            });\n        }\n        for (n = 0; n < endArray.length; n += 2) {\n            end.push({\n                x: endArray[n],\n                y: endArray[n + 1],\n            });\n        }\n        const newStart = [];\n        end.forEach(function (point) {\n            const pr = exports.Util._getProjectionToLine(point, start, isClosed);\n            newStart.push(pr.x);\n            newStart.push(pr.y);\n        });\n        return newStart;\n    },\n    _prepareToStringify(obj) {\n        let desc;\n        obj.visitedByCircularReferenceRemoval = true;\n        for (const key in obj) {\n            if (!(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')) {\n                continue;\n            }\n            desc = Object.getOwnPropertyDescriptor(obj, key);\n            if (obj[key].visitedByCircularReferenceRemoval ||\n                exports.Util._isElement(obj[key])) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n            else if (exports.Util._prepareToStringify(obj[key]) === null) {\n                if (desc.configurable) {\n                    delete obj[key];\n                }\n                else {\n                    return null;\n                }\n            }\n        }\n        delete obj.visitedByCircularReferenceRemoval;\n        return obj;\n    },\n    _assign(target, source) {\n        for (const key in source) {\n            target[key] = source[key];\n        }\n        return target;\n    },\n    _getFirstPointerId(evt) {\n        if (!evt.touches) {\n            return evt.pointerId || 999;\n        }\n        else {\n            return evt.changedTouches[0].identifier;\n        }\n    },\n    releaseCanvas(...canvases) {\n        if (!Global_1.Konva.releaseCanvasOnDestroy)\n            return;\n        canvases.forEach((c) => {\n            c.width = 0;\n            c.height = 0;\n        });\n    },\n    drawRoundedRectPath(context, width, height, cornerRadius) {\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft =\n                topRight =\n                    bottomLeft =\n                        bottomRight =\n                            Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.moveTo(topLeft, 0);\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/Validators.js":
/*!**********************************************!*\
  !*** ./node_modules/konva/lib/Validators.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RGBComponent = RGBComponent;\nexports.alphaComponent = alphaComponent;\nexports.getNumberValidator = getNumberValidator;\nexports.getNumberOrArrayOfNumbersValidator = getNumberOrArrayOfNumbersValidator;\nexports.getNumberOrAutoValidator = getNumberOrAutoValidator;\nexports.getStringValidator = getStringValidator;\nexports.getStringOrGradientValidator = getStringOrGradientValidator;\nexports.getFunctionValidator = getFunctionValidator;\nexports.getNumberArrayValidator = getNumberArrayValidator;\nexports.getBooleanValidator = getBooleanValidator;\nexports.getComponentValidator = getComponentValidator;\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nfunction _formatValue(val) {\n    if (Util_1.Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util_1.Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nfunction RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nfunction alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nfunction getNumberValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isNumber(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isNumber = Util_1.Util._isNumber(val);\n            const isValidArray = Util_1.Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' +\n                    noOfElements +\n                    ')');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberOrAutoValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isNumber = Util_1.Util._isNumber(val);\n            const isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nfunction getStringValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isString(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nfunction getStringOrGradientValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util_1.Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\n                (val && val.addColorStop);\n            if (!(isString || isGradient)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nfunction getFunctionValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util_1.Util._isFunction(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nfunction getNumberArrayValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n            if (TypedArray && val instanceof TypedArray) {\n                return val;\n            }\n            if (!Util_1.Util._isArray(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util_1.Util._isNumber(item)) {\n                        Util_1.Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nfunction getBooleanValidator() {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            const isBool = val === true || val === false;\n            if (!isBool) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nfunction getComponentValidator(components) {\n    if (Global_1.Konva.isUnminified) {\n        return function (val, attr) {\n            if (val === undefined || val === null) {\n                return val;\n            }\n            if (!Util_1.Util.isObject(val)) {\n                Util_1.Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/Validators.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/_CoreInternals.js":
/*!**************************************************!*\
  !*** ./node_modules/konva/lib/_CoreInternals.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Konva = void 0;\nconst Global_1 = __webpack_require__(/*! ./Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Util_1 = __webpack_require__(/*! ./Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Node_1 = __webpack_require__(/*! ./Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Container_1 = __webpack_require__(/*! ./Container */ \"(app-pages-browser)/./node_modules/konva/lib/Container.js\");\nconst Stage_1 = __webpack_require__(/*! ./Stage */ \"(app-pages-browser)/./node_modules/konva/lib/Stage.js\");\nconst Layer_1 = __webpack_require__(/*! ./Layer */ \"(app-pages-browser)/./node_modules/konva/lib/Layer.js\");\nconst FastLayer_1 = __webpack_require__(/*! ./FastLayer */ \"(app-pages-browser)/./node_modules/konva/lib/FastLayer.js\");\nconst Group_1 = __webpack_require__(/*! ./Group */ \"(app-pages-browser)/./node_modules/konva/lib/Group.js\");\nconst DragAndDrop_1 = __webpack_require__(/*! ./DragAndDrop */ \"(app-pages-browser)/./node_modules/konva/lib/DragAndDrop.js\");\nconst Shape_1 = __webpack_require__(/*! ./Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Animation_1 = __webpack_require__(/*! ./Animation */ \"(app-pages-browser)/./node_modules/konva/lib/Animation.js\");\nconst Tween_1 = __webpack_require__(/*! ./Tween */ \"(app-pages-browser)/./node_modules/konva/lib/Tween.js\");\nconst Context_1 = __webpack_require__(/*! ./Context */ \"(app-pages-browser)/./node_modules/konva/lib/Context.js\");\nconst Canvas_1 = __webpack_require__(/*! ./Canvas */ \"(app-pages-browser)/./node_modules/konva/lib/Canvas.js\");\nexports.Konva = Util_1.Util._assign(Global_1.Konva, {\n    Util: Util_1.Util,\n    Transform: Util_1.Transform,\n    Node: Node_1.Node,\n    Container: Container_1.Container,\n    Stage: Stage_1.Stage,\n    stages: Stage_1.stages,\n    Layer: Layer_1.Layer,\n    FastLayer: FastLayer_1.FastLayer,\n    Group: Group_1.Group,\n    DD: DragAndDrop_1.DD,\n    Shape: Shape_1.Shape,\n    shapes: Shape_1.shapes,\n    Animation: Animation_1.Animation,\n    Tween: Tween_1.Tween,\n    Easings: Tween_1.Easings,\n    Context: Context_1.Context,\n    Canvas: Canvas_1.Canvas,\n});\nexports[\"default\"] = exports.Konva;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvX0NvcmVJbnRlcm5hbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFVO0FBQ25DLGVBQWUsbUJBQU8sQ0FBQyxvRUFBUTtBQUMvQixlQUFlLG1CQUFPLENBQUMsb0VBQVE7QUFDL0Isb0JBQW9CLG1CQUFPLENBQUMsOEVBQWE7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQVM7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQVM7QUFDakMsb0JBQW9CLG1CQUFPLENBQUMsOEVBQWE7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQVM7QUFDakMsc0JBQXNCLG1CQUFPLENBQUMsa0ZBQWU7QUFDN0MsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQVM7QUFDakMsb0JBQW9CLG1CQUFPLENBQUMsOEVBQWE7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQVM7QUFDakMsa0JBQWtCLG1CQUFPLENBQUMsMEVBQVc7QUFDckMsaUJBQWlCLG1CQUFPLENBQUMsd0VBQVU7QUFDbkMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9fQ29yZUludGVybmFscy5qcz80YTg0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Lb252YSA9IHZvaWQgMDtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4vR2xvYmFsXCIpO1xuY29uc3QgVXRpbF8xID0gcmVxdWlyZShcIi4vVXRpbFwiKTtcbmNvbnN0IE5vZGVfMSA9IHJlcXVpcmUoXCIuL05vZGVcIik7XG5jb25zdCBDb250YWluZXJfMSA9IHJlcXVpcmUoXCIuL0NvbnRhaW5lclwiKTtcbmNvbnN0IFN0YWdlXzEgPSByZXF1aXJlKFwiLi9TdGFnZVwiKTtcbmNvbnN0IExheWVyXzEgPSByZXF1aXJlKFwiLi9MYXllclwiKTtcbmNvbnN0IEZhc3RMYXllcl8xID0gcmVxdWlyZShcIi4vRmFzdExheWVyXCIpO1xuY29uc3QgR3JvdXBfMSA9IHJlcXVpcmUoXCIuL0dyb3VwXCIpO1xuY29uc3QgRHJhZ0FuZERyb3BfMSA9IHJlcXVpcmUoXCIuL0RyYWdBbmREcm9wXCIpO1xuY29uc3QgU2hhcGVfMSA9IHJlcXVpcmUoXCIuL1NoYXBlXCIpO1xuY29uc3QgQW5pbWF0aW9uXzEgPSByZXF1aXJlKFwiLi9BbmltYXRpb25cIik7XG5jb25zdCBUd2Vlbl8xID0gcmVxdWlyZShcIi4vVHdlZW5cIik7XG5jb25zdCBDb250ZXh0XzEgPSByZXF1aXJlKFwiLi9Db250ZXh0XCIpO1xuY29uc3QgQ2FudmFzXzEgPSByZXF1aXJlKFwiLi9DYW52YXNcIik7XG5leHBvcnRzLktvbnZhID0gVXRpbF8xLlV0aWwuX2Fzc2lnbihHbG9iYWxfMS5Lb252YSwge1xuICAgIFV0aWw6IFV0aWxfMS5VdGlsLFxuICAgIFRyYW5zZm9ybTogVXRpbF8xLlRyYW5zZm9ybSxcbiAgICBOb2RlOiBOb2RlXzEuTm9kZSxcbiAgICBDb250YWluZXI6IENvbnRhaW5lcl8xLkNvbnRhaW5lcixcbiAgICBTdGFnZTogU3RhZ2VfMS5TdGFnZSxcbiAgICBzdGFnZXM6IFN0YWdlXzEuc3RhZ2VzLFxuICAgIExheWVyOiBMYXllcl8xLkxheWVyLFxuICAgIEZhc3RMYXllcjogRmFzdExheWVyXzEuRmFzdExheWVyLFxuICAgIEdyb3VwOiBHcm91cF8xLkdyb3VwLFxuICAgIEREOiBEcmFnQW5kRHJvcF8xLkRELFxuICAgIFNoYXBlOiBTaGFwZV8xLlNoYXBlLFxuICAgIHNoYXBlczogU2hhcGVfMS5zaGFwZXMsXG4gICAgQW5pbWF0aW9uOiBBbmltYXRpb25fMS5BbmltYXRpb24sXG4gICAgVHdlZW46IFR3ZWVuXzEuVHdlZW4sXG4gICAgRWFzaW5nczogVHdlZW5fMS5FYXNpbmdzLFxuICAgIENvbnRleHQ6IENvbnRleHRfMS5Db250ZXh0LFxuICAgIENhbnZhczogQ2FudmFzXzEuQ2FudmFzLFxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLktvbnZhO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/_CoreInternals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/_FullInternals.js":
/*!**************************************************!*\
  !*** ./node_modules/konva/lib/_FullInternals.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Konva = void 0;\nconst _CoreInternals_1 = __webpack_require__(/*! ./_CoreInternals */ \"(app-pages-browser)/./node_modules/konva/lib/_CoreInternals.js\");\nconst Arc_1 = __webpack_require__(/*! ./shapes/Arc */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Arc.js\");\nconst Arrow_1 = __webpack_require__(/*! ./shapes/Arrow */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Arrow.js\");\nconst Circle_1 = __webpack_require__(/*! ./shapes/Circle */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Circle.js\");\nconst Ellipse_1 = __webpack_require__(/*! ./shapes/Ellipse */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Ellipse.js\");\nconst Image_1 = __webpack_require__(/*! ./shapes/Image */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Image.js\");\nconst Label_1 = __webpack_require__(/*! ./shapes/Label */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Label.js\");\nconst Line_1 = __webpack_require__(/*! ./shapes/Line */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Line.js\");\nconst Path_1 = __webpack_require__(/*! ./shapes/Path */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Path.js\");\nconst Rect_1 = __webpack_require__(/*! ./shapes/Rect */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Rect.js\");\nconst RegularPolygon_1 = __webpack_require__(/*! ./shapes/RegularPolygon */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/RegularPolygon.js\");\nconst Ring_1 = __webpack_require__(/*! ./shapes/Ring */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Ring.js\");\nconst Sprite_1 = __webpack_require__(/*! ./shapes/Sprite */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Sprite.js\");\nconst Star_1 = __webpack_require__(/*! ./shapes/Star */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Star.js\");\nconst Text_1 = __webpack_require__(/*! ./shapes/Text */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Text.js\");\nconst TextPath_1 = __webpack_require__(/*! ./shapes/TextPath */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/TextPath.js\");\nconst Transformer_1 = __webpack_require__(/*! ./shapes/Transformer */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Transformer.js\");\nconst Wedge_1 = __webpack_require__(/*! ./shapes/Wedge */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Wedge.js\");\nconst Blur_1 = __webpack_require__(/*! ./filters/Blur */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Blur.js\");\nconst Brighten_1 = __webpack_require__(/*! ./filters/Brighten */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Brighten.js\");\nconst Contrast_1 = __webpack_require__(/*! ./filters/Contrast */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Contrast.js\");\nconst Emboss_1 = __webpack_require__(/*! ./filters/Emboss */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Emboss.js\");\nconst Enhance_1 = __webpack_require__(/*! ./filters/Enhance */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Enhance.js\");\nconst Grayscale_1 = __webpack_require__(/*! ./filters/Grayscale */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Grayscale.js\");\nconst HSL_1 = __webpack_require__(/*! ./filters/HSL */ \"(app-pages-browser)/./node_modules/konva/lib/filters/HSL.js\");\nconst HSV_1 = __webpack_require__(/*! ./filters/HSV */ \"(app-pages-browser)/./node_modules/konva/lib/filters/HSV.js\");\nconst Invert_1 = __webpack_require__(/*! ./filters/Invert */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Invert.js\");\nconst Kaleidoscope_1 = __webpack_require__(/*! ./filters/Kaleidoscope */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Kaleidoscope.js\");\nconst Mask_1 = __webpack_require__(/*! ./filters/Mask */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Mask.js\");\nconst Noise_1 = __webpack_require__(/*! ./filters/Noise */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Noise.js\");\nconst Pixelate_1 = __webpack_require__(/*! ./filters/Pixelate */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Pixelate.js\");\nconst Posterize_1 = __webpack_require__(/*! ./filters/Posterize */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Posterize.js\");\nconst RGB_1 = __webpack_require__(/*! ./filters/RGB */ \"(app-pages-browser)/./node_modules/konva/lib/filters/RGB.js\");\nconst RGBA_1 = __webpack_require__(/*! ./filters/RGBA */ \"(app-pages-browser)/./node_modules/konva/lib/filters/RGBA.js\");\nconst Sepia_1 = __webpack_require__(/*! ./filters/Sepia */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Sepia.js\");\nconst Solarize_1 = __webpack_require__(/*! ./filters/Solarize */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Solarize.js\");\nconst Threshold_1 = __webpack_require__(/*! ./filters/Threshold */ \"(app-pages-browser)/./node_modules/konva/lib/filters/Threshold.js\");\nexports.Konva = _CoreInternals_1.Konva.Util._assign(_CoreInternals_1.Konva, {\n    Arc: Arc_1.Arc,\n    Arrow: Arrow_1.Arrow,\n    Circle: Circle_1.Circle,\n    Ellipse: Ellipse_1.Ellipse,\n    Image: Image_1.Image,\n    Label: Label_1.Label,\n    Tag: Label_1.Tag,\n    Line: Line_1.Line,\n    Path: Path_1.Path,\n    Rect: Rect_1.Rect,\n    RegularPolygon: RegularPolygon_1.RegularPolygon,\n    Ring: Ring_1.Ring,\n    Sprite: Sprite_1.Sprite,\n    Star: Star_1.Star,\n    Text: Text_1.Text,\n    TextPath: TextPath_1.TextPath,\n    Transformer: Transformer_1.Transformer,\n    Wedge: Wedge_1.Wedge,\n    Filters: {\n        Blur: Blur_1.Blur,\n        Brighten: Brighten_1.Brighten,\n        Contrast: Contrast_1.Contrast,\n        Emboss: Emboss_1.Emboss,\n        Enhance: Enhance_1.Enhance,\n        Grayscale: Grayscale_1.Grayscale,\n        HSL: HSL_1.HSL,\n        HSV: HSV_1.HSV,\n        Invert: Invert_1.Invert,\n        Kaleidoscope: Kaleidoscope_1.Kaleidoscope,\n        Mask: Mask_1.Mask,\n        Noise: Noise_1.Noise,\n        Pixelate: Pixelate_1.Pixelate,\n        Posterize: Posterize_1.Posterize,\n        RGB: RGB_1.RGB,\n        RGBA: RGBA_1.RGBA,\n        Sepia: Sepia_1.Sepia,\n        Solarize: Solarize_1.Solarize,\n        Threshold: Threshold_1.Threshold,\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvX0Z1bGxJbnRlcm5hbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLHlCQUF5QixtQkFBTyxDQUFDLHdGQUFrQjtBQUNuRCxjQUFjLG1CQUFPLENBQUMsZ0ZBQWM7QUFDcEMsZ0JBQWdCLG1CQUFPLENBQUMsb0ZBQWdCO0FBQ3hDLGlCQUFpQixtQkFBTyxDQUFDLHNGQUFpQjtBQUMxQyxrQkFBa0IsbUJBQU8sQ0FBQyx3RkFBa0I7QUFDNUMsZ0JBQWdCLG1CQUFPLENBQUMsb0ZBQWdCO0FBQ3hDLGdCQUFnQixtQkFBTyxDQUFDLG9GQUFnQjtBQUN4QyxlQUFlLG1CQUFPLENBQUMsa0ZBQWU7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLGtGQUFlO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQyxrRkFBZTtBQUN0Qyx5QkFBeUIsbUJBQU8sQ0FBQyxzR0FBeUI7QUFDMUQsZUFBZSxtQkFBTyxDQUFDLGtGQUFlO0FBQ3RDLGlCQUFpQixtQkFBTyxDQUFDLHNGQUFpQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMsa0ZBQWU7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLGtGQUFlO0FBQ3RDLG1CQUFtQixtQkFBTyxDQUFDLDBGQUFtQjtBQUM5QyxzQkFBc0IsbUJBQU8sQ0FBQyxnR0FBc0I7QUFDcEQsZ0JBQWdCLG1CQUFPLENBQUMsb0ZBQWdCO0FBQ3hDLGVBQWUsbUJBQU8sQ0FBQyxvRkFBZ0I7QUFDdkMsbUJBQW1CLG1CQUFPLENBQUMsNEZBQW9CO0FBQy9DLG1CQUFtQixtQkFBTyxDQUFDLDRGQUFvQjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBa0I7QUFDM0Msa0JBQWtCLG1CQUFPLENBQUMsMEZBQW1CO0FBQzdDLG9CQUFvQixtQkFBTyxDQUFDLDhGQUFxQjtBQUNqRCxjQUFjLG1CQUFPLENBQUMsa0ZBQWU7QUFDckMsY0FBYyxtQkFBTyxDQUFDLGtGQUFlO0FBQ3JDLGlCQUFpQixtQkFBTyxDQUFDLHdGQUFrQjtBQUMzQyx1QkFBdUIsbUJBQU8sQ0FBQyxvR0FBd0I7QUFDdkQsZUFBZSxtQkFBTyxDQUFDLG9GQUFnQjtBQUN2QyxnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBaUI7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsNEZBQW9CO0FBQy9DLG9CQUFvQixtQkFBTyxDQUFDLDhGQUFxQjtBQUNqRCxjQUFjLG1CQUFPLENBQUMsa0ZBQWU7QUFDckMsZUFBZSxtQkFBTyxDQUFDLG9GQUFnQjtBQUN2QyxnQkFBZ0IsbUJBQU8sQ0FBQyxzRkFBaUI7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsNEZBQW9CO0FBQy9DLG9CQUFvQixtQkFBTyxDQUFDLDhGQUFxQjtBQUNqRCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvX0Z1bGxJbnRlcm5hbHMuanM/M2EwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS29udmEgPSB2b2lkIDA7XG5jb25zdCBfQ29yZUludGVybmFsc18xID0gcmVxdWlyZShcIi4vX0NvcmVJbnRlcm5hbHNcIik7XG5jb25zdCBBcmNfMSA9IHJlcXVpcmUoXCIuL3NoYXBlcy9BcmNcIik7XG5jb25zdCBBcnJvd18xID0gcmVxdWlyZShcIi4vc2hhcGVzL0Fycm93XCIpO1xuY29uc3QgQ2lyY2xlXzEgPSByZXF1aXJlKFwiLi9zaGFwZXMvQ2lyY2xlXCIpO1xuY29uc3QgRWxsaXBzZV8xID0gcmVxdWlyZShcIi4vc2hhcGVzL0VsbGlwc2VcIik7XG5jb25zdCBJbWFnZV8xID0gcmVxdWlyZShcIi4vc2hhcGVzL0ltYWdlXCIpO1xuY29uc3QgTGFiZWxfMSA9IHJlcXVpcmUoXCIuL3NoYXBlcy9MYWJlbFwiKTtcbmNvbnN0IExpbmVfMSA9IHJlcXVpcmUoXCIuL3NoYXBlcy9MaW5lXCIpO1xuY29uc3QgUGF0aF8xID0gcmVxdWlyZShcIi4vc2hhcGVzL1BhdGhcIik7XG5jb25zdCBSZWN0XzEgPSByZXF1aXJlKFwiLi9zaGFwZXMvUmVjdFwiKTtcbmNvbnN0IFJlZ3VsYXJQb2x5Z29uXzEgPSByZXF1aXJlKFwiLi9zaGFwZXMvUmVndWxhclBvbHlnb25cIik7XG5jb25zdCBSaW5nXzEgPSByZXF1aXJlKFwiLi9zaGFwZXMvUmluZ1wiKTtcbmNvbnN0IFNwcml0ZV8xID0gcmVxdWlyZShcIi4vc2hhcGVzL1Nwcml0ZVwiKTtcbmNvbnN0IFN0YXJfMSA9IHJlcXVpcmUoXCIuL3NoYXBlcy9TdGFyXCIpO1xuY29uc3QgVGV4dF8xID0gcmVxdWlyZShcIi4vc2hhcGVzL1RleHRcIik7XG5jb25zdCBUZXh0UGF0aF8xID0gcmVxdWlyZShcIi4vc2hhcGVzL1RleHRQYXRoXCIpO1xuY29uc3QgVHJhbnNmb3JtZXJfMSA9IHJlcXVpcmUoXCIuL3NoYXBlcy9UcmFuc2Zvcm1lclwiKTtcbmNvbnN0IFdlZGdlXzEgPSByZXF1aXJlKFwiLi9zaGFwZXMvV2VkZ2VcIik7XG5jb25zdCBCbHVyXzEgPSByZXF1aXJlKFwiLi9maWx0ZXJzL0JsdXJcIik7XG5jb25zdCBCcmlnaHRlbl8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9CcmlnaHRlblwiKTtcbmNvbnN0IENvbnRyYXN0XzEgPSByZXF1aXJlKFwiLi9maWx0ZXJzL0NvbnRyYXN0XCIpO1xuY29uc3QgRW1ib3NzXzEgPSByZXF1aXJlKFwiLi9maWx0ZXJzL0VtYm9zc1wiKTtcbmNvbnN0IEVuaGFuY2VfMSA9IHJlcXVpcmUoXCIuL2ZpbHRlcnMvRW5oYW5jZVwiKTtcbmNvbnN0IEdyYXlzY2FsZV8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9HcmF5c2NhbGVcIik7XG5jb25zdCBIU0xfMSA9IHJlcXVpcmUoXCIuL2ZpbHRlcnMvSFNMXCIpO1xuY29uc3QgSFNWXzEgPSByZXF1aXJlKFwiLi9maWx0ZXJzL0hTVlwiKTtcbmNvbnN0IEludmVydF8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9JbnZlcnRcIik7XG5jb25zdCBLYWxlaWRvc2NvcGVfMSA9IHJlcXVpcmUoXCIuL2ZpbHRlcnMvS2FsZWlkb3Njb3BlXCIpO1xuY29uc3QgTWFza18xID0gcmVxdWlyZShcIi4vZmlsdGVycy9NYXNrXCIpO1xuY29uc3QgTm9pc2VfMSA9IHJlcXVpcmUoXCIuL2ZpbHRlcnMvTm9pc2VcIik7XG5jb25zdCBQaXhlbGF0ZV8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9QaXhlbGF0ZVwiKTtcbmNvbnN0IFBvc3Rlcml6ZV8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9Qb3N0ZXJpemVcIik7XG5jb25zdCBSR0JfMSA9IHJlcXVpcmUoXCIuL2ZpbHRlcnMvUkdCXCIpO1xuY29uc3QgUkdCQV8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9SR0JBXCIpO1xuY29uc3QgU2VwaWFfMSA9IHJlcXVpcmUoXCIuL2ZpbHRlcnMvU2VwaWFcIik7XG5jb25zdCBTb2xhcml6ZV8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9Tb2xhcml6ZVwiKTtcbmNvbnN0IFRocmVzaG9sZF8xID0gcmVxdWlyZShcIi4vZmlsdGVycy9UaHJlc2hvbGRcIik7XG5leHBvcnRzLktvbnZhID0gX0NvcmVJbnRlcm5hbHNfMS5Lb252YS5VdGlsLl9hc3NpZ24oX0NvcmVJbnRlcm5hbHNfMS5Lb252YSwge1xuICAgIEFyYzogQXJjXzEuQXJjLFxuICAgIEFycm93OiBBcnJvd18xLkFycm93LFxuICAgIENpcmNsZTogQ2lyY2xlXzEuQ2lyY2xlLFxuICAgIEVsbGlwc2U6IEVsbGlwc2VfMS5FbGxpcHNlLFxuICAgIEltYWdlOiBJbWFnZV8xLkltYWdlLFxuICAgIExhYmVsOiBMYWJlbF8xLkxhYmVsLFxuICAgIFRhZzogTGFiZWxfMS5UYWcsXG4gICAgTGluZTogTGluZV8xLkxpbmUsXG4gICAgUGF0aDogUGF0aF8xLlBhdGgsXG4gICAgUmVjdDogUmVjdF8xLlJlY3QsXG4gICAgUmVndWxhclBvbHlnb246IFJlZ3VsYXJQb2x5Z29uXzEuUmVndWxhclBvbHlnb24sXG4gICAgUmluZzogUmluZ18xLlJpbmcsXG4gICAgU3ByaXRlOiBTcHJpdGVfMS5TcHJpdGUsXG4gICAgU3RhcjogU3Rhcl8xLlN0YXIsXG4gICAgVGV4dDogVGV4dF8xLlRleHQsXG4gICAgVGV4dFBhdGg6IFRleHRQYXRoXzEuVGV4dFBhdGgsXG4gICAgVHJhbnNmb3JtZXI6IFRyYW5zZm9ybWVyXzEuVHJhbnNmb3JtZXIsXG4gICAgV2VkZ2U6IFdlZGdlXzEuV2VkZ2UsXG4gICAgRmlsdGVyczoge1xuICAgICAgICBCbHVyOiBCbHVyXzEuQmx1cixcbiAgICAgICAgQnJpZ2h0ZW46IEJyaWdodGVuXzEuQnJpZ2h0ZW4sXG4gICAgICAgIENvbnRyYXN0OiBDb250cmFzdF8xLkNvbnRyYXN0LFxuICAgICAgICBFbWJvc3M6IEVtYm9zc18xLkVtYm9zcyxcbiAgICAgICAgRW5oYW5jZTogRW5oYW5jZV8xLkVuaGFuY2UsXG4gICAgICAgIEdyYXlzY2FsZTogR3JheXNjYWxlXzEuR3JheXNjYWxlLFxuICAgICAgICBIU0w6IEhTTF8xLkhTTCxcbiAgICAgICAgSFNWOiBIU1ZfMS5IU1YsXG4gICAgICAgIEludmVydDogSW52ZXJ0XzEuSW52ZXJ0LFxuICAgICAgICBLYWxlaWRvc2NvcGU6IEthbGVpZG9zY29wZV8xLkthbGVpZG9zY29wZSxcbiAgICAgICAgTWFzazogTWFza18xLk1hc2ssXG4gICAgICAgIE5vaXNlOiBOb2lzZV8xLk5vaXNlLFxuICAgICAgICBQaXhlbGF0ZTogUGl4ZWxhdGVfMS5QaXhlbGF0ZSxcbiAgICAgICAgUG9zdGVyaXplOiBQb3N0ZXJpemVfMS5Qb3N0ZXJpemUsXG4gICAgICAgIFJHQjogUkdCXzEuUkdCLFxuICAgICAgICBSR0JBOiBSR0JBXzEuUkdCQSxcbiAgICAgICAgU2VwaWE6IFNlcGlhXzEuU2VwaWEsXG4gICAgICAgIFNvbGFyaXplOiBTb2xhcml6ZV8xLlNvbGFyaXplLFxuICAgICAgICBUaHJlc2hvbGQ6IFRocmVzaG9sZF8xLlRocmVzaG9sZCxcbiAgICB9LFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/_FullInternals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Blur.js":
/*!************************************************!*\
  !*** ./node_modules/konva/lib/filters/Blur.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Blur = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nfunction BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n}\nconst mul_table = [\n    512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292,\n    512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292,\n    273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259,\n    496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292,\n    282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373,\n    364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259,\n    507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381,\n    374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292,\n    287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461,\n    454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373,\n    368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309,\n    305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259,\n    257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442,\n    437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381,\n    377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332,\n    329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292,\n    289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259,\n];\nconst shg_table = [\n    9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17,\n    17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19,\n    19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\n    20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n    22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n    23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n    24, 24, 24, 24, 24, 24, 24,\n];\nfunction filterGaussBlurRGBA(imageData, radius) {\n    const pixels = imageData.data, width = imageData.width, height = imageData.height;\n    let x, y, i, p, yp, yi, yw, r_sum, g_sum, b_sum, a_sum, r_out_sum, g_out_sum, b_out_sum, a_out_sum, r_in_sum, g_in_sum, b_in_sum, a_in_sum, pr, pg, pb, pa, rbs;\n    let div = radius + radius + 1, widthMinus1 = width - 1, heightMinus1 = height - 1, radiusPlus1 = radius + 1, sumFactor = (radiusPlus1 * (radiusPlus1 + 1)) / 2, stackStart = new BlurStack(), stackEnd = null, stack = stackStart, stackIn = null, stackOut = null, mul_sum = mul_table[radius], shg_sum = shg_table[radius];\n    for (i = 1; i < div; i++) {\n        stack = stack.next = new BlurStack();\n        if (i === radiusPlus1) {\n            stackEnd = stack;\n        }\n    }\n    stack.next = stackStart;\n    yw = yi = 0;\n    for (y = 0; y < height; y++) {\n        r_in_sum =\n            g_in_sum =\n                b_in_sum =\n                    a_in_sum =\n                        r_sum =\n                            g_sum =\n                                b_sum =\n                                    a_sum =\n                                        0;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        for (i = 1; i < radiusPlus1; i++) {\n            p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n            r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n        }\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (x = 0; x < width; x++) {\n            pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa !== 0) {\n                pa = 255 / pa;\n                pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n            r_in_sum += stackIn.r = pixels[p];\n            g_in_sum += stackIn.g = pixels[p + 1];\n            b_in_sum += stackIn.b = pixels[p + 2];\n            a_in_sum += stackIn.a = pixels[p + 3];\n            r_sum += r_in_sum;\n            g_sum += g_in_sum;\n            b_sum += b_in_sum;\n            a_sum += a_in_sum;\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += 4;\n        }\n        yw += width;\n    }\n    for (x = 0; x < width; x++) {\n        g_in_sum =\n            b_in_sum =\n                a_in_sum =\n                    r_in_sum =\n                        g_sum =\n                            b_sum =\n                                a_sum =\n                                    r_sum =\n                                        0;\n        yi = x << 2;\n        r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n        g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n        b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n        a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n        r_sum += sumFactor * pr;\n        g_sum += sumFactor * pg;\n        b_sum += sumFactor * pb;\n        a_sum += sumFactor * pa;\n        stack = stackStart;\n        for (i = 0; i < radiusPlus1; i++) {\n            stack.r = pr;\n            stack.g = pg;\n            stack.b = pb;\n            stack.a = pa;\n            stack = stack.next;\n        }\n        yp = width;\n        for (i = 1; i <= radius; i++) {\n            yi = (yp + x) << 2;\n            r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n            g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n            b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n            a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n            r_in_sum += pr;\n            g_in_sum += pg;\n            b_in_sum += pb;\n            a_in_sum += pa;\n            stack = stack.next;\n            if (i < heightMinus1) {\n                yp += width;\n            }\n        }\n        yi = x;\n        stackIn = stackStart;\n        stackOut = stackEnd;\n        for (y = 0; y < height; y++) {\n            p = yi << 2;\n            pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n            if (pa > 0) {\n                pa = 255 / pa;\n                pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n                pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n            }\n            else {\n                pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n            }\n            r_sum -= r_out_sum;\n            g_sum -= g_out_sum;\n            b_sum -= b_out_sum;\n            a_sum -= a_out_sum;\n            r_out_sum -= stackIn.r;\n            g_out_sum -= stackIn.g;\n            b_out_sum -= stackIn.b;\n            a_out_sum -= stackIn.a;\n            p =\n                (x +\n                    ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width) <<\n                    2;\n            r_sum += r_in_sum += stackIn.r = pixels[p];\n            g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n            b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n            a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n            stackIn = stackIn.next;\n            r_out_sum += pr = stackOut.r;\n            g_out_sum += pg = stackOut.g;\n            b_out_sum += pb = stackOut.b;\n            a_out_sum += pa = stackOut.a;\n            r_in_sum -= pr;\n            g_in_sum -= pg;\n            b_in_sum -= pb;\n            a_in_sum -= pa;\n            stackOut = stackOut.next;\n            yi += width;\n        }\n    }\n}\nconst Blur = function Blur(imageData) {\n    const radius = Math.round(this.blurRadius());\n    if (radius > 0) {\n        filterGaussBlurRGBA(imageData, radius);\n    }\n};\nexports.Blur = Blur;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blurRadius', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Blur.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Brighten.js":
/*!****************************************************!*\
  !*** ./node_modules/konva/lib/filters/Brighten.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Brighten = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Brighten = function (imageData) {\n    let brightness = this.brightness() * 255, data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n    }\n};\nexports.Brighten = Brighten;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'brightness', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9CcmlnaHRlbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLHFFQUFTO0FBQ2hDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFlO0FBQzVDO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9CcmlnaHRlbi5qcz8zNDYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CcmlnaHRlbiA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgTm9kZV8xID0gcmVxdWlyZShcIi4uL05vZGVcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmNvbnN0IEJyaWdodGVuID0gZnVuY3Rpb24gKGltYWdlRGF0YSkge1xuICAgIGxldCBicmlnaHRuZXNzID0gdGhpcy5icmlnaHRuZXNzKCkgKiAyNTUsIGRhdGEgPSBpbWFnZURhdGEuZGF0YSwgbGVuID0gZGF0YS5sZW5ndGgsIGk7XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgICAgIGRhdGFbaV0gKz0gYnJpZ2h0bmVzcztcbiAgICAgICAgZGF0YVtpICsgMV0gKz0gYnJpZ2h0bmVzcztcbiAgICAgICAgZGF0YVtpICsgMl0gKz0gYnJpZ2h0bmVzcztcbiAgICB9XG59O1xuZXhwb3J0cy5CcmlnaHRlbiA9IEJyaWdodGVuO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnYnJpZ2h0bmVzcycsIDAsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpLCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Brighten.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Contrast.js":
/*!****************************************************!*\
  !*** ./node_modules/konva/lib/filters/Contrast.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contrast = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Contrast = function (imageData) {\n    const adjust = Math.pow((this.contrast() + 100) / 100, 2);\n    let data = imageData.data, nPixels = data.length, red = 150, green = 150, blue = 150, i;\n    for (i = 0; i < nPixels; i += 4) {\n        red = data[i];\n        green = data[i + 1];\n        blue = data[i + 2];\n        red /= 255;\n        red -= 0.5;\n        red *= adjust;\n        red += 0.5;\n        red *= 255;\n        green /= 255;\n        green -= 0.5;\n        green *= adjust;\n        green += 0.5;\n        green *= 255;\n        blue /= 255;\n        blue -= 0.5;\n        blue *= adjust;\n        blue += 0.5;\n        blue *= 255;\n        red = red < 0 ? 0 : red > 255 ? 255 : red;\n        green = green < 0 ? 0 : green > 255 ? 255 : green;\n        blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n        data[i] = red;\n        data[i + 1] = green;\n        data[i + 2] = blue;\n    }\n};\nexports.Contrast = Contrast;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'contrast', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9Db250cmFzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLHFFQUFTO0FBQ2hDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixhQUFhO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9maWx0ZXJzL0NvbnRyYXN0LmpzPzkzNGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnRyYXN0ID0gdm9pZCAwO1xuY29uc3QgRmFjdG9yeV8xID0gcmVxdWlyZShcIi4uL0ZhY3RvcnlcIik7XG5jb25zdCBOb2RlXzEgPSByZXF1aXJlKFwiLi4vTm9kZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgQ29udHJhc3QgPSBmdW5jdGlvbiAoaW1hZ2VEYXRhKSB7XG4gICAgY29uc3QgYWRqdXN0ID0gTWF0aC5wb3coKHRoaXMuY29udHJhc3QoKSArIDEwMCkgLyAxMDAsIDIpO1xuICAgIGxldCBkYXRhID0gaW1hZ2VEYXRhLmRhdGEsIG5QaXhlbHMgPSBkYXRhLmxlbmd0aCwgcmVkID0gMTUwLCBncmVlbiA9IDE1MCwgYmx1ZSA9IDE1MCwgaTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgblBpeGVsczsgaSArPSA0KSB7XG4gICAgICAgIHJlZCA9IGRhdGFbaV07XG4gICAgICAgIGdyZWVuID0gZGF0YVtpICsgMV07XG4gICAgICAgIGJsdWUgPSBkYXRhW2kgKyAyXTtcbiAgICAgICAgcmVkIC89IDI1NTtcbiAgICAgICAgcmVkIC09IDAuNTtcbiAgICAgICAgcmVkICo9IGFkanVzdDtcbiAgICAgICAgcmVkICs9IDAuNTtcbiAgICAgICAgcmVkICo9IDI1NTtcbiAgICAgICAgZ3JlZW4gLz0gMjU1O1xuICAgICAgICBncmVlbiAtPSAwLjU7XG4gICAgICAgIGdyZWVuICo9IGFkanVzdDtcbiAgICAgICAgZ3JlZW4gKz0gMC41O1xuICAgICAgICBncmVlbiAqPSAyNTU7XG4gICAgICAgIGJsdWUgLz0gMjU1O1xuICAgICAgICBibHVlIC09IDAuNTtcbiAgICAgICAgYmx1ZSAqPSBhZGp1c3Q7XG4gICAgICAgIGJsdWUgKz0gMC41O1xuICAgICAgICBibHVlICo9IDI1NTtcbiAgICAgICAgcmVkID0gcmVkIDwgMCA/IDAgOiByZWQgPiAyNTUgPyAyNTUgOiByZWQ7XG4gICAgICAgIGdyZWVuID0gZ3JlZW4gPCAwID8gMCA6IGdyZWVuID4gMjU1ID8gMjU1IDogZ3JlZW47XG4gICAgICAgIGJsdWUgPSBibHVlIDwgMCA/IDAgOiBibHVlID4gMjU1ID8gMjU1IDogYmx1ZTtcbiAgICAgICAgZGF0YVtpXSA9IHJlZDtcbiAgICAgICAgZGF0YVtpICsgMV0gPSBncmVlbjtcbiAgICAgICAgZGF0YVtpICsgMl0gPSBibHVlO1xuICAgIH1cbn07XG5leHBvcnRzLkNvbnRyYXN0ID0gQ29udHJhc3Q7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoTm9kZV8xLk5vZGUsICdjb250cmFzdCcsIDAsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpLCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Contrast.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Emboss.js":
/*!**************************************************!*\
  !*** ./node_modules/konva/lib/filters/Emboss.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Emboss = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Emboss = function (imageData) {\n    let strength = this.embossStrength() * 10, greyLevel = this.embossWhiteLevel() * 255, direction = this.embossDirection(), blend = this.embossBlend(), dirY = 0, dirX = 0, data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4, y = h;\n    switch (direction) {\n        case 'top-left':\n            dirY = -1;\n            dirX = -1;\n            break;\n        case 'top':\n            dirY = -1;\n            dirX = 0;\n            break;\n        case 'top-right':\n            dirY = -1;\n            dirX = 1;\n            break;\n        case 'right':\n            dirY = 0;\n            dirX = 1;\n            break;\n        case 'bottom-right':\n            dirY = 1;\n            dirX = 1;\n            break;\n        case 'bottom':\n            dirY = 1;\n            dirX = 0;\n            break;\n        case 'bottom-left':\n            dirY = 1;\n            dirX = -1;\n            break;\n        case 'left':\n            dirY = 0;\n            dirX = -1;\n            break;\n        default:\n            Util_1.Util.error('Unknown emboss direction: ' + direction);\n    }\n    do {\n        const offsetY = (y - 1) * w4;\n        let otherY = dirY;\n        if (y + otherY < 1) {\n            otherY = 0;\n        }\n        if (y + otherY > h) {\n            otherY = 0;\n        }\n        const offsetYOther = (y - 1 + otherY) * w * 4;\n        let x = w;\n        do {\n            const offset = offsetY + (x - 1) * 4;\n            let otherX = dirX;\n            if (x + otherX < 1) {\n                otherX = 0;\n            }\n            if (x + otherX > w) {\n                otherX = 0;\n            }\n            const offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n            const dR = data[offset] - data[offsetOther];\n            const dG = data[offset + 1] - data[offsetOther + 1];\n            const dB = data[offset + 2] - data[offsetOther + 2];\n            let dif = dR;\n            const absDif = dif > 0 ? dif : -dif;\n            const absG = dG > 0 ? dG : -dG;\n            const absB = dB > 0 ? dB : -dB;\n            if (absG > absDif) {\n                dif = dG;\n            }\n            if (absB > absDif) {\n                dif = dB;\n            }\n            dif *= strength;\n            if (blend) {\n                const r = data[offset] + dif;\n                const g = data[offset + 1] + dif;\n                const b = data[offset + 2] + dif;\n                data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n                data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n                data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n            }\n            else {\n                let grey = greyLevel - dif;\n                if (grey < 0) {\n                    grey = 0;\n                }\n                else if (grey > 255) {\n                    grey = 255;\n                }\n                data[offset] = data[offset + 1] = data[offset + 2] = grey;\n            }\n        } while (--x);\n    } while (--y);\n};\nexports.Emboss = Emboss;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossStrength', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossWhiteLevel', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossDirection', 'top-left', null, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'embossBlend', false, null, Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9FbWJvc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxlQUFlLG1CQUFPLENBQUMscUVBQVM7QUFDaEMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsTUFBTTtBQUNOO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9FbWJvc3MuanM/MTg5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW1ib3NzID0gdm9pZCAwO1xuY29uc3QgRmFjdG9yeV8xID0gcmVxdWlyZShcIi4uL0ZhY3RvcnlcIik7XG5jb25zdCBOb2RlXzEgPSByZXF1aXJlKFwiLi4vTm9kZVwiKTtcbmNvbnN0IFV0aWxfMSA9IHJlcXVpcmUoXCIuLi9VdGlsXCIpO1xuY29uc3QgVmFsaWRhdG9yc18xID0gcmVxdWlyZShcIi4uL1ZhbGlkYXRvcnNcIik7XG5jb25zdCBFbWJvc3MgPSBmdW5jdGlvbiAoaW1hZ2VEYXRhKSB7XG4gICAgbGV0IHN0cmVuZ3RoID0gdGhpcy5lbWJvc3NTdHJlbmd0aCgpICogMTAsIGdyZXlMZXZlbCA9IHRoaXMuZW1ib3NzV2hpdGVMZXZlbCgpICogMjU1LCBkaXJlY3Rpb24gPSB0aGlzLmVtYm9zc0RpcmVjdGlvbigpLCBibGVuZCA9IHRoaXMuZW1ib3NzQmxlbmQoKSwgZGlyWSA9IDAsIGRpclggPSAwLCBkYXRhID0gaW1hZ2VEYXRhLmRhdGEsIHcgPSBpbWFnZURhdGEud2lkdGgsIGggPSBpbWFnZURhdGEuaGVpZ2h0LCB3NCA9IHcgKiA0LCB5ID0gaDtcbiAgICBzd2l0Y2ggKGRpcmVjdGlvbikge1xuICAgICAgICBjYXNlICd0b3AtbGVmdCc6XG4gICAgICAgICAgICBkaXJZID0gLTE7XG4gICAgICAgICAgICBkaXJYID0gLTE7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAndG9wJzpcbiAgICAgICAgICAgIGRpclkgPSAtMTtcbiAgICAgICAgICAgIGRpclggPSAwO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3RvcC1yaWdodCc6XG4gICAgICAgICAgICBkaXJZID0gLTE7XG4gICAgICAgICAgICBkaXJYID0gMTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyaWdodCc6XG4gICAgICAgICAgICBkaXJZID0gMDtcbiAgICAgICAgICAgIGRpclggPSAxO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2JvdHRvbS1yaWdodCc6XG4gICAgICAgICAgICBkaXJZID0gMTtcbiAgICAgICAgICAgIGRpclggPSAxO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2JvdHRvbSc6XG4gICAgICAgICAgICBkaXJZID0gMTtcbiAgICAgICAgICAgIGRpclggPSAwO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2JvdHRvbS1sZWZ0JzpcbiAgICAgICAgICAgIGRpclkgPSAxO1xuICAgICAgICAgICAgZGlyWCA9IC0xO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICAgICAgZGlyWSA9IDA7XG4gICAgICAgICAgICBkaXJYID0gLTE7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIFV0aWxfMS5VdGlsLmVycm9yKCdVbmtub3duIGVtYm9zcyBkaXJlY3Rpb246ICcgKyBkaXJlY3Rpb24pO1xuICAgIH1cbiAgICBkbyB7XG4gICAgICAgIGNvbnN0IG9mZnNldFkgPSAoeSAtIDEpICogdzQ7XG4gICAgICAgIGxldCBvdGhlclkgPSBkaXJZO1xuICAgICAgICBpZiAoeSArIG90aGVyWSA8IDEpIHtcbiAgICAgICAgICAgIG90aGVyWSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHkgKyBvdGhlclkgPiBoKSB7XG4gICAgICAgICAgICBvdGhlclkgPSAwO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9mZnNldFlPdGhlciA9ICh5IC0gMSArIG90aGVyWSkgKiB3ICogNDtcbiAgICAgICAgbGV0IHggPSB3O1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBjb25zdCBvZmZzZXQgPSBvZmZzZXRZICsgKHggLSAxKSAqIDQ7XG4gICAgICAgICAgICBsZXQgb3RoZXJYID0gZGlyWDtcbiAgICAgICAgICAgIGlmICh4ICsgb3RoZXJYIDwgMSkge1xuICAgICAgICAgICAgICAgIG90aGVyWCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoeCArIG90aGVyWCA+IHcpIHtcbiAgICAgICAgICAgICAgICBvdGhlclggPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgb2Zmc2V0T3RoZXIgPSBvZmZzZXRZT3RoZXIgKyAoeCAtIDEgKyBvdGhlclgpICogNDtcbiAgICAgICAgICAgIGNvbnN0IGRSID0gZGF0YVtvZmZzZXRdIC0gZGF0YVtvZmZzZXRPdGhlcl07XG4gICAgICAgICAgICBjb25zdCBkRyA9IGRhdGFbb2Zmc2V0ICsgMV0gLSBkYXRhW29mZnNldE90aGVyICsgMV07XG4gICAgICAgICAgICBjb25zdCBkQiA9IGRhdGFbb2Zmc2V0ICsgMl0gLSBkYXRhW29mZnNldE90aGVyICsgMl07XG4gICAgICAgICAgICBsZXQgZGlmID0gZFI7XG4gICAgICAgICAgICBjb25zdCBhYnNEaWYgPSBkaWYgPiAwID8gZGlmIDogLWRpZjtcbiAgICAgICAgICAgIGNvbnN0IGFic0cgPSBkRyA+IDAgPyBkRyA6IC1kRztcbiAgICAgICAgICAgIGNvbnN0IGFic0IgPSBkQiA+IDAgPyBkQiA6IC1kQjtcbiAgICAgICAgICAgIGlmIChhYnNHID4gYWJzRGlmKSB7XG4gICAgICAgICAgICAgICAgZGlmID0gZEc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWJzQiA+IGFic0RpZikge1xuICAgICAgICAgICAgICAgIGRpZiA9IGRCO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGlmICo9IHN0cmVuZ3RoO1xuICAgICAgICAgICAgaWYgKGJsZW5kKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgciA9IGRhdGFbb2Zmc2V0XSArIGRpZjtcbiAgICAgICAgICAgICAgICBjb25zdCBnID0gZGF0YVtvZmZzZXQgKyAxXSArIGRpZjtcbiAgICAgICAgICAgICAgICBjb25zdCBiID0gZGF0YVtvZmZzZXQgKyAyXSArIGRpZjtcbiAgICAgICAgICAgICAgICBkYXRhW29mZnNldF0gPSByID4gMjU1ID8gMjU1IDogciA8IDAgPyAwIDogcjtcbiAgICAgICAgICAgICAgICBkYXRhW29mZnNldCArIDFdID0gZyA+IDI1NSA/IDI1NSA6IGcgPCAwID8gMCA6IGc7XG4gICAgICAgICAgICAgICAgZGF0YVtvZmZzZXQgKyAyXSA9IGIgPiAyNTUgPyAyNTUgOiBiIDwgMCA/IDAgOiBiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IGdyZXkgPSBncmV5TGV2ZWwgLSBkaWY7XG4gICAgICAgICAgICAgICAgaWYgKGdyZXkgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGdyZXkgPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChncmV5ID4gMjU1KSB7XG4gICAgICAgICAgICAgICAgICAgIGdyZXkgPSAyNTU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRhdGFbb2Zmc2V0XSA9IGRhdGFbb2Zmc2V0ICsgMV0gPSBkYXRhW29mZnNldCArIDJdID0gZ3JleTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSB3aGlsZSAoLS14KTtcbiAgICB9IHdoaWxlICgtLXkpO1xufTtcbmV4cG9ydHMuRW1ib3NzID0gRW1ib3NzO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnZW1ib3NzU3RyZW5ndGgnLCAwLjUsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpLCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoTm9kZV8xLk5vZGUsICdlbWJvc3NXaGl0ZUxldmVsJywgMC41LCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSwgRmFjdG9yeV8xLkZhY3RvcnkuYWZ0ZXJTZXRGaWx0ZXIpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnZW1ib3NzRGlyZWN0aW9uJywgJ3RvcC1sZWZ0JywgbnVsbCwgRmFjdG9yeV8xLkZhY3RvcnkuYWZ0ZXJTZXRGaWx0ZXIpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnZW1ib3NzQmxlbmQnLCBmYWxzZSwgbnVsbCwgRmFjdG9yeV8xLkZhY3RvcnkuYWZ0ZXJTZXRGaWx0ZXIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Emboss.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Enhance.js":
/*!***************************************************!*\
  !*** ./node_modules/konva/lib/filters/Enhance.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Enhance = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nfunction remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    let fromRange = fromMax - fromMin, toRange = toMax - toMin, toValue;\n    if (fromRange === 0) {\n        return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n        return toMin;\n    }\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n    return toValue;\n}\nconst Enhance = function (imageData) {\n    let data = imageData.data, nSubPixels = data.length, rMin = data[0], rMax = rMin, r, gMin = data[1], gMax = gMin, g, bMin = data[2], bMax = bMin, b, i;\n    const enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n        return;\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        r = data[i + 0];\n        if (r < rMin) {\n            rMin = r;\n        }\n        else if (r > rMax) {\n            rMax = r;\n        }\n        g = data[i + 1];\n        if (g < gMin) {\n            gMin = g;\n        }\n        else if (g > gMax) {\n            gMax = g;\n        }\n        b = data[i + 2];\n        if (b < bMin) {\n            bMin = b;\n        }\n        else if (b > bMax) {\n            bMax = b;\n        }\n    }\n    if (rMax === rMin) {\n        rMax = 255;\n        rMin = 0;\n    }\n    if (gMax === gMin) {\n        gMax = 255;\n        gMin = 0;\n    }\n    if (bMax === bMin) {\n        bMax = 255;\n        bMin = 0;\n    }\n    let rMid, rGoalMax, rGoalMin, gMid, gGoalMax, gGoalMin, bMid, bGoalMax, bGoalMin;\n    if (enhanceAmount > 0) {\n        rGoalMax = rMax + enhanceAmount * (255 - rMax);\n        rGoalMin = rMin - enhanceAmount * (rMin - 0);\n        gGoalMax = gMax + enhanceAmount * (255 - gMax);\n        gGoalMin = gMin - enhanceAmount * (gMin - 0);\n        bGoalMax = bMax + enhanceAmount * (255 - bMax);\n        bGoalMin = bMin - enhanceAmount * (bMin - 0);\n    }\n    else {\n        rMid = (rMax + rMin) * 0.5;\n        rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n        rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n        gMid = (gMax + gMin) * 0.5;\n        gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n        gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n        bMid = (bMax + bMin) * 0.5;\n        bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n        bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n    for (i = 0; i < nSubPixels; i += 4) {\n        data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n        data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n        data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n    }\n};\nexports.Enhance = Enhance;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'enhance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9FbmhhbmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWU7QUFDZixrQkFBa0IsbUJBQU8sQ0FBQywyRUFBWTtBQUN0QyxlQUFlLG1CQUFPLENBQUMscUVBQVM7QUFDaEMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdCQUFnQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9maWx0ZXJzL0VuaGFuY2UuanM/ZDdhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW5oYW5jZSA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgTm9kZV8xID0gcmVxdWlyZShcIi4uL05vZGVcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmZ1bmN0aW9uIHJlbWFwKGZyb21WYWx1ZSwgZnJvbU1pbiwgZnJvbU1heCwgdG9NaW4sIHRvTWF4KSB7XG4gICAgbGV0IGZyb21SYW5nZSA9IGZyb21NYXggLSBmcm9tTWluLCB0b1JhbmdlID0gdG9NYXggLSB0b01pbiwgdG9WYWx1ZTtcbiAgICBpZiAoZnJvbVJhbmdlID09PSAwKSB7XG4gICAgICAgIHJldHVybiB0b01pbiArIHRvUmFuZ2UgLyAyO1xuICAgIH1cbiAgICBpZiAodG9SYW5nZSA9PT0gMCkge1xuICAgICAgICByZXR1cm4gdG9NaW47XG4gICAgfVxuICAgIHRvVmFsdWUgPSAoZnJvbVZhbHVlIC0gZnJvbU1pbikgLyBmcm9tUmFuZ2U7XG4gICAgdG9WYWx1ZSA9IHRvUmFuZ2UgKiB0b1ZhbHVlICsgdG9NaW47XG4gICAgcmV0dXJuIHRvVmFsdWU7XG59XG5jb25zdCBFbmhhbmNlID0gZnVuY3Rpb24gKGltYWdlRGF0YSkge1xuICAgIGxldCBkYXRhID0gaW1hZ2VEYXRhLmRhdGEsIG5TdWJQaXhlbHMgPSBkYXRhLmxlbmd0aCwgck1pbiA9IGRhdGFbMF0sIHJNYXggPSByTWluLCByLCBnTWluID0gZGF0YVsxXSwgZ01heCA9IGdNaW4sIGcsIGJNaW4gPSBkYXRhWzJdLCBiTWF4ID0gYk1pbiwgYiwgaTtcbiAgICBjb25zdCBlbmhhbmNlQW1vdW50ID0gdGhpcy5lbmhhbmNlKCk7XG4gICAgaWYgKGVuaGFuY2VBbW91bnQgPT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBmb3IgKGkgPSAwOyBpIDwgblN1YlBpeGVsczsgaSArPSA0KSB7XG4gICAgICAgIHIgPSBkYXRhW2kgKyAwXTtcbiAgICAgICAgaWYgKHIgPCByTWluKSB7XG4gICAgICAgICAgICByTWluID0gcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChyID4gck1heCkge1xuICAgICAgICAgICAgck1heCA9IHI7XG4gICAgICAgIH1cbiAgICAgICAgZyA9IGRhdGFbaSArIDFdO1xuICAgICAgICBpZiAoZyA8IGdNaW4pIHtcbiAgICAgICAgICAgIGdNaW4gPSBnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGcgPiBnTWF4KSB7XG4gICAgICAgICAgICBnTWF4ID0gZztcbiAgICAgICAgfVxuICAgICAgICBiID0gZGF0YVtpICsgMl07XG4gICAgICAgIGlmIChiIDwgYk1pbikge1xuICAgICAgICAgICAgYk1pbiA9IGI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYiA+IGJNYXgpIHtcbiAgICAgICAgICAgIGJNYXggPSBiO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChyTWF4ID09PSByTWluKSB7XG4gICAgICAgIHJNYXggPSAyNTU7XG4gICAgICAgIHJNaW4gPSAwO1xuICAgIH1cbiAgICBpZiAoZ01heCA9PT0gZ01pbikge1xuICAgICAgICBnTWF4ID0gMjU1O1xuICAgICAgICBnTWluID0gMDtcbiAgICB9XG4gICAgaWYgKGJNYXggPT09IGJNaW4pIHtcbiAgICAgICAgYk1heCA9IDI1NTtcbiAgICAgICAgYk1pbiA9IDA7XG4gICAgfVxuICAgIGxldCByTWlkLCByR29hbE1heCwgckdvYWxNaW4sIGdNaWQsIGdHb2FsTWF4LCBnR29hbE1pbiwgYk1pZCwgYkdvYWxNYXgsIGJHb2FsTWluO1xuICAgIGlmIChlbmhhbmNlQW1vdW50ID4gMCkge1xuICAgICAgICByR29hbE1heCA9IHJNYXggKyBlbmhhbmNlQW1vdW50ICogKDI1NSAtIHJNYXgpO1xuICAgICAgICByR29hbE1pbiA9IHJNaW4gLSBlbmhhbmNlQW1vdW50ICogKHJNaW4gLSAwKTtcbiAgICAgICAgZ0dvYWxNYXggPSBnTWF4ICsgZW5oYW5jZUFtb3VudCAqICgyNTUgLSBnTWF4KTtcbiAgICAgICAgZ0dvYWxNaW4gPSBnTWluIC0gZW5oYW5jZUFtb3VudCAqIChnTWluIC0gMCk7XG4gICAgICAgIGJHb2FsTWF4ID0gYk1heCArIGVuaGFuY2VBbW91bnQgKiAoMjU1IC0gYk1heCk7XG4gICAgICAgIGJHb2FsTWluID0gYk1pbiAtIGVuaGFuY2VBbW91bnQgKiAoYk1pbiAtIDApO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgck1pZCA9IChyTWF4ICsgck1pbikgKiAwLjU7XG4gICAgICAgIHJHb2FsTWF4ID0gck1heCArIGVuaGFuY2VBbW91bnQgKiAock1heCAtIHJNaWQpO1xuICAgICAgICByR29hbE1pbiA9IHJNaW4gKyBlbmhhbmNlQW1vdW50ICogKHJNaW4gLSByTWlkKTtcbiAgICAgICAgZ01pZCA9IChnTWF4ICsgZ01pbikgKiAwLjU7XG4gICAgICAgIGdHb2FsTWF4ID0gZ01heCArIGVuaGFuY2VBbW91bnQgKiAoZ01heCAtIGdNaWQpO1xuICAgICAgICBnR29hbE1pbiA9IGdNaW4gKyBlbmhhbmNlQW1vdW50ICogKGdNaW4gLSBnTWlkKTtcbiAgICAgICAgYk1pZCA9IChiTWF4ICsgYk1pbikgKiAwLjU7XG4gICAgICAgIGJHb2FsTWF4ID0gYk1heCArIGVuaGFuY2VBbW91bnQgKiAoYk1heCAtIGJNaWQpO1xuICAgICAgICBiR29hbE1pbiA9IGJNaW4gKyBlbmhhbmNlQW1vdW50ICogKGJNaW4gLSBiTWlkKTtcbiAgICB9XG4gICAgZm9yIChpID0gMDsgaSA8IG5TdWJQaXhlbHM7IGkgKz0gNCkge1xuICAgICAgICBkYXRhW2kgKyAwXSA9IHJlbWFwKGRhdGFbaSArIDBdLCByTWluLCByTWF4LCByR29hbE1pbiwgckdvYWxNYXgpO1xuICAgICAgICBkYXRhW2kgKyAxXSA9IHJlbWFwKGRhdGFbaSArIDFdLCBnTWluLCBnTWF4LCBnR29hbE1pbiwgZ0dvYWxNYXgpO1xuICAgICAgICBkYXRhW2kgKyAyXSA9IHJlbWFwKGRhdGFbaSArIDJdLCBiTWluLCBiTWF4LCBiR29hbE1pbiwgYkdvYWxNYXgpO1xuICAgIH1cbn07XG5leHBvcnRzLkVuaGFuY2UgPSBFbmhhbmNlO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnZW5oYW5jZScsIDAsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpLCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Enhance.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Grayscale.js":
/*!*****************************************************!*\
  !*** ./node_modules/konva/lib/filters/Grayscale.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Grayscale = void 0;\nconst Grayscale = function (imageData) {\n    let data = imageData.data, len = data.length, i, brightness;\n    for (i = 0; i < len; i += 4) {\n        brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n        data[i] = brightness;\n        data[i + 1] = brightness;\n        data[i + 2] = brightness;\n    }\n};\nexports.Grayscale = Grayscale;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9HcmF5c2NhbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9maWx0ZXJzL0dyYXlzY2FsZS5qcz84NzkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HcmF5c2NhbGUgPSB2b2lkIDA7XG5jb25zdCBHcmF5c2NhbGUgPSBmdW5jdGlvbiAoaW1hZ2VEYXRhKSB7XG4gICAgbGV0IGRhdGEgPSBpbWFnZURhdGEuZGF0YSwgbGVuID0gZGF0YS5sZW5ndGgsIGksIGJyaWdodG5lc3M7XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgICAgIGJyaWdodG5lc3MgPSAwLjM0ICogZGF0YVtpXSArIDAuNSAqIGRhdGFbaSArIDFdICsgMC4xNiAqIGRhdGFbaSArIDJdO1xuICAgICAgICBkYXRhW2ldID0gYnJpZ2h0bmVzcztcbiAgICAgICAgZGF0YVtpICsgMV0gPSBicmlnaHRuZXNzO1xuICAgICAgICBkYXRhW2kgKyAyXSA9IGJyaWdodG5lc3M7XG4gICAgfVxufTtcbmV4cG9ydHMuR3JheXNjYWxlID0gR3JheXNjYWxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Grayscale.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/HSL.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/filters/HSL.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HSL = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'luminance', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nconst HSL = function (imageData) {\n    let data = imageData.data, nPixels = data.length, v = 1, s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360, l = this.luminance() * 127, i;\n    const vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    const rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    const gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    const br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    let r, g, b, a;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b + l;\n        data[i + 1] = gr * r + gg * g + gb * b + l;\n        data[i + 2] = br * r + bg * g + bb * b + l;\n        data[i + 3] = a;\n    }\n};\nexports.HSL = HSL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9IU0wuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVztBQUNYLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixhQUFhO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL2ZpbHRlcnMvSFNMLmpzP2FmN2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhTTCA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgTm9kZV8xID0gcmVxdWlyZShcIi4uL05vZGVcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihOb2RlXzEuTm9kZSwgJ2h1ZScsIDAsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpLCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoTm9kZV8xLk5vZGUsICdzYXR1cmF0aW9uJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCksIEZhY3RvcnlfMS5GYWN0b3J5LmFmdGVyU2V0RmlsdGVyKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihOb2RlXzEuTm9kZSwgJ2x1bWluYW5jZScsIDAsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpLCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG5jb25zdCBIU0wgPSBmdW5jdGlvbiAoaW1hZ2VEYXRhKSB7XG4gICAgbGV0IGRhdGEgPSBpbWFnZURhdGEuZGF0YSwgblBpeGVscyA9IGRhdGEubGVuZ3RoLCB2ID0gMSwgcyA9IE1hdGgucG93KDIsIHRoaXMuc2F0dXJhdGlvbigpKSwgaCA9IE1hdGguYWJzKHRoaXMuaHVlKCkgKyAzNjApICUgMzYwLCBsID0gdGhpcy5sdW1pbmFuY2UoKSAqIDEyNywgaTtcbiAgICBjb25zdCB2c3UgPSB2ICogcyAqIE1hdGguY29zKChoICogTWF0aC5QSSkgLyAxODApLCB2c3cgPSB2ICogcyAqIE1hdGguc2luKChoICogTWF0aC5QSSkgLyAxODApO1xuICAgIGNvbnN0IHJyID0gMC4yOTkgKiB2ICsgMC43MDEgKiB2c3UgKyAwLjE2NyAqIHZzdywgcmcgPSAwLjU4NyAqIHYgLSAwLjU4NyAqIHZzdSArIDAuMzMgKiB2c3csIHJiID0gMC4xMTQgKiB2IC0gMC4xMTQgKiB2c3UgLSAwLjQ5NyAqIHZzdztcbiAgICBjb25zdCBnciA9IDAuMjk5ICogdiAtIDAuMjk5ICogdnN1IC0gMC4zMjggKiB2c3csIGdnID0gMC41ODcgKiB2ICsgMC40MTMgKiB2c3UgKyAwLjAzNSAqIHZzdywgZ2IgPSAwLjExNCAqIHYgLSAwLjExNCAqIHZzdSArIDAuMjkzICogdnN3O1xuICAgIGNvbnN0IGJyID0gMC4yOTkgKiB2IC0gMC4zICogdnN1ICsgMS4yNSAqIHZzdywgYmcgPSAwLjU4NyAqIHYgLSAwLjU4NiAqIHZzdSAtIDEuMDUgKiB2c3csIGJiID0gMC4xMTQgKiB2ICsgMC44ODYgKiB2c3UgLSAwLjIgKiB2c3c7XG4gICAgbGV0IHIsIGcsIGIsIGE7XG4gICAgZm9yIChpID0gMDsgaSA8IG5QaXhlbHM7IGkgKz0gNCkge1xuICAgICAgICByID0gZGF0YVtpICsgMF07XG4gICAgICAgIGcgPSBkYXRhW2kgKyAxXTtcbiAgICAgICAgYiA9IGRhdGFbaSArIDJdO1xuICAgICAgICBhID0gZGF0YVtpICsgM107XG4gICAgICAgIGRhdGFbaSArIDBdID0gcnIgKiByICsgcmcgKiBnICsgcmIgKiBiICsgbDtcbiAgICAgICAgZGF0YVtpICsgMV0gPSBnciAqIHIgKyBnZyAqIGcgKyBnYiAqIGIgKyBsO1xuICAgICAgICBkYXRhW2kgKyAyXSA9IGJyICogciArIGJnICogZyArIGJiICogYiArIGw7XG4gICAgICAgIGRhdGFbaSArIDNdID0gYTtcbiAgICB9XG59O1xuZXhwb3J0cy5IU0wgPSBIU0w7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/HSL.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/HSV.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/filters/HSV.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HSV = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst HSV = function (imageData) {\n    const data = imageData.data, nPixels = data.length, v = Math.pow(2, this.value()), s = Math.pow(2, this.saturation()), h = Math.abs(this.hue() + 360) % 360;\n    const vsu = v * s * Math.cos((h * Math.PI) / 180), vsw = v * s * Math.sin((h * Math.PI) / 180);\n    const rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw, rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw, rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    const gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw, gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw, gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    const br = 0.299 * v - 0.3 * vsu + 1.25 * vsw, bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw, bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n    let r, g, b, a;\n    for (let i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        data[i + 0] = rr * r + rg * g + rb * b;\n        data[i + 1] = gr * r + gg * g + gb * b;\n        data[i + 2] = br * r + bg * g + bb * b;\n        data[i + 3] = a;\n    }\n};\nexports.HSV = HSV;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'hue', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'saturation', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'value', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9IU1YuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVztBQUNYLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixhQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL2ZpbHRlcnMvSFNWLmpzPzEzMDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhTViA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgTm9kZV8xID0gcmVxdWlyZShcIi4uL05vZGVcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmNvbnN0IEhTViA9IGZ1bmN0aW9uIChpbWFnZURhdGEpIHtcbiAgICBjb25zdCBkYXRhID0gaW1hZ2VEYXRhLmRhdGEsIG5QaXhlbHMgPSBkYXRhLmxlbmd0aCwgdiA9IE1hdGgucG93KDIsIHRoaXMudmFsdWUoKSksIHMgPSBNYXRoLnBvdygyLCB0aGlzLnNhdHVyYXRpb24oKSksIGggPSBNYXRoLmFicyh0aGlzLmh1ZSgpICsgMzYwKSAlIDM2MDtcbiAgICBjb25zdCB2c3UgPSB2ICogcyAqIE1hdGguY29zKChoICogTWF0aC5QSSkgLyAxODApLCB2c3cgPSB2ICogcyAqIE1hdGguc2luKChoICogTWF0aC5QSSkgLyAxODApO1xuICAgIGNvbnN0IHJyID0gMC4yOTkgKiB2ICsgMC43MDEgKiB2c3UgKyAwLjE2NyAqIHZzdywgcmcgPSAwLjU4NyAqIHYgLSAwLjU4NyAqIHZzdSArIDAuMzMgKiB2c3csIHJiID0gMC4xMTQgKiB2IC0gMC4xMTQgKiB2c3UgLSAwLjQ5NyAqIHZzdztcbiAgICBjb25zdCBnciA9IDAuMjk5ICogdiAtIDAuMjk5ICogdnN1IC0gMC4zMjggKiB2c3csIGdnID0gMC41ODcgKiB2ICsgMC40MTMgKiB2c3UgKyAwLjAzNSAqIHZzdywgZ2IgPSAwLjExNCAqIHYgLSAwLjExNCAqIHZzdSArIDAuMjkzICogdnN3O1xuICAgIGNvbnN0IGJyID0gMC4yOTkgKiB2IC0gMC4zICogdnN1ICsgMS4yNSAqIHZzdywgYmcgPSAwLjU4NyAqIHYgLSAwLjU4NiAqIHZzdSAtIDEuMDUgKiB2c3csIGJiID0gMC4xMTQgKiB2ICsgMC44ODYgKiB2c3UgLSAwLjIgKiB2c3c7XG4gICAgbGV0IHIsIGcsIGIsIGE7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuUGl4ZWxzOyBpICs9IDQpIHtcbiAgICAgICAgciA9IGRhdGFbaSArIDBdO1xuICAgICAgICBnID0gZGF0YVtpICsgMV07XG4gICAgICAgIGIgPSBkYXRhW2kgKyAyXTtcbiAgICAgICAgYSA9IGRhdGFbaSArIDNdO1xuICAgICAgICBkYXRhW2kgKyAwXSA9IHJyICogciArIHJnICogZyArIHJiICogYjtcbiAgICAgICAgZGF0YVtpICsgMV0gPSBnciAqIHIgKyBnZyAqIGcgKyBnYiAqIGI7XG4gICAgICAgIGRhdGFbaSArIDJdID0gYnIgKiByICsgYmcgKiBnICsgYmIgKiBiO1xuICAgICAgICBkYXRhW2kgKyAzXSA9IGE7XG4gICAgfVxufTtcbmV4cG9ydHMuSFNWID0gSFNWO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnaHVlJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCksIEZhY3RvcnlfMS5GYWN0b3J5LmFmdGVyU2V0RmlsdGVyKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihOb2RlXzEuTm9kZSwgJ3NhdHVyYXRpb24nLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSwgRmFjdG9yeV8xLkZhY3RvcnkuYWZ0ZXJTZXRGaWx0ZXIpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAndmFsdWUnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSwgRmFjdG9yeV8xLkZhY3RvcnkuYWZ0ZXJTZXRGaWx0ZXIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/HSV.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Invert.js":
/*!**************************************************!*\
  !*** ./node_modules/konva/lib/filters/Invert.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Invert = void 0;\nconst Invert = function (imageData) {\n    let data = imageData.data, len = data.length, i;\n    for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n    }\n};\nexports.Invert = Invert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9JbnZlcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkO0FBQ0E7QUFDQSxnQkFBZ0IsU0FBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL2ZpbHRlcnMvSW52ZXJ0LmpzP2IxMTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmVydCA9IHZvaWQgMDtcbmNvbnN0IEludmVydCA9IGZ1bmN0aW9uIChpbWFnZURhdGEpIHtcbiAgICBsZXQgZGF0YSA9IGltYWdlRGF0YS5kYXRhLCBsZW4gPSBkYXRhLmxlbmd0aCwgaTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDQpIHtcbiAgICAgICAgZGF0YVtpXSA9IDI1NSAtIGRhdGFbaV07XG4gICAgICAgIGRhdGFbaSArIDFdID0gMjU1IC0gZGF0YVtpICsgMV07XG4gICAgICAgIGRhdGFbaSArIDJdID0gMjU1IC0gZGF0YVtpICsgMl07XG4gICAgfVxufTtcbmV4cG9ydHMuSW52ZXJ0ID0gSW52ZXJ0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Invert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Kaleidoscope.js":
/*!********************************************************!*\
  !*** ./node_modules/konva/lib/filters/Kaleidoscope.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Kaleidoscope = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst ToPolar = function (src, dst, opt) {\n    let srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, r = 0, g = 0, b = 0, a = 0;\n    let rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    let rSize = ySize, tSize = xSize, radius, theta;\n    let conversion = ((360 / tSize) * Math.PI) / 180, sin, cos;\n    for (theta = 0; theta < tSize; theta += 1) {\n        sin = Math.sin(theta * conversion);\n        cos = Math.cos(theta * conversion);\n        for (radius = 0; radius < rSize; radius += 1) {\n            x = Math.floor(xMid + ((rMax * radius) / rSize) * cos);\n            y = Math.floor(yMid + ((rMax * radius) / rSize) * sin);\n            i = (y * xSize + x) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (theta + radius * xSize) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nconst FromPolar = function (src, dst, opt) {\n    let srcPixels = src.data, dstPixels = dst.data, xSize = src.width, ySize = src.height, xMid = opt.polarCenterX || xSize / 2, yMid = opt.polarCenterY || ySize / 2, i, x, y, dx, dy, r = 0, g = 0, b = 0, a = 0;\n    let rad, rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n    let rSize = ySize, tSize = xSize, radius, theta, phaseShift = opt.polarRotation || 0;\n    let x1, y1;\n    for (x = 0; x < xSize; x += 1) {\n        for (y = 0; y < ySize; y += 1) {\n            dx = x - xMid;\n            dy = y - yMid;\n            radius = (Math.sqrt(dx * dx + dy * dy) * rSize) / rMax;\n            theta = ((Math.atan2(dy, dx) * 180) / Math.PI + 360 + phaseShift) % 360;\n            theta = (theta * tSize) / 360;\n            x1 = Math.floor(theta);\n            y1 = Math.floor(radius);\n            i = (y1 * xSize + x1) * 4;\n            r = srcPixels[i + 0];\n            g = srcPixels[i + 1];\n            b = srcPixels[i + 2];\n            a = srcPixels[i + 3];\n            i = (y * xSize + x) * 4;\n            dstPixels[i + 0] = r;\n            dstPixels[i + 1] = g;\n            dstPixels[i + 2] = b;\n            dstPixels[i + 3] = a;\n        }\n    }\n};\nconst Kaleidoscope = function (imageData) {\n    const xSize = imageData.width, ySize = imageData.height;\n    let x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    let power = Math.round(this.kaleidoscopePower());\n    const angle = Math.round(this.kaleidoscopeAngle());\n    const offset = Math.floor((xSize * (angle % 360)) / 360);\n    if (power < 1) {\n        return;\n    }\n    const tempCanvas = Util_1.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    const scratchData = tempCanvas\n        .getContext('2d')\n        .getImageData(0, 0, xSize, ySize);\n    Util_1.Util.releaseCanvas(tempCanvas);\n    ToPolar(imageData, scratchData, {\n        polarCenterX: xSize / 2,\n        polarCenterY: ySize / 2,\n    });\n    let minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n        minSectionSize = minSectionSize * 2;\n        power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    let sectionSize = minSectionSize;\n    let xStart = 0, xEnd = sectionSize, xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n        xStart = sectionSize;\n        xEnd = 0;\n        xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n        for (x = xStart; x !== xEnd; x += xDelta) {\n            xoff = Math.round(x + offset) % xSize;\n            srcPos = (xSize * y + xoff) * 4;\n            r = scratchData.data[srcPos + 0];\n            g = scratchData.data[srcPos + 1];\n            b = scratchData.data[srcPos + 2];\n            a = scratchData.data[srcPos + 3];\n            dstPos = (xSize * y + x) * 4;\n            scratchData.data[dstPos + 0] = r;\n            scratchData.data[dstPos + 1] = g;\n            scratchData.data[dstPos + 2] = b;\n            scratchData.data[dstPos + 3] = a;\n        }\n    }\n    for (y = 0; y < ySize; y += 1) {\n        sectionSize = Math.floor(minSectionSize);\n        for (i = 0; i < power; i += 1) {\n            for (x = 0; x < sectionSize + 1; x += 1) {\n                srcPos = (xSize * y + x) * 4;\n                r = scratchData.data[srcPos + 0];\n                g = scratchData.data[srcPos + 1];\n                b = scratchData.data[srcPos + 2];\n                a = scratchData.data[srcPos + 3];\n                dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n                scratchData.data[dstPos + 0] = r;\n                scratchData.data[dstPos + 1] = g;\n                scratchData.data[dstPos + 2] = b;\n                scratchData.data[dstPos + 3] = a;\n            }\n            sectionSize *= 2;\n        }\n    }\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n};\nexports.Kaleidoscope = Kaleidoscope;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopePower', 2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'kaleidoscopeAngle', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Kaleidoscope.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Mask.js":
/*!************************************************!*\
  !*** ./node_modules/konva/lib/filters/Mask.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Mask = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nfunction pixelAt(idata, x, y) {\n    let idx = (y * idata.width + x) * 4;\n    const d = [];\n    d.push(idata.data[idx++], idata.data[idx++], idata.data[idx++], idata.data[idx++]);\n    return d;\n}\nfunction rgbDistance(p1, p2) {\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2));\n}\nfunction rgbMean(pTab) {\n    const m = [0, 0, 0];\n    for (let i = 0; i < pTab.length; i++) {\n        m[0] += pTab[i][0];\n        m[1] += pTab[i][1];\n        m[2] += pTab[i][2];\n    }\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n    return m;\n}\nfunction backgroundMask(idata, threshold) {\n    const rgbv_no = pixelAt(idata, 0, 0);\n    const rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    const rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    const rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n    const thres = threshold || 10;\n    if (rgbDistance(rgbv_no, rgbv_ne) < thres &&\n        rgbDistance(rgbv_ne, rgbv_se) < thres &&\n        rgbDistance(rgbv_se, rgbv_so) < thres &&\n        rgbDistance(rgbv_so, rgbv_no) < thres) {\n        const mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n        const mask = [];\n        for (let i = 0; i < idata.width * idata.height; i++) {\n            const d = rgbDistance(mean, [\n                idata.data[i * 4],\n                idata.data[i * 4 + 1],\n                idata.data[i * 4 + 2],\n            ]);\n            mask[i] = d < thres ? 0 : 255;\n        }\n        return mask;\n    }\n}\nfunction applyMask(idata, mask) {\n    for (let i = 0; i < idata.width * idata.height; i++) {\n        idata.data[4 * i + 3] = mask[i];\n    }\n}\nfunction erodeMask(mask, sw, sh) {\n    const weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    const side = Math.round(Math.sqrt(weights.length));\n    const halfSide = Math.floor(side / 2);\n    const maskResult = [];\n    for (let y = 0; y < sh; y++) {\n        for (let x = 0; x < sw; x++) {\n            const so = y * sw + x;\n            let a = 0;\n            for (let cy = 0; cy < side; cy++) {\n                for (let cx = 0; cx < side; cx++) {\n                    const scy = y + cy - halfSide;\n                    const scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        const srcOff = scy * sw + scx;\n                        const wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a === 255 * 8 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction dilateMask(mask, sw, sh) {\n    const weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    const side = Math.round(Math.sqrt(weights.length));\n    const halfSide = Math.floor(side / 2);\n    const maskResult = [];\n    for (let y = 0; y < sh; y++) {\n        for (let x = 0; x < sw; x++) {\n            const so = y * sw + x;\n            let a = 0;\n            for (let cy = 0; cy < side; cy++) {\n                for (let cx = 0; cx < side; cx++) {\n                    const scy = y + cy - halfSide;\n                    const scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        const srcOff = scy * sw + scx;\n                        const wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a >= 255 * 4 ? 255 : 0;\n        }\n    }\n    return maskResult;\n}\nfunction smoothEdgeMask(mask, sw, sh) {\n    const weights = [1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9, 1 / 9];\n    const side = Math.round(Math.sqrt(weights.length));\n    const halfSide = Math.floor(side / 2);\n    const maskResult = [];\n    for (let y = 0; y < sh; y++) {\n        for (let x = 0; x < sw; x++) {\n            const so = y * sw + x;\n            let a = 0;\n            for (let cy = 0; cy < side; cy++) {\n                for (let cx = 0; cx < side; cx++) {\n                    const scy = y + cy - halfSide;\n                    const scx = x + cx - halfSide;\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n                        const srcOff = scy * sw + scx;\n                        const wt = weights[cy * side + cx];\n                        a += mask[srcOff] * wt;\n                    }\n                }\n            }\n            maskResult[so] = a;\n        }\n    }\n    return maskResult;\n}\nconst Mask = function (imageData) {\n    let threshold = this.threshold(), mask = backgroundMask(imageData, threshold);\n    if (mask) {\n        mask = erodeMask(mask, imageData.width, imageData.height);\n        mask = dilateMask(mask, imageData.width, imageData.height);\n        mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n        applyMask(imageData, mask);\n    }\n    return imageData;\n};\nexports.Mask = Mask;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Mask.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Noise.js":
/*!*************************************************!*\
  !*** ./node_modules/konva/lib/filters/Noise.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Noise = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Noise = function (imageData) {\n    const amount = this.noise() * 255, data = imageData.data, nPixels = data.length, half = amount / 2;\n    for (let i = 0; i < nPixels; i += 4) {\n        data[i + 0] += half - 2 * half * Math.random();\n        data[i + 1] += half - 2 * half * Math.random();\n        data[i + 2] += half - 2 * half * Math.random();\n    }\n};\nexports.Noise = Noise;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'noise', 0.2, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9Ob2lzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2Isa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLHFFQUFTO0FBQ2hDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFlO0FBQzVDO0FBQ0E7QUFDQSxvQkFBb0IsYUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9Ob2lzZS5qcz9kOWViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob2lzZSA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgTm9kZV8xID0gcmVxdWlyZShcIi4uL05vZGVcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmNvbnN0IE5vaXNlID0gZnVuY3Rpb24gKGltYWdlRGF0YSkge1xuICAgIGNvbnN0IGFtb3VudCA9IHRoaXMubm9pc2UoKSAqIDI1NSwgZGF0YSA9IGltYWdlRGF0YS5kYXRhLCBuUGl4ZWxzID0gZGF0YS5sZW5ndGgsIGhhbGYgPSBhbW91bnQgLyAyO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgblBpeGVsczsgaSArPSA0KSB7XG4gICAgICAgIGRhdGFbaSArIDBdICs9IGhhbGYgLSAyICogaGFsZiAqIE1hdGgucmFuZG9tKCk7XG4gICAgICAgIGRhdGFbaSArIDFdICs9IGhhbGYgLSAyICogaGFsZiAqIE1hdGgucmFuZG9tKCk7XG4gICAgICAgIGRhdGFbaSArIDJdICs9IGhhbGYgLSAyICogaGFsZiAqIE1hdGgucmFuZG9tKCk7XG4gICAgfVxufTtcbmV4cG9ydHMuTm9pc2UgPSBOb2lzZTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihOb2RlXzEuTm9kZSwgJ25vaXNlJywgMC4yLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSwgRmFjdG9yeV8xLkZhY3RvcnkuYWZ0ZXJTZXRGaWx0ZXIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Noise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Pixelate.js":
/*!****************************************************!*\
  !*** ./node_modules/konva/lib/filters/Pixelate.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pixelate = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Pixelate = function (imageData) {\n    let pixelSize = Math.ceil(this.pixelSize()), width = imageData.width, height = imageData.height, x, y, i, red, green, blue, alpha, nBinsX = Math.ceil(width / pixelSize), nBinsY = Math.ceil(height / pixelSize), xBinStart, xBinEnd, yBinStart, yBinEnd, xBin, yBin, pixelsInBin, data = imageData.data;\n    if (pixelSize <= 0) {\n        Util_1.Util.error('pixelSize value can not be <= 0');\n        return;\n    }\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n        for (yBin = 0; yBin < nBinsY; yBin += 1) {\n            red = 0;\n            green = 0;\n            blue = 0;\n            alpha = 0;\n            xBinStart = xBin * pixelSize;\n            xBinEnd = xBinStart + pixelSize;\n            yBinStart = yBin * pixelSize;\n            yBinEnd = yBinStart + pixelSize;\n            pixelsInBin = 0;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    red += data[i + 0];\n                    green += data[i + 1];\n                    blue += data[i + 2];\n                    alpha += data[i + 3];\n                    pixelsInBin += 1;\n                }\n            }\n            red = red / pixelsInBin;\n            green = green / pixelsInBin;\n            blue = blue / pixelsInBin;\n            alpha = alpha / pixelsInBin;\n            for (x = xBinStart; x < xBinEnd; x += 1) {\n                if (x >= width) {\n                    continue;\n                }\n                for (y = yBinStart; y < yBinEnd; y += 1) {\n                    if (y >= height) {\n                        continue;\n                    }\n                    i = (width * y + x) * 4;\n                    data[i + 0] = red;\n                    data[i + 1] = green;\n                    data[i + 2] = blue;\n                    data[i + 3] = alpha;\n                }\n            }\n        }\n    }\n};\nexports.Pixelate = Pixelate;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'pixelSize', 8, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9QaXhlbGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZUFBZSxtQkFBTyxDQUFDLHFFQUFTO0FBQ2hDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZUFBZTtBQUNsQyx1QkFBdUIsZUFBZTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsYUFBYTtBQUM3QztBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsYUFBYTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsYUFBYTtBQUM3QztBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsYUFBYTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL2ZpbHRlcnMvUGl4ZWxhdGUuanM/ZTRlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGl4ZWxhdGUgPSB2b2lkIDA7XG5jb25zdCBGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi4vRmFjdG9yeVwiKTtcbmNvbnN0IFV0aWxfMSA9IHJlcXVpcmUoXCIuLi9VdGlsXCIpO1xuY29uc3QgTm9kZV8xID0gcmVxdWlyZShcIi4uL05vZGVcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmNvbnN0IFBpeGVsYXRlID0gZnVuY3Rpb24gKGltYWdlRGF0YSkge1xuICAgIGxldCBwaXhlbFNpemUgPSBNYXRoLmNlaWwodGhpcy5waXhlbFNpemUoKSksIHdpZHRoID0gaW1hZ2VEYXRhLndpZHRoLCBoZWlnaHQgPSBpbWFnZURhdGEuaGVpZ2h0LCB4LCB5LCBpLCByZWQsIGdyZWVuLCBibHVlLCBhbHBoYSwgbkJpbnNYID0gTWF0aC5jZWlsKHdpZHRoIC8gcGl4ZWxTaXplKSwgbkJpbnNZID0gTWF0aC5jZWlsKGhlaWdodCAvIHBpeGVsU2l6ZSksIHhCaW5TdGFydCwgeEJpbkVuZCwgeUJpblN0YXJ0LCB5QmluRW5kLCB4QmluLCB5QmluLCBwaXhlbHNJbkJpbiwgZGF0YSA9IGltYWdlRGF0YS5kYXRhO1xuICAgIGlmIChwaXhlbFNpemUgPD0gMCkge1xuICAgICAgICBVdGlsXzEuVXRpbC5lcnJvcigncGl4ZWxTaXplIHZhbHVlIGNhbiBub3QgYmUgPD0gMCcpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAoeEJpbiA9IDA7IHhCaW4gPCBuQmluc1g7IHhCaW4gKz0gMSkge1xuICAgICAgICBmb3IgKHlCaW4gPSAwOyB5QmluIDwgbkJpbnNZOyB5QmluICs9IDEpIHtcbiAgICAgICAgICAgIHJlZCA9IDA7XG4gICAgICAgICAgICBncmVlbiA9IDA7XG4gICAgICAgICAgICBibHVlID0gMDtcbiAgICAgICAgICAgIGFscGhhID0gMDtcbiAgICAgICAgICAgIHhCaW5TdGFydCA9IHhCaW4gKiBwaXhlbFNpemU7XG4gICAgICAgICAgICB4QmluRW5kID0geEJpblN0YXJ0ICsgcGl4ZWxTaXplO1xuICAgICAgICAgICAgeUJpblN0YXJ0ID0geUJpbiAqIHBpeGVsU2l6ZTtcbiAgICAgICAgICAgIHlCaW5FbmQgPSB5QmluU3RhcnQgKyBwaXhlbFNpemU7XG4gICAgICAgICAgICBwaXhlbHNJbkJpbiA9IDA7XG4gICAgICAgICAgICBmb3IgKHggPSB4QmluU3RhcnQ7IHggPCB4QmluRW5kOyB4ICs9IDEpIHtcbiAgICAgICAgICAgICAgICBpZiAoeCA+PSB3aWR0aCkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZm9yICh5ID0geUJpblN0YXJ0OyB5IDwgeUJpbkVuZDsgeSArPSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh5ID49IGhlaWdodCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaSA9ICh3aWR0aCAqIHkgKyB4KSAqIDQ7XG4gICAgICAgICAgICAgICAgICAgIHJlZCArPSBkYXRhW2kgKyAwXTtcbiAgICAgICAgICAgICAgICAgICAgZ3JlZW4gKz0gZGF0YVtpICsgMV07XG4gICAgICAgICAgICAgICAgICAgIGJsdWUgKz0gZGF0YVtpICsgMl07XG4gICAgICAgICAgICAgICAgICAgIGFscGhhICs9IGRhdGFbaSArIDNdO1xuICAgICAgICAgICAgICAgICAgICBwaXhlbHNJbkJpbiArPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlZCA9IHJlZCAvIHBpeGVsc0luQmluO1xuICAgICAgICAgICAgZ3JlZW4gPSBncmVlbiAvIHBpeGVsc0luQmluO1xuICAgICAgICAgICAgYmx1ZSA9IGJsdWUgLyBwaXhlbHNJbkJpbjtcbiAgICAgICAgICAgIGFscGhhID0gYWxwaGEgLyBwaXhlbHNJbkJpbjtcbiAgICAgICAgICAgIGZvciAoeCA9IHhCaW5TdGFydDsgeCA8IHhCaW5FbmQ7IHggKz0gMSkge1xuICAgICAgICAgICAgICAgIGlmICh4ID49IHdpZHRoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKHkgPSB5QmluU3RhcnQ7IHkgPCB5QmluRW5kOyB5ICs9IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHkgPj0gaGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpID0gKHdpZHRoICogeSArIHgpICogNDtcbiAgICAgICAgICAgICAgICAgICAgZGF0YVtpICsgMF0gPSByZWQ7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFbaSArIDFdID0gZ3JlZW47XG4gICAgICAgICAgICAgICAgICAgIGRhdGFbaSArIDJdID0gYmx1ZTtcbiAgICAgICAgICAgICAgICAgICAgZGF0YVtpICsgM10gPSBhbHBoYTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuZXhwb3J0cy5QaXhlbGF0ZSA9IFBpeGVsYXRlO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAncGl4ZWxTaXplJywgOCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCksIEZhY3RvcnlfMS5GYWN0b3J5LmFmdGVyU2V0RmlsdGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Pixelate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Posterize.js":
/*!*****************************************************!*\
  !*** ./node_modules/konva/lib/filters/Posterize.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Posterize = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Posterize = function (imageData) {\n    let levels = Math.round(this.levels() * 254) + 1, data = imageData.data, len = data.length, scale = 255 / levels, i;\n    for (i = 0; i < len; i += 1) {\n        data[i] = Math.floor(data[i] / scale) * scale;\n    }\n};\nexports.Posterize = Posterize;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'levels', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9Qb3N0ZXJpemUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QztBQUNBO0FBQ0EsZ0JBQWdCLFNBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9Qb3N0ZXJpemUuanM/YTQyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9zdGVyaXplID0gdm9pZCAwO1xuY29uc3QgRmFjdG9yeV8xID0gcmVxdWlyZShcIi4uL0ZhY3RvcnlcIik7XG5jb25zdCBOb2RlXzEgPSByZXF1aXJlKFwiLi4vTm9kZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgUG9zdGVyaXplID0gZnVuY3Rpb24gKGltYWdlRGF0YSkge1xuICAgIGxldCBsZXZlbHMgPSBNYXRoLnJvdW5kKHRoaXMubGV2ZWxzKCkgKiAyNTQpICsgMSwgZGF0YSA9IGltYWdlRGF0YS5kYXRhLCBsZW4gPSBkYXRhLmxlbmd0aCwgc2NhbGUgPSAyNTUgLyBsZXZlbHMsIGk7XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgICAgIGRhdGFbaV0gPSBNYXRoLmZsb29yKGRhdGFbaV0gLyBzY2FsZSkgKiBzY2FsZTtcbiAgICB9XG59O1xuZXhwb3J0cy5Qb3N0ZXJpemUgPSBQb3N0ZXJpemU7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoTm9kZV8xLk5vZGUsICdsZXZlbHMnLCAwLjUsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpLCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Posterize.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/RGB.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/filters/RGB.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RGB = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst RGB = function (imageData) {\n    let data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), i, brightness;\n    for (i = 0; i < nPixels; i += 4) {\n        brightness =\n            (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n        data[i] = brightness * red;\n        data[i + 1] = brightness * green;\n        data[i + 2] = brightness * blue;\n        data[i + 3] = data[i + 3];\n    }\n};\nexports.RGB = RGB;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9SR0IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVztBQUNYLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QztBQUNBO0FBQ0EsZ0JBQWdCLGFBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9maWx0ZXJzL1JHQi5qcz81Y2EzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SR0IgPSB2b2lkIDA7XG5jb25zdCBGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi4vRmFjdG9yeVwiKTtcbmNvbnN0IE5vZGVfMSA9IHJlcXVpcmUoXCIuLi9Ob2RlXCIpO1xuY29uc3QgVmFsaWRhdG9yc18xID0gcmVxdWlyZShcIi4uL1ZhbGlkYXRvcnNcIik7XG5jb25zdCBSR0IgPSBmdW5jdGlvbiAoaW1hZ2VEYXRhKSB7XG4gICAgbGV0IGRhdGEgPSBpbWFnZURhdGEuZGF0YSwgblBpeGVscyA9IGRhdGEubGVuZ3RoLCByZWQgPSB0aGlzLnJlZCgpLCBncmVlbiA9IHRoaXMuZ3JlZW4oKSwgYmx1ZSA9IHRoaXMuYmx1ZSgpLCBpLCBicmlnaHRuZXNzO1xuICAgIGZvciAoaSA9IDA7IGkgPCBuUGl4ZWxzOyBpICs9IDQpIHtcbiAgICAgICAgYnJpZ2h0bmVzcyA9XG4gICAgICAgICAgICAoMC4zNCAqIGRhdGFbaV0gKyAwLjUgKiBkYXRhW2kgKyAxXSArIDAuMTYgKiBkYXRhW2kgKyAyXSkgLyAyNTU7XG4gICAgICAgIGRhdGFbaV0gPSBicmlnaHRuZXNzICogcmVkO1xuICAgICAgICBkYXRhW2kgKyAxXSA9IGJyaWdodG5lc3MgKiBncmVlbjtcbiAgICAgICAgZGF0YVtpICsgMl0gPSBicmlnaHRuZXNzICogYmx1ZTtcbiAgICAgICAgZGF0YVtpICsgM10gPSBkYXRhW2kgKyAzXTtcbiAgICB9XG59O1xuZXhwb3J0cy5SR0IgPSBSR0I7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoTm9kZV8xLk5vZGUsICdyZWQnLCAwLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgdGhpcy5fZmlsdGVyVXBUb0RhdGUgPSBmYWxzZTtcbiAgICBpZiAodmFsID4gMjU1KSB7XG4gICAgICAgIHJldHVybiAyNTU7XG4gICAgfVxuICAgIGVsc2UgaWYgKHZhbCA8IDApIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWwpO1xuICAgIH1cbn0pO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnZ3JlZW4nLCAwLCBmdW5jdGlvbiAodmFsKSB7XG4gICAgdGhpcy5fZmlsdGVyVXBUb0RhdGUgPSBmYWxzZTtcbiAgICBpZiAodmFsID4gMjU1KSB7XG4gICAgICAgIHJldHVybiAyNTU7XG4gICAgfVxuICAgIGVsc2UgaWYgKHZhbCA8IDApIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWwpO1xuICAgIH1cbn0pO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAnYmx1ZScsIDAsIFZhbGlkYXRvcnNfMS5SR0JDb21wb25lbnQsIEZhY3RvcnlfMS5GYWN0b3J5LmFmdGVyU2V0RmlsdGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/RGB.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/RGBA.js":
/*!************************************************!*\
  !*** ./node_modules/konva/lib/filters/RGBA.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RGBA = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst RGBA = function (imageData) {\n    const data = imageData.data, nPixels = data.length, red = this.red(), green = this.green(), blue = this.blue(), alpha = this.alpha();\n    for (let i = 0; i < nPixels; i += 4) {\n        const ia = 1 - alpha;\n        data[i] = red * alpha + data[i] * ia;\n        data[i + 1] = green * alpha + data[i + 1] * ia;\n        data[i + 2] = blue * alpha + data[i + 2] * ia;\n    }\n};\nexports.RGBA = RGBA;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'red', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'green', 0, function (val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return Math.round(val);\n    }\n});\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'blue', 0, Validators_1.RGBComponent, Factory_1.Factory.afterSetFilter);\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'alpha', 1, function (val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    else {\n        return val;\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9SR0JBLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWixrQkFBa0IsbUJBQU8sQ0FBQywyRUFBWTtBQUN0QyxlQUFlLG1CQUFPLENBQUMscUVBQVM7QUFDaEMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUM7QUFDQTtBQUNBLG9CQUFvQixhQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL2ZpbHRlcnMvUkdCQS5qcz9lNzY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SR0JBID0gdm9pZCAwO1xuY29uc3QgRmFjdG9yeV8xID0gcmVxdWlyZShcIi4uL0ZhY3RvcnlcIik7XG5jb25zdCBOb2RlXzEgPSByZXF1aXJlKFwiLi4vTm9kZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgUkdCQSA9IGZ1bmN0aW9uIChpbWFnZURhdGEpIHtcbiAgICBjb25zdCBkYXRhID0gaW1hZ2VEYXRhLmRhdGEsIG5QaXhlbHMgPSBkYXRhLmxlbmd0aCwgcmVkID0gdGhpcy5yZWQoKSwgZ3JlZW4gPSB0aGlzLmdyZWVuKCksIGJsdWUgPSB0aGlzLmJsdWUoKSwgYWxwaGEgPSB0aGlzLmFscGhhKCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuUGl4ZWxzOyBpICs9IDQpIHtcbiAgICAgICAgY29uc3QgaWEgPSAxIC0gYWxwaGE7XG4gICAgICAgIGRhdGFbaV0gPSByZWQgKiBhbHBoYSArIGRhdGFbaV0gKiBpYTtcbiAgICAgICAgZGF0YVtpICsgMV0gPSBncmVlbiAqIGFscGhhICsgZGF0YVtpICsgMV0gKiBpYTtcbiAgICAgICAgZGF0YVtpICsgMl0gPSBibHVlICogYWxwaGEgKyBkYXRhW2kgKyAyXSAqIGlhO1xuICAgIH1cbn07XG5leHBvcnRzLlJHQkEgPSBSR0JBO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKE5vZGVfMS5Ob2RlLCAncmVkJywgMCwgZnVuY3Rpb24gKHZhbCkge1xuICAgIHRoaXMuX2ZpbHRlclVwVG9EYXRlID0gZmFsc2U7XG4gICAgaWYgKHZhbCA+IDI1NSkge1xuICAgICAgICByZXR1cm4gMjU1O1xuICAgIH1cbiAgICBlbHNlIGlmICh2YWwgPCAwKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsKTtcbiAgICB9XG59KTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihOb2RlXzEuTm9kZSwgJ2dyZWVuJywgMCwgZnVuY3Rpb24gKHZhbCkge1xuICAgIHRoaXMuX2ZpbHRlclVwVG9EYXRlID0gZmFsc2U7XG4gICAgaWYgKHZhbCA+IDI1NSkge1xuICAgICAgICByZXR1cm4gMjU1O1xuICAgIH1cbiAgICBlbHNlIGlmICh2YWwgPCAwKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsKTtcbiAgICB9XG59KTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihOb2RlXzEuTm9kZSwgJ2JsdWUnLCAwLCBWYWxpZGF0b3JzXzEuUkdCQ29tcG9uZW50LCBGYWN0b3J5XzEuRmFjdG9yeS5hZnRlclNldEZpbHRlcik7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoTm9kZV8xLk5vZGUsICdhbHBoYScsIDEsIGZ1bmN0aW9uICh2YWwpIHtcbiAgICB0aGlzLl9maWx0ZXJVcFRvRGF0ZSA9IGZhbHNlO1xuICAgIGlmICh2YWwgPiAxKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICBlbHNlIGlmICh2YWwgPCAwKSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/RGBA.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Sepia.js":
/*!*************************************************!*\
  !*** ./node_modules/konva/lib/filters/Sepia.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sepia = void 0;\nconst Sepia = function (imageData) {\n    let data = imageData.data, nPixels = data.length, i, r, g, b;\n    for (i = 0; i < nPixels; i += 4) {\n        r = data[i + 0];\n        g = data[i + 1];\n        b = data[i + 2];\n        data[i + 0] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);\n        data[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);\n        data[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);\n    }\n};\nexports.Sepia = Sepia;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9TZXBpYS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBLGdCQUFnQixhQUFhO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9TZXBpYS5qcz9mNTgxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TZXBpYSA9IHZvaWQgMDtcbmNvbnN0IFNlcGlhID0gZnVuY3Rpb24gKGltYWdlRGF0YSkge1xuICAgIGxldCBkYXRhID0gaW1hZ2VEYXRhLmRhdGEsIG5QaXhlbHMgPSBkYXRhLmxlbmd0aCwgaSwgciwgZywgYjtcbiAgICBmb3IgKGkgPSAwOyBpIDwgblBpeGVsczsgaSArPSA0KSB7XG4gICAgICAgIHIgPSBkYXRhW2kgKyAwXTtcbiAgICAgICAgZyA9IGRhdGFbaSArIDFdO1xuICAgICAgICBiID0gZGF0YVtpICsgMl07XG4gICAgICAgIGRhdGFbaSArIDBdID0gTWF0aC5taW4oMjU1LCByICogMC4zOTMgKyBnICogMC43NjkgKyBiICogMC4xODkpO1xuICAgICAgICBkYXRhW2kgKyAxXSA9IE1hdGgubWluKDI1NSwgciAqIDAuMzQ5ICsgZyAqIDAuNjg2ICsgYiAqIDAuMTY4KTtcbiAgICAgICAgZGF0YVtpICsgMl0gPSBNYXRoLm1pbigyNTUsIHIgKiAwLjI3MiArIGcgKiAwLjUzNCArIGIgKiAwLjEzMSk7XG4gICAgfVxufTtcbmV4cG9ydHMuU2VwaWEgPSBTZXBpYTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Sepia.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Solarize.js":
/*!****************************************************!*\
  !*** ./node_modules/konva/lib/filters/Solarize.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Solarize = void 0;\nconst Solarize = function (imageData) {\n    const data = imageData.data, w = imageData.width, h = imageData.height, w4 = w * 4;\n    let y = h;\n    do {\n        const offsetY = (y - 1) * w4;\n        let x = w;\n        do {\n            const offset = offsetY + (x - 1) * 4;\n            let r = data[offset];\n            let g = data[offset + 1];\n            let b = data[offset + 2];\n            if (r > 127) {\n                r = 255 - r;\n            }\n            if (g > 127) {\n                g = 255 - g;\n            }\n            if (b > 127) {\n                b = 255 - b;\n            }\n            data[offset] = r;\n            data[offset + 1] = g;\n            data[offset + 2] = b;\n        } while (--x);\n    } while (--y);\n};\nexports.Solarize = Solarize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9Tb2xhcml6ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixNQUFNO0FBQ047QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9maWx0ZXJzL1NvbGFyaXplLmpzP2Y1NzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNvbGFyaXplID0gdm9pZCAwO1xuY29uc3QgU29sYXJpemUgPSBmdW5jdGlvbiAoaW1hZ2VEYXRhKSB7XG4gICAgY29uc3QgZGF0YSA9IGltYWdlRGF0YS5kYXRhLCB3ID0gaW1hZ2VEYXRhLndpZHRoLCBoID0gaW1hZ2VEYXRhLmhlaWdodCwgdzQgPSB3ICogNDtcbiAgICBsZXQgeSA9IGg7XG4gICAgZG8ge1xuICAgICAgICBjb25zdCBvZmZzZXRZID0gKHkgLSAxKSAqIHc0O1xuICAgICAgICBsZXQgeCA9IHc7XG4gICAgICAgIGRvIHtcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldCA9IG9mZnNldFkgKyAoeCAtIDEpICogNDtcbiAgICAgICAgICAgIGxldCByID0gZGF0YVtvZmZzZXRdO1xuICAgICAgICAgICAgbGV0IGcgPSBkYXRhW29mZnNldCArIDFdO1xuICAgICAgICAgICAgbGV0IGIgPSBkYXRhW29mZnNldCArIDJdO1xuICAgICAgICAgICAgaWYgKHIgPiAxMjcpIHtcbiAgICAgICAgICAgICAgICByID0gMjU1IC0gcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChnID4gMTI3KSB7XG4gICAgICAgICAgICAgICAgZyA9IDI1NSAtIGc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYiA+IDEyNykge1xuICAgICAgICAgICAgICAgIGIgPSAyNTUgLSBiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGF0YVtvZmZzZXRdID0gcjtcbiAgICAgICAgICAgIGRhdGFbb2Zmc2V0ICsgMV0gPSBnO1xuICAgICAgICAgICAgZGF0YVtvZmZzZXQgKyAyXSA9IGI7XG4gICAgICAgIH0gd2hpbGUgKC0teCk7XG4gICAgfSB3aGlsZSAoLS15KTtcbn07XG5leHBvcnRzLlNvbGFyaXplID0gU29sYXJpemU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Solarize.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/filters/Threshold.js":
/*!*****************************************************!*\
  !*** ./node_modules/konva/lib/filters/Threshold.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Threshold = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Threshold = function (imageData) {\n    const level = this.threshold() * 255, data = imageData.data, len = data.length;\n    for (let i = 0; i < len; i += 1) {\n        data[i] = data[i] < level ? 0 : 255;\n    }\n};\nexports.Threshold = Threshold;\nFactory_1.Factory.addGetterSetter(Node_1.Node, 'threshold', 0.5, (0, Validators_1.getNumberValidator)(), Factory_1.Factory.afterSetFilter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9UaHJlc2hvbGQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QztBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvZmlsdGVycy9UaHJlc2hvbGQuanM/NDQ5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGhyZXNob2xkID0gdm9pZCAwO1xuY29uc3QgRmFjdG9yeV8xID0gcmVxdWlyZShcIi4uL0ZhY3RvcnlcIik7XG5jb25zdCBOb2RlXzEgPSByZXF1aXJlKFwiLi4vTm9kZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgVGhyZXNob2xkID0gZnVuY3Rpb24gKGltYWdlRGF0YSkge1xuICAgIGNvbnN0IGxldmVsID0gdGhpcy50aHJlc2hvbGQoKSAqIDI1NSwgZGF0YSA9IGltYWdlRGF0YS5kYXRhLCBsZW4gPSBkYXRhLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSArPSAxKSB7XG4gICAgICAgIGRhdGFbaV0gPSBkYXRhW2ldIDwgbGV2ZWwgPyAwIDogMjU1O1xuICAgIH1cbn07XG5leHBvcnRzLlRocmVzaG9sZCA9IFRocmVzaG9sZDtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihOb2RlXzEuTm9kZSwgJ3RocmVzaG9sZCcsIDAuNSwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCksIEZhY3RvcnlfMS5GYWN0b3J5LmFmdGVyU2V0RmlsdGVyKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/filters/Threshold.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/index.js":
/*!*****************************************!*\
  !*** ./node_modules/konva/lib/index.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst _FullInternals_1 = __webpack_require__(/*! ./_FullInternals */ \"(app-pages-browser)/./node_modules/konva/lib/_FullInternals.js\");\nmodule.exports = _FullInternals_1.Konva;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLG1CQUFPLENBQUMsd0ZBQWtCO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvaW5kZXguanM/ZThlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IF9GdWxsSW50ZXJuYWxzXzEgPSByZXF1aXJlKFwiLi9fRnVsbEludGVybmFsc1wiKTtcbm1vZHVsZS5leHBvcnRzID0gX0Z1bGxJbnRlcm5hbHNfMS5Lb252YTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Arc.js":
/*!**********************************************!*\
  !*** ./node_modules/konva/lib/shapes/Arc.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Arc = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_2 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Arc extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const angle = Global_1.Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Global_1.Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nexports.Arc = Arc;\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_2._registerNode)(Arc);\nFactory_1.Factory.addGetterSetter(Arc, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'angle', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arc, 'clockwise', false, (0, Validators_1.getBooleanValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL0FyYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxXQUFXO0FBQ1gsa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZ0JBQWdCLG1CQUFPLENBQUMsdUVBQVU7QUFDbEMsaUJBQWlCLG1CQUFPLENBQUMseUVBQVc7QUFDcEMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUMsaUJBQWlCLG1CQUFPLENBQUMseUVBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9zaGFwZXMvQXJjLmpzP2RjZTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFyYyA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgU2hhcGVfMSA9IHJlcXVpcmUoXCIuLi9TaGFwZVwiKTtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4uL0dsb2JhbFwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgR2xvYmFsXzIgPSByZXF1aXJlKFwiLi4vR2xvYmFsXCIpO1xuY2xhc3MgQXJjIGV4dGVuZHMgU2hhcGVfMS5TaGFwZSB7XG4gICAgX3NjZW5lRnVuYyhjb250ZXh0KSB7XG4gICAgICAgIGNvbnN0IGFuZ2xlID0gR2xvYmFsXzEuS29udmEuZ2V0QW5nbGUodGhpcy5hbmdsZSgpKSwgY2xvY2t3aXNlID0gdGhpcy5jbG9ja3dpc2UoKTtcbiAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgY29udGV4dC5hcmMoMCwgMCwgdGhpcy5vdXRlclJhZGl1cygpLCAwLCBhbmdsZSwgY2xvY2t3aXNlKTtcbiAgICAgICAgY29udGV4dC5hcmMoMCwgMCwgdGhpcy5pbm5lclJhZGl1cygpLCBhbmdsZSwgMCwgIWNsb2Nrd2lzZSk7XG4gICAgICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGNvbnRleHQuZmlsbFN0cm9rZVNoYXBlKHRoaXMpO1xuICAgIH1cbiAgICBnZXRXaWR0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0ZXJSYWRpdXMoKSAqIDI7XG4gICAgfVxuICAgIGdldEhlaWdodCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0ZXJSYWRpdXMoKSAqIDI7XG4gICAgfVxuICAgIHNldFdpZHRoKHdpZHRoKSB7XG4gICAgICAgIHRoaXMub3V0ZXJSYWRpdXMod2lkdGggLyAyKTtcbiAgICB9XG4gICAgc2V0SGVpZ2h0KGhlaWdodCkge1xuICAgICAgICB0aGlzLm91dGVyUmFkaXVzKGhlaWdodCAvIDIpO1xuICAgIH1cbiAgICBnZXRTZWxmUmVjdCgpIHtcbiAgICAgICAgY29uc3QgaW5uZXJSYWRpdXMgPSB0aGlzLmlubmVyUmFkaXVzKCk7XG4gICAgICAgIGNvbnN0IG91dGVyUmFkaXVzID0gdGhpcy5vdXRlclJhZGl1cygpO1xuICAgICAgICBjb25zdCBjbG9ja3dpc2UgPSB0aGlzLmNsb2Nrd2lzZSgpO1xuICAgICAgICBjb25zdCBhbmdsZSA9IEdsb2JhbF8xLktvbnZhLmdldEFuZ2xlKGNsb2Nrd2lzZSA/IDM2MCAtIHRoaXMuYW5nbGUoKSA6IHRoaXMuYW5nbGUoKSk7XG4gICAgICAgIGNvbnN0IGJvdW5kTGVmdFJhdGlvID0gTWF0aC5jb3MoTWF0aC5taW4oYW5nbGUsIE1hdGguUEkpKTtcbiAgICAgICAgY29uc3QgYm91bmRSaWdodFJhdGlvID0gMTtcbiAgICAgICAgY29uc3QgYm91bmRUb3BSYXRpbyA9IE1hdGguc2luKE1hdGgubWluKE1hdGgubWF4KE1hdGguUEksIGFuZ2xlKSwgKDMgKiBNYXRoLlBJKSAvIDIpKTtcbiAgICAgICAgY29uc3QgYm91bmRCb3R0b21SYXRpbyA9IE1hdGguc2luKE1hdGgubWluKGFuZ2xlLCBNYXRoLlBJIC8gMikpO1xuICAgICAgICBjb25zdCBib3VuZExlZnQgPSBib3VuZExlZnRSYXRpbyAqIChib3VuZExlZnRSYXRpbyA+IDAgPyBpbm5lclJhZGl1cyA6IG91dGVyUmFkaXVzKTtcbiAgICAgICAgY29uc3QgYm91bmRSaWdodCA9IGJvdW5kUmlnaHRSYXRpbyAqIChib3VuZFJpZ2h0UmF0aW8gPiAwID8gb3V0ZXJSYWRpdXMgOiBpbm5lclJhZGl1cyk7XG4gICAgICAgIGNvbnN0IGJvdW5kVG9wID0gYm91bmRUb3BSYXRpbyAqIChib3VuZFRvcFJhdGlvID4gMCA/IGlubmVyUmFkaXVzIDogb3V0ZXJSYWRpdXMpO1xuICAgICAgICBjb25zdCBib3VuZEJvdHRvbSA9IGJvdW5kQm90dG9tUmF0aW8gKiAoYm91bmRCb3R0b21SYXRpbyA+IDAgPyBvdXRlclJhZGl1cyA6IGlubmVyUmFkaXVzKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHg6IGJvdW5kTGVmdCxcbiAgICAgICAgICAgIHk6IGNsb2Nrd2lzZSA/IC0xICogYm91bmRCb3R0b20gOiBib3VuZFRvcCxcbiAgICAgICAgICAgIHdpZHRoOiBib3VuZFJpZ2h0IC0gYm91bmRMZWZ0LFxuICAgICAgICAgICAgaGVpZ2h0OiBib3VuZEJvdHRvbSAtIGJvdW5kVG9wLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuQXJjID0gQXJjO1xuQXJjLnByb3RvdHlwZS5fY2VudHJvaWQgPSB0cnVlO1xuQXJjLnByb3RvdHlwZS5jbGFzc05hbWUgPSAnQXJjJztcbkFyYy5wcm90b3R5cGUuX2F0dHJzQWZmZWN0aW5nU2l6ZSA9IFsnaW5uZXJSYWRpdXMnLCAnb3V0ZXJSYWRpdXMnXTtcbigwLCBHbG9iYWxfMi5fcmVnaXN0ZXJOb2RlKShBcmMpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKEFyYywgJ2lubmVyUmFkaXVzJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKEFyYywgJ291dGVyUmFkaXVzJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKEFyYywgJ2FuZ2xlJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKEFyYywgJ2Nsb2Nrd2lzZScsIGZhbHNlLCAoMCwgVmFsaWRhdG9yc18xLmdldEJvb2xlYW5WYWxpZGF0b3IpKCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Arc.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Arrow.js":
/*!************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Arrow.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Arrow = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Line_1 = __webpack_require__(/*! ./Line */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Line.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Path_1 = __webpack_require__(/*! ./Path */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Path.js\");\nclass Arrow extends Line_1.Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        const PI2 = Math.PI * 2;\n        const points = this.points();\n        let tp = points;\n        const fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        const length = this.pointerLength();\n        const n = points.length;\n        let dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path_1.Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path_1.Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        const radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        const width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        const isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nexports.Arrow = Arrow;\nArrow.prototype.className = 'Arrow';\n(0, Global_1._registerNode)(Arrow);\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerLength', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerWidth', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory_1.Factory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL0Fycm93LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYixrQkFBa0IsbUJBQU8sQ0FBQywyRUFBWTtBQUN0QyxlQUFlLG1CQUFPLENBQUMsMkVBQVE7QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUMsaUJBQWlCLG1CQUFPLENBQUMseUVBQVc7QUFDcEMsZUFBZSxtQkFBTyxDQUFDLDJFQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL3NoYXBlcy9BcnJvdy5qcz9iYmI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcnJvdyA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgTGluZV8xID0gcmVxdWlyZShcIi4vTGluZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgR2xvYmFsXzEgPSByZXF1aXJlKFwiLi4vR2xvYmFsXCIpO1xuY29uc3QgUGF0aF8xID0gcmVxdWlyZShcIi4vUGF0aFwiKTtcbmNsYXNzIEFycm93IGV4dGVuZHMgTGluZV8xLkxpbmUge1xuICAgIF9zY2VuZUZ1bmMoY3R4KSB7XG4gICAgICAgIHN1cGVyLl9zY2VuZUZ1bmMoY3R4KTtcbiAgICAgICAgY29uc3QgUEkyID0gTWF0aC5QSSAqIDI7XG4gICAgICAgIGNvbnN0IHBvaW50cyA9IHRoaXMucG9pbnRzKCk7XG4gICAgICAgIGxldCB0cCA9IHBvaW50cztcbiAgICAgICAgY29uc3QgZnJvbVRlbnNpb24gPSB0aGlzLnRlbnNpb24oKSAhPT0gMCAmJiBwb2ludHMubGVuZ3RoID4gNDtcbiAgICAgICAgaWYgKGZyb21UZW5zaW9uKSB7XG4gICAgICAgICAgICB0cCA9IHRoaXMuZ2V0VGVuc2lvblBvaW50cygpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IHRoaXMucG9pbnRlckxlbmd0aCgpO1xuICAgICAgICBjb25zdCBuID0gcG9pbnRzLmxlbmd0aDtcbiAgICAgICAgbGV0IGR4LCBkeTtcbiAgICAgICAgaWYgKGZyb21UZW5zaW9uKSB7XG4gICAgICAgICAgICBjb25zdCBscCA9IFtcbiAgICAgICAgICAgICAgICB0cFt0cC5sZW5ndGggLSA0XSxcbiAgICAgICAgICAgICAgICB0cFt0cC5sZW5ndGggLSAzXSxcbiAgICAgICAgICAgICAgICB0cFt0cC5sZW5ndGggLSAyXSxcbiAgICAgICAgICAgICAgICB0cFt0cC5sZW5ndGggLSAxXSxcbiAgICAgICAgICAgICAgICBwb2ludHNbbiAtIDJdLFxuICAgICAgICAgICAgICAgIHBvaW50c1tuIC0gMV0sXG4gICAgICAgICAgICBdO1xuICAgICAgICAgICAgY29uc3QgbGFzdExlbmd0aCA9IFBhdGhfMS5QYXRoLmNhbGNMZW5ndGgodHBbdHAubGVuZ3RoIC0gNF0sIHRwW3RwLmxlbmd0aCAtIDNdLCAnQycsIGxwKTtcbiAgICAgICAgICAgIGNvbnN0IHByZXZpb3VzID0gUGF0aF8xLlBhdGguZ2V0UG9pbnRPblF1YWRyYXRpY0JlemllcihNYXRoLm1pbigxLCAxIC0gbGVuZ3RoIC8gbGFzdExlbmd0aCksIGxwWzBdLCBscFsxXSwgbHBbMl0sIGxwWzNdLCBscFs0XSwgbHBbNV0pO1xuICAgICAgICAgICAgZHggPSBwb2ludHNbbiAtIDJdIC0gcHJldmlvdXMueDtcbiAgICAgICAgICAgIGR5ID0gcG9pbnRzW24gLSAxXSAtIHByZXZpb3VzLnk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBkeCA9IHBvaW50c1tuIC0gMl0gLSBwb2ludHNbbiAtIDRdO1xuICAgICAgICAgICAgZHkgPSBwb2ludHNbbiAtIDFdIC0gcG9pbnRzW24gLSAzXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByYWRpYW5zID0gKE1hdGguYXRhbjIoZHksIGR4KSArIFBJMikgJSBQSTI7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5wb2ludGVyV2lkdGgoKTtcbiAgICAgICAgaWYgKHRoaXMucG9pbnRlckF0RW5kaW5nKCkpIHtcbiAgICAgICAgICAgIGN0eC5zYXZlKCk7XG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICBjdHgudHJhbnNsYXRlKHBvaW50c1tuIC0gMl0sIHBvaW50c1tuIC0gMV0pO1xuICAgICAgICAgICAgY3R4LnJvdGF0ZShyYWRpYW5zKTtcbiAgICAgICAgICAgIGN0eC5tb3ZlVG8oMCwgMCk7XG4gICAgICAgICAgICBjdHgubGluZVRvKC1sZW5ndGgsIHdpZHRoIC8gMik7XG4gICAgICAgICAgICBjdHgubGluZVRvKC1sZW5ndGgsIC13aWR0aCAvIDIpO1xuICAgICAgICAgICAgY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgY3R4LnJlc3RvcmUoKTtcbiAgICAgICAgICAgIHRoaXMuX19maWxsU3Ryb2tlKGN0eCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucG9pbnRlckF0QmVnaW5uaW5nKCkpIHtcbiAgICAgICAgICAgIGN0eC5zYXZlKCk7XG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICBjdHgudHJhbnNsYXRlKHBvaW50c1swXSwgcG9pbnRzWzFdKTtcbiAgICAgICAgICAgIGlmIChmcm9tVGVuc2lvbikge1xuICAgICAgICAgICAgICAgIGR4ID0gKHRwWzBdICsgdHBbMl0pIC8gMiAtIHBvaW50c1swXTtcbiAgICAgICAgICAgICAgICBkeSA9ICh0cFsxXSArIHRwWzNdKSAvIDIgLSBwb2ludHNbMV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBkeCA9IHBvaW50c1syXSAtIHBvaW50c1swXTtcbiAgICAgICAgICAgICAgICBkeSA9IHBvaW50c1szXSAtIHBvaW50c1sxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN0eC5yb3RhdGUoKE1hdGguYXRhbjIoLWR5LCAtZHgpICsgUEkyKSAlIFBJMik7XG4gICAgICAgICAgICBjdHgubW92ZVRvKDAsIDApO1xuICAgICAgICAgICAgY3R4LmxpbmVUbygtbGVuZ3RoLCB3aWR0aCAvIDIpO1xuICAgICAgICAgICAgY3R4LmxpbmVUbygtbGVuZ3RoLCAtd2lkdGggLyAyKTtcbiAgICAgICAgICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICAgICAgICAgIGN0eC5yZXN0b3JlKCk7XG4gICAgICAgICAgICB0aGlzLl9fZmlsbFN0cm9rZShjdHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9fZmlsbFN0cm9rZShjdHgpIHtcbiAgICAgICAgY29uc3QgaXNEYXNoRW5hYmxlZCA9IHRoaXMuZGFzaEVuYWJsZWQoKTtcbiAgICAgICAgaWYgKGlzRGFzaEVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuYXR0cnMuZGFzaEVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGN0eC5zZXRMaW5lRGFzaChbXSk7XG4gICAgICAgIH1cbiAgICAgICAgY3R4LmZpbGxTdHJva2VTaGFwZSh0aGlzKTtcbiAgICAgICAgaWYgKGlzRGFzaEVuYWJsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuYXR0cnMuZGFzaEVuYWJsZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFNlbGZSZWN0KCkge1xuICAgICAgICBjb25zdCBsaW5lUmVjdCA9IHN1cGVyLmdldFNlbGZSZWN0KCk7XG4gICAgICAgIGNvbnN0IG9mZnNldCA9IHRoaXMucG9pbnRlcldpZHRoKCkgLyAyO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgeDogbGluZVJlY3QueCAtIG9mZnNldCxcbiAgICAgICAgICAgIHk6IGxpbmVSZWN0LnkgLSBvZmZzZXQsXG4gICAgICAgICAgICB3aWR0aDogbGluZVJlY3Qud2lkdGggKyBvZmZzZXQgKiAyLFxuICAgICAgICAgICAgaGVpZ2h0OiBsaW5lUmVjdC5oZWlnaHQgKyBvZmZzZXQgKiAyLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuQXJyb3cgPSBBcnJvdztcbkFycm93LnByb3RvdHlwZS5jbGFzc05hbWUgPSAnQXJyb3cnO1xuKDAsIEdsb2JhbF8xLl9yZWdpc3Rlck5vZGUpKEFycm93KTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihBcnJvdywgJ3BvaW50ZXJMZW5ndGgnLCAxMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKEFycm93LCAncG9pbnRlcldpZHRoJywgMTAsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihBcnJvdywgJ3BvaW50ZXJBdEJlZ2lubmluZycsIGZhbHNlKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihBcnJvdywgJ3BvaW50ZXJBdEVuZGluZycsIHRydWUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Arrow.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Circle.js":
/*!*************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Circle.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Circle = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Circle extends Shape_1.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.attrs.radius || 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        if (this.radius() !== width / 2) {\n            this.radius(width / 2);\n        }\n    }\n    setHeight(height) {\n        if (this.radius() !== height / 2) {\n            this.radius(height / 2);\n        }\n    }\n}\nexports.Circle = Circle;\nCircle.prototype._centroid = true;\nCircle.prototype.className = 'Circle';\nCircle.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(Circle);\nFactory_1.Factory.addGetterSetter(Circle, 'radius', 0, (0, Validators_1.getNumberValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL0NpcmNsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Qsa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZ0JBQWdCLG1CQUFPLENBQUMsdUVBQVU7QUFDbEMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUMsaUJBQWlCLG1CQUFPLENBQUMseUVBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9zaGFwZXMvQ2lyY2xlLmpzPzQ3MzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNpcmNsZSA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgU2hhcGVfMSA9IHJlcXVpcmUoXCIuLi9TaGFwZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgR2xvYmFsXzEgPSByZXF1aXJlKFwiLi4vR2xvYmFsXCIpO1xuY2xhc3MgQ2lyY2xlIGV4dGVuZHMgU2hhcGVfMS5TaGFwZSB7XG4gICAgX3NjZW5lRnVuYyhjb250ZXh0KSB7XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHRoaXMuYXR0cnMucmFkaXVzIHx8IDAsIDAsIE1hdGguUEkgKiAyLCBmYWxzZSk7XG4gICAgICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGNvbnRleHQuZmlsbFN0cm9rZVNoYXBlKHRoaXMpO1xuICAgIH1cbiAgICBnZXRXaWR0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmFkaXVzKCkgKiAyO1xuICAgIH1cbiAgICBnZXRIZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJhZGl1cygpICogMjtcbiAgICB9XG4gICAgc2V0V2lkdGgod2lkdGgpIHtcbiAgICAgICAgaWYgKHRoaXMucmFkaXVzKCkgIT09IHdpZHRoIC8gMikge1xuICAgICAgICAgICAgdGhpcy5yYWRpdXMod2lkdGggLyAyKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzZXRIZWlnaHQoaGVpZ2h0KSB7XG4gICAgICAgIGlmICh0aGlzLnJhZGl1cygpICE9PSBoZWlnaHQgLyAyKSB7XG4gICAgICAgICAgICB0aGlzLnJhZGl1cyhoZWlnaHQgLyAyKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQ2lyY2xlID0gQ2lyY2xlO1xuQ2lyY2xlLnByb3RvdHlwZS5fY2VudHJvaWQgPSB0cnVlO1xuQ2lyY2xlLnByb3RvdHlwZS5jbGFzc05hbWUgPSAnQ2lyY2xlJztcbkNpcmNsZS5wcm90b3R5cGUuX2F0dHJzQWZmZWN0aW5nU2l6ZSA9IFsncmFkaXVzJ107XG4oMCwgR2xvYmFsXzEuX3JlZ2lzdGVyTm9kZSkoQ2lyY2xlKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihDaXJjbGUsICdyYWRpdXMnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Circle.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Ellipse.js":
/*!**************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Ellipse.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ellipse = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Ellipse extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const rx = this.radiusX(), ry = this.radiusY();\n        context.beginPath();\n        context.save();\n        if (rx !== ry) {\n            context.scale(1, ry / rx);\n        }\n        context.arc(0, 0, rx, 0, Math.PI * 2, false);\n        context.restore();\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radiusX() * 2;\n    }\n    getHeight() {\n        return this.radiusY() * 2;\n    }\n    setWidth(width) {\n        this.radiusX(width / 2);\n    }\n    setHeight(height) {\n        this.radiusY(height / 2);\n    }\n}\nexports.Ellipse = Ellipse;\nEllipse.prototype.className = 'Ellipse';\nEllipse.prototype._centroid = true;\nEllipse.prototype._attrsAffectingSize = ['radiusX', 'radiusY'];\n(0, Global_1._registerNode)(Ellipse);\nFactory_1.Factory.addComponentsGetterSetter(Ellipse, 'radius', ['x', 'y']);\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Ellipse, 'radiusY', 0, (0, Validators_1.getNumberValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL0VsbGlwc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLHVFQUFVO0FBQ2xDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFlO0FBQzVDLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9zaGFwZXMvRWxsaXBzZS5qcz9hYmYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FbGxpcHNlID0gdm9pZCAwO1xuY29uc3QgRmFjdG9yeV8xID0gcmVxdWlyZShcIi4uL0ZhY3RvcnlcIik7XG5jb25zdCBTaGFwZV8xID0gcmVxdWlyZShcIi4uL1NoYXBlXCIpO1xuY29uc3QgVmFsaWRhdG9yc18xID0gcmVxdWlyZShcIi4uL1ZhbGlkYXRvcnNcIik7XG5jb25zdCBHbG9iYWxfMSA9IHJlcXVpcmUoXCIuLi9HbG9iYWxcIik7XG5jbGFzcyBFbGxpcHNlIGV4dGVuZHMgU2hhcGVfMS5TaGFwZSB7XG4gICAgX3NjZW5lRnVuYyhjb250ZXh0KSB7XG4gICAgICAgIGNvbnN0IHJ4ID0gdGhpcy5yYWRpdXNYKCksIHJ5ID0gdGhpcy5yYWRpdXNZKCk7XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIGNvbnRleHQuc2F2ZSgpO1xuICAgICAgICBpZiAocnggIT09IHJ5KSB7XG4gICAgICAgICAgICBjb250ZXh0LnNjYWxlKDEsIHJ5IC8gcngpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHJ4LCAwLCBNYXRoLlBJICogMiwgZmFsc2UpO1xuICAgICAgICBjb250ZXh0LnJlc3RvcmUoKTtcbiAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgY29udGV4dC5maWxsU3Ryb2tlU2hhcGUodGhpcyk7XG4gICAgfVxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yYWRpdXNYKCkgKiAyO1xuICAgIH1cbiAgICBnZXRIZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJhZGl1c1koKSAqIDI7XG4gICAgfVxuICAgIHNldFdpZHRoKHdpZHRoKSB7XG4gICAgICAgIHRoaXMucmFkaXVzWCh3aWR0aCAvIDIpO1xuICAgIH1cbiAgICBzZXRIZWlnaHQoaGVpZ2h0KSB7XG4gICAgICAgIHRoaXMucmFkaXVzWShoZWlnaHQgLyAyKTtcbiAgICB9XG59XG5leHBvcnRzLkVsbGlwc2UgPSBFbGxpcHNlO1xuRWxsaXBzZS5wcm90b3R5cGUuY2xhc3NOYW1lID0gJ0VsbGlwc2UnO1xuRWxsaXBzZS5wcm90b3R5cGUuX2NlbnRyb2lkID0gdHJ1ZTtcbkVsbGlwc2UucHJvdG90eXBlLl9hdHRyc0FmZmVjdGluZ1NpemUgPSBbJ3JhZGl1c1gnLCAncmFkaXVzWSddO1xuKDAsIEdsb2JhbF8xLl9yZWdpc3Rlck5vZGUpKEVsbGlwc2UpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkQ29tcG9uZW50c0dldHRlclNldHRlcihFbGxpcHNlLCAncmFkaXVzJywgWyd4JywgJ3knXSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoRWxsaXBzZSwgJ3JhZGl1c1gnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoRWxsaXBzZSwgJ3JhZGl1c1knLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Ellipse.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Image.js":
/*!************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Image.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Image = void 0;\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nclass Image extends Shape_1.Shape {\n    constructor(attrs) {\n        super(attrs);\n        this.on('imageChange.konva', () => {\n            this._setImageLoad();\n        });\n        this._setImageLoad();\n    }\n    _setImageLoad() {\n        const image = this.image();\n        if (image && image.complete) {\n            return;\n        }\n        if (image && image.readyState === 4) {\n            return;\n        }\n        if (image && image['addEventListener']) {\n            image['addEventListener']('load', () => {\n                this._requestDraw();\n            });\n        }\n    }\n    _useBufferCanvas() {\n        const hasCornerRadius = !!this.cornerRadius();\n        const hasShadow = this.hasShadow();\n        if (hasCornerRadius && hasShadow) {\n            return true;\n        }\n        return super._useBufferCanvas(true);\n    }\n    _sceneFunc(context) {\n        const width = this.getWidth();\n        const height = this.getHeight();\n        const cornerRadius = this.cornerRadius();\n        const image = this.attrs.image;\n        let params;\n        if (image) {\n            const cropWidth = this.attrs.cropWidth;\n            const cropHeight = this.attrs.cropHeight;\n            if (cropWidth && cropHeight) {\n                params = [\n                    image,\n                    this.cropX(),\n                    this.cropY(),\n                    cropWidth,\n                    cropHeight,\n                    0,\n                    0,\n                    width,\n                    height,\n                ];\n            }\n            else {\n                params = [image, 0, 0, width, height];\n            }\n        }\n        if (this.hasFill() || this.hasStroke() || cornerRadius) {\n            context.beginPath();\n            cornerRadius\n                ? Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius)\n                : context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (cornerRadius) {\n                context.clip();\n            }\n            context.drawImage.apply(context, params);\n        }\n    }\n    _hitFunc(context) {\n        const width = this.width(), height = this.height(), cornerRadius = this.cornerRadius();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        var _a, _b;\n        return (_a = this.attrs.width) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.width;\n    }\n    getHeight() {\n        var _a, _b;\n        return (_a = this.attrs.height) !== null && _a !== void 0 ? _a : (_b = this.image()) === null || _b === void 0 ? void 0 : _b.height;\n    }\n    static fromURL(url, callback, onError = null) {\n        const img = Util_1.Util.createImageElement();\n        img.onload = function () {\n            const image = new Image({\n                image: img,\n            });\n            callback(image);\n        };\n        img.onerror = onError;\n        img.crossOrigin = 'Anonymous';\n        img.src = url;\n    }\n}\nexports.Image = Image;\nImage.prototype.className = 'Image';\n(0, Global_1._registerNode)(Image);\nFactory_1.Factory.addGetterSetter(Image, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\nFactory_1.Factory.addGetterSetter(Image, 'image');\nFactory_1.Factory.addComponentsGetterSetter(Image, 'crop', ['x', 'y', 'width', 'height']);\nFactory_1.Factory.addGetterSetter(Image, 'cropX', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropY', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Image, 'cropHeight', 0, (0, Validators_1.getNumberValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL0ltYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYixlQUFlLG1CQUFPLENBQUMscUVBQVM7QUFDaEMsa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZ0JBQWdCLG1CQUFPLENBQUMsdUVBQVU7QUFDbEMsaUJBQWlCLG1CQUFPLENBQUMseUVBQVc7QUFDcEMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9zaGFwZXMvSW1hZ2UuanM/YWUzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW1hZ2UgPSB2b2lkIDA7XG5jb25zdCBVdGlsXzEgPSByZXF1aXJlKFwiLi4vVXRpbFwiKTtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgU2hhcGVfMSA9IHJlcXVpcmUoXCIuLi9TaGFwZVwiKTtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4uL0dsb2JhbFwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY2xhc3MgSW1hZ2UgZXh0ZW5kcyBTaGFwZV8xLlNoYXBlIHtcbiAgICBjb25zdHJ1Y3RvcihhdHRycykge1xuICAgICAgICBzdXBlcihhdHRycyk7XG4gICAgICAgIHRoaXMub24oJ2ltYWdlQ2hhbmdlLmtvbnZhJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fc2V0SW1hZ2VMb2FkKCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9zZXRJbWFnZUxvYWQoKTtcbiAgICB9XG4gICAgX3NldEltYWdlTG9hZCgpIHtcbiAgICAgICAgY29uc3QgaW1hZ2UgPSB0aGlzLmltYWdlKCk7XG4gICAgICAgIGlmIChpbWFnZSAmJiBpbWFnZS5jb21wbGV0ZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbWFnZSAmJiBpbWFnZS5yZWFkeVN0YXRlID09PSA0KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGltYWdlICYmIGltYWdlWydhZGRFdmVudExpc3RlbmVyJ10pIHtcbiAgICAgICAgICAgIGltYWdlWydhZGRFdmVudExpc3RlbmVyJ10oJ2xvYWQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcmVxdWVzdERyYXcoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIF91c2VCdWZmZXJDYW52YXMoKSB7XG4gICAgICAgIGNvbnN0IGhhc0Nvcm5lclJhZGl1cyA9ICEhdGhpcy5jb3JuZXJSYWRpdXMoKTtcbiAgICAgICAgY29uc3QgaGFzU2hhZG93ID0gdGhpcy5oYXNTaGFkb3coKTtcbiAgICAgICAgaWYgKGhhc0Nvcm5lclJhZGl1cyAmJiBoYXNTaGFkb3cpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdXBlci5fdXNlQnVmZmVyQ2FudmFzKHRydWUpO1xuICAgIH1cbiAgICBfc2NlbmVGdW5jKGNvbnRleHQpIHtcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmdldFdpZHRoKCk7XG4gICAgICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuZ2V0SGVpZ2h0KCk7XG4gICAgICAgIGNvbnN0IGNvcm5lclJhZGl1cyA9IHRoaXMuY29ybmVyUmFkaXVzKCk7XG4gICAgICAgIGNvbnN0IGltYWdlID0gdGhpcy5hdHRycy5pbWFnZTtcbiAgICAgICAgbGV0IHBhcmFtcztcbiAgICAgICAgaWYgKGltYWdlKSB7XG4gICAgICAgICAgICBjb25zdCBjcm9wV2lkdGggPSB0aGlzLmF0dHJzLmNyb3BXaWR0aDtcbiAgICAgICAgICAgIGNvbnN0IGNyb3BIZWlnaHQgPSB0aGlzLmF0dHJzLmNyb3BIZWlnaHQ7XG4gICAgICAgICAgICBpZiAoY3JvcFdpZHRoICYmIGNyb3BIZWlnaHQpIHtcbiAgICAgICAgICAgICAgICBwYXJhbXMgPSBbXG4gICAgICAgICAgICAgICAgICAgIGltYWdlLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNyb3BYKCksXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3JvcFkoKSxcbiAgICAgICAgICAgICAgICAgICAgY3JvcFdpZHRoLFxuICAgICAgICAgICAgICAgICAgICBjcm9wSGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXJhbXMgPSBbaW1hZ2UsIDAsIDAsIHdpZHRoLCBoZWlnaHRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmhhc0ZpbGwoKSB8fCB0aGlzLmhhc1N0cm9rZSgpIHx8IGNvcm5lclJhZGl1cykge1xuICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIGNvcm5lclJhZGl1c1xuICAgICAgICAgICAgICAgID8gVXRpbF8xLlV0aWwuZHJhd1JvdW5kZWRSZWN0UGF0aChjb250ZXh0LCB3aWR0aCwgaGVpZ2h0LCBjb3JuZXJSYWRpdXMpXG4gICAgICAgICAgICAgICAgOiBjb250ZXh0LnJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgICAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgY29udGV4dC5maWxsU3Ryb2tlU2hhcGUodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGltYWdlKSB7XG4gICAgICAgICAgICBpZiAoY29ybmVyUmFkaXVzKSB7XG4gICAgICAgICAgICAgICAgY29udGV4dC5jbGlwKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250ZXh0LmRyYXdJbWFnZS5hcHBseShjb250ZXh0LCBwYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9oaXRGdW5jKGNvbnRleHQpIHtcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLndpZHRoKCksIGhlaWdodCA9IHRoaXMuaGVpZ2h0KCksIGNvcm5lclJhZGl1cyA9IHRoaXMuY29ybmVyUmFkaXVzKCk7XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIGlmICghY29ybmVyUmFkaXVzKSB7XG4gICAgICAgICAgICBjb250ZXh0LnJlY3QoMCwgMCwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBVdGlsXzEuVXRpbC5kcmF3Um91bmRlZFJlY3RQYXRoKGNvbnRleHQsIHdpZHRoLCBoZWlnaHQsIGNvcm5lclJhZGl1cyk7XG4gICAgICAgIH1cbiAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgY29udGV4dC5maWxsU3Ryb2tlU2hhcGUodGhpcyk7XG4gICAgfVxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5hdHRycy53aWR0aCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKF9iID0gdGhpcy5pbWFnZSgpKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Iud2lkdGg7XG4gICAgfVxuICAgIGdldEhlaWdodCgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuYXR0cnMuaGVpZ2h0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAoX2IgPSB0aGlzLmltYWdlKCkpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5oZWlnaHQ7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tVVJMKHVybCwgY2FsbGJhY2ssIG9uRXJyb3IgPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IGltZyA9IFV0aWxfMS5VdGlsLmNyZWF0ZUltYWdlRWxlbWVudCgpO1xuICAgICAgICBpbWcub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2Uoe1xuICAgICAgICAgICAgICAgIGltYWdlOiBpbWcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGltYWdlKTtcbiAgICAgICAgfTtcbiAgICAgICAgaW1nLm9uZXJyb3IgPSBvbkVycm9yO1xuICAgICAgICBpbWcuY3Jvc3NPcmlnaW4gPSAnQW5vbnltb3VzJztcbiAgICAgICAgaW1nLnNyYyA9IHVybDtcbiAgICB9XG59XG5leHBvcnRzLkltYWdlID0gSW1hZ2U7XG5JbWFnZS5wcm90b3R5cGUuY2xhc3NOYW1lID0gJ0ltYWdlJztcbigwLCBHbG9iYWxfMS5fcmVnaXN0ZXJOb2RlKShJbWFnZSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoSW1hZ2UsICdjb3JuZXJSYWRpdXMnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlck9yQXJyYXlPZk51bWJlcnNWYWxpZGF0b3IpKDQpKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihJbWFnZSwgJ2ltYWdlJyk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRDb21wb25lbnRzR2V0dGVyU2V0dGVyKEltYWdlLCAnY3JvcCcsIFsneCcsICd5JywgJ3dpZHRoJywgJ2hlaWdodCddKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihJbWFnZSwgJ2Nyb3BYJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKEltYWdlLCAnY3JvcFknLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoSW1hZ2UsICdjcm9wV2lkdGgnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoSW1hZ2UsICdjcm9wSGVpZ2h0JywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Image.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Label.js":
/*!************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Label.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tag = exports.Label = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Group_1 = __webpack_require__(/*! ../Group */ \"(app-pages-browser)/./node_modules/konva/lib/Group.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'pointerDirection',\n    'pointerWidth',\n    'pointerHeight',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nclass Label extends Group_1.Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        let that = this, n;\n        const func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        let text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nexports.Label = Label;\nLabel.prototype.className = 'Label';\n(0, Global_1._registerNode)(Label);\nclass Tag extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft =\n                topRight =\n                    bottomLeft =\n                        bottomRight =\n                            Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        let x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nexports.Tag = Tag;\nTag.prototype.className = 'Tag';\n(0, Global_1._registerNode)(Tag);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory_1.Factory.addGetterSetter(Tag, 'pointerWidth', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'pointerHeight', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Tag, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Label.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Line.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/shapes/Line.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Line = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nfunction getControlPoints(x0, y0, x1, y1, x2, y2, t) {\n    const d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)), d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)), fa = (t * d01) / (d01 + d12), fb = (t * d12) / (d01 + d12), p1x = x1 - fa * (x2 - x0), p1y = y1 - fa * (y2 - y0), p2x = x1 + fb * (x2 - x0), p2y = y1 + fb * (y2 - y0);\n    return [p1x, p1y, p2x, p2y];\n}\nfunction expandPoints(p, tension) {\n    const len = p.length, allPoints = [];\n    for (let n = 2; n < len - 2; n += 2) {\n        const cp = getControlPoints(p[n - 2], p[n - 1], p[n], p[n + 1], p[n + 2], p[n + 3], tension);\n        if (isNaN(cp[0])) {\n            continue;\n        }\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n    }\n    return allPoints;\n}\nclass Line extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.on('pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva', function () {\n            this._clearCache('tensionPoints');\n        });\n    }\n    _sceneFunc(context) {\n        let points = this.points(), length = points.length, tension = this.tension(), closed = this.closed(), bezier = this.bezier(), tp, len, n;\n        if (!length) {\n            return;\n        }\n        context.beginPath();\n        context.moveTo(points[0], points[1]);\n        if (tension !== 0 && length > 4) {\n            tp = this.getTensionPoints();\n            len = tp.length;\n            n = closed ? 0 : 4;\n            if (!closed) {\n                context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n            }\n            while (n < len - 2) {\n                context.bezierCurveTo(tp[n++], tp[n++], tp[n++], tp[n++], tp[n++], tp[n++]);\n            }\n            if (!closed) {\n                context.quadraticCurveTo(tp[len - 2], tp[len - 1], points[length - 2], points[length - 1]);\n            }\n        }\n        else if (bezier) {\n            n = 2;\n            while (n < length) {\n                context.bezierCurveTo(points[n++], points[n++], points[n++], points[n++], points[n++], points[n++]);\n            }\n        }\n        else {\n            for (n = 2; n < length; n += 2) {\n                context.lineTo(points[n], points[n + 1]);\n            }\n        }\n        if (closed) {\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        else {\n            context.strokeShape(this);\n        }\n    }\n    getTensionPoints() {\n        return this._getCache('tensionPoints', this._getTensionPoints);\n    }\n    _getTensionPoints() {\n        if (this.closed()) {\n            return this._getTensionPointsClosed();\n        }\n        else {\n            return expandPoints(this.points(), this.tension());\n        }\n    }\n    _getTensionPointsClosed() {\n        const p = this.points(), len = p.length, tension = this.tension(), firstControlPoints = getControlPoints(p[len - 2], p[len - 1], p[0], p[1], p[2], p[3], tension), lastControlPoints = getControlPoints(p[len - 4], p[len - 3], p[len - 2], p[len - 1], p[0], p[1], tension), middle = expandPoints(p, tension), tp = [firstControlPoints[2], firstControlPoints[3]]\n            .concat(middle)\n            .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1],\n        ]);\n        return tp;\n    }\n    getWidth() {\n        return this.getSelfRect().width;\n    }\n    getHeight() {\n        return this.getSelfRect().height;\n    }\n    getSelfRect() {\n        let points = this.points();\n        if (points.length < 4) {\n            return {\n                x: points[0] || 0,\n                y: points[1] || 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        if (this.tension() !== 0) {\n            points = [\n                points[0],\n                points[1],\n                ...this._getTensionPoints(),\n                points[points.length - 2],\n                points[points.length - 1],\n            ];\n        }\n        else {\n            points = this.points();\n        }\n        let minX = points[0];\n        let maxX = points[0];\n        let minY = points[1];\n        let maxY = points[1];\n        let x, y;\n        for (let i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n}\nexports.Line = Line;\nLine.prototype.className = 'Line';\nLine.prototype._attrsAffectingSize = ['points', 'bezier', 'tension'];\n(0, Global_1._registerNode)(Line);\nFactory_1.Factory.addGetterSetter(Line, 'closed', false);\nFactory_1.Factory.addGetterSetter(Line, 'bezier', false);\nFactory_1.Factory.addGetterSetter(Line, 'tension', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Line, 'points', [], (0, Validators_1.getNumberArrayValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Line.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Path.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/shapes/Path.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Path = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst BezierFunctions_1 = __webpack_require__(/*! ../BezierFunctions */ \"(app-pages-browser)/./node_modules/konva/lib/BezierFunctions.js\");\nclass Path extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.dataArray = [];\n        this.pathLength = 0;\n        this._readDataAttribute();\n        this.on('dataChange.konva', function () {\n            this._readDataAttribute();\n        });\n    }\n    _readDataAttribute() {\n        this.dataArray = Path.parsePathData(this.data());\n        this.pathLength = Path.getPathLength(this.dataArray);\n    }\n    _sceneFunc(context) {\n        const ca = this.dataArray;\n        context.beginPath();\n        let isClosed = false;\n        for (let n = 0; n < ca.length; n++) {\n            const c = ca[n].command;\n            const p = ca[n].points;\n            switch (c) {\n                case 'L':\n                    context.lineTo(p[0], p[1]);\n                    break;\n                case 'M':\n                    context.moveTo(p[0], p[1]);\n                    break;\n                case 'C':\n                    context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n                    break;\n                case 'Q':\n                    context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n                    break;\n                case 'A':\n                    var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6], fs = p[7];\n                    var r = rx > ry ? rx : ry;\n                    var scaleX = rx > ry ? 1 : rx / ry;\n                    var scaleY = rx > ry ? ry / rx : 1;\n                    context.translate(cx, cy);\n                    context.rotate(psi);\n                    context.scale(scaleX, scaleY);\n                    context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n                    context.scale(1 / scaleX, 1 / scaleY);\n                    context.rotate(-psi);\n                    context.translate(-cx, -cy);\n                    break;\n                case 'z':\n                    isClosed = true;\n                    context.closePath();\n                    break;\n            }\n        }\n        if (!isClosed && !this.hasFill()) {\n            context.strokeShape(this);\n        }\n        else {\n            context.fillStrokeShape(this);\n        }\n    }\n    getSelfRect() {\n        let points = [];\n        this.dataArray.forEach(function (data) {\n            if (data.command === 'A') {\n                const start = data.points[4];\n                const dTheta = data.points[5];\n                const end = data.points[4] + dTheta;\n                let inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                if (dTheta < 0) {\n                    for (let t = start - inc; t > end; t -= inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n                else {\n                    for (let t = start + inc; t < end; t += inc) {\n                        const point = Path.getPointOnEllipticalArc(data.points[0], data.points[1], data.points[2], data.points[3], t, 0);\n                        points.push(point.x, point.y);\n                    }\n                }\n            }\n            else if (data.command === 'C') {\n                for (let t = 0.0; t <= 1; t += 0.01) {\n                    const point = Path.getPointOnCubicBezier(t, data.start.x, data.start.y, data.points[0], data.points[1], data.points[2], data.points[3], data.points[4], data.points[5]);\n                    points.push(point.x, point.y);\n                }\n            }\n            else {\n                points = points.concat(data.points);\n            }\n        });\n        let minX = points[0];\n        let maxX = points[0];\n        let minY = points[1];\n        let maxY = points[1];\n        let x, y;\n        for (let i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            if (!isNaN(x)) {\n                minX = Math.min(minX, x);\n                maxX = Math.max(maxX, x);\n            }\n            if (!isNaN(y)) {\n                minY = Math.min(minY, y);\n                maxY = Math.max(maxY, y);\n            }\n        }\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getLength() {\n        return this.pathLength;\n    }\n    getPointAtLength(length) {\n        return Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    static getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    static getPathLength(dataArray) {\n        let pathLength = 0;\n        for (let i = 0; i < dataArray.length; ++i) {\n            pathLength += dataArray[i].pathLength;\n        }\n        return pathLength;\n    }\n    static getPointAtLengthOfDataArray(length, dataArray) {\n        let points, i = 0, ii = dataArray.length;\n        if (!ii) {\n            return null;\n        }\n        while (i < ii && length > dataArray[i].pathLength) {\n            length -= dataArray[i].pathLength;\n            ++i;\n        }\n        if (i === ii) {\n            points = dataArray[i - 1].points.slice(-2);\n            return {\n                x: points[0],\n                y: points[1],\n            };\n        }\n        if (length < 0.01) {\n            points = dataArray[i].points.slice(0, 2);\n            return {\n                x: points[0],\n                y: points[1],\n            };\n        }\n        const cp = dataArray[i];\n        const p = cp.points;\n        switch (cp.command) {\n            case 'L':\n                return Path.getPointOnLine(length, cp.start.x, cp.start.y, p[0], p[1]);\n            case 'C':\n                return Path.getPointOnCubicBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getCubicArcLength)([cp.start.x, p[0], p[2], p[4]], [cp.start.y, p[1], p[3], p[5]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3], p[4], p[5]);\n            case 'Q':\n                return Path.getPointOnQuadraticBezier((0, BezierFunctions_1.t2length)(length, Path.getPathLength(dataArray), (i) => {\n                    return (0, BezierFunctions_1.getQuadraticArcLength)([cp.start.x, p[0], p[2]], [cp.start.y, p[1], p[3]], i);\n                }), cp.start.x, cp.start.y, p[0], p[1], p[2], p[3]);\n            case 'A':\n                var cx = p[0], cy = p[1], rx = p[2], ry = p[3], theta = p[4], dTheta = p[5], psi = p[6];\n                theta += (dTheta * length) / cp.pathLength;\n                return Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n        }\n        return null;\n    }\n    static getPointOnLine(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n        fromX = fromX !== null && fromX !== void 0 ? fromX : P1x;\n        fromY = fromY !== null && fromY !== void 0 ? fromY : P1y;\n        const len = this.getLineLength(P1x, P1y, P2x, P2y);\n        if (len < 1e-10) {\n            return { x: P1x, y: P1y };\n        }\n        if (P2x === P1x) {\n            return { x: fromX, y: fromY + (P2y > P1y ? dist : -dist) };\n        }\n        const m = (P2y - P1y) / (P2x - P1x);\n        const run = Math.sqrt((dist * dist) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n        const rise = m * run;\n        if (Math.abs(fromY - P1y - m * (fromX - P1x)) < 1e-10) {\n            return { x: fromX + run, y: fromY + rise };\n        }\n        const u = ((fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y)) / (len * len);\n        const ix = P1x + u * (P2x - P1x);\n        const iy = P1y + u * (P2y - P1y);\n        const pRise = this.getLineLength(fromX, fromY, ix, iy);\n        const pRun = Math.sqrt(dist * dist - pRise * pRise);\n        const adjustedRun = Math.sqrt((pRun * pRun) / (1 + m * m)) * (P2x < P1x ? -1 : 1);\n        const adjustedRise = m * adjustedRun;\n        return { x: ix + adjustedRun, y: iy + adjustedRise };\n    }\n    static getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {\n        function CB1(t) {\n            return t * t * t;\n        }\n        function CB2(t) {\n            return 3 * t * t * (1 - t);\n        }\n        function CB3(t) {\n            return 3 * t * (1 - t) * (1 - t);\n        }\n        function CB4(t) {\n            return (1 - t) * (1 - t) * (1 - t);\n        }\n        const x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n        const y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {\n        function QB1(t) {\n            return t * t;\n        }\n        function QB2(t) {\n            return 2 * t * (1 - t);\n        }\n        function QB3(t) {\n            return (1 - t) * (1 - t);\n        }\n        const x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n        const y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n        return {\n            x: x,\n            y: y,\n        };\n    }\n    static getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        const cosPsi = Math.cos(psi), sinPsi = Math.sin(psi);\n        const pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta),\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi),\n        };\n    }\n    static parsePathData(data) {\n        if (!data) {\n            return [];\n        }\n        let cs = data;\n        const cc = [\n            'm',\n            'M',\n            'l',\n            'L',\n            'v',\n            'V',\n            'h',\n            'H',\n            'z',\n            'Z',\n            'c',\n            'C',\n            'q',\n            'Q',\n            't',\n            'T',\n            's',\n            'S',\n            'a',\n            'A',\n        ];\n        cs = cs.replace(new RegExp(' ', 'g'), ',');\n        for (var n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n        const arr = cs.split('|');\n        const ca = [];\n        const coords = [];\n        let cpx = 0;\n        let cpy = 0;\n        const re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n        let match;\n        for (n = 1; n < arr.length; n++) {\n            let str = arr[n];\n            let c = str.charAt(0);\n            str = str.slice(1);\n            coords.length = 0;\n            while ((match = re.exec(str))) {\n                coords.push(match[0]);\n            }\n            const p = [];\n            for (let j = 0, jlen = coords.length; j < jlen; j++) {\n                if (coords[j] === '00') {\n                    p.push(0, 0);\n                    continue;\n                }\n                const parsed = parseFloat(coords[j]);\n                if (!isNaN(parsed)) {\n                    p.push(parsed);\n                }\n                else {\n                    p.push(0);\n                }\n            }\n            while (p.length > 0) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                let cmd = '';\n                let points = [];\n                const startX = cpx, startY = cpy;\n                var prevCmd, ctlPtx, ctlPty;\n                var rx, ry, psi, fa, fs, x1, y1;\n                switch (c) {\n                    case 'l':\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'm':\n                        var dx = p.shift();\n                        var dy = p.shift();\n                        cpx += dx;\n                        cpy += dy;\n                        cmd = 'M';\n                        if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n                            for (let idx = ca.length - 2; idx >= 0; idx--) {\n                                if (ca[idx].command === 'M') {\n                                    cpx = ca[idx].points[0] + dx;\n                                    cpy = ca[idx].points[1] + dy;\n                                    break;\n                                }\n                            }\n                        }\n                        points.push(cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'M';\n                        points.push(cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p.shift();\n                        cmd = 'L';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'C':\n                        points.push(p.shift(), p.shift(), p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'c':\n                        points.push(cpx + p.shift(), cpy + p.shift(), cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'C') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[2]);\n                            ctlPty = cpy + (cpy - prevCmd.points[3]);\n                        }\n                        points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'C';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'Q':\n                        points.push(p.shift(), p.shift());\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        points.push(cpx, cpy);\n                        break;\n                    case 'q':\n                        points.push(cpx + p.shift(), cpy + p.shift());\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        prevCmd = ca[ca.length - 1];\n                        if (prevCmd.command === 'Q') {\n                            ctlPtx = cpx + (cpx - prevCmd.points[0]);\n                            ctlPty = cpy + (cpy - prevCmd.points[1]);\n                        }\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'Q';\n                        points.push(ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx = p.shift();\n                        cpy = p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                    case 'a':\n                        rx = p.shift();\n                        ry = p.shift();\n                        psi = p.shift();\n                        fa = p.shift();\n                        fs = p.shift();\n                        x1 = cpx;\n                        y1 = cpy;\n                        cpx += p.shift();\n                        cpy += p.shift();\n                        cmd = 'A';\n                        points = this.convertEndpointToCenterParameterization(x1, y1, cpx, cpy, fa, fs, rx, ry, psi);\n                        break;\n                }\n                ca.push({\n                    command: cmd || c,\n                    points: points,\n                    start: {\n                        x: startX,\n                        y: startY,\n                    },\n                    pathLength: this.calcLength(startX, startY, cmd || c, points),\n                });\n            }\n            if (c === 'z' || c === 'Z') {\n                ca.push({\n                    command: 'z',\n                    points: [],\n                    start: undefined,\n                    pathLength: 0,\n                });\n            }\n        }\n        return ca;\n    }\n    static calcLength(x, y, cmd, points) {\n        let len, p1, p2, t;\n        const path = Path;\n        switch (cmd) {\n            case 'L':\n                return path.getLineLength(x, y, points[0], points[1]);\n            case 'C':\n                return (0, BezierFunctions_1.getCubicArcLength)([x, points[0], points[2], points[4]], [y, points[1], points[3], points[5]], 1);\n            case 'Q':\n                return (0, BezierFunctions_1.getQuadraticArcLength)([x, points[0], points[2]], [y, points[1], points[3]], 1);\n            case 'A':\n                len = 0.0;\n                var start = points[4];\n                var dTheta = points[5];\n                var end = points[4] + dTheta;\n                var inc = Math.PI / 180.0;\n                if (Math.abs(start - end) < inc) {\n                    inc = Math.abs(start - end);\n                }\n                p1 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                if (dTheta < 0) {\n                    for (t = start - inc; t > end; t -= inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                else {\n                    for (t = start + inc; t < end; t += inc) {\n                        p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                        p1 = p2;\n                    }\n                }\n                p2 = path.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                return len;\n        }\n        return 0;\n    }\n    static convertEndpointToCenterParameterization(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg) {\n        const psi = psiDeg * (Math.PI / 180.0);\n        const xp = (Math.cos(psi) * (x1 - x2)) / 2.0 + (Math.sin(psi) * (y1 - y2)) / 2.0;\n        const yp = (-1 * Math.sin(psi) * (x1 - x2)) / 2.0 +\n            (Math.cos(psi) * (y1 - y2)) / 2.0;\n        const lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n        if (lambda > 1) {\n            rx *= Math.sqrt(lambda);\n            ry *= Math.sqrt(lambda);\n        }\n        let f = Math.sqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n            (rx * rx * (yp * yp) + ry * ry * (xp * xp)));\n        if (fa === fs) {\n            f *= -1;\n        }\n        if (isNaN(f)) {\n            f = 0;\n        }\n        const cxp = (f * rx * yp) / ry;\n        const cyp = (f * -ry * xp) / rx;\n        const cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n        const cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n        const vMag = function (v) {\n            return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n        };\n        const vRatio = function (u, v) {\n            return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n        };\n        const vAngle = function (u, v) {\n            return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n        };\n        const theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n        const u = [(xp - cxp) / rx, (yp - cyp) / ry];\n        const v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n        let dTheta = vAngle(u, v);\n        if (vRatio(u, v) <= -1) {\n            dTheta = Math.PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * Math.PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * Math.PI;\n        }\n        return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n    }\n}\nexports.Path = Path;\nPath.prototype.className = 'Path';\nPath.prototype._attrsAffectingSize = ['data'];\n(0, Global_1._registerNode)(Path);\nFactory_1.Factory.addGetterSetter(Path, 'data');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Path.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Rect.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/shapes/Rect.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Rect = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nclass Rect extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const cornerRadius = this.cornerRadius(), width = this.width(), height = this.height();\n        context.beginPath();\n        if (!cornerRadius) {\n            context.rect(0, 0, width, height);\n        }\n        else {\n            Util_1.Util.drawRoundedRectPath(context, width, height, cornerRadius);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n}\nexports.Rect = Rect;\nRect.prototype.className = 'Rect';\n(0, Global_1._registerNode)(Rect);\nFactory_1.Factory.addGetterSetter(Rect, 'cornerRadius', 0, (0, Validators_1.getNumberOrArrayOfNumbersValidator)(4));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1JlY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLHVFQUFVO0FBQ2xDLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFXO0FBQ3BDLGVBQWUsbUJBQU8sQ0FBQyxxRUFBUztBQUNoQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL3NoYXBlcy9SZWN0LmpzPzZkNTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJlY3QgPSB2b2lkIDA7XG5jb25zdCBGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi4vRmFjdG9yeVwiKTtcbmNvbnN0IFNoYXBlXzEgPSByZXF1aXJlKFwiLi4vU2hhcGVcIik7XG5jb25zdCBHbG9iYWxfMSA9IHJlcXVpcmUoXCIuLi9HbG9iYWxcIik7XG5jb25zdCBVdGlsXzEgPSByZXF1aXJlKFwiLi4vVXRpbFwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY2xhc3MgUmVjdCBleHRlbmRzIFNoYXBlXzEuU2hhcGUge1xuICAgIF9zY2VuZUZ1bmMoY29udGV4dCkge1xuICAgICAgICBjb25zdCBjb3JuZXJSYWRpdXMgPSB0aGlzLmNvcm5lclJhZGl1cygpLCB3aWR0aCA9IHRoaXMud2lkdGgoKSwgaGVpZ2h0ID0gdGhpcy5oZWlnaHQoKTtcbiAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgaWYgKCFjb3JuZXJSYWRpdXMpIHtcbiAgICAgICAgICAgIGNvbnRleHQucmVjdCgwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIFV0aWxfMS5VdGlsLmRyYXdSb3VuZGVkUmVjdFBhdGgoY29udGV4dCwgd2lkdGgsIGhlaWdodCwgY29ybmVyUmFkaXVzKTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBjb250ZXh0LmZpbGxTdHJva2VTaGFwZSh0aGlzKTtcbiAgICB9XG59XG5leHBvcnRzLlJlY3QgPSBSZWN0O1xuUmVjdC5wcm90b3R5cGUuY2xhc3NOYW1lID0gJ1JlY3QnO1xuKDAsIEdsb2JhbF8xLl9yZWdpc3Rlck5vZGUpKFJlY3QpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKFJlY3QsICdjb3JuZXJSYWRpdXMnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlck9yQXJyYXlPZk51bWJlcnNWYWxpZGF0b3IpKDQpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Rect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/RegularPolygon.js":
/*!*********************************************************!*\
  !*** ./node_modules/konva/lib/shapes/RegularPolygon.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RegularPolygon = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass RegularPolygon extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const points = this._getPoints();\n        context.beginPath();\n        context.moveTo(points[0].x, points[0].y);\n        for (let n = 1; n < points.length; n++) {\n            context.lineTo(points[n].x, points[n].y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    _getPoints() {\n        const sides = this.attrs.sides;\n        const radius = this.attrs.radius || 0;\n        const points = [];\n        for (let n = 0; n < sides; n++) {\n            points.push({\n                x: radius * Math.sin((n * 2 * Math.PI) / sides),\n                y: -1 * radius * Math.cos((n * 2 * Math.PI) / sides),\n            });\n        }\n        return points;\n    }\n    getSelfRect() {\n        const points = this._getPoints();\n        let minX = points[0].x;\n        let maxX = points[0].y;\n        let minY = points[0].x;\n        let maxY = points[0].y;\n        points.forEach((point) => {\n            minX = Math.min(minX, point.x);\n            maxX = Math.max(maxX, point.x);\n            minY = Math.min(minY, point.y);\n            maxY = Math.max(maxY, point.y);\n        });\n        return {\n            x: minX,\n            y: minY,\n            width: maxX - minX,\n            height: maxY - minY,\n        };\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nexports.RegularPolygon = RegularPolygon;\nRegularPolygon.prototype.className = 'RegularPolygon';\nRegularPolygon.prototype._centroid = true;\nRegularPolygon.prototype._attrsAffectingSize = ['radius'];\n(0, Global_1._registerNode)(RegularPolygon);\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(RegularPolygon, 'sides', 0, (0, Validators_1.getNumberValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1JlZ3VsYXJQb2x5Z29uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixrQkFBa0IsbUJBQU8sQ0FBQywyRUFBWTtBQUN0QyxnQkFBZ0IsbUJBQU8sQ0FBQyx1RUFBVTtBQUNsQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQyx5RUFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsV0FBVztBQUNuQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL3NoYXBlcy9SZWd1bGFyUG9seWdvbi5qcz9mOWIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZWd1bGFyUG9seWdvbiA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgU2hhcGVfMSA9IHJlcXVpcmUoXCIuLi9TaGFwZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgR2xvYmFsXzEgPSByZXF1aXJlKFwiLi4vR2xvYmFsXCIpO1xuY2xhc3MgUmVndWxhclBvbHlnb24gZXh0ZW5kcyBTaGFwZV8xLlNoYXBlIHtcbiAgICBfc2NlbmVGdW5jKGNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgcG9pbnRzID0gdGhpcy5fZ2V0UG9pbnRzKCk7XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIGNvbnRleHQubW92ZVRvKHBvaW50c1swXS54LCBwb2ludHNbMF0ueSk7XG4gICAgICAgIGZvciAobGV0IG4gPSAxOyBuIDwgcG9pbnRzLmxlbmd0aDsgbisrKSB7XG4gICAgICAgICAgICBjb250ZXh0LmxpbmVUbyhwb2ludHNbbl0ueCwgcG9pbnRzW25dLnkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgIGNvbnRleHQuZmlsbFN0cm9rZVNoYXBlKHRoaXMpO1xuICAgIH1cbiAgICBfZ2V0UG9pbnRzKCkge1xuICAgICAgICBjb25zdCBzaWRlcyA9IHRoaXMuYXR0cnMuc2lkZXM7XG4gICAgICAgIGNvbnN0IHJhZGl1cyA9IHRoaXMuYXR0cnMucmFkaXVzIHx8IDA7XG4gICAgICAgIGNvbnN0IHBvaW50cyA9IFtdO1xuICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IHNpZGVzOyBuKyspIHtcbiAgICAgICAgICAgIHBvaW50cy5wdXNoKHtcbiAgICAgICAgICAgICAgICB4OiByYWRpdXMgKiBNYXRoLnNpbigobiAqIDIgKiBNYXRoLlBJKSAvIHNpZGVzKSxcbiAgICAgICAgICAgICAgICB5OiAtMSAqIHJhZGl1cyAqIE1hdGguY29zKChuICogMiAqIE1hdGguUEkpIC8gc2lkZXMpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvaW50cztcbiAgICB9XG4gICAgZ2V0U2VsZlJlY3QoKSB7XG4gICAgICAgIGNvbnN0IHBvaW50cyA9IHRoaXMuX2dldFBvaW50cygpO1xuICAgICAgICBsZXQgbWluWCA9IHBvaW50c1swXS54O1xuICAgICAgICBsZXQgbWF4WCA9IHBvaW50c1swXS55O1xuICAgICAgICBsZXQgbWluWSA9IHBvaW50c1swXS54O1xuICAgICAgICBsZXQgbWF4WSA9IHBvaW50c1swXS55O1xuICAgICAgICBwb2ludHMuZm9yRWFjaCgocG9pbnQpID0+IHtcbiAgICAgICAgICAgIG1pblggPSBNYXRoLm1pbihtaW5YLCBwb2ludC54KTtcbiAgICAgICAgICAgIG1heFggPSBNYXRoLm1heChtYXhYLCBwb2ludC54KTtcbiAgICAgICAgICAgIG1pblkgPSBNYXRoLm1pbihtaW5ZLCBwb2ludC55KTtcbiAgICAgICAgICAgIG1heFkgPSBNYXRoLm1heChtYXhZLCBwb2ludC55KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB4OiBtaW5YLFxuICAgICAgICAgICAgeTogbWluWSxcbiAgICAgICAgICAgIHdpZHRoOiBtYXhYIC0gbWluWCxcbiAgICAgICAgICAgIGhlaWdodDogbWF4WSAtIG1pblksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yYWRpdXMoKSAqIDI7XG4gICAgfVxuICAgIGdldEhlaWdodCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmFkaXVzKCkgKiAyO1xuICAgIH1cbiAgICBzZXRXaWR0aCh3aWR0aCkge1xuICAgICAgICB0aGlzLnJhZGl1cyh3aWR0aCAvIDIpO1xuICAgIH1cbiAgICBzZXRIZWlnaHQoaGVpZ2h0KSB7XG4gICAgICAgIHRoaXMucmFkaXVzKGhlaWdodCAvIDIpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVndWxhclBvbHlnb24gPSBSZWd1bGFyUG9seWdvbjtcblJlZ3VsYXJQb2x5Z29uLnByb3RvdHlwZS5jbGFzc05hbWUgPSAnUmVndWxhclBvbHlnb24nO1xuUmVndWxhclBvbHlnb24ucHJvdG90eXBlLl9jZW50cm9pZCA9IHRydWU7XG5SZWd1bGFyUG9seWdvbi5wcm90b3R5cGUuX2F0dHJzQWZmZWN0aW5nU2l6ZSA9IFsncmFkaXVzJ107XG4oMCwgR2xvYmFsXzEuX3JlZ2lzdGVyTm9kZSkoUmVndWxhclBvbHlnb24pO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKFJlZ3VsYXJQb2x5Z29uLCAncmFkaXVzJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKFJlZ3VsYXJQb2x5Z29uLCAnc2lkZXMnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/RegularPolygon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Ring.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/shapes/Ring.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ring = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst PIx2 = Math.PI * 2;\nclass Ring extends Shape_1.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.innerRadius(), 0, PIx2, false);\n        context.moveTo(this.outerRadius(), 0);\n        context.arc(0, 0, this.outerRadius(), PIx2, 0, true);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nexports.Ring = Ring;\nRing.prototype.className = 'Ring';\nRing.prototype._centroid = true;\nRing.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_1._registerNode)(Ring);\nFactory_1.Factory.addGetterSetter(Ring, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Ring, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1JpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLHVFQUFVO0FBQ2xDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFlO0FBQzVDLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1JpbmcuanM/OTUxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmluZyA9IHZvaWQgMDtcbmNvbnN0IEZhY3RvcnlfMSA9IHJlcXVpcmUoXCIuLi9GYWN0b3J5XCIpO1xuY29uc3QgU2hhcGVfMSA9IHJlcXVpcmUoXCIuLi9TaGFwZVwiKTtcbmNvbnN0IFZhbGlkYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9WYWxpZGF0b3JzXCIpO1xuY29uc3QgR2xvYmFsXzEgPSByZXF1aXJlKFwiLi4vR2xvYmFsXCIpO1xuY29uc3QgUEl4MiA9IE1hdGguUEkgKiAyO1xuY2xhc3MgUmluZyBleHRlbmRzIFNoYXBlXzEuU2hhcGUge1xuICAgIF9zY2VuZUZ1bmMoY29udGV4dCkge1xuICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICBjb250ZXh0LmFyYygwLCAwLCB0aGlzLmlubmVyUmFkaXVzKCksIDAsIFBJeDIsIGZhbHNlKTtcbiAgICAgICAgY29udGV4dC5tb3ZlVG8odGhpcy5vdXRlclJhZGl1cygpLCAwKTtcbiAgICAgICAgY29udGV4dC5hcmMoMCwgMCwgdGhpcy5vdXRlclJhZGl1cygpLCBQSXgyLCAwLCB0cnVlKTtcbiAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgY29udGV4dC5maWxsU3Ryb2tlU2hhcGUodGhpcyk7XG4gICAgfVxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vdXRlclJhZGl1cygpICogMjtcbiAgICB9XG4gICAgZ2V0SGVpZ2h0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vdXRlclJhZGl1cygpICogMjtcbiAgICB9XG4gICAgc2V0V2lkdGgod2lkdGgpIHtcbiAgICAgICAgdGhpcy5vdXRlclJhZGl1cyh3aWR0aCAvIDIpO1xuICAgIH1cbiAgICBzZXRIZWlnaHQoaGVpZ2h0KSB7XG4gICAgICAgIHRoaXMub3V0ZXJSYWRpdXMoaGVpZ2h0IC8gMik7XG4gICAgfVxufVxuZXhwb3J0cy5SaW5nID0gUmluZztcblJpbmcucHJvdG90eXBlLmNsYXNzTmFtZSA9ICdSaW5nJztcblJpbmcucHJvdG90eXBlLl9jZW50cm9pZCA9IHRydWU7XG5SaW5nLnByb3RvdHlwZS5fYXR0cnNBZmZlY3RpbmdTaXplID0gWydpbm5lclJhZGl1cycsICdvdXRlclJhZGl1cyddO1xuKDAsIEdsb2JhbF8xLl9yZWdpc3Rlck5vZGUpKFJpbmcpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKFJpbmcsICdpbm5lclJhZGl1cycsIDAsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihSaW5nLCAnb3V0ZXJSYWRpdXMnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Ring.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Sprite.js":
/*!*************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Sprite.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sprite = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Animation_1 = __webpack_require__(/*! ../Animation */ \"(app-pages-browser)/./node_modules/konva/lib/Animation.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Sprite extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this._updated = true;\n        this.anim = new Animation_1.Animation(() => {\n            const updated = this._updated;\n            this._updated = false;\n            return updated;\n        });\n        this.on('animationChange.konva', function () {\n            this.frameIndex(0);\n        });\n        this.on('frameIndexChange.konva', function () {\n            this._updated = true;\n        });\n        this.on('frameRateChange.konva', function () {\n            if (!this.anim.isRunning()) {\n                return;\n            }\n            clearInterval(this.interval);\n            this._setInterval();\n        });\n    }\n    _sceneFunc(context) {\n        const anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), x = set[ix4 + 0], y = set[ix4 + 1], width = set[ix4 + 2], height = set[ix4 + 3], image = this.image();\n        if (this.hasFill() || this.hasStroke()) {\n            context.beginPath();\n            context.rect(0, 0, width, height);\n            context.closePath();\n            context.fillStrokeShape(this);\n        }\n        if (image) {\n            if (offsets) {\n                const offset = offsets[anim], ix2 = index * 2;\n                context.drawImage(image, x, y, width, height, offset[ix2 + 0], offset[ix2 + 1], width, height);\n            }\n            else {\n                context.drawImage(image, x, y, width, height, 0, 0, width, height);\n            }\n        }\n    }\n    _hitFunc(context) {\n        const anim = this.animation(), index = this.frameIndex(), ix4 = index * 4, set = this.animations()[anim], offsets = this.frameOffsets(), width = set[ix4 + 2], height = set[ix4 + 3];\n        context.beginPath();\n        if (offsets) {\n            const offset = offsets[anim];\n            const ix2 = index * 2;\n            context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n        }\n        else {\n            context.rect(0, 0, width, height);\n        }\n        context.closePath();\n        context.fillShape(this);\n    }\n    _useBufferCanvas() {\n        return super._useBufferCanvas(true);\n    }\n    _setInterval() {\n        const that = this;\n        this.interval = setInterval(function () {\n            that._updateIndex();\n        }, 1000 / this.frameRate());\n    }\n    start() {\n        if (this.isRunning()) {\n            return;\n        }\n        const layer = this.getLayer();\n        this.anim.setLayers(layer);\n        this._setInterval();\n        this.anim.start();\n    }\n    stop() {\n        this.anim.stop();\n        clearInterval(this.interval);\n    }\n    isRunning() {\n        return this.anim.isRunning();\n    }\n    _updateIndex() {\n        const index = this.frameIndex(), animation = this.animation(), animations = this.animations(), anim = animations[animation], len = anim.length / 4;\n        if (index < len - 1) {\n            this.frameIndex(index + 1);\n        }\n        else {\n            this.frameIndex(0);\n        }\n    }\n}\nexports.Sprite = Sprite;\nSprite.prototype.className = 'Sprite';\n(0, Global_1._registerNode)(Sprite);\nFactory_1.Factory.addGetterSetter(Sprite, 'animation');\nFactory_1.Factory.addGetterSetter(Sprite, 'animations');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameOffsets');\nFactory_1.Factory.addGetterSetter(Sprite, 'image');\nFactory_1.Factory.addGetterSetter(Sprite, 'frameIndex', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Sprite, 'frameRate', 17, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.backCompat(Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex',\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1Nwcml0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Qsa0JBQWtCLG1CQUFPLENBQUMsMkVBQVk7QUFDdEMsZ0JBQWdCLG1CQUFPLENBQUMsdUVBQVU7QUFDbEMsb0JBQW9CLG1CQUFPLENBQUMsK0VBQWM7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsaUZBQWU7QUFDNUMsaUJBQWlCLG1CQUFPLENBQUMseUVBQVc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1Nwcml0ZS5qcz80YzZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TcHJpdGUgPSB2b2lkIDA7XG5jb25zdCBGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi4vRmFjdG9yeVwiKTtcbmNvbnN0IFNoYXBlXzEgPSByZXF1aXJlKFwiLi4vU2hhcGVcIik7XG5jb25zdCBBbmltYXRpb25fMSA9IHJlcXVpcmUoXCIuLi9BbmltYXRpb25cIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4uL0dsb2JhbFwiKTtcbmNsYXNzIFNwcml0ZSBleHRlbmRzIFNoYXBlXzEuU2hhcGUge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgICAgICBzdXBlcihjb25maWcpO1xuICAgICAgICB0aGlzLl91cGRhdGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5hbmltID0gbmV3IEFuaW1hdGlvbl8xLkFuaW1hdGlvbigoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB1cGRhdGVkID0gdGhpcy5fdXBkYXRlZDtcbiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiB1cGRhdGVkO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vbignYW5pbWF0aW9uQ2hhbmdlLmtvbnZhJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5mcmFtZUluZGV4KDApO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vbignZnJhbWVJbmRleENoYW5nZS5rb252YScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMuX3VwZGF0ZWQgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vbignZnJhbWVSYXRlQ2hhbmdlLmtvbnZhJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmFuaW0uaXNSdW5uaW5nKCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpO1xuICAgICAgICAgICAgdGhpcy5fc2V0SW50ZXJ2YWwoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9zY2VuZUZ1bmMoY29udGV4dCkge1xuICAgICAgICBjb25zdCBhbmltID0gdGhpcy5hbmltYXRpb24oKSwgaW5kZXggPSB0aGlzLmZyYW1lSW5kZXgoKSwgaXg0ID0gaW5kZXggKiA0LCBzZXQgPSB0aGlzLmFuaW1hdGlvbnMoKVthbmltXSwgb2Zmc2V0cyA9IHRoaXMuZnJhbWVPZmZzZXRzKCksIHggPSBzZXRbaXg0ICsgMF0sIHkgPSBzZXRbaXg0ICsgMV0sIHdpZHRoID0gc2V0W2l4NCArIDJdLCBoZWlnaHQgPSBzZXRbaXg0ICsgM10sIGltYWdlID0gdGhpcy5pbWFnZSgpO1xuICAgICAgICBpZiAodGhpcy5oYXNGaWxsKCkgfHwgdGhpcy5oYXNTdHJva2UoKSkge1xuICAgICAgICAgICAgY29udGV4dC5iZWdpblBhdGgoKTtcbiAgICAgICAgICAgIGNvbnRleHQucmVjdCgwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgICAgIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gICAgICAgICAgICBjb250ZXh0LmZpbGxTdHJva2VTaGFwZSh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaW1hZ2UpIHtcbiAgICAgICAgICAgIGlmIChvZmZzZXRzKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2Zmc2V0ID0gb2Zmc2V0c1thbmltXSwgaXgyID0gaW5kZXggKiAyO1xuICAgICAgICAgICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKGltYWdlLCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCBvZmZzZXRbaXgyICsgMF0sIG9mZnNldFtpeDIgKyAxXSwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0LmRyYXdJbWFnZShpbWFnZSwgeCwgeSwgd2lkdGgsIGhlaWdodCwgMCwgMCwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgX2hpdEZ1bmMoY29udGV4dCkge1xuICAgICAgICBjb25zdCBhbmltID0gdGhpcy5hbmltYXRpb24oKSwgaW5kZXggPSB0aGlzLmZyYW1lSW5kZXgoKSwgaXg0ID0gaW5kZXggKiA0LCBzZXQgPSB0aGlzLmFuaW1hdGlvbnMoKVthbmltXSwgb2Zmc2V0cyA9IHRoaXMuZnJhbWVPZmZzZXRzKCksIHdpZHRoID0gc2V0W2l4NCArIDJdLCBoZWlnaHQgPSBzZXRbaXg0ICsgM107XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIGlmIChvZmZzZXRzKSB7XG4gICAgICAgICAgICBjb25zdCBvZmZzZXQgPSBvZmZzZXRzW2FuaW1dO1xuICAgICAgICAgICAgY29uc3QgaXgyID0gaW5kZXggKiAyO1xuICAgICAgICAgICAgY29udGV4dC5yZWN0KG9mZnNldFtpeDIgKyAwXSwgb2Zmc2V0W2l4MiArIDFdLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRleHQucmVjdCgwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBjb250ZXh0LmZpbGxTaGFwZSh0aGlzKTtcbiAgICB9XG4gICAgX3VzZUJ1ZmZlckNhbnZhcygpIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLl91c2VCdWZmZXJDYW52YXModHJ1ZSk7XG4gICAgfVxuICAgIF9zZXRJbnRlcnZhbCgpIHtcbiAgICAgICAgY29uc3QgdGhhdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGF0Ll91cGRhdGVJbmRleCgpO1xuICAgICAgICB9LCAxMDAwIC8gdGhpcy5mcmFtZVJhdGUoKSk7XG4gICAgfVxuICAgIHN0YXJ0KCkge1xuICAgICAgICBpZiAodGhpcy5pc1J1bm5pbmcoKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxheWVyID0gdGhpcy5nZXRMYXllcigpO1xuICAgICAgICB0aGlzLmFuaW0uc2V0TGF5ZXJzKGxheWVyKTtcbiAgICAgICAgdGhpcy5fc2V0SW50ZXJ2YWwoKTtcbiAgICAgICAgdGhpcy5hbmltLnN0YXJ0KCk7XG4gICAgfVxuICAgIHN0b3AoKSB7XG4gICAgICAgIHRoaXMuYW5pbS5zdG9wKCk7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG4gICAgfVxuICAgIGlzUnVubmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYW5pbS5pc1J1bm5pbmcoKTtcbiAgICB9XG4gICAgX3VwZGF0ZUluZGV4KCkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuZnJhbWVJbmRleCgpLCBhbmltYXRpb24gPSB0aGlzLmFuaW1hdGlvbigpLCBhbmltYXRpb25zID0gdGhpcy5hbmltYXRpb25zKCksIGFuaW0gPSBhbmltYXRpb25zW2FuaW1hdGlvbl0sIGxlbiA9IGFuaW0ubGVuZ3RoIC8gNDtcbiAgICAgICAgaWYgKGluZGV4IDwgbGVuIC0gMSkge1xuICAgICAgICAgICAgdGhpcy5mcmFtZUluZGV4KGluZGV4ICsgMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmZyYW1lSW5kZXgoMCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlNwcml0ZSA9IFNwcml0ZTtcblNwcml0ZS5wcm90b3R5cGUuY2xhc3NOYW1lID0gJ1Nwcml0ZSc7XG4oMCwgR2xvYmFsXzEuX3JlZ2lzdGVyTm9kZSkoU3ByaXRlKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihTcHJpdGUsICdhbmltYXRpb24nKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihTcHJpdGUsICdhbmltYXRpb25zJyk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoU3ByaXRlLCAnZnJhbWVPZmZzZXRzJyk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoU3ByaXRlLCAnaW1hZ2UnKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihTcHJpdGUsICdmcmFtZUluZGV4JywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKFNwcml0ZSwgJ2ZyYW1lUmF0ZScsIDE3LCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5iYWNrQ29tcGF0KFNwcml0ZSwge1xuICAgIGluZGV4OiAnZnJhbWVJbmRleCcsXG4gICAgZ2V0SW5kZXg6ICdnZXRGcmFtZUluZGV4JyxcbiAgICBzZXRJbmRleDogJ3NldEZyYW1lSW5kZXgnLFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Sprite.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Star.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/shapes/Star.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Star = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Star extends Shape_1.Shape {\n    _sceneFunc(context) {\n        const innerRadius = this.innerRadius(), outerRadius = this.outerRadius(), numPoints = this.numPoints();\n        context.beginPath();\n        context.moveTo(0, 0 - outerRadius);\n        for (let n = 1; n < numPoints * 2; n++) {\n            const radius = n % 2 === 0 ? outerRadius : innerRadius;\n            const x = radius * Math.sin((n * Math.PI) / numPoints);\n            const y = -1 * radius * Math.cos((n * Math.PI) / numPoints);\n            context.lineTo(x, y);\n        }\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n}\nexports.Star = Star;\nStar.prototype.className = 'Star';\nStar.prototype._centroid = true;\nStar.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n(0, Global_1._registerNode)(Star);\nFactory_1.Factory.addGetterSetter(Star, 'numPoints', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Star, 'innerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Star, 'outerRadius', 0, (0, Validators_1.getNumberValidator)());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1N0YXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLGtCQUFrQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLHVFQUFVO0FBQ2xDLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFlO0FBQzVDLGlCQUFpQixtQkFBTyxDQUFDLHlFQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsbUJBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMva29udmEvbGliL3NoYXBlcy9TdGFyLmpzP2FkNjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0YXIgPSB2b2lkIDA7XG5jb25zdCBGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi4vRmFjdG9yeVwiKTtcbmNvbnN0IFNoYXBlXzEgPSByZXF1aXJlKFwiLi4vU2hhcGVcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmNvbnN0IEdsb2JhbF8xID0gcmVxdWlyZShcIi4uL0dsb2JhbFwiKTtcbmNsYXNzIFN0YXIgZXh0ZW5kcyBTaGFwZV8xLlNoYXBlIHtcbiAgICBfc2NlbmVGdW5jKGNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgaW5uZXJSYWRpdXMgPSB0aGlzLmlubmVyUmFkaXVzKCksIG91dGVyUmFkaXVzID0gdGhpcy5vdXRlclJhZGl1cygpLCBudW1Qb2ludHMgPSB0aGlzLm51bVBvaW50cygpO1xuICAgICAgICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICAgICAgICBjb250ZXh0Lm1vdmVUbygwLCAwIC0gb3V0ZXJSYWRpdXMpO1xuICAgICAgICBmb3IgKGxldCBuID0gMTsgbiA8IG51bVBvaW50cyAqIDI7IG4rKykge1xuICAgICAgICAgICAgY29uc3QgcmFkaXVzID0gbiAlIDIgPT09IDAgPyBvdXRlclJhZGl1cyA6IGlubmVyUmFkaXVzO1xuICAgICAgICAgICAgY29uc3QgeCA9IHJhZGl1cyAqIE1hdGguc2luKChuICogTWF0aC5QSSkgLyBudW1Qb2ludHMpO1xuICAgICAgICAgICAgY29uc3QgeSA9IC0xICogcmFkaXVzICogTWF0aC5jb3MoKG4gKiBNYXRoLlBJKSAvIG51bVBvaW50cyk7XG4gICAgICAgICAgICBjb250ZXh0LmxpbmVUbyh4LCB5KTtcbiAgICAgICAgfVxuICAgICAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgICAgICBjb250ZXh0LmZpbGxTdHJva2VTaGFwZSh0aGlzKTtcbiAgICB9XG4gICAgZ2V0V2lkdGgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm91dGVyUmFkaXVzKCkgKiAyO1xuICAgIH1cbiAgICBnZXRIZWlnaHQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm91dGVyUmFkaXVzKCkgKiAyO1xuICAgIH1cbiAgICBzZXRXaWR0aCh3aWR0aCkge1xuICAgICAgICB0aGlzLm91dGVyUmFkaXVzKHdpZHRoIC8gMik7XG4gICAgfVxuICAgIHNldEhlaWdodChoZWlnaHQpIHtcbiAgICAgICAgdGhpcy5vdXRlclJhZGl1cyhoZWlnaHQgLyAyKTtcbiAgICB9XG59XG5leHBvcnRzLlN0YXIgPSBTdGFyO1xuU3Rhci5wcm90b3R5cGUuY2xhc3NOYW1lID0gJ1N0YXInO1xuU3Rhci5wcm90b3R5cGUuX2NlbnRyb2lkID0gdHJ1ZTtcblN0YXIucHJvdG90eXBlLl9hdHRyc0FmZmVjdGluZ1NpemUgPSBbJ2lubmVyUmFkaXVzJywgJ291dGVyUmFkaXVzJ107XG4oMCwgR2xvYmFsXzEuX3JlZ2lzdGVyTm9kZSkoU3Rhcik7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoU3RhciwgJ251bVBvaW50cycsIDUsICgwLCBWYWxpZGF0b3JzXzEuZ2V0TnVtYmVyVmFsaWRhdG9yKSgpKTtcbkZhY3RvcnlfMS5GYWN0b3J5LmFkZEdldHRlclNldHRlcihTdGFyLCAnaW5uZXJSYWRpdXMnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoU3RhciwgJ291dGVyUmFkaXVzJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Star.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Text.js":
/*!***********************************************!*\
  !*** ./node_modules/konva/lib/shapes/Text.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Text = void 0;\nexports.stringToArray = stringToArray;\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_2 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nfunction stringToArray(string) {\n    return [...string].reduce((acc, char, index, array) => {\n        if (/\\p{Emoji_Modifier_Base}\\p{Emoji_Modifier}?(?:\\u200D\\p{Emoji_Presentation})+/u.test(char)) {\n            acc.push(char);\n        }\n        else if (/\\p{Regional_Indicator}{2}/u.test(char + (array[index + 1] || ''))) {\n            acc.push(char + array[index + 1]);\n        }\n        else if (index > 0 && /\\p{Mn}|\\p{Me}|\\p{Mc}/u.test(char)) {\n            acc[acc.length - 1] += char;\n        }\n        else {\n            acc.push(char);\n        }\n        return acc;\n    }, []);\n}\nconst AUTO = 'auto', CENTER = 'center', INHERIT = 'inherit', JUSTIFY = 'justify', CHANGE_KONVA = 'Change.konva', CONTEXT_2D = '2d', DASH = '-', LEFT = 'left', TEXT = 'text', TEXT_UPPER = 'Text', TOP = 'top', BOTTOM = 'bottom', MIDDLE = 'middle', NORMAL = 'normal', PX_SPACE = 'px ', SPACE = ' ', RIGHT = 'right', RTL = 'rtl', WORD = 'word', CHAR = 'char', NONE = 'none', ELLIPSIS = '…', ATTR_CHANGE_LIST = [\n    'direction',\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'fontVariant',\n    'padding',\n    'align',\n    'verticalAlign',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'wrap',\n    'ellipsis',\n    'letterSpacing',\n], attrChangeListLen = ATTR_CHANGE_LIST.length;\nfunction normalizeFontFamily(fontFamily) {\n    return fontFamily\n        .split(',')\n        .map((family) => {\n        family = family.trim();\n        const hasSpace = family.indexOf(' ') >= 0;\n        const hasQuotes = family.indexOf('\"') >= 0 || family.indexOf(\"'\") >= 0;\n        if (hasSpace && !hasQuotes) {\n            family = `\"${family}\"`;\n        }\n        return family;\n    })\n        .join(', ');\n}\nlet dummyContext;\nfunction getDummyContext() {\n    if (dummyContext) {\n        return dummyContext;\n    }\n    dummyContext = Util_1.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n}\nfunction _fillFunc(context) {\n    context.fillText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction _strokeFunc(context) {\n    context.setAttr('miterLimit', 2);\n    context.strokeText(this._partialText, this._partialTextX, this._partialTextY);\n}\nfunction checkDefaultFill(config) {\n    config = config || {};\n    if (!config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops &&\n        !config.fillPatternImage) {\n        config.fill = config.fill || 'black';\n    }\n    return config;\n}\nclass Text extends Shape_1.Shape {\n    constructor(config) {\n        super(checkDefaultFill(config));\n        this._partialTextX = 0;\n        this._partialTextY = 0;\n        for (let n = 0; n < attrChangeListLen; n++) {\n            this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n        }\n        this._setTextData();\n    }\n    _sceneFunc(context) {\n        const textArr = this.textArr, textArrLen = textArr.length;\n        if (!this.text()) {\n            return;\n        }\n        let padding = this.padding(), fontSize = this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, verticalAlign = this.verticalAlign(), direction = this.direction(), alignY = 0, align = this.align(), totalWidth = this.getWidth(), letterSpacing = this.letterSpacing(), fill = this.fill(), textDecoration = this.textDecoration(), shouldUnderline = textDecoration.indexOf('underline') !== -1, shouldLineThrough = textDecoration.indexOf('line-through') !== -1, n;\n        direction = direction === INHERIT ? context.direction : direction;\n        let translateY = lineHeightPx / 2;\n        let baseline = MIDDLE;\n        if (Global_1.Konva._fixTextRendering) {\n            const metrics = this.measureSize('M');\n            baseline = 'alphabetic';\n            translateY =\n                (metrics.fontBoundingBoxAscent - metrics.fontBoundingBoxDescent) / 2 +\n                    lineHeightPx / 2;\n        }\n        var lineTranslateX = 0;\n        var lineTranslateY = 0;\n        if (direction === RTL) {\n            context.setAttr('direction', direction);\n        }\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', baseline);\n        context.setAttr('textAlign', LEFT);\n        if (verticalAlign === MIDDLE) {\n            alignY = (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n        }\n        else if (verticalAlign === BOTTOM) {\n            alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n        }\n        context.translate(padding, alignY + padding);\n        for (n = 0; n < textArrLen; n++) {\n            var lineTranslateX = 0;\n            var lineTranslateY = 0;\n            var obj = textArr[n], text = obj.text, width = obj.width, lastLine = obj.lastInParagraph, spacesNumber, oneWord, lineWidth;\n            context.save();\n            if (align === RIGHT) {\n                lineTranslateX += totalWidth - width - padding * 2;\n            }\n            else if (align === CENTER) {\n                lineTranslateX += (totalWidth - width - padding * 2) / 2;\n            }\n            if (shouldUnderline) {\n                context.save();\n                context.beginPath();\n                const yOffset = Global_1.Konva._fixTextRendering\n                    ? Math.round(fontSize / 4)\n                    : Math.round(fontSize / 2);\n                const x = lineTranslateX;\n                const y = translateY + lineTranslateY + yOffset;\n                context.moveTo(x, y);\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && !lastLine ? totalWidth - padding * 2 : width;\n                context.lineTo(x + Math.round(lineWidth), y);\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (shouldLineThrough) {\n                context.save();\n                context.beginPath();\n                const yOffset = Global_1.Konva._fixTextRendering ? -Math.round(fontSize / 4) : 0;\n                context.moveTo(lineTranslateX, translateY + lineTranslateY + yOffset);\n                spacesNumber = text.split(' ').length - 1;\n                oneWord = spacesNumber === 0;\n                lineWidth =\n                    align === JUSTIFY && lastLine && !oneWord\n                        ? totalWidth - padding * 2\n                        : width;\n                context.lineTo(lineTranslateX + Math.round(lineWidth), translateY + lineTranslateY + yOffset);\n                context.lineWidth = fontSize / 15;\n                const gradient = this._getLinearGradient();\n                context.strokeStyle = gradient || fill;\n                context.stroke();\n                context.restore();\n            }\n            if (direction !== RTL && (letterSpacing !== 0 || align === JUSTIFY)) {\n                spacesNumber = text.split(' ').length - 1;\n                const array = stringToArray(text);\n                for (let li = 0; li < array.length; li++) {\n                    const letter = array[li];\n                    if (letter === ' ' && !lastLine && align === JUSTIFY) {\n                        lineTranslateX += (totalWidth - padding * 2 - width) / spacesNumber;\n                    }\n                    this._partialTextX = lineTranslateX;\n                    this._partialTextY = translateY + lineTranslateY;\n                    this._partialText = letter;\n                    context.fillStrokeShape(this);\n                    lineTranslateX += this.measureSize(letter).width + letterSpacing;\n                }\n            }\n            else {\n                if (letterSpacing !== 0) {\n                    context.setAttr('letterSpacing', `${letterSpacing}px`);\n                }\n                this._partialTextX = lineTranslateX;\n                this._partialTextY = translateY + lineTranslateY;\n                this._partialText = text;\n                context.fillStrokeShape(this);\n            }\n            context.restore();\n            if (textArrLen > 1) {\n                translateY += lineHeightPx;\n            }\n        }\n    }\n    _hitFunc(context) {\n        const width = this.getWidth(), height = this.getHeight();\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    setText(text) {\n        const str = Util_1.Util._isString(text)\n            ? text\n            : text === null || text === undefined\n                ? ''\n                : text + '';\n        this._setAttr(TEXT, str);\n        return this;\n    }\n    getWidth() {\n        const isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n        return isAuto ? this.getTextWidth() + this.padding() * 2 : this.attrs.width;\n    }\n    getHeight() {\n        const isAuto = this.attrs.height === AUTO || this.attrs.height === undefined;\n        return isAuto\n            ? this.fontSize() * this.textArr.length * this.lineHeight() +\n                this.padding() * 2\n            : this.attrs.height;\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    measureSize(text) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        let _context = getDummyContext(), fontSize = this.fontSize(), metrics;\n        _context.save();\n        _context.font = this._getContextFont();\n        metrics = _context.measureText(text);\n        _context.restore();\n        const scaleFactor = fontSize / 100;\n        return {\n            actualBoundingBoxAscent: (_a = metrics.actualBoundingBoxAscent) !== null && _a !== void 0 ? _a : 71.58203125 * scaleFactor,\n            actualBoundingBoxDescent: (_b = metrics.actualBoundingBoxDescent) !== null && _b !== void 0 ? _b : 0,\n            actualBoundingBoxLeft: (_c = metrics.actualBoundingBoxLeft) !== null && _c !== void 0 ? _c : -7.421875 * scaleFactor,\n            actualBoundingBoxRight: (_d = metrics.actualBoundingBoxRight) !== null && _d !== void 0 ? _d : 75.732421875 * scaleFactor,\n            alphabeticBaseline: (_e = metrics.alphabeticBaseline) !== null && _e !== void 0 ? _e : 0,\n            emHeightAscent: (_f = metrics.emHeightAscent) !== null && _f !== void 0 ? _f : 100 * scaleFactor,\n            emHeightDescent: (_g = metrics.emHeightDescent) !== null && _g !== void 0 ? _g : -20 * scaleFactor,\n            fontBoundingBoxAscent: (_h = metrics.fontBoundingBoxAscent) !== null && _h !== void 0 ? _h : 91 * scaleFactor,\n            fontBoundingBoxDescent: (_j = metrics.fontBoundingBoxDescent) !== null && _j !== void 0 ? _j : 21 * scaleFactor,\n            hangingBaseline: (_k = metrics.hangingBaseline) !== null && _k !== void 0 ? _k : 72.80000305175781 * scaleFactor,\n            ideographicBaseline: (_l = metrics.ideographicBaseline) !== null && _l !== void 0 ? _l : -21 * scaleFactor,\n            width: metrics.width,\n            height: fontSize,\n        };\n    }\n    _getContextFont() {\n        return (this.fontStyle() +\n            SPACE +\n            this.fontVariant() +\n            SPACE +\n            (this.fontSize() + PX_SPACE) +\n            normalizeFontFamily(this.fontFamily()));\n    }\n    _addTextLine(line) {\n        const align = this.align();\n        if (align === JUSTIFY) {\n            line = line.trim();\n        }\n        const width = this._getTextWidth(line);\n        return this.textArr.push({\n            text: line,\n            width: width,\n            lastInParagraph: false,\n        });\n    }\n    _getTextWidth(text) {\n        const letterSpacing = this.letterSpacing();\n        const length = text.length;\n        return (getDummyContext().measureText(text).width +\n            (length ? letterSpacing * (length - 1) : 0));\n    }\n    _setTextData() {\n        let lines = this.text().split('\\n'), fontSize = +this.fontSize(), textWidth = 0, lineHeightPx = this.lineHeight() * fontSize, width = this.attrs.width, height = this.attrs.height, fixedWidth = width !== AUTO && width !== undefined, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxWidth = width - padding * 2, maxHeightPx = height - padding * 2, currentHeightPx = 0, wrap = this.wrap(), shouldWrap = wrap !== NONE, wrapAtWord = wrap !== CHAR && shouldWrap, shouldAddEllipsis = this.ellipsis();\n        this.textArr = [];\n        getDummyContext().font = this._getContextFont();\n        const additionalWidth = shouldAddEllipsis ? this._getTextWidth(ELLIPSIS) : 0;\n        for (let i = 0, max = lines.length; i < max; ++i) {\n            let line = lines[i];\n            let lineWidth = this._getTextWidth(line);\n            if (fixedWidth && lineWidth > maxWidth) {\n                while (line.length > 0) {\n                    let low = 0, high = line.length, match = '', matchWidth = 0;\n                    while (low < high) {\n                        const mid = (low + high) >>> 1, substr = line.slice(0, mid + 1), substrWidth = this._getTextWidth(substr) + additionalWidth;\n                        if (substrWidth <= maxWidth) {\n                            low = mid + 1;\n                            match = substr;\n                            matchWidth = substrWidth;\n                        }\n                        else {\n                            high = mid;\n                        }\n                    }\n                    if (match) {\n                        if (wrapAtWord) {\n                            var wrapIndex;\n                            const nextChar = line[match.length];\n                            const nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                            if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                                wrapIndex = match.length;\n                            }\n                            else {\n                                wrapIndex =\n                                    Math.max(match.lastIndexOf(SPACE), match.lastIndexOf(DASH)) +\n                                        1;\n                            }\n                            if (wrapIndex > 0) {\n                                low = wrapIndex;\n                                match = match.slice(0, low);\n                                matchWidth = this._getTextWidth(match);\n                            }\n                        }\n                        match = match.trimRight();\n                        this._addTextLine(match);\n                        textWidth = Math.max(textWidth, matchWidth);\n                        currentHeightPx += lineHeightPx;\n                        const shouldHandleEllipsis = this._shouldHandleEllipsis(currentHeightPx);\n                        if (shouldHandleEllipsis) {\n                            this._tryToAddEllipsisToLastLine();\n                            break;\n                        }\n                        line = line.slice(low);\n                        line = line.trimLeft();\n                        if (line.length > 0) {\n                            lineWidth = this._getTextWidth(line);\n                            if (lineWidth <= maxWidth) {\n                                this._addTextLine(line);\n                                currentHeightPx += lineHeightPx;\n                                textWidth = Math.max(textWidth, lineWidth);\n                                break;\n                            }\n                        }\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                this._addTextLine(line);\n                currentHeightPx += lineHeightPx;\n                textWidth = Math.max(textWidth, lineWidth);\n                if (this._shouldHandleEllipsis(currentHeightPx) && i < max - 1) {\n                    this._tryToAddEllipsisToLastLine();\n                }\n            }\n            if (this.textArr[this.textArr.length - 1]) {\n                this.textArr[this.textArr.length - 1].lastInParagraph = true;\n            }\n            if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n                break;\n            }\n        }\n        this.textHeight = fontSize;\n        this.textWidth = textWidth;\n    }\n    _shouldHandleEllipsis(currentHeightPx) {\n        const fontSize = +this.fontSize(), lineHeightPx = this.lineHeight() * fontSize, height = this.attrs.height, fixedHeight = height !== AUTO && height !== undefined, padding = this.padding(), maxHeightPx = height - padding * 2, wrap = this.wrap(), shouldWrap = wrap !== NONE;\n        return (!shouldWrap ||\n            (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx));\n    }\n    _tryToAddEllipsisToLastLine() {\n        const width = this.attrs.width, fixedWidth = width !== AUTO && width !== undefined, padding = this.padding(), maxWidth = width - padding * 2, shouldAddEllipsis = this.ellipsis();\n        const lastLine = this.textArr[this.textArr.length - 1];\n        if (!lastLine || !shouldAddEllipsis) {\n            return;\n        }\n        if (fixedWidth) {\n            const haveSpace = this._getTextWidth(lastLine.text + ELLIPSIS) < maxWidth;\n            if (!haveSpace) {\n                lastLine.text = lastLine.text.slice(0, lastLine.text.length - 3);\n            }\n        }\n        this.textArr.splice(this.textArr.length - 1, 1);\n        this._addTextLine(lastLine.text + ELLIPSIS);\n    }\n    getStrokeScaleEnabled() {\n        return true;\n    }\n    _useBufferCanvas() {\n        const hasLine = this.textDecoration().indexOf('underline') !== -1 ||\n            this.textDecoration().indexOf('line-through') !== -1;\n        const hasShadow = this.hasShadow();\n        if (hasLine && hasShadow) {\n            return true;\n        }\n        return super._useBufferCanvas();\n    }\n}\nexports.Text = Text;\nText.prototype._fillFunc = _fillFunc;\nText.prototype._strokeFunc = _strokeFunc;\nText.prototype.className = TEXT_UPPER;\nText.prototype._attrsAffectingSize = [\n    'text',\n    'fontSize',\n    'padding',\n    'wrap',\n    'lineHeight',\n    'letterSpacing',\n];\n(0, Global_2._registerNode)(Text);\nFactory_1.Factory.overWriteSetter(Text, 'width', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.overWriteSetter(Text, 'height', (0, Validators_1.getNumberOrAutoValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'direction', INHERIT);\nFactory_1.Factory.addGetterSetter(Text, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(Text, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(Text, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'align', LEFT);\nFactory_1.Factory.addGetterSetter(Text, 'verticalAlign', TOP);\nFactory_1.Factory.addGetterSetter(Text, 'lineHeight', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'wrap', WORD);\nFactory_1.Factory.addGetterSetter(Text, 'ellipsis', false, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'text', '', (0, Validators_1.getStringValidator)());\nFactory_1.Factory.addGetterSetter(Text, 'textDecoration', '');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Text.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/TextPath.js":
/*!***************************************************!*\
  !*** ./node_modules/konva/lib/shapes/TextPath.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextPath = void 0;\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Path_1 = __webpack_require__(/*! ./Path */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Path.js\");\nconst Text_1 = __webpack_require__(/*! ./Text */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Text.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst EMPTY_STRING = '', NORMAL = 'normal';\nfunction _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n}\nfunction _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n}\nclass TextPath extends Shape_1.Shape {\n    constructor(config) {\n        super(config);\n        this.dummyCanvas = Util_1.Util.createCanvasElement();\n        this.dataArray = [];\n        this._readDataAttribute();\n        this.on('dataChange.konva', function () {\n            this._readDataAttribute();\n            this._setTextData();\n        });\n        this.on('textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva fontSizeChange.konva fontFamilyChange.konva', this._setTextData);\n        this._setTextData();\n    }\n    _getTextPathLength() {\n        return Path_1.Path.getPathLength(this.dataArray);\n    }\n    _getPointAtLength(length) {\n        if (!this.attrs.data) {\n            return null;\n        }\n        const totalLength = this.pathLength;\n        if (length - 1 > totalLength) {\n            return null;\n        }\n        return Path_1.Path.getPointAtLengthOfDataArray(length, this.dataArray);\n    }\n    _readDataAttribute() {\n        this.dataArray = Path_1.Path.parsePathData(this.attrs.data);\n        this.pathLength = this._getTextPathLength();\n    }\n    _sceneFunc(context) {\n        context.setAttr('font', this._getContextFont());\n        context.setAttr('textBaseline', this.textBaseline());\n        context.setAttr('textAlign', 'left');\n        context.save();\n        const textDecoration = this.textDecoration();\n        const fill = this.fill();\n        const fontSize = this.fontSize();\n        const glyphInfo = this.glyphInfo;\n        if (textDecoration === 'underline') {\n            context.beginPath();\n        }\n        for (let i = 0; i < glyphInfo.length; i++) {\n            context.save();\n            const p0 = glyphInfo[i].p0;\n            context.translate(p0.x, p0.y);\n            context.rotate(glyphInfo[i].rotation);\n            this.partialText = glyphInfo[i].text;\n            context.fillStrokeShape(this);\n            if (textDecoration === 'underline') {\n                if (i === 0) {\n                    context.moveTo(0, fontSize / 2 + 1);\n                }\n                context.lineTo(fontSize, fontSize / 2 + 1);\n            }\n            context.restore();\n        }\n        if (textDecoration === 'underline') {\n            context.strokeStyle = fill;\n            context.lineWidth = fontSize / 20;\n            context.stroke();\n        }\n        context.restore();\n    }\n    _hitFunc(context) {\n        context.beginPath();\n        const glyphInfo = this.glyphInfo;\n        if (glyphInfo.length >= 1) {\n            const p0 = glyphInfo[0].p0;\n            context.moveTo(p0.x, p0.y);\n        }\n        for (let i = 0; i < glyphInfo.length; i++) {\n            const p1 = glyphInfo[i].p1;\n            context.lineTo(p1.x, p1.y);\n        }\n        context.setAttr('lineWidth', this.fontSize());\n        context.setAttr('strokeStyle', this.colorKey);\n        context.stroke();\n    }\n    getTextWidth() {\n        return this.textWidth;\n    }\n    getTextHeight() {\n        Util_1.Util.warn('text.getTextHeight() method is deprecated. Use text.height() - for full height and text.fontSize() - for one line height.');\n        return this.textHeight;\n    }\n    setText(text) {\n        return Text_1.Text.prototype.setText.call(this, text);\n    }\n    _getContextFont() {\n        return Text_1.Text.prototype._getContextFont.call(this);\n    }\n    _getTextSize(text) {\n        const dummyCanvas = this.dummyCanvas;\n        const _context = dummyCanvas.getContext('2d');\n        _context.save();\n        _context.font = this._getContextFont();\n        const metrics = _context.measureText(text);\n        _context.restore();\n        return {\n            width: metrics.width,\n            height: parseInt(`${this.fontSize()}`, 10),\n        };\n    }\n    _setTextData() {\n        const { width, height } = this._getTextSize(this.attrs.text);\n        this.textWidth = width;\n        this.textHeight = height;\n        this.glyphInfo = [];\n        if (!this.attrs.data) {\n            return null;\n        }\n        const letterSpacing = this.letterSpacing();\n        const align = this.align();\n        const kerningFunc = this.kerningFunc();\n        const textWidth = Math.max(this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing, 0);\n        let offset = 0;\n        if (align === 'center') {\n            offset = Math.max(0, this.pathLength / 2 - textWidth / 2);\n        }\n        if (align === 'right') {\n            offset = Math.max(0, this.pathLength - textWidth);\n        }\n        const charArr = (0, Text_1.stringToArray)(this.text());\n        let offsetToGlyph = offset;\n        for (let i = 0; i < charArr.length; i++) {\n            const charStartPoint = this._getPointAtLength(offsetToGlyph);\n            if (!charStartPoint)\n                return;\n            let glyphWidth = this._getTextSize(charArr[i]).width + letterSpacing;\n            if (charArr[i] === ' ' && align === 'justify') {\n                const numberOfSpaces = this.text().split(' ').length - 1;\n                glyphWidth += (this.pathLength - textWidth) / numberOfSpaces;\n            }\n            const charEndPoint = this._getPointAtLength(offsetToGlyph + glyphWidth);\n            if (!charEndPoint)\n                return;\n            const width = Path_1.Path.getLineLength(charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n            let kern = 0;\n            if (kerningFunc) {\n                try {\n                    kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n                }\n                catch (e) {\n                    kern = 0;\n                }\n            }\n            charStartPoint.x += kern;\n            charEndPoint.x += kern;\n            this.textWidth += kern;\n            const midpoint = Path_1.Path.getPointOnLine(kern + width / 2.0, charStartPoint.x, charStartPoint.y, charEndPoint.x, charEndPoint.y);\n            const rotation = Math.atan2(charEndPoint.y - charStartPoint.y, charEndPoint.x - charStartPoint.x);\n            this.glyphInfo.push({\n                transposeX: midpoint.x,\n                transposeY: midpoint.y,\n                text: charArr[i],\n                rotation: rotation,\n                p0: charStartPoint,\n                p1: charEndPoint,\n            });\n            offsetToGlyph += glyphWidth;\n        }\n    }\n    getSelfRect() {\n        if (!this.glyphInfo.length) {\n            return {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            };\n        }\n        const points = [];\n        this.glyphInfo.forEach(function (info) {\n            points.push(info.p0.x);\n            points.push(info.p0.y);\n            points.push(info.p1.x);\n            points.push(info.p1.y);\n        });\n        let minX = points[0] || 0;\n        let maxX = points[0] || 0;\n        let minY = points[1] || 0;\n        let maxY = points[1] || 0;\n        let x, y;\n        for (let i = 0; i < points.length / 2; i++) {\n            x = points[i * 2];\n            y = points[i * 2 + 1];\n            minX = Math.min(minX, x);\n            maxX = Math.max(maxX, x);\n            minY = Math.min(minY, y);\n            maxY = Math.max(maxY, y);\n        }\n        const fontSize = this.fontSize();\n        return {\n            x: minX - fontSize / 2,\n            y: minY - fontSize / 2,\n            width: maxX - minX + fontSize,\n            height: maxY - minY + fontSize,\n        };\n    }\n    destroy() {\n        Util_1.Util.releaseCanvas(this.dummyCanvas);\n        return super.destroy();\n    }\n}\nexports.TextPath = TextPath;\nTextPath.prototype._fillFunc = _fillFunc;\nTextPath.prototype._strokeFunc = _strokeFunc;\nTextPath.prototype._fillFuncHit = _fillFunc;\nTextPath.prototype._strokeFuncHit = _strokeFunc;\nTextPath.prototype.className = 'TextPath';\nTextPath.prototype._attrsAffectingSize = ['text', 'fontSize', 'data'];\n(0, Global_1._registerNode)(TextPath);\nFactory_1.Factory.addGetterSetter(TextPath, 'data');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontFamily', 'Arial');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontSize', 12, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(TextPath, 'fontStyle', NORMAL);\nFactory_1.Factory.addGetterSetter(TextPath, 'align', 'left');\nFactory_1.Factory.addGetterSetter(TextPath, 'letterSpacing', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(TextPath, 'textBaseline', 'middle');\nFactory_1.Factory.addGetterSetter(TextPath, 'fontVariant', NORMAL);\nFactory_1.Factory.addGetterSetter(TextPath, 'text', EMPTY_STRING);\nFactory_1.Factory.addGetterSetter(TextPath, 'textDecoration', null);\nFactory_1.Factory.addGetterSetter(TextPath, 'kerningFunc', null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/TextPath.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Transformer.js":
/*!******************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Transformer.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Transformer = void 0;\nconst Util_1 = __webpack_require__(/*! ../Util */ \"(app-pages-browser)/./node_modules/konva/lib/Util.js\");\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Node_1 = __webpack_require__(/*! ../Node */ \"(app-pages-browser)/./node_modules/konva/lib/Node.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Rect_1 = __webpack_require__(/*! ./Rect */ \"(app-pages-browser)/./node_modules/konva/lib/shapes/Rect.js\");\nconst Group_1 = __webpack_require__(/*! ../Group */ \"(app-pages-browser)/./node_modules/konva/lib/Group.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_2 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst EVENTS_NAME = 'tr-konva';\nconst ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange',\n    'anchorStyleFuncChange',\n]\n    .map((e) => e + `.${EVENTS_NAME}`)\n    .join(' ');\nconst NODES_RECT = 'nodesRect';\nconst TRANSFORM_CHANGE_STR = [\n    'widthChange',\n    'heightChange',\n    'scaleXChange',\n    'scaleYChange',\n    'skewXChange',\n    'skewYChange',\n    'rotationChange',\n    'offsetXChange',\n    'offsetYChange',\n    'transformsEnabledChange',\n    'strokeWidthChange',\n];\nconst ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135,\n};\nconst TOUCH_DEVICE = 'ontouchstart' in Global_1.Konva._global;\nfunction getCursor(anchorName, rad, rotateCursor) {\n    if (anchorName === 'rotater') {\n        return rotateCursor;\n    }\n    rad += Util_1.Util.degToRad(ANGLES[anchorName] || 0);\n    const angle = ((Util_1.Util.radToDeg(rad) % 360) + 360) % 360;\n    if (Util_1.Util._inRange(angle, 315 + 22.5, 360) || Util_1.Util._inRange(angle, 0, 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n        return 'ns-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n        return 'nesw-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n        return 'ew-resize';\n    }\n    else if (Util_1.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n        return 'nwse-resize';\n    }\n    else {\n        Util_1.Util.error('Transformer has unknown angle for cursor detection: ' + angle);\n        return 'pointer';\n    }\n}\nconst ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right',\n];\nconst MAX_SAFE_INTEGER = 100000000;\nfunction getCenter(shape) {\n    return {\n        x: shape.x +\n            (shape.width / 2) * Math.cos(shape.rotation) +\n            (shape.height / 2) * Math.sin(-shape.rotation),\n        y: shape.y +\n            (shape.height / 2) * Math.cos(shape.rotation) +\n            (shape.width / 2) * Math.sin(shape.rotation),\n    };\n}\nfunction rotateAroundPoint(shape, angleRad, point) {\n    const x = point.x +\n        (shape.x - point.x) * Math.cos(angleRad) -\n        (shape.y - point.y) * Math.sin(angleRad);\n    const y = point.y +\n        (shape.x - point.x) * Math.sin(angleRad) +\n        (shape.y - point.y) * Math.cos(angleRad);\n    return {\n        ...shape,\n        rotation: shape.rotation + angleRad,\n        x,\n        y,\n    };\n}\nfunction rotateAroundCenter(shape, deltaRad) {\n    const center = getCenter(shape);\n    return rotateAroundPoint(shape, deltaRad, center);\n}\nfunction getSnap(snaps, newRotationRad, tol) {\n    let snapped = newRotationRad;\n    for (let i = 0; i < snaps.length; i++) {\n        const angle = Global_1.Konva.getAngle(snaps[i]);\n        const absDiff = Math.abs(angle - newRotationRad) % (Math.PI * 2);\n        const dif = Math.min(absDiff, Math.PI * 2 - absDiff);\n        if (dif < tol) {\n            snapped = angle;\n        }\n    }\n    return snapped;\n}\nlet activeTransformersCount = 0;\nclass Transformer extends Group_1.Group {\n    constructor(config) {\n        super(config);\n        this._movingAnchorName = null;\n        this._transforming = false;\n        this._createElements();\n        this._handleMouseMove = this._handleMouseMove.bind(this);\n        this._handleMouseUp = this._handleMouseUp.bind(this);\n        this.update = this.update.bind(this);\n        this.on(ATTR_CHANGE_LIST, this.update);\n        if (this.getNode()) {\n            this.update();\n        }\n    }\n    attachTo(node) {\n        this.setNode(node);\n        return this;\n    }\n    setNode(node) {\n        Util_1.Util.warn('tr.setNode(shape), tr.node(shape) and tr.attachTo(shape) methods are deprecated. Please use tr.nodes(nodesArray) instead.');\n        return this.setNodes([node]);\n    }\n    getNode() {\n        return this._nodes && this._nodes[0];\n    }\n    _getEventNamespace() {\n        return EVENTS_NAME + this._id;\n    }\n    setNodes(nodes = []) {\n        if (this._nodes && this._nodes.length) {\n            this.detach();\n        }\n        const filteredNodes = nodes.filter((node) => {\n            if (node.isAncestorOf(this)) {\n                Util_1.Util.error('Konva.Transformer cannot be an a child of the node you are trying to attach');\n                return false;\n            }\n            return true;\n        });\n        this._nodes = nodes = filteredNodes;\n        if (nodes.length === 1 && this.useSingleNodeRotation()) {\n            this.rotation(nodes[0].getAbsoluteRotation());\n        }\n        else {\n            this.rotation(0);\n        }\n        this._nodes.forEach((node) => {\n            const onChange = () => {\n                if (this.nodes().length === 1 && this.useSingleNodeRotation()) {\n                    this.rotation(this.nodes()[0].getAbsoluteRotation());\n                }\n                this._resetTransformCache();\n                if (!this._transforming && !this.isDragging()) {\n                    this.update();\n                }\n            };\n            const additionalEvents = node._attrsAffectingSize\n                .map((prop) => prop + 'Change.' + this._getEventNamespace())\n                .join(' ');\n            node.on(additionalEvents, onChange);\n            node.on(TRANSFORM_CHANGE_STR.map((e) => e + `.${this._getEventNamespace()}`).join(' '), onChange);\n            node.on(`absoluteTransformChange.${this._getEventNamespace()}`, onChange);\n            this._proxyDrag(node);\n        });\n        this._resetTransformCache();\n        const elementsCreated = !!this.findOne('.top-left');\n        if (elementsCreated) {\n            this.update();\n        }\n        return this;\n    }\n    _proxyDrag(node) {\n        let lastPos;\n        node.on(`dragstart.${this._getEventNamespace()}`, (e) => {\n            lastPos = node.getAbsolutePosition();\n            if (!this.isDragging() && node !== this.findOne('.back')) {\n                this.startDrag(e, false);\n            }\n        });\n        node.on(`dragmove.${this._getEventNamespace()}`, (e) => {\n            if (!lastPos) {\n                return;\n            }\n            const abs = node.getAbsolutePosition();\n            const dx = abs.x - lastPos.x;\n            const dy = abs.y - lastPos.y;\n            this.nodes().forEach((otherNode) => {\n                if (otherNode === node) {\n                    return;\n                }\n                if (otherNode.isDragging()) {\n                    return;\n                }\n                const otherAbs = otherNode.getAbsolutePosition();\n                otherNode.setAbsolutePosition({\n                    x: otherAbs.x + dx,\n                    y: otherAbs.y + dy,\n                });\n                otherNode.startDrag(e);\n            });\n            lastPos = null;\n        });\n    }\n    getNodes() {\n        return this._nodes || [];\n    }\n    getActiveAnchor() {\n        return this._movingAnchorName;\n    }\n    detach() {\n        if (this._nodes) {\n            this._nodes.forEach((node) => {\n                node.off('.' + this._getEventNamespace());\n            });\n        }\n        this._nodes = [];\n        this._resetTransformCache();\n    }\n    _resetTransformCache() {\n        this._clearCache(NODES_RECT);\n        this._clearCache('transform');\n        this._clearSelfAndDescendantCache('absoluteTransform');\n    }\n    _getNodeRect() {\n        return this._getCache(NODES_RECT, this.__getNodeRect);\n    }\n    __getNodeShape(node, rot = this.rotation(), relative) {\n        const rect = node.getClientRect({\n            skipTransform: true,\n            skipShadow: true,\n            skipStroke: this.ignoreStroke(),\n        });\n        const absScale = node.getAbsoluteScale(relative);\n        const absPos = node.getAbsolutePosition(relative);\n        const dx = rect.x * absScale.x - node.offsetX() * absScale.x;\n        const dy = rect.y * absScale.y - node.offsetY() * absScale.y;\n        const rotation = (Global_1.Konva.getAngle(node.getAbsoluteRotation()) + Math.PI * 2) %\n            (Math.PI * 2);\n        const box = {\n            x: absPos.x + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n            y: absPos.y + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n            width: rect.width * absScale.x,\n            height: rect.height * absScale.y,\n            rotation: rotation,\n        };\n        return rotateAroundPoint(box, -Global_1.Konva.getAngle(rot), {\n            x: 0,\n            y: 0,\n        });\n    }\n    __getNodeRect() {\n        const node = this.getNode();\n        if (!node) {\n            return {\n                x: -MAX_SAFE_INTEGER,\n                y: -MAX_SAFE_INTEGER,\n                width: 0,\n                height: 0,\n                rotation: 0,\n            };\n        }\n        const totalPoints = [];\n        this.nodes().map((node) => {\n            const box = node.getClientRect({\n                skipTransform: true,\n                skipShadow: true,\n                skipStroke: this.ignoreStroke(),\n            });\n            const points = [\n                { x: box.x, y: box.y },\n                { x: box.x + box.width, y: box.y },\n                { x: box.x + box.width, y: box.y + box.height },\n                { x: box.x, y: box.y + box.height },\n            ];\n            const trans = node.getAbsoluteTransform();\n            points.forEach(function (point) {\n                const transformed = trans.point(point);\n                totalPoints.push(transformed);\n            });\n        });\n        const tr = new Util_1.Transform();\n        tr.rotate(-Global_1.Konva.getAngle(this.rotation()));\n        let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n        totalPoints.forEach(function (point) {\n            const transformed = tr.point(point);\n            if (minX === undefined) {\n                minX = maxX = transformed.x;\n                minY = maxY = transformed.y;\n            }\n            minX = Math.min(minX, transformed.x);\n            minY = Math.min(minY, transformed.y);\n            maxX = Math.max(maxX, transformed.x);\n            maxY = Math.max(maxY, transformed.y);\n        });\n        tr.invert();\n        const p = tr.point({ x: minX, y: minY });\n        return {\n            x: p.x,\n            y: p.y,\n            width: maxX - minX,\n            height: maxY - minY,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        };\n    }\n    getX() {\n        return this._getNodeRect().x;\n    }\n    getY() {\n        return this._getNodeRect().y;\n    }\n    getWidth() {\n        return this._getNodeRect().width;\n    }\n    getHeight() {\n        return this._getNodeRect().height;\n    }\n    _createElements() {\n        this._createBack();\n        ANCHORS_NAMES.forEach((name) => {\n            this._createAnchor(name);\n        });\n        this._createAnchor('rotater');\n    }\n    _createAnchor(name) {\n        const anchor = new Rect_1.Rect({\n            stroke: 'rgb(0, 161, 255)',\n            fill: 'white',\n            strokeWidth: 1,\n            name: name + ' _anchor',\n            dragDistance: 0,\n            draggable: true,\n            hitStrokeWidth: TOUCH_DEVICE ? 10 : 'auto',\n        });\n        const self = this;\n        anchor.on('mousedown touchstart', function (e) {\n            self._handleMouseDown(e);\n        });\n        anchor.on('dragstart', (e) => {\n            anchor.stopDrag();\n            e.cancelBubble = true;\n        });\n        anchor.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        anchor.on('mouseenter', () => {\n            const rad = Global_1.Konva.getAngle(this.rotation());\n            const rotateCursor = this.rotateAnchorCursor();\n            const cursor = getCursor(name, rad, rotateCursor);\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = cursor);\n            this._cursorChange = true;\n        });\n        anchor.on('mouseout', () => {\n            anchor.getStage().content &&\n                (anchor.getStage().content.style.cursor = '');\n            this._cursorChange = false;\n        });\n        this.add(anchor);\n    }\n    _createBack() {\n        const back = new Shape_1.Shape({\n            name: 'back',\n            width: 0,\n            height: 0,\n            draggable: true,\n            sceneFunc(ctx, shape) {\n                const tr = shape.getParent();\n                const padding = tr.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.moveTo(shape.width() / 2, -padding);\n                if (tr.rotateEnabled() && tr.rotateLineVisible()) {\n                    ctx.lineTo(shape.width() / 2, -tr.rotateAnchorOffset() * Util_1.Util._sign(shape.height()) - padding);\n                }\n                ctx.fillStrokeShape(shape);\n            },\n            hitFunc: (ctx, shape) => {\n                if (!this.shouldOverdrawWholeArea()) {\n                    return;\n                }\n                const padding = this.padding();\n                ctx.beginPath();\n                ctx.rect(-padding, -padding, shape.width() + padding * 2, shape.height() + padding * 2);\n                ctx.fillStrokeShape(shape);\n            },\n        });\n        this.add(back);\n        this._proxyDrag(back);\n        back.on('dragstart', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragmove', (e) => {\n            e.cancelBubble = true;\n        });\n        back.on('dragend', (e) => {\n            e.cancelBubble = true;\n        });\n        this.on('dragmove', (e) => {\n            this.update();\n        });\n    }\n    _handleMouseDown(e) {\n        if (this._transforming) {\n            return;\n        }\n        this._movingAnchorName = e.target.name().split(' ')[0];\n        const attrs = this._getNodeRect();\n        const width = attrs.width;\n        const height = attrs.height;\n        const hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        this.sin = Math.abs(height / hypotenuse);\n        this.cos = Math.abs(width / hypotenuse);\n        if (typeof window !== 'undefined') {\n            window.addEventListener('mousemove', this._handleMouseMove);\n            window.addEventListener('touchmove', this._handleMouseMove);\n            window.addEventListener('mouseup', this._handleMouseUp, true);\n            window.addEventListener('touchend', this._handleMouseUp, true);\n        }\n        this._transforming = true;\n        const ap = e.target.getAbsolutePosition();\n        const pos = e.target.getStage().getPointerPosition();\n        this._anchorDragOffset = {\n            x: pos.x - ap.x,\n            y: pos.y - ap.y,\n        };\n        activeTransformersCount++;\n        this._fire('transformstart', { evt: e.evt, target: this.getNode() });\n        this._nodes.forEach((target) => {\n            target._fire('transformstart', { evt: e.evt, target });\n        });\n    }\n    _handleMouseMove(e) {\n        let x, y, newHypotenuse;\n        const anchorNode = this.findOne('.' + this._movingAnchorName);\n        const stage = anchorNode.getStage();\n        stage.setPointersPositions(e);\n        const pp = stage.getPointerPosition();\n        let newNodePos = {\n            x: pp.x - this._anchorDragOffset.x,\n            y: pp.y - this._anchorDragOffset.y,\n        };\n        const oldAbs = anchorNode.getAbsolutePosition();\n        if (this.anchorDragBoundFunc()) {\n            newNodePos = this.anchorDragBoundFunc()(oldAbs, newNodePos, e);\n        }\n        anchorNode.setAbsolutePosition(newNodePos);\n        const newAbs = anchorNode.getAbsolutePosition();\n        if (oldAbs.x === newAbs.x && oldAbs.y === newAbs.y) {\n            return;\n        }\n        if (this._movingAnchorName === 'rotater') {\n            const attrs = this._getNodeRect();\n            x = anchorNode.x() - attrs.width / 2;\n            y = -anchorNode.y() + attrs.height / 2;\n            let delta = Math.atan2(-y, x) + Math.PI / 2;\n            if (attrs.height < 0) {\n                delta -= Math.PI;\n            }\n            const oldRotation = Global_1.Konva.getAngle(this.rotation());\n            const newRotation = oldRotation + delta;\n            const tol = Global_1.Konva.getAngle(this.rotationSnapTolerance());\n            const snappedRot = getSnap(this.rotationSnaps(), newRotation, tol);\n            const diff = snappedRot - attrs.rotation;\n            const shape = rotateAroundCenter(attrs, diff);\n            this._fitNodesInto(shape, e);\n            return;\n        }\n        const shiftBehavior = this.shiftBehavior();\n        let keepProportion;\n        if (shiftBehavior === 'inverted') {\n            keepProportion = this.keepRatio() && !e.shiftKey;\n        }\n        else if (shiftBehavior === 'none') {\n            keepProportion = this.keepRatio();\n        }\n        else {\n            keepProportion = this.keepRatio() || e.shiftKey;\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (this._movingAnchorName === 'top-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-right').x(),\n                        y: this.findOne('.bottom-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-left').x() > comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-left').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-left').x(comparePoint.x - x);\n                this.findOne('.top-left').y(comparePoint.y - y);\n            }\n        }\n        else if (this._movingAnchorName === 'top-center') {\n            this.findOne('.top-left').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'top-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.bottom-left').x(),\n                        y: this.findOne('.bottom-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(comparePoint.y - anchorNode.y(), 2));\n                var reverseX = this.findOne('.top-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.top-right').y() > comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.top-right').x(comparePoint.x + x);\n                this.findOne('.top-right').y(comparePoint.y - y);\n            }\n            var pos = anchorNode.position();\n            this.findOne('.top-left').y(pos.y);\n            this.findOne('.bottom-right').x(pos.x);\n        }\n        else if (this._movingAnchorName === 'middle-left') {\n            this.findOne('.top-left').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'middle-right') {\n            this.findOne('.bottom-right').x(anchorNode.x());\n        }\n        else if (this._movingAnchorName === 'bottom-left') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-right').x(),\n                        y: this.findOne('.top-right').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(comparePoint.x - anchorNode.x(), 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = comparePoint.x < anchorNode.x() ? -1 : 1;\n                var reverseY = anchorNode.y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                anchorNode.x(comparePoint.x - x);\n                anchorNode.y(comparePoint.y + y);\n            }\n            pos = anchorNode.position();\n            this.findOne('.top-left').x(pos.x);\n            this.findOne('.bottom-right').y(pos.y);\n        }\n        else if (this._movingAnchorName === 'bottom-center') {\n            this.findOne('.bottom-right').y(anchorNode.y());\n        }\n        else if (this._movingAnchorName === 'bottom-right') {\n            if (keepProportion) {\n                var comparePoint = centeredScaling\n                    ? {\n                        x: this.width() / 2,\n                        y: this.height() / 2,\n                    }\n                    : {\n                        x: this.findOne('.top-left').x(),\n                        y: this.findOne('.top-left').y(),\n                    };\n                newHypotenuse = Math.sqrt(Math.pow(anchorNode.x() - comparePoint.x, 2) +\n                    Math.pow(anchorNode.y() - comparePoint.y, 2));\n                var reverseX = this.findOne('.bottom-right').x() < comparePoint.x ? -1 : 1;\n                var reverseY = this.findOne('.bottom-right').y() < comparePoint.y ? -1 : 1;\n                x = newHypotenuse * this.cos * reverseX;\n                y = newHypotenuse * this.sin * reverseY;\n                this.findOne('.bottom-right').x(comparePoint.x + x);\n                this.findOne('.bottom-right').y(comparePoint.y + y);\n            }\n        }\n        else {\n            console.error(new Error('Wrong position argument of selection resizer: ' +\n                this._movingAnchorName));\n        }\n        var centeredScaling = this.centeredScaling() || e.altKey;\n        if (centeredScaling) {\n            const topLeft = this.findOne('.top-left');\n            const bottomRight = this.findOne('.bottom-right');\n            const topOffsetX = topLeft.x();\n            const topOffsetY = topLeft.y();\n            const bottomOffsetX = this.getWidth() - bottomRight.x();\n            const bottomOffsetY = this.getHeight() - bottomRight.y();\n            bottomRight.move({\n                x: -topOffsetX,\n                y: -topOffsetY,\n            });\n            topLeft.move({\n                x: bottomOffsetX,\n                y: bottomOffsetY,\n            });\n        }\n        const absPos = this.findOne('.top-left').getAbsolutePosition();\n        x = absPos.x;\n        y = absPos.y;\n        const width = this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n        const height = this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n        this._fitNodesInto({\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            rotation: Global_1.Konva.getAngle(this.rotation()),\n        }, e);\n    }\n    _handleMouseUp(e) {\n        this._removeEvents(e);\n    }\n    getAbsoluteTransform() {\n        return this.getTransform();\n    }\n    _removeEvents(e) {\n        var _a;\n        if (this._transforming) {\n            this._transforming = false;\n            if (typeof window !== 'undefined') {\n                window.removeEventListener('mousemove', this._handleMouseMove);\n                window.removeEventListener('touchmove', this._handleMouseMove);\n                window.removeEventListener('mouseup', this._handleMouseUp, true);\n                window.removeEventListener('touchend', this._handleMouseUp, true);\n            }\n            const node = this.getNode();\n            activeTransformersCount--;\n            this._fire('transformend', { evt: e, target: node });\n            (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n            if (node) {\n                this._nodes.forEach((target) => {\n                    var _a;\n                    target._fire('transformend', { evt: e, target });\n                    (_a = target.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n                });\n            }\n            this._movingAnchorName = null;\n        }\n    }\n    _fitNodesInto(newAttrs, evt) {\n        const oldAttrs = this._getNodeRect();\n        const minSize = 1;\n        if (Util_1.Util._inRange(newAttrs.width, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        if (Util_1.Util._inRange(newAttrs.height, -this.padding() * 2 - minSize, minSize)) {\n            this.update();\n            return;\n        }\n        const t = new Util_1.Transform();\n        t.rotate(Global_1.Konva.getAngle(this.rotation()));\n        if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('left') >= 0) {\n            const offset = t.point({\n                x: -this.padding() * 2,\n                y: 0,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            newAttrs.width += this.padding() * 2;\n            this._movingAnchorName = this._movingAnchorName.replace('left', 'right');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.width < 0 &&\n            this._movingAnchorName.indexOf('right') >= 0) {\n            const offset = t.point({\n                x: this.padding() * 2,\n                y: 0,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('right', 'left');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.width += this.padding() * 2;\n        }\n        if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('top') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: -this.padding() * 2,\n            });\n            newAttrs.x += offset.x;\n            newAttrs.y += offset.y;\n            this._movingAnchorName = this._movingAnchorName.replace('top', 'bottom');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n        }\n        else if (this._movingAnchorName &&\n            newAttrs.height < 0 &&\n            this._movingAnchorName.indexOf('bottom') >= 0) {\n            const offset = t.point({\n                x: 0,\n                y: this.padding() * 2,\n            });\n            this._movingAnchorName = this._movingAnchorName.replace('bottom', 'top');\n            this._anchorDragOffset.x -= offset.x;\n            this._anchorDragOffset.y -= offset.y;\n            newAttrs.height += this.padding() * 2;\n        }\n        if (this.boundBoxFunc()) {\n            const bounded = this.boundBoxFunc()(oldAttrs, newAttrs);\n            if (bounded) {\n                newAttrs = bounded;\n            }\n            else {\n                Util_1.Util.warn('boundBoxFunc returned falsy. You should return new bound rect from it!');\n            }\n        }\n        const baseSize = 10000000;\n        const oldTr = new Util_1.Transform();\n        oldTr.translate(oldAttrs.x, oldAttrs.y);\n        oldTr.rotate(oldAttrs.rotation);\n        oldTr.scale(oldAttrs.width / baseSize, oldAttrs.height / baseSize);\n        const newTr = new Util_1.Transform();\n        const newScaleX = newAttrs.width / baseSize;\n        const newScaleY = newAttrs.height / baseSize;\n        if (this.flipEnabled() === false) {\n            newTr.translate(newAttrs.x, newAttrs.y);\n            newTr.rotate(newAttrs.rotation);\n            newTr.translate(newAttrs.width < 0 ? newAttrs.width : 0, newAttrs.height < 0 ? newAttrs.height : 0);\n            newTr.scale(Math.abs(newScaleX), Math.abs(newScaleY));\n        }\n        else {\n            newTr.translate(newAttrs.x, newAttrs.y);\n            newTr.rotate(newAttrs.rotation);\n            newTr.scale(newScaleX, newScaleY);\n        }\n        const delta = newTr.multiply(oldTr.invert());\n        this._nodes.forEach((node) => {\n            var _a;\n            const parentTransform = node.getParent().getAbsoluteTransform();\n            const localTransform = node.getTransform().copy();\n            localTransform.translate(node.offsetX(), node.offsetY());\n            const newLocalTransform = new Util_1.Transform();\n            newLocalTransform\n                .multiply(parentTransform.copy().invert())\n                .multiply(delta)\n                .multiply(parentTransform)\n                .multiply(localTransform);\n            const attrs = newLocalTransform.decompose();\n            node.setAttrs(attrs);\n            (_a = node.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n        });\n        this.rotation(Util_1.Util._getRotation(newAttrs.rotation));\n        this._nodes.forEach((node) => {\n            this._fire('transform', { evt: evt, target: node });\n            node._fire('transform', { evt: evt, target: node });\n        });\n        this._resetTransformCache();\n        this.update();\n        this.getLayer().batchDraw();\n    }\n    forceUpdate() {\n        this._resetTransformCache();\n        this.update();\n    }\n    _batchChangeChild(selector, attrs) {\n        const anchor = this.findOne(selector);\n        anchor.setAttrs(attrs);\n    }\n    update() {\n        var _a;\n        const attrs = this._getNodeRect();\n        this.rotation(Util_1.Util._getRotation(attrs.rotation));\n        const width = attrs.width;\n        const height = attrs.height;\n        const enabledAnchors = this.enabledAnchors();\n        const resizeEnabled = this.resizeEnabled();\n        const padding = this.padding();\n        const anchorSize = this.anchorSize();\n        const anchors = this.find('._anchor');\n        anchors.forEach((node) => {\n            node.setAttrs({\n                width: anchorSize,\n                height: anchorSize,\n                offsetX: anchorSize / 2,\n                offsetY: anchorSize / 2,\n                stroke: this.anchorStroke(),\n                strokeWidth: this.anchorStrokeWidth(),\n                fill: this.anchorFill(),\n                cornerRadius: this.anchorCornerRadius(),\n            });\n        });\n        this._batchChangeChild('.top-left', {\n            x: 0,\n            y: 0,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0,\n        });\n        this._batchChangeChild('.top-center', {\n            x: width / 2,\n            y: 0,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0,\n        });\n        this._batchChangeChild('.top-right', {\n            x: width,\n            y: 0,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0,\n        });\n        this._batchChangeChild('.middle-left', {\n            x: 0,\n            y: height / 2,\n            offsetX: anchorSize / 2 + padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0,\n        });\n        this._batchChangeChild('.middle-right', {\n            x: width,\n            y: height / 2,\n            offsetX: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0,\n        });\n        this._batchChangeChild('.bottom-left', {\n            x: 0,\n            y: height,\n            offsetX: anchorSize / 2 + padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0,\n        });\n        this._batchChangeChild('.bottom-center', {\n            x: width / 2,\n            y: height,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0,\n        });\n        this._batchChangeChild('.bottom-right', {\n            x: width,\n            y: height,\n            offsetX: anchorSize / 2 - padding,\n            offsetY: anchorSize / 2 - padding,\n            visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0,\n        });\n        this._batchChangeChild('.rotater', {\n            x: width / 2,\n            y: -this.rotateAnchorOffset() * Util_1.Util._sign(height) - padding,\n            visible: this.rotateEnabled(),\n        });\n        this._batchChangeChild('.back', {\n            width: width,\n            height: height,\n            visible: this.borderEnabled(),\n            stroke: this.borderStroke(),\n            strokeWidth: this.borderStrokeWidth(),\n            dash: this.borderDash(),\n            x: 0,\n            y: 0,\n        });\n        const styleFunc = this.anchorStyleFunc();\n        if (styleFunc) {\n            anchors.forEach((node) => {\n                styleFunc(node);\n            });\n        }\n        (_a = this.getLayer()) === null || _a === void 0 ? void 0 : _a.batchDraw();\n    }\n    isTransforming() {\n        return this._transforming;\n    }\n    stopTransform() {\n        if (this._transforming) {\n            this._removeEvents();\n            const anchorNode = this.findOne('.' + this._movingAnchorName);\n            if (anchorNode) {\n                anchorNode.stopDrag();\n            }\n        }\n    }\n    destroy() {\n        if (this.getStage() && this._cursorChange) {\n            this.getStage().content && (this.getStage().content.style.cursor = '');\n        }\n        Group_1.Group.prototype.destroy.call(this);\n        this.detach();\n        this._removeEvents();\n        return this;\n    }\n    toObject() {\n        return Node_1.Node.prototype.toObject.call(this);\n    }\n    clone(obj) {\n        const node = Node_1.Node.prototype.clone.call(this, obj);\n        return node;\n    }\n    getClientRect() {\n        if (this.nodes().length > 0) {\n            return super.getClientRect();\n        }\n        else {\n            return { x: 0, y: 0, width: 0, height: 0 };\n        }\n    }\n}\nexports.Transformer = Transformer;\nTransformer.isTransforming = () => {\n    return activeTransformersCount > 0;\n};\nfunction validateAnchors(val) {\n    if (!(val instanceof Array)) {\n        Util_1.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n        val.forEach(function (name) {\n            if (ANCHORS_NAMES.indexOf(name) === -1) {\n                Util_1.Util.warn('Unknown anchor name: ' +\n                    name +\n                    '. Available names are: ' +\n                    ANCHORS_NAMES.join(', '));\n            }\n        });\n    }\n    return val || [];\n}\nTransformer.prototype.className = 'Transformer';\n(0, Global_2._registerNode)(Transformer);\nFactory_1.Factory.addGetterSetter(Transformer, 'enabledAnchors', ANCHORS_NAMES, validateAnchors);\nFactory_1.Factory.addGetterSetter(Transformer, 'flipEnabled', true, (0, Validators_1.getBooleanValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'resizeEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorSize', 10, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateLineVisible', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnaps', []);\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorOffset', 50, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'rotateAnchorCursor', 'crosshair');\nFactory_1.Factory.addGetterSetter(Transformer, 'rotationSnapTolerance', 5, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderEnabled', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorFill', 'white');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorCornerRadius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStroke', 'rgb(0, 161, 255)');\nFactory_1.Factory.addGetterSetter(Transformer, 'borderStrokeWidth', 1, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'borderDash');\nFactory_1.Factory.addGetterSetter(Transformer, 'keepRatio', true);\nFactory_1.Factory.addGetterSetter(Transformer, 'shiftBehavior', 'default');\nFactory_1.Factory.addGetterSetter(Transformer, 'centeredScaling', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'ignoreStroke', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'padding', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Transformer, 'node');\nFactory_1.Factory.addGetterSetter(Transformer, 'nodes');\nFactory_1.Factory.addGetterSetter(Transformer, 'boundBoxFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorDragBoundFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'anchorStyleFunc');\nFactory_1.Factory.addGetterSetter(Transformer, 'shouldOverdrawWholeArea', false);\nFactory_1.Factory.addGetterSetter(Transformer, 'useSingleNodeRotation', true);\nFactory_1.Factory.backCompat(Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors',\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Transformer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/konva/lib/shapes/Wedge.js":
/*!************************************************!*\
  !*** ./node_modules/konva/lib/shapes/Wedge.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Wedge = void 0;\nconst Factory_1 = __webpack_require__(/*! ../Factory */ \"(app-pages-browser)/./node_modules/konva/lib/Factory.js\");\nconst Shape_1 = __webpack_require__(/*! ../Shape */ \"(app-pages-browser)/./node_modules/konva/lib/Shape.js\");\nconst Global_1 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nconst Validators_1 = __webpack_require__(/*! ../Validators */ \"(app-pages-browser)/./node_modules/konva/lib/Validators.js\");\nconst Global_2 = __webpack_require__(/*! ../Global */ \"(app-pages-browser)/./node_modules/konva/lib/Global.js\");\nclass Wedge extends Shape_1.Shape {\n    _sceneFunc(context) {\n        context.beginPath();\n        context.arc(0, 0, this.radius(), 0, Global_1.Konva.getAngle(this.angle()), this.clockwise());\n        context.lineTo(0, 0);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.radius() * 2;\n    }\n    getHeight() {\n        return this.radius() * 2;\n    }\n    setWidth(width) {\n        this.radius(width / 2);\n    }\n    setHeight(height) {\n        this.radius(height / 2);\n    }\n}\nexports.Wedge = Wedge;\nWedge.prototype.className = 'Wedge';\nWedge.prototype._centroid = true;\nWedge.prototype._attrsAffectingSize = ['radius'];\n(0, Global_2._registerNode)(Wedge);\nFactory_1.Factory.addGetterSetter(Wedge, 'radius', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Wedge, 'angle', 0, (0, Validators_1.getNumberValidator)());\nFactory_1.Factory.addGetterSetter(Wedge, 'clockwise', false);\nFactory_1.Factory.backCompat(Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle',\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rb252YS9saWIvc2hhcGVzL1dlZGdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWE7QUFDYixrQkFBa0IsbUJBQU8sQ0FBQywyRUFBWTtBQUN0QyxnQkFBZ0IsbUJBQU8sQ0FBQyx1RUFBVTtBQUNsQyxpQkFBaUIsbUJBQU8sQ0FBQyx5RUFBVztBQUNwQyxxQkFBcUIsbUJBQU8sQ0FBQyxpRkFBZTtBQUM1QyxpQkFBaUIsbUJBQU8sQ0FBQyx5RUFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2tvbnZhL2xpYi9zaGFwZXMvV2VkZ2UuanM/ZTBkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2VkZ2UgPSB2b2lkIDA7XG5jb25zdCBGYWN0b3J5XzEgPSByZXF1aXJlKFwiLi4vRmFjdG9yeVwiKTtcbmNvbnN0IFNoYXBlXzEgPSByZXF1aXJlKFwiLi4vU2hhcGVcIik7XG5jb25zdCBHbG9iYWxfMSA9IHJlcXVpcmUoXCIuLi9HbG9iYWxcIik7XG5jb25zdCBWYWxpZGF0b3JzXzEgPSByZXF1aXJlKFwiLi4vVmFsaWRhdG9yc1wiKTtcbmNvbnN0IEdsb2JhbF8yID0gcmVxdWlyZShcIi4uL0dsb2JhbFwiKTtcbmNsYXNzIFdlZGdlIGV4dGVuZHMgU2hhcGVfMS5TaGFwZSB7XG4gICAgX3NjZW5lRnVuYyhjb250ZXh0KSB7XG4gICAgICAgIGNvbnRleHQuYmVnaW5QYXRoKCk7XG4gICAgICAgIGNvbnRleHQuYXJjKDAsIDAsIHRoaXMucmFkaXVzKCksIDAsIEdsb2JhbF8xLktvbnZhLmdldEFuZ2xlKHRoaXMuYW5nbGUoKSksIHRoaXMuY2xvY2t3aXNlKCkpO1xuICAgICAgICBjb250ZXh0LmxpbmVUbygwLCAwKTtcbiAgICAgICAgY29udGV4dC5jbG9zZVBhdGgoKTtcbiAgICAgICAgY29udGV4dC5maWxsU3Ryb2tlU2hhcGUodGhpcyk7XG4gICAgfVxuICAgIGdldFdpZHRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yYWRpdXMoKSAqIDI7XG4gICAgfVxuICAgIGdldEhlaWdodCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmFkaXVzKCkgKiAyO1xuICAgIH1cbiAgICBzZXRXaWR0aCh3aWR0aCkge1xuICAgICAgICB0aGlzLnJhZGl1cyh3aWR0aCAvIDIpO1xuICAgIH1cbiAgICBzZXRIZWlnaHQoaGVpZ2h0KSB7XG4gICAgICAgIHRoaXMucmFkaXVzKGhlaWdodCAvIDIpO1xuICAgIH1cbn1cbmV4cG9ydHMuV2VkZ2UgPSBXZWRnZTtcbldlZGdlLnByb3RvdHlwZS5jbGFzc05hbWUgPSAnV2VkZ2UnO1xuV2VkZ2UucHJvdG90eXBlLl9jZW50cm9pZCA9IHRydWU7XG5XZWRnZS5wcm90b3R5cGUuX2F0dHJzQWZmZWN0aW5nU2l6ZSA9IFsncmFkaXVzJ107XG4oMCwgR2xvYmFsXzIuX3JlZ2lzdGVyTm9kZSkoV2VkZ2UpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKFdlZGdlLCAncmFkaXVzJywgMCwgKDAsIFZhbGlkYXRvcnNfMS5nZXROdW1iZXJWYWxpZGF0b3IpKCkpO1xuRmFjdG9yeV8xLkZhY3RvcnkuYWRkR2V0dGVyU2V0dGVyKFdlZGdlLCAnYW5nbGUnLCAwLCAoMCwgVmFsaWRhdG9yc18xLmdldE51bWJlclZhbGlkYXRvcikoKSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5hZGRHZXR0ZXJTZXR0ZXIoV2VkZ2UsICdjbG9ja3dpc2UnLCBmYWxzZSk7XG5GYWN0b3J5XzEuRmFjdG9yeS5iYWNrQ29tcGF0KFdlZGdlLCB7XG4gICAgYW5nbGVEZWc6ICdhbmdsZScsXG4gICAgZ2V0QW5nbGVEZWc6ICdnZXRBbmdsZScsXG4gICAgc2V0QW5nbGVEZWc6ICdzZXRBbmdsZScsXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/konva/lib/shapes/Wedge.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/magic-wand-tool/dist/magic-wand.js":
/*!*********************************************************!*\
  !*** ./node_modules/magic-wand-tool/dist/magic-wand.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n/*\n Magic wand tool (fuzzy selection) by color\n\n @package magic-wand-tool\n @author Ryasnoy Paul <ryasnoypaul@gmail.com>\n @version 1.1.7\n @license MIT\n @copyright (c) 2014-2020, Ryasnoy Paul <ryasnoypaul@gmail.com>\n\n*/\n\nvar MagicWand = (function () {\r\n    var lib = {};\r\n\r\n    /** Create a binary mask on the image by color threshold\r\n      * Algorithm: Scanline flood fill (http://en.wikipedia.org/wiki/Flood_fill)\r\n      * @param {Object} image: {Uint8Array} data, {int} width, {int} height, {int} bytes\r\n      * @param {int} x of start pixel\r\n      * @param {int} y of start pixel\r\n      * @param {int} color threshold\r\n      * @param {Uint8Array} mask of visited points (optional) \r\n      * @param {boolean} [includeBorders=false] indicate whether to include borders pixels\r\n      * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      */\r\n    lib.floodFill = function(image, px, py, colorThreshold, mask, includeBorders) {\r\n        return includeBorders\r\n            ? floodFillWithBorders(image, px, py, colorThreshold, mask)\r\n            : floodFillWithoutBorders(image, px, py, colorThreshold, mask);\r\n    };\r\n\r\n    function floodFillWithoutBorders(image, px, py, colorThreshold, mask) {\r\n\r\n        var c, x, newY, el, xr, xl, dy, dyl, dyr, checkY,\r\n            data = image.data,\r\n            w = image.width,\r\n            h = image.height,\r\n            bytes = image.bytes, // number of bytes in the color\r\n            maxX = -1, minX = w + 1, maxY = -1, minY = h + 1,\r\n            i = py * w + px, // start point index in the mask data\r\n            result = new Uint8Array(w * h), // result mask\r\n            visited = new Uint8Array(mask ? mask : w * h); // mask of visited points\r\n\r\n        if (visited[i] === 1) return null;\r\n\r\n        i = i * bytes; // start point index in the image data\r\n        var sampleColor = [data[i], data[i + 1], data[i + 2], data[i + 3]]; // start point color (sample)\r\n\r\n        var stack = [{ y: py, left: px - 1, right: px + 1, dir: 1 }]; // first scanning line\r\n        do {\r\n            el = stack.shift(); // get line for scanning\r\n\r\n            checkY = false;\r\n            for (x = el.left + 1; x < el.right; x++) {\r\n                dy = el.y * w;\r\n                i = (dy + x) * bytes; // point index in the image data\r\n\r\n                if (visited[dy + x] === 1) continue; // check whether the point has been visited\r\n                // compare the color of the sample\r\n                c = data[i] - sampleColor[0]; // check by red\r\n                if (c > colorThreshold || c < -colorThreshold) continue;\r\n                c = data[i + 1] - sampleColor[1]; // check by green\r\n                if (c > colorThreshold || c < -colorThreshold) continue;\r\n                c = data[i + 2] - sampleColor[2]; // check by blue\r\n                if (c > colorThreshold || c < -colorThreshold) continue;\r\n\r\n                checkY = true; // if the color of the new point(x,y) is similar to the sample color need to check minmax for Y \r\n\r\n                result[dy + x] = 1; // mark a new point in mask\r\n                visited[dy + x] = 1; // mark a new point as visited\r\n\r\n                xl = x - 1;\r\n                // walk to left side starting with the left neighbor\r\n                while (xl > -1) {\r\n                    dyl = dy + xl;\r\n                    i = dyl * bytes; // point index in the image data\r\n                    if (visited[dyl] === 1) break; // check whether the point has been visited\r\n                    // compare the color of the sample\r\n                    c = data[i] - sampleColor[0]; // check by red\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 1] - sampleColor[1]; // check by green\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 2] - sampleColor[2]; // check by blue\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n\r\n                    result[dyl] = 1;\r\n                    visited[dyl] = 1;\r\n\r\n                    xl--;\r\n                }\r\n                xr = x + 1;\r\n                // walk to right side starting with the right neighbor\r\n                while (xr < w) {\r\n                    dyr = dy + xr;\r\n                    i = dyr * bytes; // index point in the image data\r\n                    if (visited[dyr] === 1) break; // check whether the point has been visited\r\n                    // compare the color of the sample\r\n                    c = data[i] - sampleColor[0]; // check by red\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 1] - sampleColor[1]; // check by green\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 2] - sampleColor[2]; // check by blue\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n\r\n                    result[dyr] = 1;\r\n                    visited[dyr] = 1;\r\n\r\n                    xr++;\r\n                }\r\n\r\n                // check minmax for X\r\n                if (xl < minX) minX = xl + 1;\r\n                if (xr > maxX) maxX = xr - 1;\r\n\r\n                newY = el.y - el.dir;\r\n                if (newY >= 0 && newY < h) { // add two scanning lines in the opposite direction (y - dir) if necessary\r\n                    if (xl < el.left) stack.push({ y: newY, left: xl, right: el.left, dir: -el.dir }); // from \"new left\" to \"current left\"\r\n                    if (el.right < xr) stack.push({ y: newY, left: el.right, right: xr, dir: -el.dir }); // from \"current right\" to \"new right\"\r\n                }\r\n                newY = el.y + el.dir;\r\n                if (newY >= 0 && newY < h) { // add the scanning line in the direction (y + dir) if necessary\r\n                    if (xl < xr) stack.push({ y: newY, left: xl, right: xr, dir: el.dir }); // from \"new left\" to \"new right\"\r\n                }\r\n            }\r\n            // check minmax for Y if necessary\r\n            if (checkY) {\r\n                if (el.y < minY) minY = el.y;\r\n                if (el.y > maxY) maxY = el.y;\r\n            }\r\n        } while (stack.length > 0);\r\n\r\n        return {\r\n            data: result,\r\n            width: image.width,\r\n            height: image.height,\r\n            bounds: {\r\n                minX: minX,\r\n                minY: minY,\r\n                maxX: maxX,\r\n                maxY: maxY\r\n            }\r\n        };\r\n    }\r\n    function floodFillWithBorders(image, px, py, colorThreshold, mask) {\r\n\r\n        var c, x, newY, el, xr, xl, dy, dyl, dyr, checkY,\r\n            data = image.data,\r\n            w = image.width,\r\n            h = image.height,\r\n            bytes = image.bytes, // number of bytes in the color\r\n            maxX = -1, minX = w + 1, maxY = -1, minY = h + 1,\r\n            i = py * w + px, // start point index in the mask data\r\n            result = new Uint8Array(w * h), // result mask\r\n            visited = new Uint8Array(mask ? mask : w * h); // mask of visited points\r\n\r\n        if (visited[i] === 1) return null;\r\n\r\n        i = i * bytes; // start point index in the image data\r\n        var sampleColor = [data[i], data[i + 1], data[i + 2], data[i + 3]]; // start point color (sample)\r\n\r\n        var stack = [{ y: py, left: px - 1, right: px + 1, dir: 1 }]; // first scanning line\r\n        do {\r\n            el = stack.shift(); // get line for scanning\r\n\r\n            checkY = false;\r\n            for (x = el.left + 1; x < el.right; x++) {\r\n                dy = el.y * w;\r\n                i = (dy + x) * bytes; // point index in the image data\r\n\r\n                if (visited[dy + x] === 1) continue; // check whether the point has been visited\r\n\r\n                checkY = true; // if the color of the new point(x,y) is similar to the sample color need to check minmax for Y \r\n\r\n                result[dy + x] = 1; // mark a new point in mask\r\n                visited[dy + x] = 1; // mark a new point as visited\r\n\r\n                // compare the color of the sample\r\n                c = data[i] - sampleColor[0]; // check by red\r\n                if (c > colorThreshold || c < -colorThreshold) continue;\r\n                c = data[i + 1] - sampleColor[1]; // check by green\r\n                if (c > colorThreshold || c < -colorThreshold) continue;\r\n                c = data[i + 2] - sampleColor[2]; // check by blue\r\n                if (c > colorThreshold || c < -colorThreshold) continue;\r\n\r\n                xl = x - 1;\r\n                // walk to left side starting with the left neighbor\r\n                while (xl > -1) {\r\n                    dyl = dy + xl;\r\n                    i = dyl * bytes; // point index in the image data\r\n                    if (visited[dyl] === 1) break; // check whether the point has been visited\r\n\r\n                    result[dyl] = 1;\r\n                    visited[dyl] = 1;\r\n                    xl--;\r\n\r\n                    // compare the color of the sample\r\n                    c = data[i] - sampleColor[0]; // check by red\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 1] - sampleColor[1]; // check by green\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 2] - sampleColor[2]; // check by blue\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                }\r\n                xr = x + 1;\r\n                // walk to right side starting with the right neighbor\r\n                while (xr < w) {\r\n                    dyr = dy + xr;\r\n                    i = dyr * bytes; // index point in the image data\r\n                    if (visited[dyr] === 1) break; // check whether the point has been visited\r\n\r\n                    result[dyr] = 1;\r\n                    visited[dyr] = 1;\r\n                    xr++;\r\n\r\n                    // compare the color of the sample\r\n                    c = data[i] - sampleColor[0]; // check by red\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 1] - sampleColor[1]; // check by green\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                    c = data[i + 2] - sampleColor[2]; // check by blue\r\n                    if (c > colorThreshold || c < -colorThreshold) break;\r\n                }\r\n\r\n                // check minmax for X\r\n                if (xl < minX) minX = xl + 1;\r\n                if (xr > maxX) maxX = xr - 1;\r\n\r\n                newY = el.y - el.dir;\r\n                if (newY >= 0 && newY < h) { // add two scanning lines in the opposite direction (y - dir) if necessary\r\n                    if (xl < el.left) stack.push({ y: newY, left: xl, right: el.left, dir: -el.dir }); // from \"new left\" to \"current left\"\r\n                    if (el.right < xr) stack.push({ y: newY, left: el.right, right: xr, dir: -el.dir }); // from \"current right\" to \"new right\"\r\n                }\r\n                newY = el.y + el.dir;\r\n                if (newY >= 0 && newY < h) { // add the scanning line in the direction (y + dir) if necessary\r\n                    if (xl < xr) stack.push({ y: newY, left: xl, right: xr, dir: el.dir }); // from \"new left\" to \"new right\"\r\n                }\r\n            }\r\n            // check minmax for Y if necessary\r\n            if (checkY) {\r\n                if (el.y < minY) minY = el.y;\r\n                if (el.y > maxY) maxY = el.y;\r\n            }\r\n        } while (stack.length > 0);\r\n\r\n        return {\r\n            data: result,\r\n            width: image.width,\r\n            height: image.height,\r\n            bounds: {\r\n                minX: minX,\r\n                minY: minY,\r\n                maxX: maxX,\r\n                maxY: maxY\r\n            }\r\n        };\r\n    }\r\n    /** Apply the gauss-blur filter to binary mask\r\n      * Algorithms: http://blog.ivank.net/fastest-gaussian-blur.html\r\n      * http://www.librow.com/articles/article-9\r\n      * http://elynxsdk.free.fr/ext-docs/Blur/Fast_box_blur.pdf\r\n      * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      * @param {int} blur radius\r\n      * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      */\r\n    lib.gaussBlur = function(mask, radius) {\r\n\r\n        var i, k, k1, x, y, val, start, end,\r\n            n = radius * 2 + 1, // size of the pattern for radius-neighbors (from -r to +r with the center point)\r\n            s2 = radius * radius,\r\n            wg = new Float32Array(n), // weights\r\n            total = 0, // sum of weights(used for normalization)\r\n            w = mask.width,\r\n            h = mask.height,\r\n            data = mask.data,\r\n            minX = mask.bounds.minX,\r\n            maxX = mask.bounds.maxX,\r\n            minY = mask.bounds.minY,\r\n            maxY = mask.bounds.maxY;\r\n\r\n        // calc gauss weights\r\n        for (i = 0; i < radius; i++) {\r\n            var dsq = (radius - i) * (radius - i);\r\n            var ww = Math.exp(-dsq / (2.0 * s2)) / (2 * Math.PI * s2);\r\n            wg[radius + i] = wg[radius - i] = ww;\r\n            total += 2 * ww;\r\n        }\r\n        // normalization weights\r\n        for (i = 0; i < n; i++) {\r\n            wg[i] /= total;\r\n        }\r\n\r\n        var result = new Uint8Array(w * h), // result mask\r\n            endX = radius + w,\r\n            endY = radius + h;\r\n\r\n        //walk through all source points for blur\r\n        for (y = minY; y < maxY + 1; y++)\r\n            for (x = minX; x < maxX + 1; x++) {\r\n                val = 0;\r\n                k = y * w + x; // index of the point\r\n                start = radius - x > 0 ? radius - x : 0;\r\n                end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\r\n                k1 = k - radius;\r\n                // walk through x-neighbors\r\n                for (i = start; i < end; i++) {\r\n                    val += data[k1 + i] * wg[i];\r\n                }\r\n                start = radius - y > 0 ? radius - y : 0;\r\n                end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\r\n                k1 = k - radius * w;\r\n                // walk through y-neighbors\r\n                for (i = start; i < end; i++) {\r\n                    val += data[k1 + i * w] * wg[i];\r\n                }\r\n                result[k] = val > 0.5 ? 1 : 0;\r\n            }\r\n\r\n        return {\r\n            data: result,\r\n            width: w,\r\n            height: h,\r\n            bounds: {\r\n                minX: minX,\r\n                minY: minY,\r\n                maxX: maxX,\r\n                maxY: maxY\r\n            }\r\n        };\r\n    };\r\n\r\n    /** Create a border index array of boundary points of the mask with radius-neighbors\r\n      * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      * @param {int} blur radius\r\n      * @param {Uint8Array} visited: mask of visited points (optional) \r\n      * @return {Array} border index array of boundary points with radius-neighbors (only points need for blur)\r\n      */\r\n    function createBorderForBlur(mask, radius, visited) {\r\n\r\n        var x, i, j, y, k, k1, k2,\r\n            w = mask.width,\r\n            h = mask.height,\r\n            data = mask.data,\r\n            visitedData = new Uint8Array(data),\r\n            minX = mask.bounds.minX,\r\n            maxX = mask.bounds.maxX,\r\n            minY = mask.bounds.minY,\r\n            maxY = mask.bounds.maxY,\r\n            len = w * h,\r\n            temp = new Uint8Array(len), // auxiliary array to check uniqueness\r\n            border = [], // only border points\r\n            x0 = Math.max(minX, 1),\r\n            x1 = Math.min(maxX, w - 2),\r\n            y0 = Math.max(minY, 1),\r\n            y1 = Math.min(maxY, h - 2);\r\n\r\n        if (visited && visited.length > 0) {\r\n            // copy visited points (only \"black\")\r\n            for (k = 0; k < len; k++) {\r\n                if (visited[k] === 1) visitedData[k] = 1;\r\n            }\r\n        }\r\n\r\n        // walk through inner values except points on the boundary of the image\r\n        for (y = y0; y < y1 + 1; y++)\r\n            for (x = x0; x < x1 + 1; x++) {\r\n                k = y * w + x;\r\n                if (data[k] === 0) continue; // \"white\" point isn't the border\r\n                k1 = k + w; // y + 1\r\n                k2 = k - w; // y - 1\r\n                // check if any neighbor with a \"white\" color\r\n                if (visitedData[k + 1] === 0 || visitedData[k - 1] === 0 ||\r\n                    visitedData[k1] === 0 || visitedData[k1 + 1] === 0 || visitedData[k1 - 1] === 0 ||\r\n                    visitedData[k2] === 0 || visitedData[k2 + 1] === 0 || visitedData[k2 - 1] === 0) {\r\n                    //if (visitedData[k + 1] + visitedData[k - 1] + \r\n                    //    visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +\r\n                    //    visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] == 8) continue;\r\n                    border.push(k);\r\n                }\r\n            }\r\n\r\n        // walk through points on the boundary of the image if necessary\r\n        // if the \"black\" point is adjacent to the boundary of the image, it is a border point\r\n        if (minX == 0)\r\n            for (y = minY; y < maxY + 1; y++)\r\n                if (data[y * w] === 1)\r\n                    border.push(y * w);\r\n\r\n        if (maxX == w - 1)\r\n            for (y = minY; y < maxY + 1; y++)\r\n                if (data[y * w + maxX] === 1)\r\n                    border.push(y * w + maxX);\r\n\r\n        if (minY == 0)\r\n            for (x = minX; x < maxX + 1; x++)\r\n                if (data[x] === 1)\r\n                    border.push(x);\r\n\r\n        if (maxY == h - 1)\r\n            for (x = minX; x < maxX + 1; x++)\r\n                if (data[maxY * w + x] === 1)\r\n                    border.push(maxY * w + x);\r\n\r\n        var result = [], // border points with radius-neighbors\r\n            start, end,\r\n            endX = radius + w,\r\n            endY = radius + h,\r\n            n = radius * 2 + 1; // size of the pattern for radius-neighbors (from -r to +r with the center point)\r\n\r\n        len = border.length;\r\n        // walk through radius-neighbors of border points and add them to the result array\r\n        for (j = 0; j < len; j++) {\r\n            k = border[j]; // index of the border point\r\n            temp[k] = 1; // mark border point\r\n            result.push(k); // save the border point\r\n            x = k % w; // calc x by index\r\n            y = (k - x) / w; // calc y by index\r\n            start = radius - x > 0 ? radius - x : 0;\r\n            end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\r\n            k1 = k - radius;\r\n            // walk through x-neighbors\r\n            for (i = start; i < end; i++) {\r\n                k2 = k1 + i;\r\n                if (temp[k2] === 0) { // check the uniqueness\r\n                    temp[k2] = 1;\r\n                    result.push(k2);\r\n                }\r\n            }\r\n            start = radius - y > 0 ? radius - y : 0;\r\n            end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\r\n            k1 = k - radius * w;\r\n            // walk through y-neighbors\r\n            for (i = start; i < end; i++) {\r\n                k2 = k1 + i * w;\r\n                if (temp[k2] === 0) { // check the uniqueness\r\n                    temp[k2] = 1;\r\n                    result.push(k2);\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n    /** Apply the gauss-blur filter ONLY to border points with radius-neighbors\r\n      * Algorithms: http://blog.ivank.net/fastest-gaussian-blur.html\r\n      * http://www.librow.com/articles/article-9\r\n      * http://elynxsdk.free.fr/ext-docs/Blur/Fast_box_blur.pdf\r\n      * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      * @param {int} blur radius\r\n      * @param {Uint8Array} visited: mask of visited points (optional) \r\n      * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      */\r\n    lib.gaussBlurOnlyBorder = function(mask, radius, visited) {\r\n\r\n        var border = createBorderForBlur(mask, radius, visited), // get border points with radius-neighbors\r\n            ww, dsq, i, j, k, k1, x, y, val, start, end,\r\n            n = radius * 2 + 1, // size of the pattern for radius-neighbors (from -r to +r with center point)\r\n            s2 = 2 * radius * radius,\r\n            wg = new Float32Array(n), // weights\r\n            total = 0, // sum of weights(used for normalization)\r\n            w = mask.width,\r\n            h = mask.height,\r\n            data = mask.data,\r\n            minX = mask.bounds.minX,\r\n            maxX = mask.bounds.maxX,\r\n            minY = mask.bounds.minY,\r\n            maxY = mask.bounds.maxY,\r\n            len = border.length;\r\n\r\n        // calc gauss weights\r\n        for (i = 0; i < radius; i++) {\r\n            dsq = (radius - i) * (radius - i);\r\n            ww = Math.exp(-dsq / s2) / Math.PI;\r\n            wg[radius + i] = wg[radius - i] = ww;\r\n            total += 2 * ww;\r\n        }\r\n        // normalization weights\r\n        for (i = 0; i < n; i++) {\r\n            wg[i] /= total;\r\n        }\r\n\r\n        var result = new Uint8Array(data), // copy the source mask\r\n            endX = radius + w,\r\n            endY = radius + h;\r\n\r\n        //walk through all border points for blur\r\n        for (i = 0; i < len; i++) {\r\n            k = border[i]; // index of the border point\r\n            val = 0;\r\n            x = k % w; // calc x by index\r\n            y = (k - x) / w; // calc y by index\r\n            start = radius - x > 0 ? radius - x : 0;\r\n            end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\r\n            k1 = k - radius;\r\n            // walk through x-neighbors\r\n            for (j = start; j < end; j++) {\r\n                val += data[k1 + j] * wg[j];\r\n            }\r\n            if (val > 0.5) {\r\n                result[k] = 1;\r\n                // check minmax\r\n                if (x < minX) minX = x;\r\n                if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                if (y > maxY) maxY = y;\r\n                continue;\r\n            }\r\n            start = radius - y > 0 ? radius - y : 0;\r\n            end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\r\n            k1 = k - radius * w;\r\n            // walk through y-neighbors\r\n            for (j = start; j < end; j++) {\r\n                val += data[k1 + j * w] * wg[j];\r\n            }\r\n            if (val > 0.5) {\r\n                result[k] = 1;\r\n                // check minmax\r\n                if (x < minX) minX = x;\r\n                if (x > maxX) maxX = x;\r\n                if (y < minY) minY = y;\r\n                if (y > maxY) maxY = y;\r\n            } else {\r\n                result[k] = 0;\r\n            }\r\n        }\r\n\r\n        return {\r\n            data: result,\r\n            width: w,\r\n            height: h,\r\n            bounds: {\r\n                minX: minX,\r\n                minY: minY,\r\n                maxX: maxX,\r\n                maxY: maxY\r\n            }\r\n        };\r\n    };\r\n\r\n    /** Create a border mask (only boundary points)\r\n      * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      * @return {Object} border mask: {Uint8Array} data, {int} width, {int} height, {Object} offset\r\n      */\r\n    lib.createBorderMask = function(mask) {\r\n\r\n        var x, y, k, k1, k2,\r\n            w = mask.width,\r\n            h = mask.height,\r\n            data = mask.data,\r\n            minX = mask.bounds.minX,\r\n            maxX = mask.bounds.maxX,\r\n            minY = mask.bounds.minY,\r\n            maxY = mask.bounds.maxY,\r\n            rw = maxX - minX + 1, // bounds size\r\n            rh = maxY - minY + 1,\r\n            result = new Uint8Array(rw * rh), // reduced mask (bounds size)\r\n            x0 = Math.max(minX, 1),\r\n            x1 = Math.min(maxX, w - 2),\r\n            y0 = Math.max(minY, 1),\r\n            y1 = Math.min(maxY, h - 2);\r\n\r\n        // walk through inner values except points on the boundary of the image\r\n        for (y = y0; y < y1 + 1; y++)\r\n            for (x = x0; x < x1 + 1; x++) {\r\n                k = y * w + x;\r\n                if (data[k] === 0) continue; // \"white\" point isn't the border\r\n                k1 = k + w; // y + 1\r\n                k2 = k - w; // y - 1\r\n                // check if any neighbor with a \"white\" color\r\n                if (data[k + 1] === 0 || data[k - 1] === 0 ||\r\n                    data[k1] === 0 || data[k1 + 1] === 0 || data[k1 - 1] === 0 ||\r\n                    data[k2] === 0 || data[k2 + 1] === 0 || data[k2 - 1] === 0) {\r\n                    //if (data[k + 1] + data[k - 1] + \r\n                    //    data[k1] + data[k1 + 1] + data[k1 - 1] +\r\n                    //    data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;\r\n                    result[(y - minY) * rw + (x - minX)] = 1;\r\n                }\r\n            }\r\n\r\n        // walk through points on the boundary of the image if necessary\r\n        // if the \"black\" point is adjacent to the boundary of the image, it is a border point\r\n        if (minX == 0)\r\n            for (y = minY; y < maxY + 1; y++)\r\n                if (data[y * w] === 1)\r\n                    result[(y - minY) * rw] = 1;\r\n\r\n        if (maxX == w - 1)\r\n            for (y = minY; y < maxY + 1; y++)\r\n                if (data[y * w + maxX] === 1)\r\n                    result[(y - minY) * rw + (maxX - minX)] = 1;\r\n\r\n        if (minY == 0)\r\n            for (x = minX; x < maxX + 1; x++)\r\n                if (data[x] === 1)\r\n                    result[x - minX] = 1;\r\n\r\n        if (maxY == h - 1)\r\n            for (x = minX; x < maxX + 1; x++)\r\n                if (data[maxY * w + x] === 1)\r\n                    result[(maxY - minY) * rw + (x - minX)] = 1;\r\n\r\n        return {\r\n            data: result,\r\n            width: rw,\r\n            height: rh,\r\n            offset: { x: minX, y: minY }\r\n        };\r\n    };\r\n    \r\n    /** Create a border index array of boundary points of the mask\r\n      * @param {Object} mask: {Uint8Array} data, {int} width, {int} height\r\n      * @return {Array} border index array boundary points of the mask\r\n      */\r\n    lib.getBorderIndices = function(mask) {\r\n\r\n        var x, y, k, k1, k2,\r\n            w = mask.width,\r\n            h = mask.height,\r\n            data = mask.data,\r\n            border = [], // only border points\r\n            x1 = w - 1,\r\n            y1 = h - 1;\r\n\r\n        // walk through inner values except points on the boundary of the image\r\n        for (y = 1; y < y1; y++)\r\n            for (x = 1; x < x1; x++) {\r\n                k = y * w + x;\r\n                if (data[k] === 0) continue; // \"white\" point isn't the border\r\n                k1 = k + w; // y + 1\r\n                k2 = k - w; // y - 1\r\n                // check if any neighbor with a \"white\" color\r\n                if (data[k + 1] === 0 || data[k - 1] === 0 ||\r\n                    data[k1] === 0 || data[k1 + 1] === 0 || data[k1 - 1] === 0 ||\r\n                    data[k2] === 0 || data[k2 + 1] === 0 || data[k2 - 1] === 0) {\r\n                    //if (data[k + 1] + data[k - 1] + \r\n                    //    data[k1] + data[k1 + 1] + data[k1 - 1] +\r\n                    //    data[k2] + data[k2 + 1] + data[k2 - 1] == 8) continue;\r\n                    border.push(k);\r\n                }\r\n            }\r\n\r\n        // walk through points on the boundary of the image if necessary\r\n        // if the \"black\" point is adjacent to the boundary of the image, it is a border point\r\n        for (y = 0; y < h; y++)\r\n            if (data[y * w] === 1)\r\n                border.push(y * w);\r\n\r\n        for (x = 0; x < w; x++)\r\n            if (data[x] === 1)\r\n                border.push(x);\r\n\r\n        k = w - 1;\r\n        for (y = 0; y < h; y++)\r\n            if (data[y * w + k] === 1)\r\n                border.push(y * w + k);\r\n\r\n        k = (h - 1) * w;\r\n        for (x = 0; x < w; x++)\r\n            if (data[k + x] === 1)\r\n                border.push(k + x);\r\n\r\n        return border;\r\n    };\r\n    \r\n    /** Create a compressed mask with a \"white\" border (1px border with zero values) for the contour tracing\r\n      * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      * @return {Object} border mask: {Uint8Array} data, {int} width, {int} height, {Object} offset\r\n      */\r\n    function prepareMask(mask) {\r\n        var x, y,\r\n            w = mask.width,\r\n            data = mask.data,\r\n            minX = mask.bounds.minX,\r\n            maxX = mask.bounds.maxX,\r\n            minY = mask.bounds.minY,\r\n            maxY = mask.bounds.maxY,\r\n            rw = maxX - minX + 3, // bounds size +1 px on each side (a \"white\" border)\r\n            rh = maxY - minY + 3,\r\n            result = new Uint8Array(rw * rh); // reduced mask (bounds size)\r\n\r\n        // walk through inner values and copy only \"black\" points to the result mask\r\n        for (y = minY; y < maxY + 1; y++)\r\n            for (x = minX; x < maxX + 1; x++) {\r\n                if (data[y * w + x] === 1)\r\n                    result[(y - minY + 1) * rw + (x - minX + 1)] = 1;\r\n            }\r\n\r\n        return {\r\n            data: result,\r\n            width: rw,\r\n            height: rh,\r\n            offset: { x: minX - 1, y: minY - 1 }\r\n        };\r\n    }        \r\n    /** Create a contour array for the binary mask\r\n      * Algorithm: http://www.sciencedirect.com/science/article/pii/S1077314203001401\r\n      * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\r\n      * @return {Array} contours: {Array} points, {bool} inner, {int} label\r\n      */\r\n    lib.traceContours = function(mask) {\r\n        var m = prepareMask(mask),\r\n            contours = [],\r\n            label = 0,\r\n            w = m.width,\r\n            w2 = w * 2,\r\n            h = m.height,\r\n            src = m.data,\r\n            dx = m.offset.x,\r\n            dy = m.offset.y,\r\n            dest = new Uint8Array(src), // label matrix\r\n            i, j, x, y, k, k1, c, inner, dir, first, second, current, previous, next, d;\r\n\r\n        // all [dx,dy] pairs (array index is the direction)\r\n        // 5 6 7\r\n        // 4 X 0\r\n        // 3 2 1\r\n        var directions = [[1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1], [0, -1], [1, -1]];\r\n\r\n        for (y = 1; y < h - 1; y++)\r\n            for (x = 1; x < w - 1; x++) {\r\n                k = y * w + x;\r\n                if (src[k] === 1) {\r\n                    for (i = -w; i < w2; i += w2) { // k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)\r\n                        if (src[k + i] === 0 && dest[k + i] === 0) { // need contour tracing\r\n                            inner = i === w; // is inner contour tracing ?\r\n                            label++; // label for the next contour\r\n\r\n                            c = [];\r\n                            dir = inner ? 2 : 6; // start direction\r\n                            current = previous = first = { x: x, y: y };\r\n                            second = null;\r\n                            while (true) {\r\n                                dest[current.y * w + current.x] = label; // mark label for the current point \r\n                                // bypass all the neighbors around the current point in a clockwise\r\n                                for (j = 0; j < 8; j++) {\r\n                                    dir = (dir + 1) % 8;\r\n\r\n                                    // get the next point by new direction\r\n                                    d = directions[dir]; // index as direction\r\n                                    next = { x: current.x + d[0], y: current.y + d[1] };\r\n\r\n                                    k1 = next.y * w + next.x;\r\n                                    if (src[k1] === 1) // black boundary pixel\r\n                                    {\r\n                                        dest[k1] = label; // mark a label\r\n                                        break;\r\n                                    }\r\n                                    dest[k1] = -1; // mark a white boundary pixel\r\n                                    next = null;\r\n                                }\r\n                                if (next === null) break; // no neighbours (one-point contour)\r\n                                current = next;\r\n                                if (second) {\r\n                                    if (previous.x === first.x && previous.y === first.y && current.x === second.x && current.y === second.y) {\r\n                                        break; // creating the contour completed when returned to original position\r\n                                    }\r\n                                } else {\r\n                                    second = next;\r\n                                }\r\n                                c.push({ x: previous.x + dx, y: previous.y + dy });\r\n                                previous = current;\r\n                                dir = (dir + 4) % 8; // next dir (symmetrically to the current direction)\r\n                            }\r\n\r\n                            if (next != null) {\r\n                                c.push({ x: first.x + dx, y: first.y + dy }); // close the contour\r\n                                contours.push({ inner: inner, label: label, points: c }); // add contour to the list\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        return contours;\r\n    };\r\n    \r\n    /** Simplify contours\r\n      * Algorithms: http://psimpl.sourceforge.net/douglas-peucker.html \r\n      * http://neerc.ifmo.ru/wiki/index.php?title=%D0%A3%D0%BF%D1%80%D0%BE%D1%89%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BF%D0%BE%D0%BB%D0%B8%D0%B3%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9_%D1%86%D0%B5%D0%BF%D0%B8\r\n      * @param {Array} contours: {Array} points, {bool} inner, {int} label\r\n      * @param {float} simplify tolerant\r\n      * @param {int} simplify count: min number of points when the contour is simplified\r\n      * @return {Array} contours: {Array} points, {bool} inner, {int} label, {int} initialCount\r\n      */\r\n    lib.simplifyContours = function(contours, simplifyTolerant, simplifyCount) {\r\n        var lenContours = contours.length,\r\n            result = [],\r\n            i, j, k, c, points, len, resPoints, lst, stack, ids,\r\n            maxd, maxi, dist, r1, r2, r12, dx, dy, pi, pf, pl;\r\n\r\n        // walk through all contours \r\n        for (j = 0; j < lenContours; j++) {\r\n            c = contours[j];\r\n            points = c.points;\r\n            len = c.points.length;\r\n\r\n            if (len < simplifyCount) { // contour isn't simplified\r\n                resPoints = [];\r\n                for (k = 0; k < len; k++) {\r\n                    resPoints.push({ x: points[k].x, y: points[k].y });\r\n                }\r\n                result.push({ inner: c.inner, label: c.label, points: resPoints, initialCount: len });\r\n                continue;\r\n            }\r\n\r\n            lst = [0, len - 1]; // always add first and last points\r\n            stack = [{ first: 0, last: len - 1 }]; // first processed edge\r\n\r\n            do {\r\n                ids = stack.shift();\r\n                if (ids.last <= ids.first + 1) // no intermediate points\r\n                {\r\n                    continue;\r\n                }\r\n\r\n                maxd = -1.0; // max distance from point to current edge\r\n                maxi = ids.first; // index of maximally distant point\r\n\r\n                for (i = ids.first + 1; i < ids.last; i++) // bypass intermediate points in edge\r\n                {\r\n                    // calc the distance from current point to edge\r\n                    pi = points[i];\r\n                    pf = points[ids.first];\r\n                    pl = points[ids.last];\r\n                    dx = pi.x - pf.x;\r\n                    dy = pi.y - pf.y;\r\n                    r1 = Math.sqrt(dx * dx + dy * dy);\r\n                    dx = pi.x - pl.x;\r\n                    dy = pi.y - pl.y;\r\n                    r2 = Math.sqrt(dx * dx + dy * dy);\r\n                    dx = pf.x - pl.x;\r\n                    dy = pf.y - pl.y;\r\n                    r12 = Math.sqrt(dx * dx + dy * dy);\r\n                    if (r1 >= Math.sqrt(r2 * r2 + r12 * r12)) dist = r2;\r\n                    else if (r2 >= Math.sqrt(r1 * r1 + r12 * r12)) dist = r1;\r\n                    else dist = Math.abs((dy * pi.x - dx * pi.y + pf.x * pl.y - pl.x * pf.y) / r12);\r\n\r\n                    if (dist > maxd) {\r\n                        maxi = i; // save the index of maximally distant point\r\n                        maxd = dist;\r\n                    }\r\n                }\r\n\r\n                if (maxd > simplifyTolerant) // if the max \"deviation\" is larger than allowed then...\r\n                {\r\n                    lst.push(maxi); // add index to the simplified list\r\n                    stack.push({ first: ids.first, last: maxi }); // add the left part for processing\r\n                    stack.push({ first: maxi, last: ids.last }); // add the right part for processing\r\n                }\r\n\r\n            } while (stack.length > 0);\r\n\r\n            resPoints = [];\r\n            len = lst.length;\r\n            lst.sort(function(a, b) { return a - b; }); // restore index order\r\n            for (k = 0; k < len; k++) {\r\n                resPoints.push({ x: points[lst[k]].x, y: points[lst[k]].y }); // add result points to the correct order\r\n            }\r\n            result.push({ inner: c.inner, label: c.label, points: resPoints, initialCount: c.points.length });\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    return lib;\r\n})();\r\n\r\nif ( true && module !== null) module.exports = MagicWand;\r\nif (typeof window !== \"undefined\" && window !== null) window.MagicWand = MagicWand;\n//# sourceMappingURL=magic-wand.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/magic-wand-tool/dist/magic-wand.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _global_process, _global_process1;\nmodule.exports = ((_global_process = __webpack_require__.g.process) == null ? void 0 : _global_process.env) && typeof ((_global_process1 = __webpack_require__.g.process) == null ? void 0 : _global_process1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! next/dist/compiled/process */ \"(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLHFDQUFxQyxxQkFBTSxpRkFBaUYscUJBQU0sa0VBQWtFLHFCQUFNLFdBQVcsbUJBQU8sQ0FBQyw0R0FBNEI7O0FBRXpQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL3Byb2Nlc3MuanM/MDllNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfZ2xvYmFsX3Byb2Nlc3MsIF9nbG9iYWxfcHJvY2VzczE7XG5tb2R1bGUuZXhwb3J0cyA9ICgoX2dsb2JhbF9wcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MuZW52KSAmJiB0eXBlb2YgKChfZ2xvYmFsX3Byb2Nlc3MxID0gZ2xvYmFsLnByb2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfZ2xvYmFsX3Byb2Nlc3MxLmVudikgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwucHJvY2VzcyA6IHJlcXVpcmUoXCJuZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcHJvY2Vzcy9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLE9BQU8sZ0JBQWdCLG1CQUFtQixNQUFNLE1BQU0sNEJBQTRCLG1EQUFtRCwrQkFBK0IscURBQXFELFlBQVksSUFBSSxtQ0FBbUMsYUFBYSxLQUFLLG9CQUFvQixTQUFTLG1CQUFtQixJQUFJLHFDQUFxQyxlQUFlLEtBQUssdUJBQXVCLFNBQVMsdUJBQXVCLElBQUksdUJBQXVCLG1CQUFtQix1QkFBdUIsMkNBQTJDLGFBQWEsdUJBQXVCLElBQUksY0FBYyxTQUFTLElBQUksd0JBQXdCLFNBQVMsMEJBQTBCLDRCQUE0QixxQkFBcUIsdUJBQXVCLGdEQUFnRCxlQUFlLHVCQUF1QixJQUFJLFlBQVksU0FBUyxJQUFJLHNCQUFzQixTQUFTLHdCQUF3QixTQUFTLFlBQVksTUFBTSxTQUFTLDJCQUEyQixXQUFXLE9BQU8sUUFBUSxhQUFhLGNBQWMsS0FBSyxLQUFLLGFBQWEsY0FBYyxzQkFBc0IsTUFBTSxPQUFPLGtDQUFrQyxPQUFPLGVBQWUsU0FBUyxJQUFJLEtBQUssYUFBYSxNQUFNLFlBQVksS0FBSyxXQUFXLE9BQU8sUUFBUSxtQkFBbUIsdUJBQXVCLG9DQUFvQyx1QkFBdUIsWUFBWSxtQkFBbUIsS0FBSyxxQkFBcUIsc0JBQXNCLHFCQUFxQix5QkFBeUIsbUJBQW1CLFdBQVcsYUFBYSw4QkFBOEIsaUNBQWlDLGtCQUFrQixlQUFlLFNBQVMsVUFBVSxhQUFhLGNBQWMsaUJBQWlCLFVBQVUsbUJBQW1CLFlBQVksV0FBVyxzQkFBc0IsMEJBQTBCLFlBQVksdUJBQXVCLDJCQUEyQix3QkFBd0IsVUFBVSxzQkFBc0IscURBQXFELGlCQUFpQixXQUFXLG9CQUFvQixtREFBbUQsbUJBQW1CLFlBQVksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssK0JBQStCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcz81ZWU1Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciBlPXsyMjk6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5leHBvcnRzPXt9O3ZhciByO3ZhciBuO2Z1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfWZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQoKXt0aHJvdyBuZXcgRXJyb3IoXCJjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWRcIil9KGZ1bmN0aW9uKCl7dHJ5e2lmKHR5cGVvZiBzZXRUaW1lb3V0PT09XCJmdW5jdGlvblwiKXtyPXNldFRpbWVvdXR9ZWxzZXtyPWRlZmF1bHRTZXRUaW1vdXR9fWNhdGNoKGUpe3I9ZGVmYXVsdFNldFRpbW91dH10cnl7aWYodHlwZW9mIGNsZWFyVGltZW91dD09PVwiZnVuY3Rpb25cIil7bj1jbGVhclRpbWVvdXR9ZWxzZXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fWNhdGNoKGUpe249ZGVmYXVsdENsZWFyVGltZW91dH19KSgpO2Z1bmN0aW9uIHJ1blRpbWVvdXQoZSl7aWYocj09PXNldFRpbWVvdXQpe3JldHVybiBzZXRUaW1lb3V0KGUsMCl9aWYoKHI9PT1kZWZhdWx0U2V0VGltb3V0fHwhcikmJnNldFRpbWVvdXQpe3I9c2V0VGltZW91dDtyZXR1cm4gc2V0VGltZW91dChlLDApfXRyeXtyZXR1cm4gcihlLDApfWNhdGNoKHQpe3RyeXtyZXR1cm4gci5jYWxsKG51bGwsZSwwKX1jYXRjaCh0KXtyZXR1cm4gci5jYWxsKHRoaXMsZSwwKX19fWZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChlKXtpZihuPT09Y2xlYXJUaW1lb3V0KXtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfWlmKChuPT09ZGVmYXVsdENsZWFyVGltZW91dHx8IW4pJiZjbGVhclRpbWVvdXQpe249Y2xlYXJUaW1lb3V0O3JldHVybiBjbGVhclRpbWVvdXQoZSl9dHJ5e3JldHVybiBuKGUpfWNhdGNoKHQpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsZSl9Y2F0Y2godCl7cmV0dXJuIG4uY2FsbCh0aGlzLGUpfX19dmFyIGk9W107dmFyIG89ZmFsc2U7dmFyIHU7dmFyIGE9LTE7ZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCl7aWYoIW98fCF1KXtyZXR1cm59bz1mYWxzZTtpZih1Lmxlbmd0aCl7aT11LmNvbmNhdChpKX1lbHNle2E9LTF9aWYoaS5sZW5ndGgpe2RyYWluUXVldWUoKX19ZnVuY3Rpb24gZHJhaW5RdWV1ZSgpe2lmKG8pe3JldHVybn12YXIgZT1ydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7bz10cnVlO3ZhciB0PWkubGVuZ3RoO3doaWxlKHQpe3U9aTtpPVtdO3doaWxlKCsrYTx0KXtpZih1KXt1W2FdLnJ1bigpfX1hPS0xO3Q9aS5sZW5ndGh9dT1udWxsO289ZmFsc2U7cnVuQ2xlYXJUaW1lb3V0KGUpfXQubmV4dFRpY2s9ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgtMSk7aWYoYXJndW1lbnRzLmxlbmd0aD4xKXtmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXt0W3ItMV09YXJndW1lbnRzW3JdfX1pLnB1c2gobmV3IEl0ZW0oZSx0KSk7aWYoaS5sZW5ndGg9PT0xJiYhbyl7cnVuVGltZW91dChkcmFpblF1ZXVlKX19O2Z1bmN0aW9uIEl0ZW0oZSx0KXt0aGlzLmZ1bj1lO3RoaXMuYXJyYXk9dH1JdGVtLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLmZ1bi5hcHBseShudWxsLHRoaXMuYXJyYXkpfTt0LnRpdGxlPVwiYnJvd3NlclwiO3QuYnJvd3Nlcj10cnVlO3QuZW52PXt9O3QuYXJndj1bXTt0LnZlcnNpb249XCJcIjt0LnZlcnNpb25zPXt9O2Z1bmN0aW9uIG5vb3AoKXt9dC5vbj1ub29wO3QuYWRkTGlzdGVuZXI9bm9vcDt0Lm9uY2U9bm9vcDt0Lm9mZj1ub29wO3QucmVtb3ZlTGlzdGVuZXI9bm9vcDt0LnJlbW92ZUFsbExpc3RlbmVycz1ub29wO3QuZW1pdD1ub29wO3QucHJlcGVuZExpc3RlbmVyPW5vb3A7dC5wcmVwZW5kT25jZUxpc3RlbmVyPW5vb3A7dC5saXN0ZW5lcnM9ZnVuY3Rpb24oZSl7cmV0dXJuW119O3QuYmluZGluZz1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZFwiKX07dC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm5cIi9cIn07dC5jaGRpcj1mdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoXCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QudW1hc2s9ZnVuY3Rpb24oKXtyZXR1cm4gMH19fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKHIpe3ZhciBuPXRbcl07aWYobiE9PXVuZGVmaW5lZCl7cmV0dXJuIG4uZXhwb3J0c312YXIgaT10W3JdPXtleHBvcnRzOnt9fTt2YXIgbz10cnVlO3RyeXtlW3JdKGksaS5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO289ZmFsc2V9ZmluYWxseXtpZihvKWRlbGV0ZSB0W3JdfXJldHVybiBpLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciByPV9fbmNjd3Bja19yZXF1aXJlX18oMjI5KTttb2R1bGUuZXhwb3J0cz1yfSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ })

}]);